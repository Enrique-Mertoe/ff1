import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./utils/dynamic.directive";
export class SurveyCommentComponent {
    constructor() {
    }
    get comment() {
        if (!this.question.comment)
            return "";
        return this.question.comment;
    }
}
SurveyCommentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SurveyCommentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: SurveyCommentComponent, selector: "sv-ng-comment, '[sv-ng-comment]'", inputs: { question: "question" }, ngImport: i0, template: "<ng-container *ngIf=\"!question.isReadOnlyRenderDiv()\">\n  <ng-template [component]=\"{ name: 'sv-text-area', data: { model: question.commentTextAreaModel } }\"></ng-template>\n</ng-container>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ question.comment }}</div>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-comment, '[sv-ng-comment]'",
                    templateUrl: "./comment.component.html",
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { question: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbWVudC5jb21wb25lbnQudHMiLCIuLi8uLi9zcmMvY29tbWVudC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU9qRCxNQUFNLE9BQU8sc0JBQXNCO0lBRWpDO0lBQ0EsQ0FBQztJQUNELElBQVcsT0FBTztRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPO1lBQUUsT0FBTyxFQUFFLENBQUM7UUFDdEMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQztJQUMvQixDQUFDOztvSEFQVSxzQkFBc0I7d0dBQXRCLHNCQUFzQiwwR0NQbkMsaVJBSUE7NEZER2Esc0JBQXNCO2tCQUpsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFdBQVcsRUFBRSwwQkFBMEI7aUJBQ3hDOzBFQUVVLFFBQVE7c0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFF1ZXN0aW9uIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1jb21tZW50LCAnW3N2LW5nLWNvbW1lbnRdJ1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2NvbW1lbnQuY29tcG9uZW50Lmh0bWxcIixcbn0pXG5leHBvcnQgY2xhc3MgU3VydmV5Q29tbWVudENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHF1ZXN0aW9uITogUXVlc3Rpb247XG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG4gIHB1YmxpYyBnZXQgY29tbWVudCgpOiBzdHJpbmcge1xuICAgIGlmICghdGhpcy5xdWVzdGlvbi5jb21tZW50KSByZXR1cm4gXCJcIjtcbiAgICByZXR1cm4gdGhpcy5xdWVzdGlvbi5jb21tZW50O1xuICB9XG59IiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFxdWVzdGlvbi5pc1JlYWRPbmx5UmVuZGVyRGl2KClcIj5cbiAgPG5nLXRlbXBsYXRlIFtjb21wb25lbnRdPVwieyBuYW1lOiAnc3YtdGV4dC1hcmVhJywgZGF0YTogeyBtb2RlbDogcXVlc3Rpb24uY29tbWVudFRleHRBcmVhTW9kZWwgfSB9XCI+PC9uZy10ZW1wbGF0ZT5cbjwvbmctY29udGFpbmVyPlxuPGRpdiAqbmdJZj1cInF1ZXN0aW9uLmlzUmVhZE9ubHlSZW5kZXJEaXYoKVwiPnt7IHF1ZXN0aW9uLmNvbW1lbnQgfX08L2Rpdj5cbiJdfQ==