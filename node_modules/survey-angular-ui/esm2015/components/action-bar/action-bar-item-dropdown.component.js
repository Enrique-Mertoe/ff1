import { Component, Input } from "@angular/core";
import { ActionDropdownViewModel } from "survey-core";
import { BaseAngular } from "../../base-angular";
import { AngularComponentFactory } from "../../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../svg-icon/svg-icon.component";
import * as i2 from "../popup/popup.component";
import * as i3 from "../../utils/ng-key2click.directive";
import * as i4 from "@angular/common";
export class ActionBarItemDropdownComponent extends BaseAngular {
    getModel() {
        return this.model;
    }
    ngOnInit() {
        super.ngOnInit();
        this.viewModel = new ActionDropdownViewModel(this.model);
    }
    ngOnDestroy() {
        this.viewModel.dispose();
        super.ngOnDestroy();
    }
}
ActionBarItemDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ActionBarItemDropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ActionBarItemDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ActionBarItemDropdownComponent, selector: "sv-action-bar-item-dropdown", inputs: { model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n    <button type=\"button\" (click)=\"model.action(model, model.getIsTrusted($event))\" [key2click]=\"{ processEsc: false, disableTabStop: model.disableTabStop }\" [class]=\"model.getActionBarItemCss()\" [title]=\"model.tooltip || model.title\" [disabled]=\"model.disabled\" [attr.role]=\"model.ariaRole\">\n        <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n        <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n    </button>\n    <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i2.PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: ["popupModel"] }], directives: [{ type: i3.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ActionBarItemDropdownComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-action-bar-item-dropdown",
                    templateUrl: "./action-bar-item-dropdown.component.html",
                    styleUrls: ["../../hide-host.scss"]
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-action-bar-item-dropdown", ActionBarItemDropdownComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2FjdGlvbi1iYXIvYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2FjdGlvbi1iYXIvYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN0RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDakQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7OztBQU9sRSxNQUFNLE9BQU8sOEJBQStCLFNBQVEsV0FBVztJQUluRCxRQUFRO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBQ1EsUUFBUTtRQUNmLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksdUJBQXVCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFDUSxXQUFXO1FBQ2xCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDekIsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7OzRIQWRVLDhCQUE4QjtnSEFBOUIsOEJBQThCLHNIQ1YzQyxpdUJBTWM7NEZESUQsOEJBQThCO2tCQUwxQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLFdBQVcsRUFBRSwyQ0FBMkM7b0JBQ3hELFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDO2lCQUNwQzs4QkFFVSxLQUFLO3NCQUFiLEtBQUs7O0FBZ0JSLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyw2QkFBNkIsRUFBRSw4QkFBOEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBBY3Rpb25Ecm9wZG93blZpZXdNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQmFzZUFuZ3VsYXIgfSBmcm9tIFwiLi4vLi4vYmFzZS1hbmd1bGFyXCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnQtZmFjdG9yeVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vYWN0aW9uLWJhci1pdGVtLWRyb3Bkb3duLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlVXJsczogW1wiLi4vLi4vaGlkZS1ob3N0LnNjc3NcIl1cbn0pXG5leHBvcnQgY2xhc3MgQWN0aW9uQmFySXRlbURyb3Bkb3duQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXIge1xuICBASW5wdXQoKSBtb2RlbDogYW55O1xuICBwcm90ZWN0ZWQgdmlld01vZGVsITogQWN0aW9uRHJvcGRvd25WaWV3TW9kZWw7XG5cbiAgcHJvdGVjdGVkIGdldE1vZGVsKCkge1xuICAgIHJldHVybiB0aGlzLm1vZGVsO1xuICB9XG4gIG92ZXJyaWRlIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgdGhpcy52aWV3TW9kZWwgPSBuZXcgQWN0aW9uRHJvcGRvd25WaWV3TW9kZWwodGhpcy5tb2RlbCk7XG4gIH1cbiAgb3ZlcnJpZGUgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy52aWV3TW9kZWwuZGlzcG9zZSgpO1xuICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gIH1cbn1cblxuQW5ndWxhckNvbXBvbmVudEZhY3RvcnkuSW5zdGFuY2UucmVnaXN0ZXJDb21wb25lbnQoXCJzdi1hY3Rpb24tYmFyLWl0ZW0tZHJvcGRvd25cIiwgQWN0aW9uQmFySXRlbURyb3Bkb3duQ29tcG9uZW50KTsiLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJtb2RlbC5hY3Rpb24obW9kZWwsIG1vZGVsLmdldElzVHJ1c3RlZCgkZXZlbnQpKVwiIFtrZXkyY2xpY2tdPVwieyBwcm9jZXNzRXNjOiBmYWxzZSwgZGlzYWJsZVRhYlN0b3A6IG1vZGVsLmRpc2FibGVUYWJTdG9wIH1cIiBbY2xhc3NdPVwibW9kZWwuZ2V0QWN0aW9uQmFySXRlbUNzcygpXCIgW3RpdGxlXT1cIm1vZGVsLnRvb2x0aXAgfHwgbW9kZWwudGl0bGVcIiBbZGlzYWJsZWRdPVwibW9kZWwuZGlzYWJsZWRcIiBbYXR0ci5yb2xlXT1cIm1vZGVsLmFyaWFSb2xlXCI+XG4gICAgICAgIDxzdmcgKm5nSWY9XCJtb2RlbC5pY29uTmFtZVwiIFtpY29uTmFtZV09XCJtb2RlbC5pY29uTmFtZVwiIFtzaXplXT1cIm1vZGVsLmljb25TaXplXCIgW3RpdGxlXT1cIm1vZGVsLnRvb2x0aXAgfHwgbW9kZWwudGl0bGVcIiBbY2xhc3NdPVwibW9kZWwuY3NzQ2xhc3Nlcy5pdGVtSWNvblwiIHN2LW5nLXN2Zy1pY29uPjwvc3ZnPlxuICAgICAgICA8c3BhbiAqbmdJZj1cIm1vZGVsLmhhc1RpdGxlXCIgW2NsYXNzXT1cIm1vZGVsLmdldEFjdGlvbkJhckl0ZW1UaXRsZUNzcygpXCI+e3sgbW9kZWwudGl0bGUgfX08L3NwYW4+XG4gICAgPC9idXR0b24+XG4gICAgPHN2LW5nLXBvcHVwIFtwb3B1cE1vZGVsXT1cIm1vZGVsLnBvcHVwTW9kZWxcIj48L3N2LW5nLXBvcHVwPlxuPC9uZy10ZW1wbGF0ZT4iXX0=