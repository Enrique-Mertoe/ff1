{
  "version": 3,
  "sources": ["../../../../../../node_modules/survey-core/fesm/survey-core.mjs"],
  "sourcesContent": ["/*!\n * surveyjs - Survey JavaScript library v2.2.4\n * Copyright (c) 2015-2025 Devsoft Baltic OÃœ  - http://surveyjs.io/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n/* eslint-disable no-restricted-globals */\nclass DomWindowHelper {\n  static isAvailable() {\n    return \"undefined\" !== typeof window;\n  }\n  static isFileReaderAvailable() {\n    if (!DomWindowHelper.isAvailable()) return false;\n    return !!window[\"FileReader\"];\n  }\n  static getLocation() {\n    if (!DomWindowHelper.isAvailable()) return;\n    return window.location;\n  }\n  static getVisualViewport() {\n    if (!DomWindowHelper.isAvailable()) return null;\n    return window.visualViewport;\n  }\n  static getInnerWidth() {\n    if (!DomWindowHelper.isAvailable()) return;\n    return window.innerWidth;\n  }\n  static getInnerHeight() {\n    if (!DomWindowHelper.isAvailable()) return null;\n    return window.innerHeight;\n  }\n  static getDevicePixelRatio() {\n    if (!DomWindowHelper.isAvailable()) return null;\n    return window.devicePixelRatio;\n  }\n  static getWindow() {\n    if (!DomWindowHelper.isAvailable()) return;\n    return window;\n  }\n  static hasOwn(propertyName) {\n    if (!DomWindowHelper.isAvailable()) return;\n    return propertyName in window;\n  }\n  static getSelection() {\n    if (DomWindowHelper.isAvailable() && window.getSelection) {\n      return window.getSelection();\n    }\n  }\n  static requestAnimationFrame(callback) {\n    if (DomWindowHelper.isAvailable()) {\n      return window.requestAnimationFrame(callback);\n    }\n  }\n  static addEventListener(type, listener) {\n    if (!DomWindowHelper.isAvailable()) return;\n    window.addEventListener(type, listener);\n  }\n  static removeEventListener(type, listener) {\n    if (!DomWindowHelper.isAvailable()) return;\n    window.removeEventListener(type, listener);\n  }\n  static matchMedia(mediaQueryString) {\n    if (!DomWindowHelper.isAvailable() || typeof window.matchMedia === \"undefined\") return null;\n    return window.matchMedia(mediaQueryString);\n  }\n}\nclass DomDocumentHelper {\n  static isAvailable() {\n    return \"undefined\" !== typeof document;\n  }\n  static getBody() {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.body;\n  }\n  static getDocumentElement() {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.documentElement;\n  }\n  static getDocument() {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document;\n  }\n  static getCookie() {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.cookie;\n  }\n  static setCookie(newCookie) {\n    if (!DomDocumentHelper.isAvailable()) return;\n    document.cookie = newCookie;\n  }\n  static activeElementBlur() {\n    if (!DomDocumentHelper.isAvailable()) return;\n    const activeElement = document.activeElement;\n    if (!!activeElement && !!activeElement.blur) {\n      activeElement.blur();\n    }\n  }\n  static createElement(tagName) {\n    if (!DomDocumentHelper.isAvailable()) return;\n    return document.createElement(tagName);\n  }\n  static getComputedStyle(elt) {\n    if (!DomDocumentHelper.isAvailable()) return new CSSStyleDeclaration();\n    return document.defaultView.getComputedStyle(elt);\n  }\n  static addEventListener(type, listener) {\n    if (!DomDocumentHelper.isAvailable()) return;\n    document.addEventListener(type, listener);\n  }\n  static removeEventListener(type, listener) {\n    if (!DomDocumentHelper.isAvailable()) return;\n    document.removeEventListener(type, listener);\n  }\n}\nfunction createDate(reason, val) {\n  if (!val) return new Date();\n  if (!settings.storeUtcDates && typeof val === \"string\" && isISODateOnly(val)) {\n    val += \"T00:00:00\";\n  }\n  const d = new Date(val);\n  return settings.onDateCreated(d, reason, val);\n}\nfunction isISODateOnly(str) {\n  if (str.indexOf(\"T\") > 0) return false;\n  if (!/\\d{4}-\\d{2}-\\d{2}/.test(str)) return false;\n  return !isNaN(new Date(str).getTime());\n}\nclass Helpers {\n  /**\n   * A static methods that returns true if a value undefined, null, empty string or empty array.\n   * @param value\n   */\n  static isValueEmpty(value) {\n    if (Array.isArray(value) && value.length === 0) return true;\n    if (!!value && Helpers.isValueObject(value) && value.constructor === Object) {\n      for (var key in value) {\n        if (!Helpers.isValueEmpty(value[key])) return false;\n      }\n      return true;\n    }\n    return !value && value !== 0 && value !== false;\n  }\n  static isValueUndefined(value) {\n    return value === undefined || value === null || typeof value === \"number\" && isNaN(value);\n  }\n  static isArrayContainsEqual(x, y) {\n    if (!Array.isArray(x) || !Array.isArray(y)) return false;\n    if (x.length !== y.length) return false;\n    for (var i = 0; i < x.length; i++) {\n      var j = 0;\n      for (; j < y.length; j++) {\n        if (Helpers.isTwoValueEquals(x[i], y[j])) break;\n      }\n      if (j === y.length) return false;\n    }\n    return true;\n  }\n  static checkIfArraysEqual(x, y, params) {\n    if (!Array.isArray(x) || !Array.isArray(y)) return false;\n    if (x.length !== y.length) return false;\n    const ignoreOrder = params.ignoreOrder !== undefined ? params.ignoreOrder : false;\n    if (ignoreOrder) {\n      var xSorted = [];\n      var ySorted = [];\n      for (var i = 0; i < x.length; i++) {\n        xSorted.push(x[i]);\n        ySorted.push(y[i]);\n      }\n      xSorted.sort();\n      ySorted.sort();\n      x = xSorted;\n      y = ySorted;\n    }\n    for (var i = 0; i < x.length; i++) {\n      if (!Helpers.checkIfValuesEqual(x[i], y[i], params)) return false;\n    }\n    return true;\n  }\n  static isArraysEqual(x, y, ignoreOrder = false, caseSensitive, trimStrings) {\n    return Helpers.checkIfArraysEqual(x, y, {\n      ignoreOrder: ignoreOrder,\n      caseSensitive: caseSensitive,\n      trimStrings: trimStrings\n    });\n  }\n  static compareStrings(x, y) {\n    const normalize = settings.comparator.normalizeTextCallback;\n    if (!!x) x = normalize(x, \"compare\").trim();\n    if (!!y) y = normalize(y, \"compare\").trim();\n    if (!x && !y) return 0;\n    if (!x) return -1;\n    if (!y) return 1;\n    if (x === y) return 0;\n    let digitIndex = -1;\n    for (let i = 0; i < x.length && i < y.length; i++) {\n      if (this.isCharDigit(x[i]) && this.isCharDigit(y[i])) {\n        digitIndex = i;\n        break;\n      }\n      if (x[i] !== y[i]) break;\n    }\n    if (digitIndex > -1) {\n      let nX = this.getNumberFromStr(x, digitIndex);\n      let nY = this.getNumberFromStr(y, digitIndex);\n      if (!Number.isNaN(nX) && !Number.isNaN(nY) && nX !== nY) {\n        return nX > nY ? 1 : -1;\n      }\n    }\n    return x > y ? 1 : -1;\n  }\n  static checkIfValuesEqual(x, y, params) {\n    if (x === y) return true;\n    if (Array.isArray(x) && x.length === 0 && typeof y === \"undefined\") return true;\n    if (Array.isArray(y) && y.length === 0 && typeof x === \"undefined\") return true;\n    if ((x === undefined || x === null) && y === \"\") return true;\n    if ((y === undefined || y === null) && x === \"\") return true;\n    const caseSensitive = params.caseSensitive !== undefined ? params.caseSensitive : settings.comparator.caseSensitive;\n    const trimStrings = params.trimStrings !== undefined ? params.trimStrings : settings.comparator.trimStrings;\n    if (typeof x === \"string\" && typeof y === \"string\") {\n      const normalize = settings.comparator.normalizeTextCallback;\n      x = normalize(x, \"compare\");\n      y = normalize(y, \"compare\");\n      if (trimStrings) {\n        x = x.trim();\n        y = y.trim();\n      }\n      if (!caseSensitive) {\n        x = x.toLowerCase();\n        y = y.toLowerCase();\n      }\n      return x === y;\n    }\n    if (x instanceof Date && y instanceof Date) return x.getTime() == y.getTime();\n    const convertNumbers = !params.doNotConvertNumbers;\n    if (convertNumbers && Helpers.isConvertibleToNumber(x) && Helpers.isConvertibleToNumber(y)) {\n      if (parseInt(x) === parseInt(y) && parseFloat(x) === parseFloat(y)) {\n        return true;\n      }\n    }\n    if (!Helpers.isValueEmpty(x) && Helpers.isValueEmpty(y) || Helpers.isValueEmpty(x) && !Helpers.isValueEmpty(y)) return false;\n    if ((x === true || x === false) && typeof y == \"string\") {\n      return x.toString() === y.toLocaleLowerCase();\n    }\n    if ((y === true || y === false) && typeof x == \"string\") {\n      return y.toString() === x.toLocaleLowerCase();\n    }\n    const isXObj = Helpers.isValueObject(x);\n    const isYObj = Helpers.isValueObject(y);\n    if (!isXObj && !isYObj && (convertNumbers || typeof x !== \"number\" && typeof y !== \"number\")) return x == y;\n    if (!isXObj || !isYObj) return false;\n    if (x[\"equals\"] && y[\"equals\"]) return x.equals(y);\n    if (Array.isArray(x) && Array.isArray(y)) {\n      return Helpers.checkIfArraysEqual(x, y, params);\n    }\n    for (var p in x) {\n      if (!x.hasOwnProperty(p)) continue;\n      if (!y.hasOwnProperty(p)) return false;\n      if (!this.checkIfValuesEqual(x[p], y[p], params)) return false;\n    }\n    for (p in y) {\n      if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) return false;\n    }\n    return true;\n  }\n  static isTwoValueEquals(x, y, ignoreOrder = false, caseSensitive, trimStrings) {\n    return this.checkIfValuesEqual(x, y, {\n      ignoreOrder: ignoreOrder,\n      caseSensitive: caseSensitive,\n      trimStrings: trimStrings\n    });\n  }\n  static randomizeArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n  static getUnbindValue(value) {\n    if (Array.isArray(value)) {\n      const res = [];\n      for (let i = 0; i < value.length; i++) {\n        res.push(Helpers.getUnbindValue(value[i]));\n      }\n      return res;\n    }\n    if (!!value && Helpers.isValueObject(value) && !(value instanceof Date)) {\n      return JSON.parse(JSON.stringify(value));\n    }\n    return value;\n  }\n  static createCopy(obj) {\n    return this.createCopyWithPrefix(obj, undefined);\n  }\n  static createCopyWithPrefix(obj, prefix) {\n    var res = {};\n    if (!obj) return res;\n    for (var key in obj) {\n      const newKey = prefix ? prefix + key : key;\n      res[newKey] = obj[key];\n    }\n    return res;\n  }\n  static isConvertibleToNumber(value) {\n    return value !== undefined && value !== null && !Array.isArray(value) && !isNaN(value);\n  }\n  static isValueObject(val, excludeArray) {\n    return val instanceof Object && (!excludeArray || !Array.isArray(val));\n  }\n  static isNumber(value) {\n    return !isNaN(this.getNumber(value));\n  }\n  static getNumber(value) {\n    const newValue = Helpers.getNumberCore(value);\n    return settings.parseNumber(value, newValue);\n  }\n  static getNumberCore(value) {\n    if (typeof value == \"string\") {\n      value = value.trim();\n      if (!value) return NaN;\n      if (value.indexOf(\"0x\") == 0) {\n        if (value.length > 32) return NaN;\n        return parseInt(value);\n      }\n      if (value.length > 15 && Helpers.isDigitsOnly(value)) return NaN;\n      if (Helpers.isStringHasOperator(value)) return NaN;\n    }\n    value = this.prepareStringToNumber(value);\n    const res = parseFloat(value);\n    if (isNaN(res) || !isFinite(value)) return NaN;\n    return res;\n  }\n  static isStringHasOperator(str) {\n    if (str.lastIndexOf(\"-\") > 0) return false;\n    if (str.lastIndexOf(\"+\") > 0) return false;\n    const operators = \"*^/%\";\n    for (let i = 0; i < operators.length; i++) {\n      if (str.indexOf(operators[i]) > -1) return true;\n    }\n    return false;\n  }\n  static prepareStringToNumber(val) {\n    if (typeof val !== \"string\" || !val) return val;\n    let i = val.indexOf(\",\");\n    if (i > -1 && val.indexOf(\",\", i + 1) < 0) {\n      return val.replace(\",\", \".\");\n    }\n    return val;\n  }\n  static getMaxLength(maxLength, surveyLength) {\n    if (maxLength < 0) {\n      maxLength = surveyLength;\n    }\n    return maxLength > 0 ? maxLength : null;\n  }\n  static getRemainingCharacterCounterText(newValue, maxLength) {\n    if (!maxLength || maxLength <= 0 || !settings.showMaxLengthIndicator) {\n      return \"\";\n    }\n    const value = newValue ? newValue.length : \"0\";\n    return [value, maxLength].join(\"/\");\n  }\n  static getNumberByIndex(index, startIndexStr, parentIndex) {\n    if (index < 0) return \"\";\n    var startIndex = 1;\n    var prefix = \"\";\n    var postfix = \".\";\n    var isNumeric = true;\n    var strIndex = \"A\";\n    var str = \"\";\n    const hasDigitFunc = str => {\n      if (!str) return false;\n      for (var i = 0; i < str.length; i++) {\n        if (Helpers.isCharDigit(str[i])) return true;\n      }\n      return false;\n    };\n    if (!!startIndexStr) {\n      str = startIndexStr;\n      var ind = str.length - 1;\n      var hasDigit = hasDigitFunc(str);\n      var checkLetter = function () {\n        return hasDigit && !Helpers.isCharDigit(str[ind]) || Helpers.isCharNotLetterAndDigit(str[ind]);\n      };\n      while (ind >= 0 && checkLetter()) ind--;\n      var newPostfix = \"\";\n      if (ind < str.length - 1) {\n        newPostfix = str.substring(ind + 1);\n        str = str.substring(0, ind + 1);\n      }\n      ind = str.length - 1;\n      while (ind >= 0) {\n        if (checkLetter()) break;\n        ind--;\n        if (!hasDigit) break;\n      }\n      strIndex = str.substring(ind + 1);\n      prefix = str.substring(0, ind + 1);\n      if (parseInt(strIndex)) startIndex = parseInt(strIndex);else if (strIndex.length == 1) isNumeric = false;\n      if (!!newPostfix || !!prefix) {\n        postfix = newPostfix;\n      }\n    }\n    if (parentIndex > -1 && hasDigitFunc(prefix)) {\n      prefix = this.getNumberByIndex(parentIndex, prefix);\n    }\n    if (isNumeric) {\n      let val = (index + startIndex).toString();\n      while (val.length < strIndex.length) val = \"0\" + val;\n      return prefix + val + postfix;\n    }\n    return prefix + String.fromCharCode(strIndex.charCodeAt(0) + index) + postfix;\n  }\n  static isCharNotLetterAndDigit(ch) {\n    return ch.toUpperCase() == ch.toLowerCase() && !Helpers.isCharDigit(ch);\n  }\n  static isCharDigit(ch) {\n    return ch >= \"0\" && ch <= \"9\";\n  }\n  static isDigitsOnly(str) {\n    if (!str) return false;\n    for (let i = 0; i < str.length; i++) {\n      if (!Helpers.isCharDigit(str[i])) return false;\n    }\n    return true;\n  }\n  static getNumberFromStr(str, index) {\n    if (!this.isCharDigit(str[index])) return NaN;\n    let nStr = \"\";\n    while (index < str.length && this.isCharDigit(str[index])) {\n      nStr += str[index];\n      index++;\n    }\n    if (!nStr) return NaN;\n    return this.getNumber(nStr);\n  }\n  static countDecimals(value) {\n    if (Helpers.isNumber(value) && Math.floor(value) !== value) {\n      const strs = value.toString().split(\".\");\n      return strs.length > 1 && strs[1].length || 0;\n    }\n    return 0;\n  }\n  static correctAfterPlusMinis(a, b, res) {\n    const digitsA = Helpers.countDecimals(a);\n    const digitsB = Helpers.countDecimals(b);\n    if (digitsA > 0 || digitsB > 0) {\n      const digits = Math.max(digitsA, digitsB);\n      res = parseFloat(res.toFixed(digits));\n    }\n    return res;\n  }\n  static sumAnyValues(a, b) {\n    if (!Helpers.isNumber(a) || !Helpers.isNumber(b)) {\n      if (Array.isArray(a) && Array.isArray(b)) return [].concat(a).concat(b);\n      if (Array.isArray(a) || Array.isArray(b)) {\n        const arr = Array.isArray(a) ? a : b;\n        const val = arr === a ? b : a;\n        if (typeof val === \"string\") {\n          const str = arr.join(\", \");\n          return arr === a ? str + val : val + str;\n        }\n        if (typeof val === \"number\") {\n          let res = 0;\n          for (var i = 0; i < arr.length; i++) {\n            if (typeof arr[i] === \"number\") {\n              res = Helpers.correctAfterPlusMinis(res, arr[i], res + arr[i]);\n            }\n          }\n          return Helpers.correctAfterPlusMinis(res, val, res + val);\n        }\n      }\n      return a + b;\n    }\n    if (typeof a === \"string\" || typeof b === \"string\") return a + b;\n    return Helpers.correctAfterPlusMinis(a, b, a + b);\n  }\n  static correctAfterMultiple(a, b, res) {\n    const digits = Helpers.countDecimals(a) + Helpers.countDecimals(b);\n    if (digits > 0) {\n      res = parseFloat(res.toFixed(digits));\n    }\n    return res;\n  }\n  static convertArrayValueToObject(src, propName, dest = undefined) {\n    const res = new Array();\n    if (!src || !Array.isArray(src)) return res;\n    for (var i = 0; i < src.length; i++) {\n      let item;\n      if (Array.isArray(dest)) {\n        item = Helpers.findObjByPropValue(dest, propName, src[i]);\n      }\n      if (!item) {\n        item = {};\n        item[propName] = src[i];\n      }\n      res.push(item);\n    }\n    return res;\n  }\n  static findObjByPropValue(arr, propName, val) {\n    for (var i = 0; i < arr.length; i++) {\n      if (Helpers.isTwoValueEquals(arr[i][propName], val)) return arr[i];\n    }\n    return undefined;\n  }\n  static convertArrayObjectToValue(src, propName) {\n    const res = new Array();\n    if (!src || !Array.isArray(src)) return res;\n    for (var i = 0; i < src.length; i++) {\n      const itemVal = !!src[i] ? src[i][propName] : undefined;\n      if (!Helpers.isValueEmpty(itemVal)) res.push(itemVal);\n    }\n    return res;\n  }\n  static convertDateToString(date) {\n    const toStr = val => {\n      if (val < 10) return \"0\" + val.toString();\n      return val.toString();\n    };\n    return date.getFullYear() + \"-\" + toStr(date.getMonth() + 1) + \"-\" + toStr(date.getDate());\n  }\n  static convertDateTimeToString(date) {\n    const toStr = val => {\n      if (val < 10) return \"0\" + val.toString();\n      return val.toString();\n    };\n    return this.convertDateToString(date) + \" \" + toStr(date.getHours()) + \":\" + toStr(date.getMinutes());\n  }\n  static convertValToQuestionVal(val, inputType) {\n    if (val instanceof Date) {\n      if (inputType === \"datetime-local\") return Helpers.convertDateTimeToString(val);\n      return Helpers.convertDateToString(val);\n    }\n    return this.getUnbindValue(val);\n  }\n  static compareVerions(ver1, ver2) {\n    if (!ver1 && !ver2) return 0;\n    const ver1Ar = ver1.split(\".\");\n    const ver2Ar = ver2.split(\".\");\n    const len1 = ver1Ar.length;\n    const len2 = ver2Ar.length;\n    for (let i = 0; i < len1 && i < len2; i++) {\n      const str1 = ver1Ar[i];\n      const str2 = ver2Ar[i];\n      if (str1.length === str2.length) {\n        if (str1 !== str2) {\n          return str1 < str2 ? -1 : 1;\n        }\n      } else {\n        return str1.length < str2.length ? -1 : 1;\n      }\n    }\n    return len1 === len2 ? 0 : len1 < len2 ? -1 : 1;\n  }\n  static isUrlYoutubeVideo(url) {\n    if (!url) return false;\n    const youtubeDomains = [\"www.youtube.com\", \"m.youtube.com\", \"youtube.com\", \"youtu.be\"];\n    url = url.toLowerCase();\n    url = url.replace(/^https?:\\/\\//, \"\");\n    for (let i = 0; i < youtubeDomains.length; i++) {\n      if (url.indexOf(youtubeDomains[i] + \"/\") === 0) return true;\n    }\n    return false;\n  }\n}\nif (!String.prototype[\"format\"]) {\n  String.prototype[\"format\"] = function () {\n    var args = arguments;\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n      return typeof args[number] != \"undefined\" ? args[number] : match;\n    });\n  };\n}\n\n// Uncomment the line below if you create a custom dictionary\n// import { setupLocale } from \"survey-core\";\nvar englishStrings = {\n  pagePrevText: \"Previous\",\n  pageNextText: \"Next\",\n  completeText: \"Complete\",\n  previewText: \"Preview\",\n  editText: \"Edit\",\n  startSurveyText: \"Start\",\n  commentText: \"Please leave a comment\",\n  otherItemText: \"Other (describe)\",\n  noneItemText: \"None\",\n  refuseItemText: \"Refuse to answer\",\n  dontKnowItemText: \"Don't know\",\n  selectAllItemText: \"Select All\",\n  deselectAllItemText: \"Deselect all\",\n  progressText: \"Page {0} of {1}\",\n  indexText: \"{0} of {1}\",\n  panelDynamicProgressText: \"{0} of {1}\",\n  panelDynamicTabTextFormat: \"Panel {panelIndex}\",\n  questionsProgressText: \"Answered {0}/{1} questions\",\n  emptySurvey: \"The survey doesn't contain any visible elements.\",\n  completingSurvey: \"Thank you for completing the survey\",\n  completingSurveyBefore: \"You have already completed this survey.\",\n  loadingSurvey: \"Loading Survey...\",\n  placeholder: \"Select...\",\n  ratingOptionsCaption: \"Select...\",\n  buttongroupOptionsCaption: \"Select...\",\n  value: \"value\",\n  requiredError: \"Response required.\",\n  requiredErrorInPanel: \"Response required: answer at least one question.\",\n  requiredInAllRowsError: \"Response required: answer questions in all rows.\",\n  eachRowUniqueError: \"Each row must have a unique value.\",\n  numericError: \"The value should be numeric.\",\n  minError: \"The value should not be less than {0}\",\n  maxError: \"The value should not be greater than {0}\",\n  textNoDigitsAllow: \"Numbers are not allowed.\",\n  textMinLength: \"Please enter at least {0} character(s).\",\n  textMaxLength: \"Please enter no more than {0} character(s).\",\n  textMinMaxLength: \"Please enter at least {0} and no more than {1} characters.\",\n  minRowCountError: \"Please fill in at least {0} row(s).\",\n  minSelectError: \"Please select at least {0} option(s).\",\n  maxSelectError: \"Please select no more than {0} option(s).\",\n  numericMinMax: \"The '{0}' should be at least {1} and at most {2}\",\n  numericMin: \"The '{0}' should be at least {1}\",\n  numericMax: \"The '{0}' should be at most {1}\",\n  invalidEmail: \"Please enter a valid e-mail address.\",\n  invalidExpression: \"The expression: {0} should return 'true'.\",\n  urlRequestError: \"The request returned error '{0}'. {1}\",\n  urlGetChoicesError: \"The request returned empty data or the 'path' property is incorrect\",\n  exceedMaxSize: \"The file size should not exceed {0}.\",\n  noUploadFilesHandler: \"Files cannot be uploaded. Please add a handler for the 'onUploadFiles' event.\",\n  otherRequiredError: \"Response required: enter another value.\",\n  uploadingFile: \"Your file is uploading. Please wait several seconds and try again.\",\n  loadingFile: \"Loading...\",\n  chooseFile: \"Choose file(s)...\",\n  noFileChosen: \"No file selected\",\n  filePlaceholder: \"Drag and drop a file here or click the button below to select a file to upload.\",\n  confirmDelete: \"Are you sure you want to delete this record?\",\n  keyDuplicationError: \"This value should be unique.\",\n  addColumn: \"Add Column\",\n  addRow: \"Add Row\",\n  removeRow: \"Remove\",\n  noRowsText: \"There are no rows.\",\n  rowIndexTemplateTitle: \"Row {rowIndex}\",\n  rowNameTemplateTitle: \"{rowTitle}\",\n  addPanel: \"Add new\",\n  removePanel: \"Remove\",\n  showDetails: \"Show Details\",\n  hideDetails: \"Hide Details\",\n  choices_Item: \"item\",\n  choices_Choice: \"Choice option\",\n  matrix_column: \"Column\",\n  matrix_row: \"Row\",\n  multipletext_itemname: \"text\",\n  savingData: \"The results are being saved on the server...\",\n  savingDataError: \"An error occurred and we could not save the results.\",\n  savingDataSuccess: \"The results were saved successfully!\",\n  savingExceedSize: \"Your response exceeds 64KB. Please reduce the size of your file(s) and try again or contact the survey owner.\",\n  saveAgainButton: \"Try again\",\n  timerMin: \"min\",\n  timerSec: \"sec\",\n  timerSpentAll: \"You have spent {0} on this page and {1} in total.\",\n  timerSpentPage: \"You have spent {0} on this page.\",\n  timerSpentSurvey: \"You have spent {0} in total.\",\n  timerLimitAll: \"You have spent {0} of {1} on this page and {2} of {3} in total.\",\n  timerLimitPage: \"You have spent {0} of {1} on this page.\",\n  timerLimitSurvey: \"You have spent {0} of {1} in total.\",\n  clearCaption: \"Clear\",\n  selectCaption: \"Select\",\n  signaturePlaceHolder: \"Sign here\",\n  signaturePlaceHolderReadOnly: \"No signature\",\n  chooseFileCaption: \"Select File\",\n  takePhotoCaption: \"Take Photo\",\n  photoPlaceholder: \"Click the button below to take a photo using the camera.\",\n  fileOrPhotoPlaceholder: \"Drag and drop or select a file to upload or take a photo using the camera.\",\n  replaceFileCaption: \"Replace file\",\n  removeFileCaption: \"Remove this file\",\n  booleanCheckedLabel: \"Yes\",\n  booleanUncheckedLabel: \"No\",\n  confirmRemoveFile: \"Are you sure that you want to remove this file: {0}?\",\n  confirmRemoveAllFiles: \"Are you sure that you want to remove all files?\",\n  questionTitlePatternText: \"Question Title\",\n  modalCancelButtonText: \"Cancel\",\n  modalApplyButtonText: \"Apply\",\n  filterStringPlaceholder: \"Type to search...\",\n  emptyMessage: \"No data to display\",\n  loadingPage: \"Loading...\",\n  loadingData: \"Loading...\",\n  noEntriesText: \"No entries yet.\\nClick the button below to add a new entry.\",\n  noEntriesReadonlyText: \"No entries\",\n  tabTitlePlaceholder: \"New Panel\",\n  more: \"More\",\n  tagboxDoneButtonCaption: \"OK\",\n  selectToRankEmptyRankedAreaText: \"All choices are selected for ranking\",\n  selectToRankEmptyUnrankedAreaText: \"Drag choices here to rank them\",\n  ok: \"OK\",\n  cancel: \"Cancel\",\n  createCustomItem: \"Create \\\"{0}\\\" item...\",\n  toc: \"Table of contents\",\n  progressbar: \"Progress bar\"\n};\n// Uncomment the lines below if you create a custom dictionary.\n// Replace \"en\" with a custom locale code (for example, \"fr\" or \"de\"),\n// Replace `englishStrings` with the name of the variable that contains the custom dictionary.\n//setupLocale({ localeCode: \"en\", strings: englishStrings, nativeName: \"English\", englishName: \"English\" });\n\nvar surveyLocalization = {\n  currentLocaleValue: \"\",\n  defaultLocaleValue: \"en\",\n  locales: {},\n  localeNames: {},\n  localeNamesInEnglish: {},\n  localeDirections: {},\n  supportedLocales: [],\n  useEnglishNames: false,\n  //TODO remove on next week\n  get showNamesInEnglish() {\n    return this.useEnglishNames;\n  },\n  set showNamesInEnglish(val) {\n    this.useEnglishNames = val;\n  },\n  setupLocale(localeConfig) {\n    const loc = localeConfig.localeCode;\n    this.locales[loc] = localeConfig.strings;\n    this.localeNames[loc] = localeConfig.nativeName;\n    this.localeNamesInEnglish[loc] = localeConfig.englishName;\n    if (localeConfig.rtl !== undefined) {\n      this.localeDirections[loc] = localeConfig.rtl ? \"rtl\" : \"ltr\";\n    }\n  },\n  get currentLocale() {\n    return this.currentLocaleValue === this.defaultLocaleValue ? \"\" : this.currentLocaleValue;\n  },\n  set currentLocale(val) {\n    this.currentLocaleValue = this.getCorrectLocaleName(val);\n  },\n  get defaultLocale() {\n    return this.defaultLocaleValue;\n  },\n  set defaultLocale(val) {\n    this.defaultLocaleValue = this.getCorrectLocaleName(val);\n  },\n  getCorrectLocaleName(loc) {\n    if (loc === \"cz\") loc = \"cs\";\n    if (loc === \"ua\") loc = \"uk\";\n    if (loc === \"rs\") loc = \"sr\";\n    return loc;\n  },\n  getLocaleStrings(loc) {\n    return this.locales[loc];\n  },\n  getString: function (strName, locale = null) {\n    const locs = new Array();\n    const addLocaleCore = locName => {\n      const strs = this.locales[locName];\n      if (!!strs) locs.push(strs);\n    };\n    const addLocale = locName => {\n      if (!locName) return;\n      addLocaleCore(locName);\n      const index = locName.indexOf(\"-\");\n      if (index < 1) return;\n      locName = locName.substring(0, index);\n      addLocaleCore(locName);\n    };\n    addLocale(locale);\n    addLocale(this.currentLocale);\n    addLocale(this.defaultLocale);\n    if (this.defaultLocale !== \"en\") {\n      addLocaleCore(\"en\");\n    }\n    for (let i = 0; i < locs.length; i++) {\n      const res = locs[i][strName];\n      if (res !== undefined) return res;\n    }\n    return this.onGetExternalString(strName, locale);\n  },\n  getLocaleName(loc, inEnglish) {\n    if (!loc) return \"\";\n    if (inEnglish === undefined) inEnglish = this.showNamesInEnglish;\n    const firstNames = inEnglish ? this.localeNamesInEnglish : this.localeNames;\n    const secondNames = inEnglish ? this.localeNames : this.localeNamesInEnglish;\n    return firstNames[loc] || secondNames[loc] || loc;\n  },\n  getLocales: function (removeDefaultLoc = false) {\n    var res = [];\n    res.push(\"\");\n    var locs = this.locales;\n    if (this.supportedLocales && this.supportedLocales.length > 0) {\n      locs = {};\n      for (var i = 0; i < this.supportedLocales.length; i++) {\n        locs[this.supportedLocales[i]] = true;\n      }\n    }\n    for (var key in locs) {\n      if (removeDefaultLoc && key == this.defaultLocale) continue;\n      res.push(key);\n    }\n    var locName = loc => {\n      return this.getLocaleName(loc).toLowerCase();\n    };\n    res.sort((a, b) => {\n      var str1 = locName(a);\n      var str2 = locName(b);\n      if (str1 === str2) return 0;\n      return str1 < str2 ? -1 : 1;\n    });\n    return res;\n  },\n  onGetExternalString: function (name, locale) {\n    return undefined;\n  }\n};\nfunction getLocaleString(strName, locale = null) {\n  return surveyLocalization.getString(strName, locale);\n}\nfunction getLocaleStrings(locale) {\n  return surveyLocalization.getLocaleStrings(locale);\n}\nfunction setupLocale(localeConfig) {\n  surveyLocalization.setupLocale(localeConfig);\n}\nvar surveyStrings = englishStrings;\nsurveyLocalization.locales[\"en\"] = englishStrings;\nsurveyLocalization.localeNames[\"en\"] = \"english\";\nfunction ensureLocString(target, options, key) {\n  let locString = target.getLocalizableString(key);\n  if (!locString) {\n    let defaultStr;\n    if (typeof options.localizable === \"object\" && options.localizable.defaultStr) {\n      defaultStr = options.localizable.defaultStr;\n    }\n    locString = target.createLocalizableString(key, target, true, defaultStr);\n    if (typeof options.localizable === \"object\" && typeof options.localizable.onGetTextCallback === \"function\") {\n      locString.onGetTextCallback = options.localizable.onGetTextCallback;\n    }\n  }\n}\nfunction getLocStringValue(target, options, key) {\n  ensureLocString(target, options, key);\n  let res = target.getLocalizableStringText(key);\n  if (!!res) return res;\n  if (typeof options.localizable === \"object\" && options.localizable.defaultStr) {\n    const loc = !!target.getLocale ? target.getLocale() : \"\";\n    return getLocaleString(options.localizable.defaultStr, loc);\n  }\n  return \"\";\n}\nfunction property(options = {}) {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  return function (target, key) {\n    let processComputedUpdater = (obj, val) => {\n      if (!!val && typeof val === \"object\" && val.type === ComputedUpdater.ComputedUpdaterType) {\n        Base.startCollectDependencies(() => obj[key] = val.updater(), obj, key);\n        const result = val.updater();\n        const dependencies = Base.finishCollectDependencies();\n        val.setDependencies(dependencies);\n        if (obj.dependencies[key]) {\n          obj.dependencies[key].dispose();\n        }\n        obj.dependencies[key] = val;\n        return result;\n      }\n      return val;\n    };\n    if (!options || !options.localizable) {\n      Object.defineProperty(target, key, {\n        get: function () {\n          // const serializationProperty = Serializer.getProperty(target.getType(), key);\n          // if(!!serializationProperty && options.defaultValue !== undefined) {\n          //   ConsoleWarnings.error(\"remove defaultValue from @property for class \" + target.getType() + \" property name is \" + key);\n          // }\n          let defaultVal = null;\n          if (!!options) {\n            if (typeof options.getDefaultValue === \"function\") {\n              defaultVal = options.getDefaultValue(this);\n            }\n            if (options.defaultValue !== undefined) {\n              defaultVal = options.defaultValue;\n            }\n          }\n          return this.getPropertyValue(key, defaultVal);\n        },\n        set: function (val) {\n          const newValue = processComputedUpdater(this, val);\n          const prevValue = this.getPropertyValue(key);\n          if (newValue !== prevValue) {\n            this.setPropertyValue(key, newValue);\n            if (!!options && options.onSet) {\n              options.onSet(newValue, this, prevValue);\n            }\n          }\n        }\n      });\n    } else {\n      Object.defineProperty(target, key, {\n        get: function () {\n          return getLocStringValue(this, options, key);\n        },\n        set: function (val) {\n          ensureLocString(this, options, key);\n          const newValue = processComputedUpdater(this, val);\n          this.setLocalizableStringText(key, newValue);\n          if (!!options && options.onSet) {\n            options.onSet(newValue, this);\n          }\n        }\n      });\n      Object.defineProperty(target, typeof options.localizable === \"object\" && !!options.localizable.name ? options.localizable.name : \"loc\" + key.charAt(0).toUpperCase() + key.slice(1), {\n        get: function () {\n          ensureLocString(this, options, key);\n          return this.getLocalizableString(key);\n        }\n      });\n    }\n  };\n}\nfunction ensureArray(target, options, key) {\n  target.ensureArray(key, (item, index) => {\n    const handler = !!options ? options.onPush : null;\n    handler && handler(item, index, target);\n  }, (item, index) => {\n    const handler = !!options ? options.onRemove : null;\n    handler && handler(item, index, target);\n  });\n}\nfunction propertyArray(options) {\n  return function (target, key) {\n    Object.defineProperty(target, key, {\n      get: function () {\n        ensureArray(this, options, key);\n        return this.getPropertyValue(key);\n      },\n      set: function (val) {\n        ensureArray(this, options, key);\n        const arr = this.getPropertyValue(key);\n        if (val === arr) {\n          return;\n        }\n        if (arr) {\n          arr.splice(0, arr.length, ...(val || []));\n        } else {\n          this.setPropertyValue(key, val);\n        }\n        if (!!options && options.onSet) {\n          options.onSet(val, this);\n        }\n      }\n    });\n  };\n}\n/**\n * Contains information about a property of a survey element (page, panel, questions, and etc).\n * @see addProperty\n * @see removeProperty\n * @see [Add Properties](https://surveyjs.io/Documentation/Survey-Creator#addproperties)\n * @see [Remove Properties](https://surveyjs.io/Documentation/Survey-Creator#removeproperties)\n */\nclass JsonObjectProperty {\n  constructor(classInfo, name, isRequired = false) {\n    this.name = name;\n    this.isRequiredValue = false;\n    this.isUniqueValue = false;\n    this.isSerializable = true;\n    this.isLightSerializable = true;\n    this.isCustom = false;\n    this.isDynamicChoices = false; //TODO obsolete, use dependsOn attribute\n    this.isBindable = false;\n    this.category = \"\";\n    this.categoryIndex = -1;\n    this.visibleIndex = -1;\n    this.maxLength = -1;\n    this.isArray = false;\n    this.classInfoValue = classInfo;\n    this.isRequiredValue = isRequired;\n    this.idValue = JsonObjectProperty.Index++;\n  }\n  get id() {\n    return this.idValue;\n  }\n  get classInfo() {\n    return this.classInfoValue;\n  }\n  get type() {\n    return this.typeValue ? this.typeValue : \"string\";\n  }\n  set type(value) {\n    if (value === \"itemvalues\") value = \"itemvalue[]\";\n    if (value === \"textitems\") value = \"textitem[]\";\n    this.typeValue = value;\n    if (this.typeValue.indexOf(\"[]\") === this.typeValue.length - 2) {\n      this.isArray = true;\n      this.className = this.typeValue.substring(0, this.typeValue.length - 2);\n    }\n  }\n  get locationInTable() {\n    const res = this.locationInTableValue;\n    return res || \"column\";\n  }\n  set locationInTable(val) {\n    this.locationInTableValue = val;\n  }\n  get showMode() {\n    const res = this.locationInTableValue;\n    return res === \"detail\" ? \"form\" : res === \"column\" ? \"list\" : \"\";\n  }\n  set showMode(val) {\n    this.locationInTable = val === \"form\" ? \"detail\" : val === \"list\" ? \"column\" : undefined;\n  }\n  get isRequired() {\n    return this.isRequiredValue;\n  }\n  set isRequired(val) {\n    if (val !== this.isRequired) {\n      this.isRequiredValue = val;\n      if (!!this.classInfo) {\n        this.classInfo.resetAllProperties();\n      }\n    }\n  }\n  get isUnique() {\n    return this.isUniqueValue;\n  }\n  set isUnique(val) {\n    this.isUniqueValue = val;\n  }\n  get uniquePropertyName() {\n    return this.uniquePropertyValue;\n  }\n  set uniquePropertyName(val) {\n    this.uniquePropertyValue = val;\n  }\n  isPropertySerializable(obj) {\n    if (this.isSerializableFunc) return this.isSerializableFunc(obj);\n    return this.isSerializable;\n  }\n  getDefaultValue(obj) {\n    let result = !!this.defaultValueFunc ? this.defaultValueFunc(obj) : this.defaultValueValue;\n    if (!!JsonObjectProperty.getItemValuesDefaultValue && Serializer.isDescendantOf(this.className, \"itemvalue\")) {\n      result = JsonObjectProperty.getItemValuesDefaultValue(this.defaultValueValue || [], this.className);\n    }\n    return result;\n  }\n  get defaultValue() {\n    return this.getDefaultValue(undefined);\n  }\n  set defaultValue(newValue) {\n    this.defaultValueValue = newValue;\n    if (newValue !== undefined) {\n      this.defaultValueFunc = undefined;\n    }\n  }\n  isDefaultValue(value) {\n    return this.isDefaultValueByObj(undefined, value);\n  }\n  isDefaultValueByObj(obj, value) {\n    if (this.isLocalizable) return value === null || value === undefined;\n    const dValue = this.getDefaultValue(obj);\n    if (dValue !== undefined) {\n      if (typeof dValue !== \"object\") return dValue === value;\n      return Helpers.isTwoValueEquals(value, dValue, false, true, false);\n    }\n    return value === false && (this.type == \"boolean\" || this.type == \"switch\") && !this.defaultValueFunc || value === \"\" || Helpers.isValueEmpty(value);\n  }\n  getSerializableValue(obj, storeDefaults) {\n    if (!!this.onSerializeValue) return this.onSerializeValue(obj);\n    const value = this.getValue(obj);\n    if (value === undefined || value === null) return undefined;\n    if (!storeDefaults && this.isDefaultValueByObj(obj, value)) return undefined;\n    return value;\n  }\n  getValue(obj) {\n    if (this.onGetValue) {\n      obj = this.getOriginalObj(obj);\n      return this.onGetValue(obj);\n    }\n    if (this.serializationProperty && !!obj[this.serializationProperty]) return obj[this.serializationProperty].getJson();\n    return obj[this.name];\n  }\n  getPropertyValue(obj) {\n    if (this.isLocalizable) {\n      return !!obj[this.serializationProperty] ? obj[this.serializationProperty].text : null;\n    }\n    return this.getValue(obj);\n  }\n  get hasToUseSetValue() {\n    return this.onSetValue || this.serializationProperty;\n  }\n  settingValue(obj, value) {\n    if (!this.onSettingValue || obj.isLoadingFromJson) return value;\n    return this.onSettingValue(obj, value);\n  }\n  setValue(obj, value, jsonConv) {\n    if (this.onSetValue) {\n      obj = this.getOriginalObj(obj);\n      this.onSetValue(obj, value, jsonConv);\n    } else {\n      if (this.serializationProperty && !!obj[this.serializationProperty]) obj[this.serializationProperty].setJson(value, true);else {\n        if (value && typeof value === \"string\") {\n          if (this.type == \"number\") {\n            value = parseInt(value);\n          }\n          if (this.type == \"boolean\" || this.type == \"switch\") {\n            value = value.toLowerCase() === \"true\";\n          }\n        }\n        obj[this.name] = value;\n      }\n    }\n  }\n  validateValue(value) {\n    const choices = this.choices;\n    if (!Array.isArray(choices) || choices.length === 0) return true;\n    return choices.indexOf(value) > -1;\n  }\n  getObjType(objType) {\n    if (!this.classNamePart) return objType;\n    return objType.replace(this.classNamePart, \"\");\n  }\n  /**\n   * Depricated, please use getChoices\n   */\n  get choices() {\n    return this.getChoices(null);\n  }\n  get hasChoices() {\n    return !!this.choicesValue || !!this.choicesfunc;\n  }\n  getChoices(obj, choicesCallback = null) {\n    if (this.choicesValue != null) return this.choicesValue;\n    if (this.choicesfunc != null) return this.choicesfunc(obj, choicesCallback);\n    return null;\n  }\n  setChoices(value, valueFunc = null) {\n    this.choicesValue = value;\n    this.choicesfunc = valueFunc;\n  }\n  getBaseValue() {\n    if (!this.baseValue) return \"\";\n    if (typeof this.baseValue == \"function\") return this.baseValue();\n    return this.baseValue;\n  }\n  setBaseValue(val) {\n    this.baseValue = val;\n  }\n  get readOnly() {\n    return this.readOnlyValue != null ? this.readOnlyValue : false;\n  }\n  set readOnly(val) {\n    this.readOnlyValue = val;\n  }\n  isEnable(obj) {\n    if (this.readOnly) return false;\n    if (!obj || !this.enableIf) return true;\n    return this.enableIf(this.getOriginalObj(obj));\n  }\n  isVisible(layout, obj = null) {\n    let isLayout = !this.layout || !layout || this.layout === layout;\n    if (!this.visible || !isLayout) return false;\n    if (!!this.visibleIf && !!obj) {\n      return this.visibleIf(this.getOriginalObj(obj));\n    }\n    return true;\n  }\n  getOriginalObj(obj) {\n    if (obj && obj.getOriginalObj) {\n      const orjObj = obj.getOriginalObj();\n      if (orjObj && Serializer.findProperty(orjObj.getType(), this.name)) {\n        return orjObj;\n      }\n    }\n    return obj;\n  }\n  get visible() {\n    return this.visibleValue != null ? this.visibleValue : true;\n  }\n  set visible(val) {\n    this.visibleValue = val;\n  }\n  isAvailableInVersion(ver) {\n    if (!!this.alternativeName || this.oldName) return true;\n    return this.isAvailableInVersionCore(ver);\n  }\n  getSerializedName(ver) {\n    if (!this.alternativeName) return this.name;\n    return this.isAvailableInVersionCore(ver) ? this.name : this.alternativeName || this.oldName;\n  }\n  getSerializedProperty(obj, ver) {\n    if (!this.oldName || this.isAvailableInVersionCore(ver)) return this;\n    if (!obj || !obj.getType) return null;\n    return Serializer.findProperty(obj.getType(), this.oldName);\n  }\n  isAvailableInVersionCore(ver) {\n    if (!ver || !this.version) return true;\n    return Helpers.compareVerions(this.version, ver) <= 0;\n  }\n  get isLocalizable() {\n    return this.isLocalizableValue != null ? this.isLocalizableValue : false;\n  }\n  set isLocalizable(val) {\n    this.isLocalizableValue = val;\n  }\n  get dataList() {\n    return Array.isArray(this.dataListValue) ? this.dataListValue : [];\n  }\n  set dataList(val) {\n    this.dataListValue = val;\n  }\n  mergeWith(prop) {\n    var valuesNames = JsonObjectProperty.mergableValues;\n    for (var i = 0; i < valuesNames.length; i++) {\n      this.mergeValue(prop, valuesNames[i]);\n    }\n  }\n  addDependedProperty(name) {\n    if (!this.dependedProperties) {\n      this.dependedProperties = [];\n    }\n    if (this.dependedProperties.indexOf(name) < 0) {\n      this.dependedProperties.push(name);\n    }\n  }\n  getDependedProperties() {\n    return !!this.dependedProperties ? this.dependedProperties : [];\n  }\n  schemaType() {\n    if (this.className === \"choicesByUrl\") return undefined;\n    if (this.className === \"string\") return this.className;\n    if (!!this.className) return \"array\";\n    if (!!this.baseClassName) return \"array\";\n    if (this.type == \"switch\") return \"boolean\";\n    if (this.type == \"boolean\" || this.type == \"number\") return this.type;\n    return \"string\";\n  }\n  schemaRef() {\n    if (!!this.className) return this.className;\n    return undefined;\n  }\n  mergeValue(prop, valueName) {\n    if (this[valueName] == null && prop[valueName] != null) {\n      this[valueName] = prop[valueName];\n    }\n  }\n}\nJsonObjectProperty.Index = 1;\nJsonObjectProperty.mergableValues = [\"typeValue\", \"choicesValue\", \"baseValue\", \"readOnlyValue\", \"visibleValue\", \"isSerializable\", \"isLightSerializable\", \"isCustom\", \"isBindable\", \"isUnique\", \"uniquePropertyName\", \"isDynamicChoices\", \"isLocalizableValue\", \"className\", \"alternativeName\", \"oldName\", \"layout\", \"version\", \"classNamePart\", \"baseClassName\", \"defaultValue\", \"defaultValueFunc\", \"serializationProperty\", \"onGetValue\", \"onSetValue\", \"onSettingValue\", \"displayName\", \"category\", \"categoryIndex\", \"visibleIndex\", \"nextToProperty\", \"overridingProperty\", \"locationInTable\", \"dependedProperties\", \"visibleIf\", \"enableIf\", \"onExecuteExpression\", \"onPropertyEditorUpdate\", \"maxLength\", \"maxValue\", \"minValue\", \"dataListValue\"];\nclass CustomPropertiesCollection {\n  static addProperty(className, property) {\n    className = className.toLowerCase();\n    var props = CustomPropertiesCollection.properties;\n    if (!props[className]) {\n      props[className] = [];\n    }\n    props[className].push(property);\n  }\n  static removeProperty(className, propertyName) {\n    className = className.toLowerCase();\n    var props = CustomPropertiesCollection.properties;\n    if (!props[className]) return;\n    var properties = props[className];\n    for (var i = 0; i < properties.length; i++) {\n      if (properties[i].name == propertyName) {\n        props[className].splice(i, 1);\n        break;\n      }\n    }\n  }\n  static removeAllProperties(className) {\n    className = className.toLowerCase();\n    delete CustomPropertiesCollection.properties[className];\n  }\n  static addClass(className, parentClassName) {\n    className = className.toLowerCase();\n    if (parentClassName) {\n      parentClassName = parentClassName.toLowerCase();\n    }\n    CustomPropertiesCollection.parentClasses[className] = parentClassName;\n  }\n  static getProperties(className) {\n    className = className.toLowerCase();\n    var res = [];\n    var props = CustomPropertiesCollection.properties;\n    while (className) {\n      var properties = props[className];\n      if (properties) {\n        for (var i = 0; i < properties.length; i++) {\n          res.push(properties[i]);\n        }\n      }\n      className = CustomPropertiesCollection.parentClasses[className];\n    }\n    return res;\n  }\n  static createProperties(obj) {\n    if (!obj || !obj.getType) return;\n    CustomPropertiesCollection.createPropertiesCore(obj, obj.getType());\n  }\n  static createPropertiesCore(obj, className) {\n    var props = CustomPropertiesCollection.properties;\n    if (props[className]) {\n      CustomPropertiesCollection.createPropertiesInObj(obj, props[className]);\n    }\n    var parentClass = CustomPropertiesCollection.parentClasses[className];\n    if (parentClass) {\n      CustomPropertiesCollection.createPropertiesCore(obj, parentClass);\n    }\n  }\n  static createPropertiesInObj(obj, properties) {\n    for (var i = 0; i < properties.length; i++) {\n      CustomPropertiesCollection.createPropertyInObj(obj, properties[i]);\n    }\n  }\n  static createPropertyInObj(obj, prop) {\n    if (CustomPropertiesCollection.checkIsPropertyExists(obj, prop.name)) return;\n    if (!!prop.serializationProperty && CustomPropertiesCollection.checkIsPropertyExists(obj, prop.serializationProperty)) return;\n    if (prop.isLocalizable && prop.serializationProperty && obj.createCustomLocalizableObj) {\n      const locStr = obj.createCustomLocalizableObj(prop.name);\n      locStr.defaultValue = prop.getDefaultValue(obj);\n      var locDesc = {\n        get: function () {\n          return obj.getLocalizableString(prop.name);\n        }\n      };\n      Object.defineProperty(obj, prop.serializationProperty, locDesc);\n      var desc = {\n        get: function () {\n          return obj.getLocalizableStringText(prop.name);\n        },\n        set: function (v) {\n          obj.setLocalizableStringText(prop.name, v);\n        }\n      };\n      Object.defineProperty(obj, prop.name, desc);\n    } else {\n      var isArrayProp = prop.isArray || prop.type === \"multiplevalues\";\n      if (typeof obj.createNewArray === \"function\") {\n        if (Serializer.isDescendantOf(prop.className, \"itemvalue\")) {\n          obj.createNewArray(prop.name, function (item) {\n            item.locOwner = obj;\n            item.ownerPropertyName = prop.name;\n          });\n          isArrayProp = true;\n        } else {\n          //It is a simple array property\n          if (isArrayProp) {\n            obj.createNewArray(prop.name);\n          }\n        }\n        if (isArrayProp) {\n          const defaultValue = prop.getDefaultValue(obj);\n          if (Array.isArray(defaultValue)) {\n            obj.setPropertyValue(prop.name, defaultValue);\n          }\n        }\n      }\n      if (!!obj.getPropertyValue && !!obj.setPropertyValue) {\n        var desc = {\n          get: () => {\n            if (!!prop.onGetValue) {\n              return prop.onGetValue(obj);\n            }\n            return obj.getPropertyValue(prop.name, undefined);\n          },\n          set: function (v) {\n            if (!!prop.onSetValue) {\n              prop.onSetValue(obj, v, null);\n            } else {\n              obj.setPropertyValue(prop.name, v);\n            }\n          }\n        };\n        Object.defineProperty(obj, prop.name, desc);\n      }\n    }\n    if (prop.type === \"condition\" || prop.type === \"expression\") {\n      if (!!prop.onExecuteExpression) {\n        obj.addExpressionProperty(prop.name, prop.onExecuteExpression);\n      }\n    }\n  }\n  static checkIsPropertyExists(obj, name) {\n    return obj.hasOwnProperty(name) || obj[name];\n  }\n}\nCustomPropertiesCollection.properties = {};\nCustomPropertiesCollection.parentClasses = {};\nclass JsonMetadataClass {\n  constructor(name, properties, creator = null, parentName = null) {\n    this.name = name;\n    this.creator = creator;\n    this.parentName = parentName;\n    name = name.toLowerCase();\n    this.isCustomValue = !creator && name !== \"survey\";\n    if (this.parentName) {\n      this.parentName = this.parentName.toLowerCase();\n      CustomPropertiesCollection.addClass(name, this.parentName);\n      if (!!creator) {\n        this.makeParentRegularClass();\n      }\n    }\n    this.properties = new Array();\n    for (var i = 0; i < properties.length; i++) {\n      this.createProperty(properties[i], this.isCustom);\n    }\n  }\n  //Obsolete\n  find(name) {\n    for (var i = 0; i < this.properties.length; i++) {\n      if (this.properties[i].name == name) return this.properties[i];\n    }\n    return null;\n  }\n  findProperty(name) {\n    this.fillAllProperties();\n    return this.hashProperties[name];\n  }\n  getAllProperties() {\n    this.fillAllProperties();\n    return this.allProperties;\n  }\n  getRequiredProperties() {\n    if (!!this.requiredProperties) return this.requiredProperties;\n    this.requiredProperties = [];\n    const props = this.getAllProperties();\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].isRequired) this.requiredProperties.push(props[i]);\n    }\n    return this.requiredProperties;\n  }\n  resetAllProperties() {\n    this.allProperties = undefined;\n    this.requiredProperties = undefined;\n    this.hashProperties = undefined;\n    var childClasses = Serializer.getChildrenClasses(this.name);\n    for (var i = 0; i < childClasses.length; i++) {\n      childClasses[i].resetAllProperties();\n    }\n  }\n  get isCustom() {\n    return this.isCustomValue;\n  }\n  fillAllProperties() {\n    if (!!this.allProperties) return;\n    this.allProperties = [];\n    this.hashProperties = {};\n    const localProperties = {};\n    this.properties.forEach(prop => localProperties[prop.name] = prop);\n    const parentClass = !!this.parentName ? Serializer.findClass(this.parentName) : null;\n    if (!!parentClass) {\n      const parentProperties = parentClass.getAllProperties();\n      parentProperties.forEach(prop => {\n        const overridedProp = localProperties[prop.name];\n        if (!!overridedProp) {\n          overridedProp.mergeWith(prop);\n          this.addPropCore(overridedProp);\n        } else {\n          this.addPropCore(prop);\n        }\n      });\n    }\n    this.properties.forEach(prop => {\n      if (!this.hashProperties[prop.name]) {\n        this.addPropCore(prop);\n      }\n    });\n  }\n  addPropCore(prop) {\n    this.allProperties.push(prop);\n    this.hashProperties[prop.name] = prop;\n    if (!!prop.alternativeName) {\n      this.hashProperties[prop.alternativeName] = prop;\n    }\n  }\n  isOverridedProp(propName) {\n    return !!this.parentName && !!Serializer.findProperty(this.parentName, propName);\n  }\n  hasRegularChildClass() {\n    if (!this.isCustom) return;\n    this.isCustomValue = false;\n    for (var i = 0; i < this.properties.length; i++) {\n      this.properties[i].isCustom = false;\n    }\n    CustomPropertiesCollection.removeAllProperties(this.name);\n    this.makeParentRegularClass();\n  }\n  makeParentRegularClass() {\n    if (!this.parentName) return;\n    const parent = Serializer.findClass(this.parentName);\n    if (!!parent) {\n      parent.hasRegularChildClass();\n    }\n  }\n  createProperty(propInfo, isCustom = false) {\n    var propertyName = typeof propInfo === \"string\" ? propInfo : propInfo.name;\n    if (!propertyName) return;\n    var propertyType = null;\n    var typeIndex = propertyName.indexOf(JsonMetadataClass.typeSymbol);\n    if (typeIndex > -1) {\n      propertyType = propertyName.substring(typeIndex + 1);\n      propertyName = propertyName.substring(0, typeIndex);\n    }\n    var isRequired = this.getIsPropertyNameRequired(propertyName) || !!propInfo.isRequired;\n    propertyName = this.getPropertyName(propertyName);\n    var prop = new JsonObjectProperty(this, propertyName, isRequired);\n    if (propertyType) {\n      prop.type = propertyType;\n    }\n    if (typeof propInfo === \"object\") {\n      if (propInfo.type) {\n        prop.type = propInfo.type;\n      }\n      if (propInfo.default !== undefined) {\n        prop.defaultValue = propInfo.default;\n      }\n      if (propInfo.defaultFunc !== undefined) {\n        prop.defaultValueFunc = propInfo.defaultFunc;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isSerializable)) {\n        prop.isSerializable = propInfo.isSerializable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isSerializableFunc)) {\n        prop.isSerializableFunc = propInfo.isSerializableFunc;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isLightSerializable)) {\n        prop.isLightSerializable = propInfo.isLightSerializable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.maxLength)) {\n        prop.maxLength = propInfo.maxLength;\n      }\n      if (propInfo.displayName !== undefined) {\n        prop.displayName = propInfo.displayName;\n      }\n      if (!Helpers.isValueEmpty(propInfo.category)) {\n        prop.category = propInfo.category;\n      }\n      if (!Helpers.isValueEmpty(propInfo.categoryIndex)) {\n        prop.categoryIndex = propInfo.categoryIndex;\n      }\n      if (!Helpers.isValueEmpty(propInfo.nextToProperty)) {\n        prop.nextToProperty = propInfo.nextToProperty;\n      }\n      if (!Helpers.isValueEmpty(propInfo.overridingProperty)) {\n        prop.overridingProperty = propInfo.overridingProperty;\n      }\n      if (!Helpers.isValueEmpty(propInfo.visibleIndex)) {\n        prop.visibleIndex = propInfo.visibleIndex;\n      }\n      if (!Helpers.isValueEmpty(propInfo.showMode)) {\n        prop.showMode = propInfo.showMode;\n      }\n      if (!Helpers.isValueEmpty(propInfo.locationInTable)) {\n        prop.locationInTable = propInfo.locationInTable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.maxValue)) {\n        prop.maxValue = propInfo.maxValue;\n      }\n      if (!Helpers.isValueEmpty(propInfo.minValue)) {\n        prop.minValue = propInfo.minValue;\n      }\n      if (!Helpers.isValueEmpty(propInfo.dataList)) {\n        prop.dataList = propInfo.dataList;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isDynamicChoices)) {\n        prop.isDynamicChoices = propInfo.isDynamicChoices;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isBindable)) {\n        prop.isBindable = propInfo.isBindable;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isUnique)) {\n        prop.isUnique = propInfo.isUnique;\n      }\n      if (!Helpers.isValueEmpty(propInfo.uniqueProperty)) {\n        prop.uniquePropertyName = propInfo.uniqueProperty;\n      }\n      if (!Helpers.isValueEmpty(propInfo.isArray)) {\n        prop.isArray = propInfo.isArray;\n      }\n      if (propInfo.visible === true || propInfo.visible === false) {\n        prop.visible = propInfo.visible;\n      }\n      if (!!propInfo.visibleIf) {\n        prop.visibleIf = propInfo.visibleIf;\n      }\n      if (!!propInfo.enableIf) {\n        prop.enableIf = propInfo.enableIf;\n      }\n      if (!!propInfo.onExecuteExpression) {\n        prop.onExecuteExpression = propInfo.onExecuteExpression;\n      }\n      if (!!propInfo.onPropertyEditorUpdate) {\n        prop.onPropertyEditorUpdate = propInfo.onPropertyEditorUpdate;\n      }\n      if (propInfo.readOnly === true) {\n        prop.readOnly = true;\n      }\n      if (propInfo.availableInMatrixColumn === true) {\n        prop.availableInMatrixColumn = true;\n      }\n      if (propInfo.choices) {\n        var choicesFunc = typeof propInfo.choices === \"function\" ? propInfo.choices : null;\n        var choicesValue = typeof propInfo.choices !== \"function\" ? propInfo.choices : null;\n        prop.setChoices(choicesValue, choicesFunc);\n      }\n      if (!!propInfo.baseValue) {\n        prop.setBaseValue(propInfo.baseValue);\n      }\n      if (propInfo.onSerializeValue) {\n        prop.onSerializeValue = propInfo.onSerializeValue;\n      }\n      if (propInfo.onGetValue) {\n        prop.onGetValue = propInfo.onGetValue;\n      }\n      if (propInfo.onSetValue) {\n        prop.onSetValue = propInfo.onSetValue;\n      }\n      if (propInfo.onSettingValue) {\n        prop.onSettingValue = propInfo.onSettingValue;\n      }\n      if (propInfo.isLocalizable) {\n        propInfo.serializationProperty = \"loc\" + prop.name;\n      }\n      if (propInfo.serializationProperty) {\n        prop.serializationProperty = propInfo.serializationProperty;\n        if (prop.serializationProperty && prop.serializationProperty.indexOf(\"loc\") == 0) {\n          prop.isLocalizable = true;\n        }\n      }\n      if (propInfo.isLocalizable) {\n        prop.isLocalizable = propInfo.isLocalizable;\n      }\n      if (propInfo.className) {\n        prop.className = propInfo.className;\n      }\n      if (propInfo.baseClassName) {\n        prop.baseClassName = propInfo.baseClassName;\n        prop.isArray = true;\n      }\n      if (prop.isArray === true) {\n        prop.isArray = true;\n      }\n      if (propInfo.classNamePart) {\n        prop.classNamePart = propInfo.classNamePart;\n      }\n      if (propInfo.alternativeName) {\n        prop.alternativeName = propInfo.alternativeName;\n      }\n      if (propInfo.oldName) {\n        prop.oldName = propInfo.oldName;\n      }\n      if (propInfo.layout) {\n        prop.layout = propInfo.layout;\n      }\n      if (propInfo.version) {\n        prop.version = propInfo.version;\n      }\n      if (propInfo.dependsOn) {\n        this.addDependsOnProperties(prop, propInfo.dependsOn);\n      }\n    }\n    this.properties.push(prop);\n    if (isCustom && !this.isOverridedProp(prop.name)) {\n      prop.isCustom = true;\n      CustomPropertiesCollection.addProperty(this.name, prop);\n    }\n    return prop;\n  }\n  addDependsOnProperties(prop, dependsOn) {\n    const dArray = Array.isArray(dependsOn) ? dependsOn : [dependsOn];\n    prop.dependsOn = dArray;\n    for (var i = 0; i < dArray.length; i++) {\n      this.addDependsOnProperty(prop, dArray[i]);\n    }\n  }\n  addDependsOnProperty(prop, dependsOn) {\n    var property = this.find(dependsOn);\n    if (!property) {\n      property = Serializer.findProperty(this.parentName, dependsOn);\n    }\n    if (!property) return;\n    property.addDependedProperty(prop.name);\n  }\n  getIsPropertyNameRequired(propertyName) {\n    return propertyName.length > 0 && propertyName[0] == JsonMetadataClass.requiredSymbol;\n  }\n  getPropertyName(propertyName) {\n    if (!this.getIsPropertyNameRequired(propertyName)) return propertyName;\n    propertyName = propertyName.slice(1);\n    return propertyName;\n  }\n}\nJsonMetadataClass.requiredSymbol = \"!\";\nJsonMetadataClass.typeSymbol = \":\";\n/**\n * The metadata object. It contains object properties' runtime information and allows you to modify it.\n */\nclass JsonMetadata {\n  constructor() {\n    this.classes = {};\n    this.alternativeNames = {};\n    this.childrenClasses = {};\n    this.dynamicPropsCache = {};\n  }\n  getObjPropertyValue(obj, name) {\n    if (this.isObjWrapper(obj) && this.isNeedUseObjWrapper(obj, name)) {\n      const orignalObj = obj.getOriginalObj();\n      const prop = Serializer.findProperty(orignalObj.getType(), name);\n      if (!!prop) return this.getObjPropertyValueCore(orignalObj, prop);\n    }\n    const prop = Serializer.findProperty(obj.getType(), name);\n    if (!prop) return obj[name];\n    return this.getObjPropertyValueCore(obj, prop);\n  }\n  setObjPropertyValue(obj, name, val) {\n    if (obj[name] === val) return;\n    if (!!obj[name] && !!obj[name].setJson) {\n      obj[name].setJson(val, true);\n    } else {\n      if (Array.isArray(val)) {\n        const newVal = [];\n        for (var i = 0; i < val.length; i++) newVal.push(val[i]);\n        val = newVal;\n      }\n      obj[name] = val;\n    }\n  }\n  getObjPropertyValueCore(obj, prop) {\n    if (!prop.isPropertySerializable(obj)) return obj[prop.name];\n    if (prop.isLocalizable) {\n      if (prop.isArray) return obj[prop.name];\n      const locStr = obj.getLocalizableString(prop.name);\n      if (!!locStr) {\n        if (locStr.isDefautlLocale) return locStr.text;\n        return locStr.getValue(locStr.locale);\n      }\n      if (!!prop.serializationProperty) return obj[prop.serializationProperty].text;\n    }\n    return obj.getPropertyValue(prop.name);\n  }\n  isObjWrapper(obj) {\n    return !!obj.getOriginalObj && !!obj.getOriginalObj();\n  }\n  isNeedUseObjWrapper(obj, name) {\n    if (!obj.getDynamicProperties) return true;\n    const props = obj.getDynamicProperties();\n    if (!Array.isArray(props)) return false;\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].name === name) return true;\n    }\n    return false;\n  }\n  addClass(name, properties, creator = null, parentName = null) {\n    name = name.toLowerCase();\n    var metaDataClass = new JsonMetadataClass(name, properties, creator, parentName);\n    this.classes[name] = metaDataClass;\n    if (parentName) {\n      parentName = parentName.toLowerCase();\n      var children = this.childrenClasses[parentName];\n      if (!children) {\n        this.childrenClasses[parentName] = [];\n      }\n      this.childrenClasses[parentName].push(metaDataClass);\n    }\n    return metaDataClass;\n  }\n  removeClass(name) {\n    var metaClass = this.findClass(name);\n    if (!metaClass) return;\n    delete this.classes[metaClass.name];\n    if (!!metaClass.parentName) {\n      var index = this.childrenClasses[metaClass.parentName].indexOf(metaClass);\n      if (index > -1) {\n        this.childrenClasses[metaClass.parentName].splice(index, 1);\n      }\n    }\n  }\n  overrideClassCreatore(name, creator) {\n    this.overrideClassCreator(name, creator);\n  }\n  overrideClassCreator(name, creator) {\n    name = name.toLowerCase();\n    var metaDataClass = this.findClass(name);\n    if (metaDataClass) {\n      metaDataClass.creator = creator;\n    }\n  }\n  getProperties(className) {\n    var metaClass = this.findClass(className);\n    if (!metaClass) return [];\n    return metaClass.getAllProperties();\n  }\n  getPropertiesByObj(obj) {\n    const type = !!obj && !!obj.getType ? obj.getType() : undefined;\n    if (!type) return [];\n    const props = this.getProperties(type);\n    const dynamicProps = this.getDynamicPropertiesByObj(obj);\n    for (let i = dynamicProps.length - 1; i >= 0; i--) {\n      if (this.findProperty(type, dynamicProps[i].name)) {\n        dynamicProps.splice(i, 1);\n      }\n    }\n    if (dynamicProps.length === 0) return props;\n    return [].concat(props).concat(dynamicProps);\n  }\n  addDynamicPropertiesIntoObj(dest, src, props) {\n    props.forEach(prop => {\n      this.addDynamicPropertyIntoObj(dest, src, prop.name, false);\n      if (prop.serializationProperty) {\n        this.addDynamicPropertyIntoObj(dest, src, prop.serializationProperty, true);\n      }\n      if (prop.alternativeName) {\n        this.addDynamicPropertyIntoObj(dest, src, prop.alternativeName, false);\n      }\n    });\n  }\n  addDynamicPropertyIntoObj(dest, src, propName, isReadOnly) {\n    var desc = {\n      configurable: true,\n      get: function () {\n        return src[propName];\n      }\n    };\n    if (!isReadOnly) {\n      desc[\"set\"] = function (v) {\n        src[propName] = v;\n      };\n    }\n    Object.defineProperty(dest, propName, desc);\n  }\n  getDynamicPropertiesByObj(obj, dynamicType = null) {\n    if (!obj || !obj.getType) return [];\n    if (!!obj.getDynamicProperties) return obj.getDynamicProperties();\n    if (!obj.getDynamicType && !dynamicType) return [];\n    const dType = !!dynamicType ? dynamicType : obj.getDynamicType();\n    return this.getDynamicPropertiesByTypes(obj.getType(), dType);\n  }\n  getDynamicPropertiesByTypes(objType, dynamicType, nonSerialableProps) {\n    if (!dynamicType) return [];\n    const cacheType = dynamicType + \"-\" + objType;\n    if (this.dynamicPropsCache[cacheType]) return this.dynamicPropsCache[cacheType];\n    var dynamicProps = this.getProperties(dynamicType);\n    if (!dynamicProps || dynamicProps.length == 0) return [];\n    const hash = {};\n    const props = this.getProperties(objType);\n    for (var i = 0; i < props.length; i++) {\n      hash[props[i].name] = props[i];\n    }\n    const res = [];\n    if (!nonSerialableProps) nonSerialableProps = [];\n    for (let i = 0; i < dynamicProps.length; i++) {\n      const dProp = dynamicProps[i];\n      if (this.canAddDybamicProp(dProp, hash[dProp.name])) {\n        if (nonSerialableProps.indexOf(dProp.name) > -1) {\n          dProp.visible = false;\n          dProp.isSerializable = false;\n        }\n        res.push(dProp);\n      }\n    }\n    this.dynamicPropsCache[cacheType] = res;\n    return res;\n  }\n  canAddDybamicProp(dProp, orgProp) {\n    if (!orgProp) return true;\n    if (dProp === orgProp) return false;\n    let classInfo = dProp.classInfo;\n    while (classInfo && classInfo.parentName) {\n      dProp = this.findProperty(classInfo.parentName, dProp.name);\n      if (dProp && dProp === orgProp) return true;\n      classInfo = !!dProp ? dProp.classInfo : undefined;\n    }\n    return false;\n  }\n  hasOriginalProperty(obj, propName) {\n    return !!this.getOriginalProperty(obj, propName);\n  }\n  getOriginalProperty(obj, propName) {\n    var res = this.findProperty(obj.getType(), propName);\n    if (!!res) return res;\n    if (this.isObjWrapper(obj)) return this.findProperty(obj.getOriginalObj().getType(), propName);\n    return null;\n  }\n  getProperty(className, propertyName) {\n    const prop = this.findProperty(className, propertyName);\n    if (!prop) return prop;\n    const classInfo = this.findClass(className);\n    if (prop.classInfo === classInfo) return prop;\n    const newProp = new JsonObjectProperty(classInfo, prop.name, prop.isRequired);\n    newProp.mergeWith(prop);\n    newProp.isArray = prop.isArray;\n    classInfo.properties.push(newProp);\n    classInfo.resetAllProperties();\n    return newProp;\n  }\n  findProperty(className, propertyName) {\n    const cl = this.findClass(className);\n    return !!cl ? cl.findProperty(propertyName) : null;\n  }\n  findProperties(className, propertyNames) {\n    var result = new Array();\n    const cl = this.findClass(className);\n    if (!cl) return result;\n    for (var i = 0; i < propertyNames.length; i++) {\n      var prop = cl.findProperty(propertyNames[i]);\n      if (prop) {\n        result.push(prop);\n      }\n    }\n    return result;\n  }\n  getAllPropertiesByName(propertyName) {\n    var res = new Array();\n    var classes = this.getAllClasses();\n    for (var i = 0; i < classes.length; i++) {\n      var classInfo = this.findClass(classes[i]);\n      for (var j = 0; j < classInfo.properties.length; j++) {\n        if (classInfo.properties[j].name == propertyName) {\n          res.push(classInfo.properties[j]);\n          break;\n        }\n      }\n    }\n    return res;\n  }\n  getAllClasses() {\n    var res = new Array();\n    for (var name in this.classes) {\n      res.push(name);\n    }\n    return res;\n  }\n  createClass(name, json = undefined) {\n    name = name.toLowerCase();\n    var metaDataClass = this.findClass(name);\n    if (!metaDataClass) return null;\n    if (metaDataClass.creator) return metaDataClass.creator(json);\n    var parentName = metaDataClass.parentName;\n    while (parentName) {\n      metaDataClass = this.findClass(parentName);\n      if (!metaDataClass) return null;\n      parentName = metaDataClass.parentName;\n      if (metaDataClass.creator) return this.createCustomType(name, metaDataClass.creator, json);\n    }\n    return null;\n  }\n  createCustomType(name, creator, json = undefined) {\n    name = name.toLowerCase();\n    var res = creator(json);\n    var customTypeName = name;\n    var customTemplateName = res.getTemplate ? res.getTemplate() : res.getType();\n    res.getType = function () {\n      return customTypeName;\n    };\n    res.getTemplate = function () {\n      return customTemplateName;\n    };\n    CustomPropertiesCollection.createProperties(res);\n    return res;\n  }\n  getChildrenClasses(name, canBeCreated = false) {\n    name = name.toLowerCase();\n    var result = [];\n    this.fillChildrenClasses(name, canBeCreated, result);\n    return result;\n  }\n  getRequiredProperties(name) {\n    const metaClass = this.findClass(name);\n    if (!metaClass) return [];\n    const props = metaClass.getRequiredProperties();\n    var res = [];\n    for (var i = 0; i < props.length; i++) {\n      res.push(props[i].name);\n    }\n    return res;\n  }\n  addProperties(className, propertiesInfos) {\n    className = className.toLowerCase();\n    var metaDataClass = this.findClass(className);\n    for (var i = 0; i < propertiesInfos.length; i++) {\n      this.addCustomPropertyCore(metaDataClass, propertiesInfos[i]);\n    }\n  }\n  addProperty(className, propertyInfo) {\n    return this.addCustomPropertyCore(this.findClass(className), propertyInfo);\n  }\n  addCustomPropertyCore(metaDataClass, propertyInfo) {\n    if (!metaDataClass) return null;\n    var property = metaDataClass.createProperty(propertyInfo, true);\n    if (property) {\n      this.clearDynamicPropsCache(metaDataClass);\n      metaDataClass.resetAllProperties();\n    }\n    return property;\n  }\n  removeProperty(className, propertyName) {\n    var metaDataClass = this.findClass(className);\n    if (!metaDataClass) return false;\n    var property = metaDataClass.find(propertyName);\n    if (property) {\n      this.clearDynamicPropsCache(metaDataClass);\n      this.removePropertyFromClass(metaDataClass, property);\n      metaDataClass.resetAllProperties();\n      CustomPropertiesCollection.removeProperty(metaDataClass.name, propertyName);\n    }\n  }\n  clearDynamicPropsCache(metaDataClass) {\n    this.dynamicPropsCache = {};\n  }\n  removePropertyFromClass(metaDataClass, property) {\n    var index = metaDataClass.properties.indexOf(property);\n    if (index < 0) return;\n    metaDataClass.properties.splice(index, 1);\n  }\n  fillChildrenClasses(name, canBeCreated, result) {\n    var children = this.childrenClasses[name];\n    if (!children) return;\n    for (var i = 0; i < children.length; i++) {\n      if (!canBeCreated || children[i].creator) {\n        result.push(children[i]);\n      }\n      this.fillChildrenClasses(children[i].name, canBeCreated, result);\n    }\n  }\n  findClass(name) {\n    name = name.toLowerCase();\n    var res = this.classes[name];\n    if (!res) {\n      var newName = this.alternativeNames[name];\n      if (!!newName && newName != name) return this.findClass(newName);\n    }\n    return res;\n  }\n  isDescendantOf(className, ancestorClassName) {\n    if (!className || !ancestorClassName) {\n      return false;\n    }\n    className = className.toLowerCase();\n    ancestorClassName = ancestorClassName.toLowerCase();\n    var class_ = this.findClass(className);\n    if (!class_) {\n      return false;\n    }\n    var parentClass = class_;\n    do {\n      if (parentClass.name === ancestorClassName) {\n        return true;\n      }\n      parentClass = this.classes[parentClass.parentName];\n    } while (!!parentClass);\n    return false;\n  }\n  addAlterNativeClassName(name, alternativeName) {\n    this.alternativeNames[alternativeName.toLowerCase()] = name.toLowerCase();\n  }\n  generateSchema(className = undefined) {\n    if (!className) className = \"survey\";\n    var classInfo = this.findClass(className);\n    if (!classInfo) return null;\n    var res = {\n      $schema: \"http://json-schema.org/draft-07/schema#\",\n      title: \"SurveyJS Library json schema\",\n      type: \"object\",\n      properties: {},\n      definitions: {\n        locstring: this.generateLocStrClass()\n      }\n    };\n    this.generateSchemaProperties(classInfo, res, res.definitions, true);\n    return res;\n  }\n  generateLocStrClass() {\n    const props = {};\n    const locProp = Serializer.findProperty(\"survey\", \"locale\");\n    if (!!locProp) {\n      const choices = locProp.getChoices(null);\n      if (Array.isArray(choices)) {\n        if (choices.indexOf(\"en\") < 0) {\n          choices.splice(0, 0, \"en\");\n        }\n        choices.splice(0, 0, \"default\");\n        choices.forEach(l => {\n          if (!!l) {\n            props[l] = {\n              type: \"string\"\n            };\n          }\n        });\n      }\n    }\n    return {\n      $id: \"locstring\",\n      type: \"object\",\n      properties: props\n    };\n  }\n  generateSchemaProperties(classInfo, classSchema, schemaDef, isRoot) {\n    if (!classInfo) return;\n    const schemaProperties = classSchema.properties;\n    const requiredProps = [];\n    if (classInfo.name === \"question\") {\n      schemaProperties.type = {\n        type: \"string\"\n      };\n      requiredProps.push(\"type\");\n    }\n    for (let i = 0; i < classInfo.properties.length; i++) {\n      const prop = classInfo.properties[i];\n      if (prop.isSerializable === false) continue;\n      if (!!classInfo.parentName && !!Serializer.findProperty(classInfo.parentName, prop.name)) continue;\n      schemaProperties[prop.name] = this.generateSchemaProperty(prop, schemaDef, isRoot);\n      if (prop.isRequired) requiredProps.push(prop.name);\n    }\n    if (requiredProps.length > 0) {\n      classSchema.required = requiredProps;\n    }\n  }\n  generateSchemaProperty(prop, schemaDef, isRoot) {\n    if (prop.isLocalizable) {\n      return {\n        oneOf: [{\n          \"type\": \"string\"\n        }, {\n          \"$ref\": this.getChemeRefName(\"locstring\", isRoot)\n        }]\n      };\n    }\n    const propType = prop.schemaType();\n    const refType = prop.schemaRef();\n    var res = {};\n    if (!!propType) {\n      res.type = propType;\n    }\n    if (prop.hasChoices) {\n      const enumRes = prop.getChoices(null);\n      if (Array.isArray(enumRes) && enumRes.length > 0) {\n        res.enum = this.getChoicesValues(enumRes);\n      }\n    }\n    if (!!refType) {\n      if (propType === \"array\") {\n        if (prop.className === \"string\") {\n          res.items = {\n            type: prop.className\n          };\n        } else {\n          res.items = {\n            $ref: this.getChemeRefName(prop.className, isRoot)\n          };\n        }\n      } else {\n        res[\"$ref\"] = this.getChemeRefName(refType, isRoot);\n      }\n      this.generateChemaClass(prop.className, schemaDef, false);\n    }\n    if (!!prop.baseClassName) {\n      var usedClasses = this.getChildrenClasses(prop.baseClassName, true);\n      if (prop.baseClassName == \"question\") {\n        usedClasses.push(this.findClass(\"panel\"));\n      }\n      res.items = {\n        anyOf: []\n      };\n      for (var i = 0; i < usedClasses.length; i++) {\n        var className = usedClasses[i].name;\n        res.items.anyOf.push({\n          $ref: this.getChemeRefName(className, isRoot)\n        });\n        this.generateChemaClass(className, schemaDef, false);\n      }\n    }\n    return res;\n  }\n  getChemeRefName(className, isRoot) {\n    //Fix for #6486, according to https://niem.github.io/json/reference/json-schema/references/#:~:text=In%20a%20JSON%20schema%2C%20a,%2C%20an%20in%2Dschema%20reference\n    //Checked by https://www.jsonschemavalidator.net/\n    return isRoot ? \"#/definitions/\" + className : className;\n  }\n  generateChemaClass(className, schemaDef, isRoot) {\n    if (!!schemaDef[className]) return;\n    var classInfo = this.findClass(className);\n    if (!classInfo) return;\n    var hasParent = !!classInfo.parentName && classInfo.parentName != \"base\";\n    if (hasParent) {\n      this.generateChemaClass(classInfo.parentName, schemaDef, isRoot);\n    }\n    const res = {\n      type: \"object\",\n      $id: className\n    };\n    schemaDef[className] = res;\n    const chemaProps = {\n      properties: {}\n    };\n    this.generateSchemaProperties(classInfo, chemaProps, schemaDef, isRoot);\n    if (hasParent) {\n      res.allOf = [{\n        $ref: this.getChemeRefName(classInfo.parentName, isRoot)\n      }, {\n        properties: chemaProps.properties\n      }];\n    } else {\n      res.properties = chemaProps.properties;\n    }\n    if (Array.isArray(chemaProps.required)) {\n      res.required = chemaProps.required;\n    }\n  }\n  getChoicesValues(enumRes) {\n    const res = new Array();\n    enumRes.forEach(item => {\n      if (typeof item === \"object\" && item.value !== undefined) {\n        res.push(item.value);\n      } else {\n        res.push(item);\n      }\n    });\n    return res;\n  }\n}\nclass JsonError {\n  constructor(type, message) {\n    this.type = type;\n    this.message = message;\n    this.description = \"\";\n    this.at = -1;\n    this.end = -1;\n  }\n  getFullDescription() {\n    return this.message + (this.description ? \"\\n\" + this.description : \"\");\n  }\n}\nclass JsonUnknownPropertyError extends JsonError {\n  constructor(propertyName, className) {\n    super(\"unknownproperty\", \"Unknown property in class '\" + className + \"': '\" + propertyName + \"'.\");\n    this.propertyName = propertyName;\n    this.className = className;\n  }\n}\nclass JsonMissingTypeErrorBase extends JsonError {\n  constructor(baseClassName, type, message) {\n    super(type, message);\n    this.baseClassName = baseClassName;\n    this.type = type;\n    this.message = message;\n  }\n}\nclass JsonMissingTypeError extends JsonMissingTypeErrorBase {\n  constructor(propertyName, baseClassName) {\n    super(baseClassName, \"missingtypeproperty\", \"The property type is missing in the object. Please take a look at property: '\" + propertyName + \"'.\");\n    this.propertyName = propertyName;\n    this.baseClassName = baseClassName;\n  }\n}\nclass JsonIncorrectTypeError extends JsonMissingTypeErrorBase {\n  constructor(propertyName, baseClassName) {\n    super(baseClassName, \"incorrecttypeproperty\", \"The property type is incorrect in the object. Please take a look at property: '\" + propertyName + \"'.\");\n    this.propertyName = propertyName;\n    this.baseClassName = baseClassName;\n  }\n}\nclass JsonRequiredPropertyError extends JsonError {\n  constructor(propertyName, className) {\n    super(\"requiredproperty\", \"The property '\" + propertyName + \"' is required in class '\" + className + \"'.\");\n    this.propertyName = propertyName;\n    this.className = className;\n  }\n}\nclass JsonRequiredArrayPropertyError extends JsonError {\n  constructor(propertyName, className) {\n    super(\"arrayproperty\", \"The property '\" + propertyName + \"' should be an array in '\" + className + \"'.\");\n    this.propertyName = propertyName;\n    this.className = className;\n  }\n}\nclass JsonIncorrectPropertyValueError extends JsonError {\n  constructor(property, value) {\n    super(\"incorrectvalue\", \"The property value: '\" + value + \"' is incorrect for property '\" + property.name + \"'.\");\n    this.property = property;\n    this.value = value;\n  }\n}\nclass JsonObject {\n  constructor() {\n    this.errors = new Array();\n    this.lightSerializing = false;\n  }\n  static get metaData() {\n    return JsonObject.metaDataValue;\n  }\n  toJsonObject(obj, options) {\n    return this.toJsonObjectCore(obj, null, options);\n  }\n  toObject(jsonObj, obj, options) {\n    this.toObjectCore(jsonObj, obj, options);\n    var error = this.getRequiredError(obj, jsonObj);\n    if (!!error) {\n      this.addNewError(error, jsonObj, obj);\n    }\n  }\n  toObjectCore(jsonObj, obj, options) {\n    if (!jsonObj) return;\n    var properties = null;\n    var objType = undefined;\n    var needAddErrors = true;\n    if (obj.getType) {\n      objType = obj.getType();\n      properties = Serializer.getProperties(objType);\n      needAddErrors = !!objType && !Serializer.isDescendantOf(objType, \"itemvalue\");\n    }\n    if (!properties) return;\n    if (obj.startLoadingFromJson) {\n      obj.startLoadingFromJson(jsonObj);\n    }\n    properties = this.addDynamicProperties(obj, jsonObj, properties);\n    this.options = options;\n    const processedProps = {};\n    processedProps[JsonObject.typePropertyName] = true;\n    const parentProps = {};\n    for (var key in jsonObj) {\n      this.setPropertyValueToObj(jsonObj, obj, key, properties, processedProps, parentProps, objType, needAddErrors, options);\n    }\n    this.options = undefined;\n    if (obj.endLoadingFromJson) {\n      obj.endLoadingFromJson();\n    }\n  }\n  setPropertyValueToObj(jsonObj, obj, key, properties, processedProps, parentProps, objType, needAddErrors, options) {\n    if (processedProps[key]) return;\n    if (key === JsonObject.positionPropertyName) {\n      obj[key] = jsonObj[key];\n      return;\n    }\n    const property = this.findProperty(properties, key);\n    if (!property && needAddErrors) {\n      this.addNewError(new JsonUnknownPropertyError(key.toString(), objType), jsonObj, obj);\n    }\n    if (property) {\n      const dProps = property.dependsOn;\n      if (Array.isArray(dProps)) {\n        parentProps[key] = true;\n        dProps.forEach(propKey => {\n          if (!parentProps[propKey]) {\n            this.setPropertyValueToObj(jsonObj, obj, propKey, properties, processedProps, parentProps, objType, false, options);\n          }\n        });\n      }\n      this.valueToObj(jsonObj[key], obj, property, jsonObj, options);\n      processedProps[key] = true;\n    }\n  }\n  toJsonObjectCore(obj, property, options) {\n    if (!obj || !obj.getType) return obj;\n    if (!obj.isSurvey && typeof obj.getData === \"function\") return obj.getData();\n    var result = {};\n    if (property != null && !property.className) {\n      result[JsonObject.typePropertyName] = property.getObjType(obj.getType());\n    }\n    const storeDefaults = options === true;\n    if (!options || options === true) {\n      options = {};\n    }\n    if (storeDefaults) {\n      options.storeDefaults = storeDefaults;\n    }\n    this.propertiesToJson(obj, Serializer.getProperties(obj.getType()), result, options);\n    this.propertiesToJson(obj, this.getDynamicProperties(obj), result, options);\n    return result;\n  }\n  getDynamicProperties(obj) {\n    return Serializer.getDynamicPropertiesByObj(obj);\n  }\n  addDynamicProperties(obj, jsonObj, props) {\n    if (!obj.getDynamicPropertyName && !obj.getDynamicProperties) return props;\n    if (obj.getDynamicPropertyName) {\n      const dynamicPropName = obj.getDynamicPropertyName();\n      if (!dynamicPropName) return props;\n      if (dynamicPropName && jsonObj[dynamicPropName]) {\n        obj[dynamicPropName] = jsonObj[dynamicPropName];\n      }\n    }\n    const dynamicProps = this.getDynamicProperties(obj);\n    return dynamicProps.length === 0 ? props : [].concat(props).concat(dynamicProps);\n  }\n  propertiesToJson(obj, properties, json, options) {\n    for (var i = 0; i < properties.length; i++) {\n      this.valueToJson(obj, json, properties[i], options);\n    }\n  }\n  valueToJson(obj, result, prop, options) {\n    if (!options) options = {};\n    if (!prop.isPropertySerializable(obj) || prop.isLightSerializable === false && this.lightSerializing) return;\n    if (options.version && !prop.isAvailableInVersion(options.version)) return;\n    this.valueToJsonCore(obj, result, prop, options);\n  }\n  valueToJsonCore(obj, result, prop, options) {\n    const serProp = prop.getSerializedProperty(obj, options.version);\n    if (serProp && serProp !== prop) {\n      this.valueToJsonCore(obj, result, serProp, options);\n      return;\n    }\n    var value = prop.getSerializableValue(obj, options.storeDefaults);\n    if (value === undefined) return;\n    if (this.isValueArray(value)) {\n      var arrValue = [];\n      for (var i = 0; i < value.length; i++) {\n        arrValue.push(this.toJsonObjectCore(value[i], prop, options));\n      }\n      value = arrValue.length > 0 ? arrValue : null;\n    } else {\n      value = this.toJsonObjectCore(value, prop, options);\n    }\n    if (value === undefined || value === null) return;\n    const name = prop.getSerializedName(options.version);\n    var hasValue = typeof obj[\"getPropertyValue\"] === \"function\" && obj[\"getPropertyValue\"](name, null) !== null;\n    if (options.storeDefaults && hasValue || !prop.isDefaultValueByObj(obj, value)) {\n      if (!Serializer.onSerializingProperty || !Serializer.onSerializingProperty(obj, prop, value, result)) {\n        result[name] = this.removePosOnValueToJson(prop, value);\n      }\n    }\n  }\n  valueToObj(value, obj, property, jsonObj, options) {\n    if (value === null || value === undefined) return;\n    this.removePos(property, value);\n    if (property != null && property.hasToUseSetValue) {\n      property.setValue(obj, value, this);\n      return;\n    }\n    if (property.isArray && !Array.isArray(value) && !!value) {\n      value = [value];\n      const propName = !!jsonObj && property.alternativeName && !!jsonObj[property.alternativeName] ? property.alternativeName : property.name;\n      this.addNewError(new JsonRequiredArrayPropertyError(propName, obj.getType()), !!jsonObj ? jsonObj : value, obj);\n    }\n    if (this.isValueArray(value)) {\n      this.valueToArray(value, obj, property.name, property, options);\n      return;\n    }\n    var newObj = this.createNewObj(value, property);\n    if (newObj.newObj) {\n      this.toObjectCore(value, newObj.newObj, options);\n      value = newObj.newObj;\n    }\n    if (!newObj.error) {\n      if (property != null) {\n        property.setValue(obj, value, this);\n        if (!!options && options.validatePropertyValues) {\n          if (!property.validateValue(value)) {\n            this.addNewError(new JsonIncorrectPropertyValueError(property, value), jsonObj, obj);\n          }\n        }\n      } else {\n        obj[property.name] = value;\n      }\n    }\n  }\n  removePosOnValueToJson(property, value) {\n    if (!property.isCustom || !value) return value;\n    this.removePosFromObj(value);\n    return value;\n  }\n  removePos(property, value) {\n    if (!property || !property.type || property.type.indexOf(\"value\") < 0) return;\n    this.removePosFromObj(value);\n  }\n  removePosFromObj(obj) {\n    if (!obj || typeof obj.getType === \"function\") return;\n    if (Array.isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n        this.removePosFromObj(obj[i]);\n      }\n    }\n    if (typeof obj !== \"object\") return;\n    if (!!obj[JsonObject.positionPropertyName]) {\n      delete obj[JsonObject.positionPropertyName];\n    }\n    for (let key in obj) {\n      this.removePosFromObj(obj[key]);\n    }\n  }\n  isValueArray(value) {\n    return value && Array.isArray(value);\n  }\n  createNewObj(value, property) {\n    var result = {\n      newObj: null,\n      error: null\n    };\n    const className = this.getClassNameForNewObj(value, property);\n    result.newObj = className ? Serializer.createClass(className, value) : null;\n    result.error = this.checkNewObjectOnErrors(result.newObj, value, property, className);\n    return result;\n  }\n  getClassNameForNewObj(value, property) {\n    var res = property != null && property.className ? property.className : undefined;\n    if (!res) {\n      res = value[JsonObject.typePropertyName];\n    }\n    if (!res) return res;\n    res = res.toLowerCase();\n    const classNamePart = property.classNamePart;\n    if (classNamePart && res.indexOf(classNamePart) < 0) {\n      res += classNamePart;\n    }\n    return res;\n  }\n  checkNewObjectOnErrors(newObj, value, property, className) {\n    var error = null;\n    if (newObj) {\n      error = this.getRequiredError(newObj, value);\n    } else {\n      if (property.baseClassName) {\n        if (!className) {\n          error = new JsonMissingTypeError(property.name, property.baseClassName);\n        } else {\n          error = new JsonIncorrectTypeError(property.name, property.baseClassName);\n        }\n      }\n    }\n    if (error) {\n      this.addNewError(error, value, newObj);\n    }\n    return error;\n  }\n  getRequiredError(obj, jsonValue) {\n    if (!obj.getType || typeof obj.getData === \"function\") return null;\n    const metaClass = Serializer.findClass(obj.getType());\n    if (!metaClass) return null;\n    const props = metaClass.getRequiredProperties();\n    if (!Array.isArray(props)) return null;\n    for (var i = 0; i < props.length; i++) {\n      const prop = props[i];\n      if (!Helpers.isValueEmpty(prop.defaultValue)) continue;\n      if (!jsonValue[prop.name]) {\n        return new JsonRequiredPropertyError(prop.name, obj.getType());\n      }\n    }\n    return null;\n  }\n  addNewError(error, jsonObj, element) {\n    error.jsonObj = jsonObj;\n    error.element = element;\n    this.errors.push(error);\n    if (!jsonObj) return;\n    const posObj = jsonObj[JsonObject.positionPropertyName];\n    if (!posObj) return;\n    error.at = posObj.start;\n    error.end = posObj.end;\n  }\n  valueToArray(value, obj, key, property, options) {\n    if (obj[key] && !this.isValueArray(obj[key])) return;\n    if (obj[key] && value.length > 0) obj[key].splice(0, obj[key].length);\n    var valueRes = obj[key] ? obj[key] : [];\n    this.addValuesIntoArray(value, valueRes, property, options);\n    if (!obj[key]) obj[key] = valueRes;\n  }\n  addValuesIntoArray(value, result, property, options) {\n    for (var i = 0; i < value.length; i++) {\n      var newValue = this.createNewObj(value[i], property);\n      if (newValue.newObj) {\n        if (!!value[i].name) {\n          newValue.newObj.name = value[i].name;\n        }\n        if (!!value[i].valueName) {\n          newValue.newObj.valueName = value[i].valueName.toString();\n        }\n        result.push(newValue.newObj);\n        this.toObjectCore(value[i], newValue.newObj, options);\n      } else {\n        if (!newValue.error) {\n          result.push(value[i]);\n        }\n      }\n    }\n  }\n  findProperty(properties, key) {\n    if (!properties) return null;\n    for (var i = 0; i < properties.length; i++) {\n      var prop = properties[i];\n      if (prop.name == key || prop.alternativeName == key) return prop;\n    }\n    return null;\n  }\n}\nJsonObject.typePropertyName = \"type\";\nJsonObject.positionPropertyName = \"pos\";\nJsonObject.metaDataValue = new JsonMetadata();\n/**\n * An alias for the metadata object. It contains object properties' runtime information and allows you to modify it.\n * @see JsonMetadata\n */\nvar Serializer = JsonObject.metaData;\nconst surveyBuiltInVarible = \"@survey\";\nclass ProcessValue {\n  constructor() {\n    this.values = null;\n    this.properties = null;\n    this.asyncValues = {};\n  }\n  getFirstName(text, obj = null) {\n    if (!text) return text;\n    var res = \"\";\n    if (!!obj) {\n      res = this.getFirstPropertyName(text, obj);\n      if (!!res) return res;\n    }\n    for (var i = 0; i < text.length; i++) {\n      var ch = text[i];\n      if (ch == \".\" || ch == \"[\") break;\n      res += ch;\n    }\n    return res;\n  }\n  hasValue(text, values = null) {\n    if (!values) values = this.values;\n    var res = this.getValueCore(text, values);\n    return res.hasValue;\n  }\n  getValue(text, values = null) {\n    if (!values) values = this.values;\n    var res = this.getValueCore(text, values);\n    return res.onProcessValue ? res.onProcessValue(res.value) : res.value;\n  }\n  setValue(obj, text, value) {\n    if (!text) return;\n    var nonNestedObj = this.getNonNestedObject(obj, text, true);\n    if (!nonNestedObj) return;\n    obj = nonNestedObj.value;\n    text = nonNestedObj.text;\n    if (!!obj && !!text) {\n      obj[text] = value;\n    }\n  }\n  getValueInfo(valueInfo) {\n    if (!!valueInfo.path) {\n      valueInfo.value = this.getValueFromPath(valueInfo.path, this.values);\n      valueInfo.hasValue = valueInfo.value !== null && !Helpers.isValueEmpty(valueInfo.value);\n      if (!valueInfo.hasValue && valueInfo.path.length > 1 && valueInfo.path[valueInfo.path.length - 1] == \"length\") {\n        valueInfo.hasValue = true;\n        valueInfo.value = 0;\n      }\n      return;\n    }\n    var res = this.getValueCore(valueInfo.name, this.values);\n    valueInfo.value = res.value;\n    valueInfo.hasValue = res.hasValue;\n    valueInfo.path = res.hasValue ? res.path : null;\n    valueInfo.onProcessValue = res.onProcessValue;\n    valueInfo.sctrictCompare = res.sctrictCompare;\n  }\n  isAnyKeyChanged(keys, usedNames) {\n    for (var i = 0; i < usedNames.length; i++) {\n      const name = usedNames[i];\n      if (!name) continue;\n      const lowerName = name.toLowerCase();\n      if (keys.hasOwnProperty(name)) return true;\n      if (name !== lowerName && keys.hasOwnProperty(lowerName)) return true;\n      var firstName = this.getFirstName(name);\n      if (!keys.hasOwnProperty(firstName)) continue;\n      if (name === firstName) return true;\n      var keyValue = keys[firstName];\n      if (keyValue == undefined) continue;\n      if (!keyValue.hasOwnProperty(\"oldValue\") || !keyValue.hasOwnProperty(\"newValue\")) return true;\n      var v = {};\n      v[firstName] = keyValue[\"oldValue\"];\n      var oldValue = this.getValue(name, v);\n      v[firstName] = keyValue[\"newValue\"];\n      var newValue = this.getValue(name, v);\n      if (!Helpers.isTwoValueEquals(oldValue, newValue, false, false, false)) return true;\n    }\n    return false;\n  }\n  getValueFromPath(path, values) {\n    if (path.length === 2 && path[0] === surveyBuiltInVarible) {\n      return this.getValueFromSurvey(path[1]);\n    }\n    var index = 0;\n    while (!!values && index < path.length) {\n      var ind_name = path[index];\n      if (Helpers.isNumber(ind_name) && Array.isArray(values) && ind_name >= values.length) return null;\n      values = values[ind_name];\n      index++;\n    }\n    return values;\n  }\n  getValueCore(text, values) {\n    const question = this.getQuestionDirectly(text);\n    if (question) {\n      return {\n        hasValue: true,\n        value: question.value,\n        onProcessValue: val => question.getExpressionValue(val),\n        path: [text],\n        sctrictCompare: question.requireStrictCompare\n      };\n    }\n    const res = this.getValueFromValues(text, values);\n    if (!!text && !res.hasValue) {\n      const val = this.getValueFromSurvey(text);\n      if (val !== undefined) {\n        res.hasValue = true;\n        res.value = val;\n        res.path = [surveyBuiltInVarible, text];\n      }\n    }\n    return res;\n  }\n  getQuestionDirectly(name) {\n    if (!!this.properties && !!this.properties.survey) return this.properties.survey.getQuestionByValueName(name);\n    return undefined;\n  }\n  getValueFromSurvey(name) {\n    if (!!this.properties && !!this.properties.survey) return this.properties.survey.getBuiltInVariableValue(name.toLocaleLowerCase());\n    return undefined;\n  }\n  getValueFromValues(text, values) {\n    var res = {\n      hasValue: false,\n      value: null,\n      path: null\n    };\n    var curValue = values;\n    if (!curValue && curValue !== 0 && curValue !== false) return res;\n    if (text && text.lastIndexOf(\".length\") > -1 && text.lastIndexOf(\".length\") === text.length - \".length\".length) {\n      res.value = 0;\n      res.hasValue = true;\n    }\n    var obj = this.getNonNestedObject(curValue, text, false);\n    if (!obj) return res;\n    res.path = obj.path;\n    res.value = !!obj.text ? this.getObjectValue(obj.value, obj.text) : obj.value;\n    res.hasValue = !Helpers.isValueEmpty(res.value);\n    return res;\n  }\n  getNonNestedObject(obj, text, createPath) {\n    let curName = this.getFirstPropertyName(text, obj, createPath);\n    let curObj = obj;\n    const path = !!curName ? [curName] : null;\n    let curText = text;\n    while (curText != curName && !!curObj) {\n      var isArray = curText[0] == \"[\";\n      if (!isArray) {\n        if (!curName && curText === this.getFirstName(curText)) return {\n          value: obj,\n          text: text,\n          path: path\n        };\n        curObj = this.getObjectValue(curObj, curName);\n        if (Helpers.isValueEmpty(curObj) && !createPath) return null;\n        curText = curText.substring(curName.length);\n      } else {\n        var objInArray = this.getObjInArray(curObj, curText);\n        if (!objInArray) return null;\n        curObj = objInArray.value;\n        curText = objInArray.text;\n        path.push(objInArray.index);\n      }\n      if (!!curText && curText[0] == \".\") {\n        curText = curText.substring(1);\n      }\n      curName = this.getFirstPropertyName(curText, curObj, createPath);\n      if (!!curName) {\n        path.push(curName);\n      }\n    }\n    return {\n      value: curObj,\n      text: curText,\n      path: path\n    };\n  }\n  getObjInArray(curValue, text) {\n    if (!Array.isArray(curValue)) return null;\n    var index = 1;\n    var str = \"\";\n    while (index < text.length && text[index] != \"]\") {\n      str += text[index];\n      index++;\n    }\n    text = index < text.length ? text.substring(index + 1) : \"\";\n    index = this.getIntValue(str);\n    if (index < 0 || index >= curValue.length) return null;\n    return {\n      value: curValue[index],\n      text: text,\n      index: index\n    };\n  }\n  getFirstPropertyName(name, obj, createProp = false) {\n    if (!name) return \"\";\n    if (!obj) obj = {};\n    if (obj.hasOwnProperty(name)) return name;\n    let nameInLow = name.toLowerCase();\n    const A = nameInLow[0];\n    const a = A.toUpperCase();\n    let keyWithDot = \"\";\n    for (var key in obj) {\n      var first = key[0];\n      if (first === a || first === A) {\n        var keyName = key.toLowerCase();\n        if (keyName == nameInLow) return key;\n        if (nameInLow.length <= keyName.length) continue;\n        var ch = nameInLow[keyName.length];\n        if (ch != \".\" && ch != \"[\") continue;\n        if (keyName == nameInLow.substring(0, keyName.length)) {\n          if (keyWithDot.length < key.length) {\n            keyWithDot = key;\n          }\n        }\n      }\n    }\n    if (keyWithDot) return keyWithDot;\n    if (createProp && name[0] !== \"[\") {\n      const ind = name.indexOf(\".\");\n      if (ind > -1) {\n        name = name.substring(0, ind);\n        obj[name] = {};\n      }\n      return name;\n    }\n    return \"\";\n  }\n  getObjectValue(obj, name) {\n    if (!name) return null;\n    return obj[name];\n  }\n  getIntValue(str) {\n    if (str == \"0\" || (str | 0) > 0 && str % 1 == 0) return Number(str);\n    return -1;\n  }\n}\nclass ConsoleWarnings {\n  static disposedObjectChangedProperty(propName, objType) {\n    ConsoleWarnings.warn(\"An attempt to set a property \\\"\" + propName + \"\\\" of a disposed object \\\"\" + objType + \"\\\"\");\n  }\n  static inCorrectQuestionValue(questionName, val) {\n    const valStr = JSON.stringify(val, null, 3);\n    ConsoleWarnings.warn(\"An attempt to assign an incorrect value\" + valStr + \" to the following question: \\\"\" + questionName + \"\\\"\");\n  }\n  static warn(text) {\n    // eslint-disable-next-line no-console\n    console.warn(text);\n  }\n  static error(text) {\n    // eslint-disable-next-line no-console\n    console.error(text);\n  }\n}\nclass FunctionFactory {\n  constructor() {\n    this.functionHash = {};\n    this.isAsyncHash = {};\n  }\n  register(name, func, isAsync = false) {\n    this.functionHash[name] = func;\n    if (isAsync) this.isAsyncHash[name] = true;\n  }\n  unregister(name) {\n    delete this.functionHash[name];\n    delete this.isAsyncHash[name];\n  }\n  hasFunction(name) {\n    return !!this.functionHash[name];\n  }\n  isAsyncFunction(name) {\n    return !!this.isAsyncHash[name];\n  }\n  clear() {\n    this.functionHash = {};\n  }\n  getAll() {\n    var result = [];\n    for (var key in this.functionHash) {\n      result.push(key);\n    }\n    return result.sort();\n  }\n  run(name, params, properties = null, originalParams) {\n    const func = this.functionHash[name];\n    if (!func) {\n      ConsoleWarnings.warn(this.getUnknownFunctionErrorText(name, properties));\n      return null;\n    }\n    let classRunner = {\n      func: func\n    };\n    if (properties) {\n      for (var key in properties) {\n        classRunner[key] = properties[key];\n      }\n    }\n    return classRunner.func(params, originalParams);\n  }\n  getUnknownFunctionErrorText(name, properties) {\n    return \"Unknown function name: '\" + name + \"'.\" + ExpressionExecutor.getQuestionErrorText(properties);\n  }\n}\nFunctionFactory.Instance = new FunctionFactory();\nvar registerFunction = FunctionFactory.Instance.register;\nfunction getParamsAsArray(value, arr) {\n  if (value === undefined || value === null) return;\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      getParamsAsArray(value[i], arr);\n    }\n  } else {\n    if (Helpers.isNumber(value)) {\n      value = Helpers.getNumber(value);\n    }\n    arr.push(value);\n  }\n}\nfunction sum(params) {\n  var arr = [];\n  getParamsAsArray(params, arr);\n  var res = 0;\n  for (var i = 0; i < arr.length; i++) {\n    res = Helpers.correctAfterPlusMinis(res, arr[i], res + arr[i]);\n  }\n  return res;\n}\nFunctionFactory.Instance.register(\"sum\", sum);\nfunction min_max(params, isMin) {\n  var arr = [];\n  getParamsAsArray(params, arr);\n  var res = undefined;\n  for (var i = 0; i < arr.length; i++) {\n    if (res === undefined) {\n      res = arr[i];\n    }\n    if (isMin) {\n      if (res > arr[i]) res = arr[i];\n    } else {\n      if (res < arr[i]) res = arr[i];\n    }\n  }\n  return res;\n}\nfunction min(params) {\n  return min_max(params, true);\n}\nFunctionFactory.Instance.register(\"min\", min);\nfunction max(params) {\n  return min_max(params, false);\n}\nFunctionFactory.Instance.register(\"max\", max);\nfunction count(params) {\n  var arr = [];\n  getParamsAsArray(params, arr);\n  return arr.length;\n}\nFunctionFactory.Instance.register(\"count\", count);\nfunction avg(params) {\n  var arr = [];\n  getParamsAsArray(params, arr);\n  const res = sum(params);\n  return arr.length > 0 ? res / arr.length : 0;\n}\nFunctionFactory.Instance.register(\"avg\", avg);\nfunction round(params) {\n  var arr = [];\n  getParamsAsArray(params, arr);\n  if (arr.length > 0) {\n    const num = arr[0];\n    const precision = arr[1] || 0;\n    if (Helpers.isNumber(num) && Helpers.isNumber(precision)) {\n      const p = Math.pow(10, precision);\n      const n = num * p * (1 + Number.EPSILON);\n      return Math.round(n) / p;\n    }\n  }\n  return NaN;\n}\nFunctionFactory.Instance.register(\"round\", round);\nfunction trunc(params) {\n  var arr = [];\n  getParamsAsArray(params, arr);\n  if (arr.length > 0) {\n    const num = arr[0];\n    const precision = arr[1] || -1;\n    if (Helpers.isNumber(num) && Helpers.isNumber(precision)) {\n      const regexp = new RegExp(\"^-?\\\\d+(?:.\\\\d{0,\" + precision + \"})?\");\n      return Number(num.toString().match(regexp)[0]);\n    }\n  }\n  return NaN;\n}\nFunctionFactory.Instance.register(\"trunc\", trunc);\nfunction getInArrayParams(params, originalParams) {\n  if (params.length < 2 || params.length > 3) return null;\n  const arr = params[0];\n  if (!arr) return null;\n  if (!Array.isArray(arr) && !Array.isArray(Object.keys(arr))) return null;\n  const name = params[1];\n  if (typeof name !== \"string\" && !(name instanceof String)) return null;\n  let expression = params.length > 2 ? params[2] : undefined;\n  if (typeof expression !== \"string\" && !(expression instanceof String)) {\n    expression = undefined;\n  }\n  if (!expression) {\n    const operand = Array.isArray(originalParams) && originalParams.length > 2 ? originalParams[2] : undefined;\n    if (operand && !!operand.toString()) {\n      expression = operand.toString();\n    }\n  }\n  return {\n    data: arr,\n    name: name,\n    expression: expression\n  };\n}\nfunction convertToNumber(val) {\n  if (typeof val === \"string\") return Helpers.isNumber(val) ? Helpers.getNumber(val) : undefined;\n  return val;\n}\nfunction processItemInArray(item, name, res, func, needToConvert, condition) {\n  if (!item || Helpers.isValueEmpty(item[name])) return res;\n  if (condition && !condition.run(item)) return res;\n  const val = needToConvert ? convertToNumber(item[name]) : 1;\n  return func(res, val);\n}\nfunction calcInArray(params, originalParams, func, needToConvert = true) {\n  var v = getInArrayParams(params, originalParams);\n  if (!v) return undefined;\n  let condition = !!v.expression ? new ConditionRunner(v.expression) : undefined;\n  if (condition && condition.isAsync) {\n    condition = undefined;\n  }\n  var res = undefined;\n  if (Array.isArray(v.data)) {\n    for (var i = 0; i < v.data.length; i++) {\n      res = processItemInArray(v.data[i], v.name, res, func, needToConvert, condition);\n    }\n  } else {\n    for (var key in v.data) {\n      res = processItemInArray(v.data[key], v.name, res, func, needToConvert, condition);\n    }\n  }\n  return res;\n}\nfunction sumInArray(params, originalParams) {\n  var res = calcInArray(params, originalParams, function (res, val) {\n    if (res == undefined) res = 0;\n    if (val == undefined || val == null) return res;\n    return Helpers.correctAfterPlusMinis(res, val, res + val);\n  });\n  return res !== undefined ? res : 0;\n}\nFunctionFactory.Instance.register(\"sumInArray\", sumInArray);\nfunction minInArray(params, originalParams) {\n  return calcInArray(params, originalParams, function (res, val) {\n    if (res == undefined) return val;\n    if (val == undefined || val == null) return res;\n    return res < val ? res : val;\n  });\n}\nFunctionFactory.Instance.register(\"minInArray\", minInArray);\nfunction maxInArray(params, originalParams) {\n  return calcInArray(params, originalParams, function (res, val) {\n    if (res == undefined) return val;\n    if (val == undefined || val == null) return res;\n    return res > val ? res : val;\n  });\n}\nFunctionFactory.Instance.register(\"maxInArray\", maxInArray);\nfunction countInArray(params, originalParams) {\n  var res = calcInArray(params, originalParams, function (res, val) {\n    if (res == undefined) res = 0;\n    if (val == undefined || val == null) return res;\n    return res + 1;\n  }, false);\n  return res !== undefined ? res : 0;\n}\nFunctionFactory.Instance.register(\"countInArray\", countInArray);\nfunction avgInArray(params, originalParams) {\n  var count = countInArray(params, originalParams);\n  if (count == 0) return 0;\n  return sumInArray(params, originalParams) / count;\n}\nFunctionFactory.Instance.register(\"avgInArray\", avgInArray);\nfunction iif(params) {\n  if (!Array.isArray(params) || params.length < 2) return null;\n  const va2 = params.length > 2 ? params[2] : undefined;\n  return params[0] ? params[1] : va2;\n}\nFunctionFactory.Instance.register(\"iif\", iif);\nfunction getDate(params) {\n  if (!Array.isArray(params) || params.length < 1 || !params[0]) return null;\n  return createDate(\"function-getDate\", params[0]);\n}\nFunctionFactory.Instance.register(\"getDate\", getDate);\nfunction dateDiffMonths(date1Param, date2Param, type) {\n  if (type === \"days\") return diffDays([date1Param, date2Param]);\n  const date1 = createDate(\"function-dateDiffMonths\", date1Param);\n  const date2 = createDate(\"function-dateDiffMonths\", date2Param);\n  const age = date2.getFullYear() - date1.getFullYear();\n  type = type || \"years\";\n  let ageInMonths = age * 12 + date2.getMonth() - date1.getMonth();\n  if (date2.getDate() < date1.getDate()) {\n    ageInMonths -= 1;\n  }\n  return type === \"months\" ? ageInMonths : ~~(ageInMonths / 12);\n}\nfunction age(params) {\n  if (!Array.isArray(params) || params.length < 1 || !params[0]) return null;\n  return dateDiffMonths(params[0], undefined, (params.length > 1 ? params[1] : \"\") || \"years\");\n}\nFunctionFactory.Instance.register(\"age\", age);\nfunction dateDiff(params) {\n  if (!Array.isArray(params) || params.length < 2 || !params[0] || !params[1]) return null;\n  const type = (params.length > 2 ? params[2] : \"\") || \"days\";\n  const isHours = type === \"hours\" || type === \"minutes\";\n  const dType = isHours ? \"days\" : type;\n  let days = dateDiffMonths(params[0], params[1], dType);\n  if (isHours) {\n    const date1 = createDate(\"function-dateDiffMonths\", params[0]);\n    const date2 = createDate(\"function-dateDiffMonths\", params[1]);\n    if (date2.getHours() > date1.getHours()) {\n      days -= 1;\n    }\n    let hours = days * 24 + date2.getHours() - date1.getHours();\n    if (type === \"hours\") return hours;\n    if (date2.getMinutes() < date1.getMinutes()) {\n      hours -= 1;\n    }\n    return hours * 60 + date2.getMinutes() - date1.getMinutes();\n  }\n  return days;\n}\nFunctionFactory.Instance.register(\"dateDiff\", dateDiff);\nfunction dateAdd(params) {\n  if (!Array.isArray(params) || params.length < 2 || !params[0] || !params[1]) return null;\n  const date = createDate(\"function-dateAdd\", params[0]);\n  const valToAdd = params[1];\n  const interval = params[2] || \"days\";\n  if (interval === \"days\") {\n    date.setDate(date.getDate() + valToAdd);\n  }\n  if (interval === \"months\") {\n    date.setMonth(date.getMonth() + valToAdd);\n  }\n  if (interval === \"years\") {\n    date.setFullYear(date.getFullYear() + valToAdd);\n  }\n  return date;\n}\nFunctionFactory.Instance.register(\"dateAdd\", dateAdd);\nfunction isContainerReadyCore(container) {\n  if (!container) return false;\n  var questions = container.questions;\n  for (var i = 0; i < questions.length; i++) {\n    if (!questions[i].validate(false)) return false;\n  }\n  return true;\n}\nfunction isContainerReady(params) {\n  if (!params && params.length < 1) return false;\n  if (!params[0] || !this.survey) return false;\n  const name = params[0];\n  let container = this.survey.getPageByName(name);\n  if (!container) container = this.survey.getPanelByName(name);\n  if (!container) {\n    const question = this.survey.getQuestionByName(name);\n    if (!question || !Array.isArray(question.panels)) return false;\n    if (params.length > 1) {\n      if (params[1] < question.panels.length) {\n        container = question.panels[params[1]];\n      }\n    } else {\n      for (let i = 0; i < question.panels.length; i++) {\n        if (!isContainerReadyCore(question.panels[i])) return false;\n      }\n      return true;\n    }\n  }\n  return isContainerReadyCore(container);\n}\nFunctionFactory.Instance.register(\"isContainerReady\", isContainerReady);\nfunction isDisplayMode() {\n  return this.survey && this.survey.isDisplayMode;\n}\nFunctionFactory.Instance.register(\"isDisplayMode\", isDisplayMode);\nfunction currentDate() {\n  return createDate(\"function-currentDate\");\n}\nFunctionFactory.Instance.register(\"currentDate\", currentDate);\nfunction today(params) {\n  var res = createDate(\"function-today\");\n  if (settings.localization.useLocalTimeZone) {\n    res.setHours(0, 0, 0, 0);\n  } else {\n    res.setUTCHours(0, 0, 0, 0);\n  }\n  if (Array.isArray(params) && params.length == 1) {\n    res.setDate(res.getDate() + params[0]);\n  }\n  return res;\n}\nFunctionFactory.Instance.register(\"today\", today);\nfunction getYear(params) {\n  if (params.length !== 1 || !params[0]) return undefined;\n  return createDate(\"function-getYear\", params[0]).getFullYear();\n}\nFunctionFactory.Instance.register(\"getYear\", getYear);\nfunction currentYear() {\n  return createDate(\"function-currentYear\").getFullYear();\n}\nFunctionFactory.Instance.register(\"currentYear\", currentYear);\nfunction diffDays(params) {\n  if (!Array.isArray(params) || params.length !== 2) return 0;\n  if (!params[0] || !params[1]) return 0;\n  const date1 = createDate(\"function-diffDays\", params[0]);\n  const date2 = createDate(\"function-diffDays\", params[1]);\n  const diffTime = Math.abs(date2 - date1);\n  return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n}\nFunctionFactory.Instance.register(\"diffDays\", diffDays);\nfunction dateFromFirstParameterOrToday(name, params) {\n  let date = today(undefined);\n  if (params && params[0]) {\n    date = createDate(\"function-\" + name, params[0]);\n  }\n  return date;\n}\nfunction year(params) {\n  let date = dateFromFirstParameterOrToday(\"year\", params);\n  return date.getFullYear();\n}\nFunctionFactory.Instance.register(\"year\", year);\nfunction month(params) {\n  let date = dateFromFirstParameterOrToday(\"month\", params);\n  return date.getMonth() + 1;\n}\nFunctionFactory.Instance.register(\"month\", month);\nfunction day(params) {\n  let date = dateFromFirstParameterOrToday(\"day\", params);\n  return date.getDate();\n}\nFunctionFactory.Instance.register(\"day\", day);\nfunction weekday(params) {\n  let date = dateFromFirstParameterOrToday(\"weekday\", params);\n  return date.getDay();\n}\nFunctionFactory.Instance.register(\"weekday\", weekday);\nfunction getQuestionValueByContext(context, name) {\n  if (!context || !name) return undefined;\n  let q = context.question;\n  while (q && q.parent) {\n    const res = q.parent.getQuestionByName(name);\n    if (!!res) return res;\n    q = q.parentQuestion;\n  }\n  const keys = [\"row\", \"panel\", \"survey\"];\n  for (let i = 0; i < keys.length; i++) {\n    const ctx = context[keys[i]];\n    if (ctx && ctx.getQuestionByName) {\n      const res = ctx.getQuestionByName(name);\n      if (res) return res;\n    }\n  }\n  return null;\n}\nfunction getDisplayValueReturnResult(q, params) {\n  if (params.length > 1 && !Helpers.isValueEmpty(params[1])) return q.getDisplayValue(true, params[1]);\n  return q.displayValue;\n}\nfunction displayValue(params) {\n  const q = getQuestionValueByContext(this, params[0]);\n  if (!q) return \"\";\n  if (q.isReady) {\n    this.returnResult(getDisplayValueReturnResult(q, params));\n  } else {\n    const displayValueOnReadyChanged = (sender, options) => {\n      if (sender.isReady) {\n        sender.onReadyChanged.remove(displayValueOnReadyChanged);\n        this.returnResult(getDisplayValueReturnResult(sender, params));\n      }\n    };\n    q.onReadyChanged.add(displayValueOnReadyChanged);\n  }\n  return undefined;\n}\nFunctionFactory.Instance.register(\"displayValue\", displayValue, true);\nfunction propertyValue(params) {\n  if (params.length !== 2 || !params[0] || !params[1]) return undefined;\n  const q = getQuestionValueByContext(this, params[0]);\n  return q ? q[params[1]] : undefined;\n}\nFunctionFactory.Instance.register(\"propertyValue\", propertyValue);\nfunction substring_(params) {\n  if (params.length < 2) return \"\";\n  const s = params[0];\n  if (!s || typeof s !== \"string\") return \"\";\n  const start = params[1];\n  if (!Helpers.isNumber(start)) return \"\";\n  const end = params.length > 2 ? params[2] : undefined;\n  if (!Helpers.isNumber(end)) return s.substring(start);\n  return s.substring(start, end);\n}\nFunctionFactory.Instance.register(\"substring\", substring_);\nclass Operand {\n  constructor() {\n    this._id = Operand.counter++;\n  }\n  get id() {\n    return this._id;\n  }\n  toString(func = undefined) {\n    return \"\";\n  }\n  hasFunction() {\n    return false;\n  }\n  hasAsyncFunction() {\n    return false;\n  }\n  addToAsyncList(list) {}\n  addOperandsToList(list) {\n    list.push(this);\n    this.addChildrenToList(list);\n  }\n  isEqual(op) {\n    return !!op && op.getType() === this.getType() && this.isContentEqual(op);\n  }\n  areOperatorsEquals(op1, op2) {\n    return !op1 && !op2 || !!op1 && op1.isEqual(op2);\n  }\n  addChildrenToList(list) {}\n}\nOperand.counter = 1;\nclass BinaryOperand extends Operand {\n  constructor(operatorName, left = null, right = null, isArithmeticOp = false) {\n    super();\n    this.operatorName = operatorName;\n    this.left = left;\n    this.right = right;\n    this.isArithmeticValue = isArithmeticOp;\n    if (isArithmeticOp) {\n      this.consumer = OperandMaker.binaryFunctions[\"arithmeticOp\"](operatorName);\n    } else {\n      this.consumer = OperandMaker.binaryFunctions[operatorName];\n    }\n    if (this.consumer == null) {\n      OperandMaker.throwInvalidOperatorError(operatorName);\n    }\n  }\n  get requireStrictCompare() {\n    return this.getIsOperandRequireStrict(this.left) || this.getIsOperandRequireStrict(this.right);\n  }\n  getIsOperandRequireStrict(op) {\n    return !!op && op.requireStrictCompare;\n  }\n  getType() {\n    return \"binary\";\n  }\n  get isArithmetic() {\n    return this.isArithmeticValue;\n  }\n  get isConjunction() {\n    return this.operatorName == \"or\" || this.operatorName == \"and\";\n  }\n  get conjunction() {\n    return this.isConjunction ? this.operatorName : \"\";\n  }\n  get operator() {\n    return this.operatorName;\n  }\n  get leftOperand() {\n    return this.left;\n  }\n  get rightOperand() {\n    return this.right;\n  }\n  isContentEqual(op) {\n    const bOp = op;\n    return bOp.operator === this.operator && this.areOperatorsEquals(this.left, bOp.left) && this.areOperatorsEquals(this.right, bOp.right);\n  }\n  evaluateParam(x, processValue) {\n    return x == null ? null : x.evaluate(processValue);\n  }\n  evaluate(processValue) {\n    return this.consumer.call(this, this.evaluateParam(this.left, processValue), this.evaluateParam(this.right, processValue), this.requireStrictCompare);\n  }\n  toString(func = undefined) {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return \"(\" + OperandMaker.safeToString(this.left, func) + \" \" + OperandMaker.operatorToString(this.operatorName) + \" \" + OperandMaker.safeToString(this.right, func) + \")\";\n  }\n  setVariables(variables) {\n    if (this.left != null) this.left.setVariables(variables);\n    if (this.right != null) this.right.setVariables(variables);\n  }\n  hasFunction() {\n    return !!this.left && this.left.hasFunction() || !!this.right && this.right.hasFunction();\n  }\n  addChildrenToList(list) {\n    if (!!this.left) this.left.addOperandsToList(list);\n    if (!!this.right) this.right.addOperandsToList(list);\n  }\n  hasAsyncFunction() {\n    return !!this.left && this.left.hasAsyncFunction() || !!this.right && this.right.hasAsyncFunction();\n  }\n  addToAsyncList(list) {\n    if (!!this.left) this.left.addToAsyncList(list);\n    if (!!this.right) this.right.addToAsyncList(list);\n  }\n}\nclass UnaryOperand extends Operand {\n  constructor(expressionValue, operatorName) {\n    super();\n    this.expressionValue = expressionValue;\n    this.operatorName = operatorName;\n    this.consumer = OperandMaker.unaryFunctions[operatorName];\n    if (this.consumer == null) {\n      OperandMaker.throwInvalidOperatorError(operatorName);\n    }\n  }\n  get operator() {\n    return this.operatorName;\n  }\n  get expression() {\n    return this.expressionValue;\n  }\n  getType() {\n    return \"unary\";\n  }\n  toString(func = undefined) {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    const opName = OperandMaker.operatorToString(this.operator);\n    const exp = this.expression.toString(func);\n    return this.isRigtOperator ? exp + \" \" + opName : opName + \" \" + exp;\n  }\n  get isRigtOperator() {\n    const st = this.operatorName.toLowerCase();\n    return st === \"notempty\" || st === \"empty\";\n  }\n  isContentEqual(op) {\n    const uOp = op;\n    return uOp.operator == this.operator && this.areOperatorsEquals(this.expression, uOp.expression);\n  }\n  hasFunction() {\n    return this.expression.hasFunction();\n  }\n  addChildrenToList(list) {\n    this.expression.addOperandsToList(list);\n  }\n  hasAsyncFunction() {\n    return this.expression.hasAsyncFunction();\n  }\n  addToAsyncList(list) {\n    this.expression.addToAsyncList(list);\n  }\n  evaluate(processValue) {\n    let value = this.expression.evaluate(processValue);\n    return this.consumer.call(this, value);\n  }\n  setVariables(variables) {\n    this.expression.setVariables(variables);\n  }\n}\nclass ArrayOperand extends Operand {\n  constructor(values) {\n    super();\n    this.values = values;\n  }\n  getType() {\n    return \"array\";\n  }\n  toString(func = undefined) {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return \"[\" + this.values.map(function (el) {\n      return el.toString(func);\n    }).join(\", \") + \"]\";\n  }\n  evaluate(processValue) {\n    return this.values.map(function (el) {\n      return el.evaluate(processValue);\n    });\n  }\n  setVariables(variables) {\n    this.values.forEach(el => {\n      el.setVariables(variables);\n    });\n  }\n  hasFunction() {\n    return this.values.some(operand => operand.hasFunction());\n  }\n  addChildrenToList(list) {\n    this.values.forEach(el => {\n      el.addOperandsToList(list);\n    });\n  }\n  hasAsyncFunction() {\n    return this.values.some(operand => operand.hasAsyncFunction());\n  }\n  addToAsyncList(list) {\n    this.values.forEach(operand => operand.addToAsyncList(list));\n  }\n  isContentEqual(op) {\n    const aOp = op;\n    if (aOp.values.length !== this.values.length) return false;\n    for (var i = 0; i < this.values.length; i++) {\n      if (!aOp.values[i].isEqual(this.values[i])) return false;\n    }\n    return true;\n  }\n}\nclass Const extends Operand {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n  getType() {\n    return \"const\";\n  }\n  toString(func = undefined) {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return this.value.toString();\n  }\n  get correctValue() {\n    return this.getCorrectValue(this.value);\n  }\n  get requireStrictCompare() {\n    return false;\n  }\n  evaluate() {\n    return this.getCorrectValue(this.value);\n  }\n  setVariables(variables) {}\n  getCorrectValue(value) {\n    if (!value || typeof value != \"string\") return value;\n    if (OperandMaker.isBooleanValue(value)) return value.toLowerCase() === \"true\";\n    if (value.length > 1 && this.isQuote(value[0]) && this.isQuote(value[value.length - 1])) return value.substring(1, value.length - 1);\n    if (Helpers.isNumber(value)) {\n      if (value[0] === \"0\" && value.indexOf(\"0x\") != 0) {\n        const len = value.length;\n        const hasPoint = len > 1 && (value[1] === \".\" || value[1] === \",\");\n        if (!hasPoint && len > 1 || hasPoint && len < 2) return value;\n      }\n      return Helpers.getNumber(value);\n    }\n    return value;\n  }\n  isContentEqual(op) {\n    const cOp = op;\n    return cOp.value == this.value;\n  }\n  isQuote(ch) {\n    return ch == \"'\" || ch == '\"';\n  }\n}\nclass Variable extends Const {\n  static get DisableConversionChar() {\n    return settings.expressionDisableConversionChar;\n  }\n  static set DisableConversionChar(val) {\n    settings.expressionDisableConversionChar = val;\n  }\n  constructor(variableName) {\n    super(variableName);\n    this.variableName = variableName;\n    this.valueInfo = {};\n    this.useValueAsItIs = false;\n    if (!!this.variableName && this.variableName.length > 1 && this.variableName[0] === Variable.DisableConversionChar) {\n      this.variableName = this.variableName.substring(1);\n      this.useValueAsItIs = true;\n    }\n  }\n  get requireStrictCompare() {\n    return this.valueInfo.sctrictCompare === true;\n  }\n  getType() {\n    return \"variable\";\n  }\n  toString(func = undefined) {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    var prefix = this.useValueAsItIs ? Variable.DisableConversionChar : \"\";\n    return \"{\" + prefix + this.variableName + \"}\";\n  }\n  get variable() {\n    return this.variableName;\n  }\n  evaluate(processValue) {\n    this.valueInfo.name = this.variableName;\n    processValue.getValueInfo(this.valueInfo);\n    if (!this.valueInfo.hasValue) return null;\n    let val = this.valueInfo.value;\n    if (this.valueInfo.onProcessValue) {\n      val = this.valueInfo.onProcessValue(val);\n    }\n    return this.getCorrectValue(val);\n  }\n  setVariables(variables) {\n    variables.push(this.variableName);\n  }\n  getCorrectValue(value) {\n    if (this.useValueAsItIs) return value;\n    return super.getCorrectValue(value);\n  }\n  isContentEqual(op) {\n    const vOp = op;\n    return vOp.variable == this.variable;\n  }\n}\nclass FunctionOperand extends Operand {\n  constructor(originalValue, parameters) {\n    super();\n    this.originalValue = originalValue;\n    this.parameters = parameters;\n    if (Array.isArray(parameters) && parameters.length === 0) {\n      this.parameters = new ArrayOperand([]);\n    }\n  }\n  getType() {\n    return \"function\";\n  }\n  evaluate(processValue) {\n    const asyncVal = this.getAsynValue(processValue);\n    if (!!asyncVal) return asyncVal.value;\n    return this.evaluateCore(processValue);\n  }\n  evaluateCore(processValue) {\n    let properties = processValue.properties;\n    if (this.isAsyncFunction) {\n      properties = Helpers.createCopy(processValue.properties);\n      const id = this.id;\n      const asyncValues = processValue.asyncValues;\n      const onComplete = processValue.onCompleteAsyncFunc;\n      const item = this;\n      properties.returnResult = result => {\n        asyncValues[id] = {\n          value: result\n        };\n        onComplete(item);\n      };\n    }\n    return FunctionFactory.Instance.run(this.originalValue, this.parameters.evaluate(processValue), properties, this.parameters.values);\n  }\n  toString(func = undefined) {\n    if (!!func) {\n      var res = func(this);\n      if (!!res) return res;\n    }\n    return this.originalValue + \"(\" + this.parameters.toString(func) + \")\";\n  }\n  setVariables(variables) {\n    this.parameters.setVariables(variables);\n  }\n  isReady(proccessValue) {\n    return !!this.getAsynValue(proccessValue);\n  }\n  addChildrenToList(list) {\n    this.parameters.addOperandsToList(list);\n  }\n  getAsynValue(proccessValue) {\n    return proccessValue.asyncValues[this.id];\n  }\n  hasFunction() {\n    return true;\n  }\n  hasAsyncFunction() {\n    return this.isAsyncFunction() || this.parameters.hasAsyncFunction();\n  }\n  isAsyncFunction() {\n    return FunctionFactory.Instance.isAsyncFunction(this.originalValue);\n  }\n  addToAsyncList(list) {\n    let item = undefined;\n    if (this.isAsyncFunction()) {\n      item = {\n        operand: this\n      };\n    }\n    if (this.parameters.hasAsyncFunction()) {\n      const children = new Array();\n      this.parameters.addToAsyncList(children);\n      children.forEach(child => child.parent = item);\n      if (!item) {\n        item = {};\n      }\n      item.children = children;\n    }\n    if (item) {\n      list.push(item);\n    }\n  }\n  isContentEqual(op) {\n    const fOp = op;\n    return fOp.originalValue == this.originalValue && this.areOperatorsEquals(fOp.parameters, this.parameters);\n  }\n}\nclass OperandMaker {\n  static throwInvalidOperatorError(op) {\n    throw new Error(\"Invalid operator: '\" + op + \"'\");\n  }\n  static safeToString(operand, func) {\n    return operand == null ? \"\" : operand.toString(func);\n  }\n  static toOperandString(value) {\n    if (!!value && !Helpers.isNumber(value) && !OperandMaker.isBooleanValue(value)) value = \"'\" + value + \"'\";\n    return value;\n  }\n  static isBooleanValue(value) {\n    return !!value && (value.toLowerCase() === \"true\" || value.toLowerCase() === \"false\");\n  }\n  static countDecimals(value) {\n    if (Helpers.isNumber(value) && Math.floor(value) !== value) {\n      const strs = value.toString().split(\".\");\n      return strs.length > 1 && strs[1].length || 0;\n    }\n    return 0;\n  }\n  static plusMinus(a, b, res) {\n    const digitsA = OperandMaker.countDecimals(a);\n    const digitsB = OperandMaker.countDecimals(b);\n    if (digitsA > 0 || digitsB > 0) {\n      const digits = Math.max(digitsA, digitsB);\n      res = parseFloat(res.toFixed(digits));\n    }\n    return res;\n  }\n  static isTwoValueEquals(x, y, ignoreOrder = true) {\n    if (x === \"undefined\") x = undefined;\n    if (y === \"undefined\") y = undefined;\n    return Helpers.isTwoValueEquals(x, y, ignoreOrder);\n  }\n  static operatorToString(operatorName) {\n    let opStr = OperandMaker.signs[operatorName];\n    return opStr == null ? operatorName : opStr;\n  }\n  static convertValForDateCompare(val, second) {\n    if (second instanceof Date && typeof val === \"string\") {\n      let res = createDate(\"expression-operand\", val);\n      res.setHours(0, 0, 0);\n      return res;\n    }\n    return val;\n  }\n}\nOperandMaker.unaryFunctions = {\n  empty: function (value) {\n    return Helpers.isValueEmpty(value);\n  },\n  notempty: function (value) {\n    return !OperandMaker.unaryFunctions.empty(value);\n  },\n  negate: function (value) {\n    return !value;\n  }\n};\nOperandMaker.binaryFunctions = {\n  arithmeticOp(operatorName) {\n    const convertForArithmeticOp = (val, second) => {\n      if (!Helpers.isValueEmpty(val)) return val;\n      if (typeof second === \"number\") return 0;\n      if (typeof val === \"string\") return val;\n      if (typeof second === \"string\") return \"\";\n      if (Array.isArray(second)) return [];\n      return 0;\n    };\n    return function (a, b) {\n      a = convertForArithmeticOp(a, b);\n      b = convertForArithmeticOp(b, a);\n      let consumer = OperandMaker.binaryFunctions[operatorName];\n      return consumer == null ? null : consumer.call(this, a, b);\n    };\n  },\n  and: function (a, b) {\n    return a && b;\n  },\n  or: function (a, b) {\n    return a || b;\n  },\n  plus: function (a, b) {\n    return Helpers.sumAnyValues(a, b);\n  },\n  minus: function (a, b) {\n    return Helpers.correctAfterPlusMinis(a, b, a - b);\n  },\n  mul: function (a, b) {\n    return Helpers.correctAfterMultiple(a, b, a * b);\n  },\n  div: function (a, b) {\n    if (!b) return null;\n    return a / b;\n  },\n  mod: function (a, b) {\n    if (!b) return null;\n    return a % b;\n  },\n  power: function (a, b) {\n    return Math.pow(a, b);\n  },\n  greater: function (left, right) {\n    if (left == null || right == null) return false;\n    left = OperandMaker.convertValForDateCompare(left, right);\n    right = OperandMaker.convertValForDateCompare(right, left);\n    return left > right;\n  },\n  less: function (left, right) {\n    if (left == null || right == null) return false;\n    left = OperandMaker.convertValForDateCompare(left, right);\n    right = OperandMaker.convertValForDateCompare(right, left);\n    return left < right;\n  },\n  greaterorequal: function (left, right) {\n    if (OperandMaker.binaryFunctions.equal(left, right)) return true;\n    return OperandMaker.binaryFunctions.greater(left, right);\n  },\n  lessorequal: function (left, right) {\n    if (OperandMaker.binaryFunctions.equal(left, right)) return true;\n    return OperandMaker.binaryFunctions.less(left, right);\n  },\n  equal: function (left, right, strictCompare) {\n    left = OperandMaker.convertValForDateCompare(left, right);\n    right = OperandMaker.convertValForDateCompare(right, left);\n    return OperandMaker.isTwoValueEquals(left, right, strictCompare !== true);\n  },\n  notequal: function (left, right, strictCompare) {\n    return !OperandMaker.binaryFunctions.equal(left, right, strictCompare);\n  },\n  contains: function (left, right) {\n    return OperandMaker.binaryFunctions.containsCore(left, right, true);\n  },\n  notcontains: function (left, right) {\n    if (!left && !Helpers.isValueEmpty(right)) return true;\n    return OperandMaker.binaryFunctions.containsCore(left, right, false);\n  },\n  anyof: function (left, right) {\n    if (Helpers.isValueEmpty(left) && Helpers.isValueEmpty(right)) return true;\n    if (Helpers.isValueEmpty(left) || !Array.isArray(left) && left.length === 0) return false;\n    if (Helpers.isValueEmpty(right)) return true;\n    if (!Array.isArray(left)) return OperandMaker.binaryFunctions.contains(right, left);\n    if (!Array.isArray(right)) return OperandMaker.binaryFunctions.contains(left, right);\n    for (var i = 0; i < right.length; i++) {\n      if (OperandMaker.binaryFunctions.contains(left, right[i])) return true;\n    }\n    return false;\n  },\n  allof: function (left, right) {\n    if (!left && !Helpers.isValueEmpty(right)) return false;\n    if (!Array.isArray(right)) return OperandMaker.binaryFunctions.contains(left, right);\n    for (var i = 0; i < right.length; i++) {\n      if (!OperandMaker.binaryFunctions.contains(left, right[i])) return false;\n    }\n    return true;\n  },\n  containsCore: function (left, right, isContains) {\n    if (!left && left !== 0 && left !== false) return false;\n    if (!left.length) {\n      left = left.toString();\n      if (typeof right === \"string\" || right instanceof String) {\n        left = left.toUpperCase();\n        right = right.toUpperCase();\n      }\n    }\n    if (typeof left === \"string\" || left instanceof String) {\n      if (!right) return false;\n      right = right.toString();\n      var found = left.indexOf(right) > -1;\n      return isContains ? found : !found;\n    }\n    var rightArray = Array.isArray(right) ? right : [right];\n    for (var rIndex = 0; rIndex < rightArray.length; rIndex++) {\n      var i = 0;\n      right = rightArray[rIndex];\n      for (; i < left.length; i++) {\n        if (OperandMaker.isTwoValueEquals(left[i], right)) break;\n      }\n      if (i == left.length) return !isContains;\n    }\n    return isContains;\n  }\n};\nOperandMaker.signs = {\n  less: \"<\",\n  lessorequal: \"<=\",\n  greater: \">\",\n  greaterorequal: \">=\",\n  equal: \"==\",\n  notequal: \"!=\",\n  plus: \"+\",\n  minus: \"-\",\n  mul: \"*\",\n  div: \"/\",\n  and: \"and\",\n  or: \"or\",\n  power: \"^\",\n  mod: \"%\",\n  negate: \"!\"\n};\n\n/* eslint-disable */\nclass SyntaxError extends Error {\n  static buildMessage(expected, found) {\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n    function literalEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, ch => \"\\\\x0\" + hex(ch)).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, ch => \"\\\\x\" + hex(ch));\n    }\n    function classEscape(s) {\n      return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\]/g, \"\\\\]\").replace(/\\^/g, \"\\\\^\").replace(/-/g, \"\\\\-\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, ch => \"\\\\x0\" + hex(ch)).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, ch => \"\\\\x\" + hex(ch));\n    }\n    function describeExpectation(expectation) {\n      switch (expectation.type) {\n        case \"literal\":\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        case \"class\":\n          const escapedParts = expectation.parts.map(part => {\n            return Array.isArray(part) ? classEscape(part[0]) + \"-\" + classEscape(part[1]) : classEscape(part);\n          });\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        case \"any\":\n          return \"any character\";\n        case \"end\":\n          return \"end of input\";\n        case \"other\":\n          return expectation.description;\n      }\n    }\n    function describeExpected(expected1) {\n      const descriptions = expected1.map(describeExpectation);\n      let i;\n      let j;\n      descriptions.sort();\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n        default:\n          return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n      }\n    }\n    function describeFound(found1) {\n      return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n    }\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  }\n  constructor(message, expected, found, location) {\n    super();\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, SyntaxError);\n    }\n  }\n}\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n  const peg$FAILED = {};\n  const peg$startRuleFunctions = {\n    Expression: peg$parseExpression\n  };\n  let peg$startRuleFunction = peg$parseExpression;\n  const peg$c0 = function (head, tail) {\n    return buildBinaryOperand(head, tail, true);\n  };\n  const peg$c1 = \"||\";\n  const peg$c2 = peg$literalExpectation(\"||\", false);\n  const peg$c3 = \"or\";\n  const peg$c4 = peg$literalExpectation(\"or\", true);\n  const peg$c5 = function () {\n    return \"or\";\n  };\n  const peg$c6 = \"&&\";\n  const peg$c7 = peg$literalExpectation(\"&&\", false);\n  const peg$c8 = \"and\";\n  const peg$c9 = peg$literalExpectation(\"and\", true);\n  const peg$c10 = function () {\n    return \"and\";\n  };\n  const peg$c11 = function (head, tail) {\n    return buildBinaryOperand(head, tail);\n  };\n  const peg$c12 = \"<=\";\n  const peg$c13 = peg$literalExpectation(\"<=\", false);\n  const peg$c14 = \"lessorequal\";\n  const peg$c15 = peg$literalExpectation(\"lessorequal\", true);\n  const peg$c16 = function () {\n    return \"lessorequal\";\n  };\n  const peg$c17 = \">=\";\n  const peg$c18 = peg$literalExpectation(\">=\", false);\n  const peg$c19 = \"greaterorequal\";\n  const peg$c20 = peg$literalExpectation(\"greaterorequal\", true);\n  const peg$c21 = function () {\n    return \"greaterorequal\";\n  };\n  const peg$c22 = \"==\";\n  const peg$c23 = peg$literalExpectation(\"==\", false);\n  const peg$c24 = \"equal\";\n  const peg$c25 = peg$literalExpectation(\"equal\", true);\n  const peg$c26 = function () {\n    return \"equal\";\n  };\n  const peg$c27 = \"=\";\n  const peg$c28 = peg$literalExpectation(\"=\", false);\n  const peg$c29 = \"!=\";\n  const peg$c30 = peg$literalExpectation(\"!=\", false);\n  const peg$c31 = \"notequal\";\n  const peg$c32 = peg$literalExpectation(\"notequal\", true);\n  const peg$c33 = function () {\n    return \"notequal\";\n  };\n  const peg$c34 = \"<\";\n  const peg$c35 = peg$literalExpectation(\"<\", false);\n  const peg$c36 = \"less\";\n  const peg$c37 = peg$literalExpectation(\"less\", true);\n  const peg$c38 = function () {\n    return \"less\";\n  };\n  const peg$c39 = \">\";\n  const peg$c40 = peg$literalExpectation(\">\", false);\n  const peg$c41 = \"greater\";\n  const peg$c42 = peg$literalExpectation(\"greater\", true);\n  const peg$c43 = function () {\n    return \"greater\";\n  };\n  const peg$c44 = \"+\";\n  const peg$c45 = peg$literalExpectation(\"+\", false);\n  const peg$c46 = function () {\n    return \"plus\";\n  };\n  const peg$c47 = \"-\";\n  const peg$c48 = peg$literalExpectation(\"-\", false);\n  const peg$c49 = function () {\n    return \"minus\";\n  };\n  const peg$c50 = \"*\";\n  const peg$c51 = peg$literalExpectation(\"*\", false);\n  const peg$c52 = function () {\n    return \"mul\";\n  };\n  const peg$c53 = \"/\";\n  const peg$c54 = peg$literalExpectation(\"/\", false);\n  const peg$c55 = function () {\n    return \"div\";\n  };\n  const peg$c56 = \"%\";\n  const peg$c57 = peg$literalExpectation(\"%\", false);\n  const peg$c58 = function () {\n    return \"mod\";\n  };\n  const peg$c59 = \"^\";\n  const peg$c60 = peg$literalExpectation(\"^\", false);\n  const peg$c61 = \"power\";\n  const peg$c62 = peg$literalExpectation(\"power\", true);\n  const peg$c63 = function () {\n    return \"power\";\n  };\n  const peg$c64 = \"*=\";\n  const peg$c65 = peg$literalExpectation(\"*=\", false);\n  const peg$c66 = \"contains\";\n  const peg$c67 = peg$literalExpectation(\"contains\", true);\n  const peg$c68 = \"contain\";\n  const peg$c69 = peg$literalExpectation(\"contain\", true);\n  const peg$c70 = function () {\n    return \"contains\";\n  };\n  const peg$c71 = \"notcontains\";\n  const peg$c72 = peg$literalExpectation(\"notcontains\", true);\n  const peg$c73 = \"notcontain\";\n  const peg$c74 = peg$literalExpectation(\"notcontain\", true);\n  const peg$c75 = function () {\n    return \"notcontains\";\n  };\n  const peg$c76 = \"anyof\";\n  const peg$c77 = peg$literalExpectation(\"anyof\", true);\n  const peg$c78 = function () {\n    return \"anyof\";\n  };\n  const peg$c79 = \"allof\";\n  const peg$c80 = peg$literalExpectation(\"allof\", true);\n  const peg$c81 = function () {\n    return \"allof\";\n  };\n  const peg$c82 = \"(\";\n  const peg$c83 = peg$literalExpectation(\"(\", false);\n  const peg$c84 = \")\";\n  const peg$c85 = peg$literalExpectation(\")\", false);\n  const peg$c86 = function (expr) {\n    return expr;\n  };\n  const peg$c87 = function (name, params) {\n    return new FunctionOperand(name, params);\n  };\n  const peg$c88 = \"!\";\n  const peg$c89 = peg$literalExpectation(\"!\", false);\n  const peg$c90 = \"negate\";\n  const peg$c91 = peg$literalExpectation(\"negate\", true);\n  const peg$c92 = function (expr) {\n    return new UnaryOperand(expr, \"negate\");\n  };\n  const peg$c93 = function (expr, op) {\n    return new UnaryOperand(expr, op);\n  };\n  const peg$c94 = \"empty\";\n  const peg$c95 = peg$literalExpectation(\"empty\", true);\n  const peg$c96 = function () {\n    return \"empty\";\n  };\n  const peg$c97 = \"notempty\";\n  const peg$c98 = peg$literalExpectation(\"notempty\", true);\n  const peg$c99 = function () {\n    return \"notempty\";\n  };\n  const peg$c100 = \"undefined\";\n  const peg$c101 = peg$literalExpectation(\"undefined\", false);\n  const peg$c102 = \"null\";\n  const peg$c103 = peg$literalExpectation(\"null\", false);\n  const peg$c104 = function () {\n    return null;\n  };\n  const peg$c105 = function (value) {\n    return new Const(value);\n  };\n  const peg$c106 = \"{\";\n  const peg$c107 = peg$literalExpectation(\"{\", false);\n  const peg$c108 = \"}\";\n  const peg$c109 = peg$literalExpectation(\"}\", false);\n  const peg$c110 = function (value) {\n    return new Variable(value);\n  };\n  const peg$c111 = function (value) {\n    return value;\n  };\n  const peg$c112 = \"''\";\n  const peg$c113 = peg$literalExpectation(\"''\", false);\n  const peg$c114 = function () {\n    return \"\";\n  };\n  const peg$c115 = \"\\\"\\\"\";\n  const peg$c116 = peg$literalExpectation(\"\\\"\\\"\", false);\n  const peg$c117 = \"'\";\n  const peg$c118 = peg$literalExpectation(\"'\", false);\n  const peg$c119 = function (value) {\n    return \"'\" + value + \"'\";\n  };\n  const peg$c120 = \"\\\"\";\n  const peg$c121 = peg$literalExpectation(\"\\\"\", false);\n  const peg$c122 = \"[\";\n  const peg$c123 = peg$literalExpectation(\"[\", false);\n  const peg$c124 = \"]\";\n  const peg$c125 = peg$literalExpectation(\"]\", false);\n  const peg$c126 = function (sequence) {\n    return sequence;\n  };\n  const peg$c127 = \",\";\n  const peg$c128 = peg$literalExpectation(\",\", false);\n  const peg$c129 = function (expr, tail) {\n    if (expr == null) return new ArrayOperand([]);\n    var array = [expr];\n    if (Array.isArray(tail)) {\n      var flatten = flattenArray(tail);\n      for (var i = 3; i < flatten.length; i += 4) {\n        array.push(flatten[i]);\n      }\n    }\n    return new ArrayOperand(array);\n  };\n  const peg$c130 = \"true\";\n  const peg$c131 = peg$literalExpectation(\"true\", true);\n  const peg$c132 = function () {\n    return true;\n  };\n  const peg$c133 = \"false\";\n  const peg$c134 = peg$literalExpectation(\"false\", true);\n  const peg$c135 = function () {\n    return false;\n  };\n  const peg$c136 = \"0x\";\n  const peg$c137 = peg$literalExpectation(\"0x\", false);\n  const peg$c138 = function () {\n    return parseInt(text(), 16);\n  };\n  const peg$c139 = /^[\\-]/;\n  const peg$c140 = peg$classExpectation([\"-\"], false, false);\n  const peg$c141 = function (sign, num) {\n    return sign == null ? num : -num;\n  };\n  const peg$c142 = \".\";\n  const peg$c143 = peg$literalExpectation(\".\", false);\n  const peg$c144 = function () {\n    return parseFloat(text());\n  };\n  const peg$c145 = function () {\n    return parseInt(text(), 10);\n  };\n  const peg$c146 = \"0\";\n  const peg$c147 = peg$literalExpectation(\"0\", false);\n  const peg$c148 = function () {\n    return 0;\n  };\n  const peg$c149 = function (chars) {\n    return chars.join(\"\");\n  };\n  const peg$c150 = \"\\\\'\";\n  const peg$c151 = peg$literalExpectation(\"\\\\'\", false);\n  const peg$c152 = function () {\n    return \"'\";\n  };\n  const peg$c153 = \"\\\\\\\"\";\n  const peg$c154 = peg$literalExpectation(\"\\\\\\\"\", false);\n  const peg$c155 = function () {\n    return \"\\\"\";\n  };\n  const peg$c156 = /^[^\"']/;\n  const peg$c157 = peg$classExpectation([\"\\\"\", \"'\"], true, false);\n  const peg$c158 = function () {\n    return text();\n  };\n  const peg$c159 = /^[^{}]/;\n  const peg$c160 = peg$classExpectation([\"{\", \"}\"], true, false);\n  const peg$c161 = /^[0-9]/;\n  const peg$c162 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  const peg$c163 = /^[1-9]/;\n  const peg$c164 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n  const peg$c165 = /^[a-zA-Z_]/;\n  const peg$c166 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"_\"], false, false);\n  const peg$c167 = peg$otherExpectation(\"whitespace\");\n  const peg$c168 = /^[ \\t\\n\\r]/;\n  const peg$c169 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false);\n  let peg$currPos = 0;\n  let peg$savedPos = 0;\n  const peg$posDetailsCache = [{\n    line: 1,\n    column: 1\n  }];\n  let peg$maxFailPos = 0;\n  let peg$maxFailExpected = [];\n  let peg$silentFails = 0;\n  const peg$resultsCache = {};\n  let peg$result;\n  if (options.startRule !== undefined) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n  function peg$literalExpectation(text1, ignoreCase) {\n    return {\n      type: \"literal\",\n      text: text1,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: \"class\",\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase\n    };\n  }\n  function peg$endExpectation() {\n    return {\n      type: \"end\"\n    };\n  }\n  function peg$otherExpectation(description) {\n    return {\n      type: \"other\",\n      description: description\n    };\n  }\n  function peg$computePosDetails(pos) {\n    let details = peg$posDetailsCache[pos];\n    let p;\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n        p++;\n      }\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n  function peg$computeLocation(startPos, endPos) {\n    const startPosDetails = peg$computePosDetails(startPos);\n    const endPosDetails = peg$computePosDetails(endPos);\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n  function peg$fail(expected1) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n    peg$maxFailExpected.push(expected1);\n  }\n  function peg$buildStructuredError(expected1, found, location1) {\n    return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n  }\n  function peg$parseExpression() {\n    let s0, s1, s2, s3, s4, s5, s6, s7, s8;\n    const key = peg$currPos * 34 + 0;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseLogicOr();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$currPos;\n        s5 = peg$parse_();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseOrSign();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parse_();\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parseLogicOr();\n              if (s8 !== peg$FAILED) {\n                s5 = [s5, s6, s7, s8];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$currPos;\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseOrSign();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parse_();\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseLogicOr();\n                if (s8 !== peg$FAILED) {\n                  s5 = [s5, s6, s7, s8];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseOrSign() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 1;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c1) {\n      s1 = peg$c1;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c2);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2).toLowerCase() === peg$c3) {\n        s1 = input.substr(peg$currPos, 2);\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c4);\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c5();\n    }\n    s0 = s1;\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseLogicOr() {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n    const key = peg$currPos * 34 + 2;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseLogicAnd();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseAndSign();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseLogicAnd();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseAndSign();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseLogicAnd();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseAndSign() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 3;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c6) {\n      s1 = peg$c6;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c7);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c8) {\n        s1 = input.substr(peg$currPos, 3);\n        peg$currPos += 3;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c9);\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c10();\n    }\n    s0 = s1;\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseLogicAnd() {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n    const key = peg$currPos * 34 + 4;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseCompOps();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseComparableOperators();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseCompOps();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseComparableOperators();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseCompOps();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseComparableOperators() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 5;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c13);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 11).toLowerCase() === peg$c14) {\n        s1 = input.substr(peg$currPos, 11);\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c15);\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c16();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c17) {\n        s1 = peg$c17;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c18);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 14).toLowerCase() === peg$c19) {\n          s1 = input.substr(peg$currPos, 14);\n          peg$currPos += 14;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c20);\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c21();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c22) {\n          s1 = peg$c22;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c23);\n          }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c24) {\n            s1 = input.substr(peg$currPos, 5);\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c25);\n            }\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c26();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s1 = peg$c27;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c28);\n            }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c24) {\n              s1 = input.substr(peg$currPos, 5);\n              peg$currPos += 5;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c25);\n              }\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c26();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c29) {\n              s1 = peg$c29;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n              }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8).toLowerCase() === peg$c31) {\n                s1 = input.substr(peg$currPos, 8);\n                peg$currPos += 8;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c32);\n                }\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c33();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 60) {\n                s1 = peg$c34;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c35);\n                }\n              }\n              if (s1 === peg$FAILED) {\n                if (input.substr(peg$currPos, 4).toLowerCase() === peg$c36) {\n                  s1 = input.substr(peg$currPos, 4);\n                  peg$currPos += 4;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c37);\n                  }\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c38();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 62) {\n                  s1 = peg$c39;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c40);\n                  }\n                }\n                if (s1 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 7).toLowerCase() === peg$c41) {\n                    s1 = input.substr(peg$currPos, 7);\n                    peg$currPos += 7;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c42);\n                    }\n                  }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c43();\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseCompOps() {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n    const key = peg$currPos * 34 + 6;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parsePlusMinusOps();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsePlusMinusSigns();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsePlusMinusOps();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsePlusMinusSigns();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsePlusMinusOps();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parsePlusMinusSigns() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 7;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s1 = peg$c44;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c45);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c46();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c48);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c49();\n      }\n      s0 = s1;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parsePlusMinusOps() {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n    const key = peg$currPos * 34 + 8;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseMulDivOps();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseMulDivSigns();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseMulDivOps();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseMulDivSigns();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseMulDivOps();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseMulDivSigns() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 9;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s1 = peg$c50;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c51);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c52();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c53;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c54);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c55();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s1 = peg$c56;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c57);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c58();\n        }\n        s0 = s1;\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseMulDivOps() {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n    const key = peg$currPos * 34 + 10;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseBinaryFuncOp();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsePowerSigns();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseBinaryFuncOp();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsePowerSigns();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseBinaryFuncOp();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parsePowerSigns() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 11;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 94) {\n      s1 = peg$c59;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c60);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c61) {\n        s1 = input.substr(peg$currPos, 5);\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c62);\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c63();\n    }\n    s0 = s1;\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseBinaryFuncOp() {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n    const key = peg$currPos * 34 + 12;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseFactor();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseBinFunctions();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseFactor();\n            if (s7 === peg$FAILED) {\n              s7 = null;\n            }\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseBinFunctions();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseFactor();\n              if (s7 === peg$FAILED) {\n                s7 = null;\n              }\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseBinFunctions() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 13;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c64) {\n      s1 = peg$c64;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c65);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c66) {\n        s1 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c67);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7).toLowerCase() === peg$c68) {\n          s1 = input.substr(peg$currPos, 7);\n          peg$currPos += 7;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c69);\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c70();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11).toLowerCase() === peg$c71) {\n        s1 = input.substr(peg$currPos, 11);\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c72);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 10).toLowerCase() === peg$c73) {\n          s1 = input.substr(peg$currPos, 10);\n          peg$currPos += 10;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c74);\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c75();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c76) {\n          s1 = input.substr(peg$currPos, 5);\n          peg$currPos += 5;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c77);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c78();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c79) {\n            s1 = input.substr(peg$currPos, 5);\n            peg$currPos += 5;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c80);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c81();\n          }\n          s0 = s1;\n        }\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseFactor() {\n    let s0, s1, s2, s3, s4, s5;\n    const key = peg$currPos * 34 + 14;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c82;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c83);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s5 = peg$c84;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n              }\n            }\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c86(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFunctionOp();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseUnaryFunctionOp();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseAtom();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseArrayOp();\n          }\n        }\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseFunctionOp() {\n    let s0, s1, s2, s3, s4;\n    const key = peg$currPos * 34 + 15;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseLettersAndDigits();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c82;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c83);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseSequence();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s4 = peg$c84;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c85);\n            }\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c87(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseUnaryFunctionOp() {\n    let s0, s1, s2, s3;\n    const key = peg$currPos * 34 + 16;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s1 = peg$c88;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c89);\n      }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c90) {\n        s1 = input.substr(peg$currPos, 6);\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c91);\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseExpression();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c92(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseAtom();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseUnFunctions();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseUnFunctions() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 17;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c94) {\n      s1 = input.substr(peg$currPos, 5);\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c95);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c96();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c97) {\n        s1 = input.substr(peg$currPos, 8);\n        peg$currPos += 8;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c98);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c99();\n      }\n      s0 = s1;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseAtom() {\n    let s0, s1, s2, s3, s4;\n    const key = peg$currPos * 34 + 18;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 9) === peg$c100) {\n        s2 = peg$c100;\n        peg$currPos += 9;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c101);\n        }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c102) {\n          s2 = peg$c102;\n          peg$currPos += 4;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c103);\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c104();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseConstValue();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c105(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 123) {\n            s2 = peg$c106;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c107);\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseValueInput();\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s4 = peg$c108;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c109);\n                }\n              }\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c110(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseConstValue() {\n    let s0, s1, s2, s3;\n    const key = peg$currPos * 34 + 19;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseLogicValue();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c111(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseArithmeticValue();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c111(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseLettersAndDigits();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c111(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c112) {\n            s1 = peg$c112;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c113);\n            }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c114();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c115) {\n              s1 = peg$c115;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) {\n                peg$fail(peg$c116);\n              }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c114();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 39) {\n                s1 = peg$c117;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$c118);\n                }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseAnyInput();\n                if (s2 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c117;\n                    peg$currPos++;\n                  } else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                      peg$fail(peg$c118);\n                    }\n                  }\n                  if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c119(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.charCodeAt(peg$currPos) === 34) {\n                  s1 = peg$c120;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) {\n                    peg$fail(peg$c121);\n                  }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseAnyInput();\n                  if (s2 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 34) {\n                      s3 = peg$c120;\n                      peg$currPos++;\n                    } else {\n                      s3 = peg$FAILED;\n                      if (peg$silentFails === 0) {\n                        peg$fail(peg$c121);\n                      }\n                    }\n                    if (s3 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c119(s2);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseArrayOp() {\n    let s0, s1, s2, s3;\n    const key = peg$currPos * 34 + 20;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c122;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c123);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSequence();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s3 = peg$c124;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c125);\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c126(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseSequence() {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n    const key = peg$currPos * 34 + 21;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseExpression();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parse_();\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c127;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c128);\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseExpression();\n            if (s7 !== peg$FAILED) {\n              s4 = [s4, s5, s6, s7];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c127;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) {\n              peg$fail(peg$c128);\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseExpression();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c129(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseLogicValue() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 22;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4).toLowerCase() === peg$c130) {\n      s1 = input.substr(peg$currPos, 4);\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c131);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c132();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c133) {\n        s1 = input.substr(peg$currPos, 5);\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c134);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c135();\n      }\n      s0 = s1;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseArithmeticValue() {\n    let s0, s1, s2;\n    const key = peg$currPos * 34 + 23;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c136) {\n      s1 = peg$c136;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c137);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseDigits();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c138();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (peg$c139.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c140);\n        }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseNumber();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c141(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseNumber() {\n    let s0, s1, s2, s3;\n    const key = peg$currPos * 34 + 24;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseDigits();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s2 = peg$c142;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c143);\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseDigits();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c144();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseNonZeroDigits();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseDigits();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c145();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n          s1 = peg$c146;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c147);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c148();\n        }\n        s0 = s1;\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseValueInput() {\n    let s0, s1, s2;\n    const key = peg$currPos * 34 + 25;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseValueCharacters();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseValueCharacters();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c149(s1);\n    }\n    s0 = s1;\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseAnyInput() {\n    let s0, s1, s2;\n    const key = peg$currPos * 34 + 26;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseAnyCharacters();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseAnyCharacters();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c149(s1);\n    }\n    s0 = s1;\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseAnyCharacters() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 27;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c150) {\n      s1 = peg$c150;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c151);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c152();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c153) {\n        s1 = peg$c153;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c154);\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c155();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (peg$c156.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c157);\n          }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c158();\n        }\n        s0 = s1;\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseValueCharacters() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 28;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    if (peg$c159.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c160);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c158();\n    }\n    s0 = s1;\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseLettersAndDigits() {\n    let s0, s1, s2, s3, s4, s5, s6;\n    const key = peg$currPos * 34 + 29;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = peg$currPos;\n    s1 = peg$parseLetters();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseDigits();\n      if (s4 !== peg$FAILED) {\n        s5 = [];\n        s6 = peg$parseLetters();\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          s6 = peg$parseLetters();\n        }\n        if (s5 !== peg$FAILED) {\n          s4 = [s4, s5];\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseDigits();\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          s6 = peg$parseLetters();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parseLetters();\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c158();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseDigits() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 30;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = [];\n    if (peg$c161.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c162);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c161.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c162);\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseNonZeroDigits() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 31;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = [];\n    if (peg$c163.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c164);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c163.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c164);\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parseLetters() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 32;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    s0 = [];\n    if (peg$c165.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c166);\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c165.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) {\n            peg$fail(peg$c166);\n          }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function peg$parse_() {\n    let s0, s1;\n    const key = peg$currPos * 34 + 33;\n    const cached = peg$resultsCache[key];\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n    peg$silentFails++;\n    s0 = [];\n    if (peg$c168.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c169);\n      }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$c168.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) {\n          peg$fail(peg$c169);\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) {\n        peg$fail(peg$c167);\n      }\n    }\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n  function buildBinaryOperand(head, tail, isArithmeticOp = false) {\n    return tail.reduce(function (result, elements) {\n      return new BinaryOperand(elements[1], result, elements[3], isArithmeticOp);\n    }, head);\n  }\n  function flattenArray(array) {\n    return [].concat.apply([], array);\n  }\n  peg$result = peg$startRuleFunction();\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n  }\n}\nconst parse = peg$parse;\nclass ConditionsParserError {\n  constructor(at, code) {\n    this.at = at;\n    this.code = code;\n  }\n}\nclass ConditionsParser {\n  patchExpression(text) {\n    return text.replace(/=>/g, \">=\").replace(/=</g, \"<=\").replace(/<>/g, \"!=\").replace(/equals/g, \"equal \").replace(/notequals/g, \"notequal \");\n  }\n  createCondition(text) {\n    return this.parseExpression(text);\n  }\n  parseExpression(text) {\n    try {\n      return parse(this.patchExpression(text));\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        this.conditionError = new ConditionsParserError(e.location.start.offset, e.message);\n      }\n    }\n  }\n  get error() {\n    return this.conditionError;\n  }\n}\nclass ExpressionExecutorRunner {\n  constructor(operand, id, onComplete, values, properties) {\n    this.operand = operand;\n    this.id = id;\n    this.onComplete = onComplete;\n    this.processValue = new ProcessValue();\n    this.processValue.values = values;\n    this.processValue.properties = properties;\n  }\n  run(isAsync) {\n    if (!isAsync) return this.runValues();\n    this.processValue.values = Helpers.createCopy(this.processValue.values);\n    this.processValue.onCompleteAsyncFunc = op => {\n      const item = this.getAsyncItemByOperand(op, this.asyncFuncList);\n      if (item) {\n        this.doAsyncFunctionReady(item);\n      }\n    };\n    this.asyncFuncList = new Array();\n    this.operand.addToAsyncList(this.asyncFuncList);\n    for (var i = 0; i < this.asyncFuncList.length; i++) {\n      this.runAsyncItem(this.asyncFuncList[i]);\n    }\n    return false;\n  }\n  getAsyncItemByOperand(op, list) {\n    if (!Array.isArray(list)) return null;\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].operand === op) return list[i];\n      const res = this.getAsyncItemByOperand(op, list[i].children);\n      if (!!res) return res;\n    }\n    return null;\n  }\n  runAsyncItem(item) {\n    if (item.children) {\n      item.children.forEach(child => this.runAsyncItem(child));\n    } else {\n      this.runAsyncItemCore(item);\n    }\n  }\n  runAsyncItemCore(item) {\n    if (item.operand) {\n      item.operand.evaluate(this.processValue);\n    } else {\n      this.doAsyncFunctionReady(item);\n    }\n  }\n  doAsyncFunctionReady(item) {\n    if (item.parent && this.isAsyncChildrenReady(item)) {\n      this.runAsyncItemCore(item.parent);\n      return;\n    }\n    for (var i = 0; i < this.asyncFuncList.length; i++) {\n      if (!this.isAsyncFuncReady(this.asyncFuncList[i])) return;\n    }\n    this.runValues();\n  }\n  isAsyncFuncReady(item) {\n    if (item.operand && !item.operand.isReady(this.processValue)) return false;\n    return this.isAsyncChildrenReady(item);\n  }\n  isAsyncChildrenReady(item) {\n    if (item.children) {\n      for (let i = 0; i < item.children.length; i++) {\n        if (!this.isAsyncFuncReady(item.children[i])) return false;\n      }\n    }\n    return true;\n  }\n  runValues() {\n    var res = this.operand.evaluate(this.processValue);\n    if (!!this.onComplete) {\n      this.onComplete(res, this.id);\n    }\n    return res;\n  }\n}\nclass ExpressionExecutor {\n  static getQuestionErrorText(properties) {\n    if (!!properties) {\n      const question = properties[\"question\"];\n      if (!!question && !!question.name) {\n        return \" It is used in the question: '\" + question.name + \"'.\";\n      }\n    }\n    return \"\";\n  }\n  constructor(expression) {\n    this.parser = new ConditionsParser();\n    this.isAsyncValue = false;\n    this.hasFunctionValue = false;\n    this.setExpression(expression);\n  }\n  get expression() {\n    return this.expressionValue;\n  }\n  setExpression(value) {\n    if (this.expression === value) return;\n    this.expressionValue = value;\n    this.operand = this.parser.parseExpression(value);\n    this.hasFunctionValue = this.canRun() ? this.operand.hasFunction() : false;\n    this.isAsyncValue = this.hasFunction() ? this.operand.hasAsyncFunction() : false;\n  }\n  getVariables() {\n    if (!this.operand) return [];\n    var variables = [];\n    this.operand.setVariables(variables);\n    return variables;\n  }\n  hasFunction() {\n    return this.hasFunctionValue;\n  }\n  get isAsync() {\n    return this.isAsyncValue;\n  }\n  canRun() {\n    return !!this.operand;\n  }\n  run(values, properties = null, id) {\n    if (!this.operand) {\n      if (!!this.expression) {\n        ConsoleWarnings.warn(\"Invalid expression: '\" + this.expression + \"'.\" + ExpressionExecutor.getQuestionErrorText(properties));\n      }\n      return null;\n    }\n    const runner = new ExpressionExecutorRunner(this.operand, id, this.onComplete, values, properties);\n    return runner.run(this.isAsync);\n  }\n}\nExpressionExecutor.createExpressionExecutor = expression => {\n  return new ExpressionExecutor(expression);\n};\nclass ExpressionRunnerBase {\n  constructor(expression) {\n    this.expression = expression;\n  }\n  get expression() {\n    return !!this.expressionExecutor ? this.expressionExecutor.expression : \"\";\n  }\n  set expression(value) {\n    if (!!this.expressionExecutor && value === this.expression) return;\n    this.expressionExecutor = ExpressionExecutor.createExpressionExecutor(value);\n    this.expressionExecutor.onComplete = (res, id) => {\n      this.doOnComplete(res, id);\n    };\n    this.variables = undefined;\n    this.containsFunc = undefined;\n  }\n  getVariables() {\n    if (this.variables === undefined) {\n      this.variables = this.expressionExecutor.getVariables();\n    }\n    return this.variables;\n  }\n  hasFunction() {\n    if (this.containsFunc === undefined) {\n      this.containsFunc = this.expressionExecutor.hasFunction();\n    }\n    return this.containsFunc;\n  }\n  get isAsync() {\n    return this.expressionExecutor.isAsync;\n  }\n  canRun() {\n    return this.expressionExecutor.canRun();\n  }\n  runCore(values, properties = null) {\n    const id = ExpressionRunnerBase.IdRunnerCounter++;\n    if (this.onBeforeAsyncRun && this.isAsync) {\n      this.onBeforeAsyncRun(id);\n    }\n    return this.expressionExecutor.run(values, properties, id);\n  }\n  doOnComplete(res, id) {\n    if (this.onAfterAsyncRun && this.isAsync) {\n      this.onAfterAsyncRun(id);\n    }\n  }\n}\nExpressionRunnerBase.IdRunnerCounter = 1;\nclass ConditionRunner extends ExpressionRunnerBase {\n  run(values, properties = null) {\n    return this.runCore(values, properties) == true;\n  }\n  doOnComplete(res, id) {\n    if (!!this.onRunComplete) this.onRunComplete(res == true);\n    super.doOnComplete(res, id);\n  }\n}\nclass ExpressionRunner extends ExpressionRunnerBase {\n  run(values, properties = null) {\n    return this.runCore(values, properties);\n  }\n  doOnComplete(res, id) {\n    if (!!this.onRunComplete) this.onRunComplete(res);\n    super.doOnComplete(res, id);\n  }\n}\nclass Bindings {\n  constructor(obj) {\n    this.obj = obj;\n    this.properties = null;\n    this.values = null;\n  }\n  getType() {\n    return \"bindings\";\n  }\n  get isSurveyObj() {\n    return true;\n  }\n  getNames() {\n    var res = [];\n    this.fillProperties();\n    for (var i = 0; i < this.properties.length; i++) {\n      if (this.properties[i].isVisible(\"\", this.obj)) {\n        res.push(this.properties[i].name);\n      }\n    }\n    return res;\n  }\n  getProperties() {\n    var res = [];\n    this.fillProperties();\n    for (var i = 0; i < this.properties.length; i++) {\n      res.push(this.properties[i]);\n    }\n    return res;\n  }\n  setBinding(propertyName, valueName) {\n    if (!this.values) this.values = {};\n    const oldValue = this.getJson();\n    if (oldValue === valueName) return;\n    if (!!valueName) {\n      this.values[propertyName] = valueName;\n    } else {\n      delete this.values[propertyName];\n      if (Object.keys(this.values).length == 0) {\n        this.values = null;\n      }\n    }\n    this.onChangedJSON(oldValue);\n  }\n  clearBinding(propertyName) {\n    this.setBinding(propertyName, \"\");\n  }\n  isEmpty() {\n    if (!this.values) return true;\n    for (var key in this.values) return false;\n    return true;\n  }\n  getValueNameByPropertyName(propertyName) {\n    if (!this.values) return undefined;\n    return this.values[propertyName];\n  }\n  getPropertiesByValueName(valueName) {\n    if (!this.values) return [];\n    var res = [];\n    for (var key in this.values) {\n      if (this.values[key] == valueName) {\n        res.push(key);\n      }\n    }\n    return res;\n  }\n  getJson() {\n    if (this.isEmpty()) return undefined;\n    const res = {};\n    this.getNames().forEach(key => {\n      if (this.values[key] !== undefined) {\n        res[key] = this.values[key];\n      }\n    });\n    return res;\n  }\n  setJson(value, isLoading) {\n    const oldValue = this.getJson();\n    this.values = null;\n    if (!!value) {\n      this.getNames().forEach(key => {\n        if (value[key] !== undefined) {\n          if (!this.values) this.values = {};\n          this.values[key] = value[key];\n        }\n      });\n    }\n    if (!isLoading && !Helpers.isTwoValueEquals(oldValue, this.values)) {\n      this.onChangedJSON(oldValue);\n    }\n  }\n  fillProperties() {\n    if (this.properties !== null) return;\n    this.properties = [];\n    var objProperties = Serializer.getPropertiesByObj(this.obj);\n    for (var i = 0; i < objProperties.length; i++) {\n      if (objProperties[i].isBindable) {\n        this.properties.push(objProperties[i]);\n      }\n    }\n  }\n  onChangedJSON(oldValue) {\n    if (this.obj) {\n      this.obj.onBindingChanged(oldValue, this.getJson());\n    }\n  }\n}\nclass Dependencies {\n  constructor(currentDependency, target, property) {\n    this.currentDependency = currentDependency;\n    this.target = target;\n    this.property = property;\n    this.dependencies = [];\n    this.id = \"\" + ++Dependencies.DependenciesCount;\n  }\n  addDependency(target, property) {\n    if (this.target === target && this.property === property) return;\n    if (this.dependencies.some(dependency => dependency.obj === target && dependency.prop === property)) return;\n    this.dependencies.push({\n      obj: target,\n      prop: property,\n      id: this.id\n    });\n    target.registerPropertyChangedHandlers([property], this.currentDependency, this.id);\n  }\n  dispose() {\n    this.dependencies.forEach(dependency => {\n      dependency.obj.unregisterPropertyChangedHandlers([dependency.prop], dependency.id);\n    });\n    // this.currentDependency = undefined;\n  }\n}\nDependencies.DependenciesCount = 0;\nclass ComputedUpdater {\n  constructor(_updater) {\n    this._updater = _updater;\n    this.dependencies = undefined;\n    this.type = ComputedUpdater.ComputedUpdaterType;\n  }\n  get updater() {\n    return this._updater;\n  }\n  setDependencies(dependencies) {\n    this.clearDependencies();\n    this.dependencies = dependencies;\n  }\n  getDependencies() {\n    return this.dependencies;\n  }\n  clearDependencies() {\n    if (this.dependencies) {\n      this.dependencies.dispose();\n      this.dependencies = undefined;\n    }\n  }\n  dispose() {\n    this.clearDependencies();\n    this._updater = undefined;\n  }\n}\nComputedUpdater.ComputedUpdaterType = \"__dependency_computed\";\n/**\n * A base class for all SurveyJS objects.\n */\nclass Base {\n  static finishCollectDependencies() {\n    const deps = Base.currentDependencis;\n    Base.currentDependencis = undefined;\n    return deps;\n  }\n  static startCollectDependencies(updater, target, property) {\n    if (Base.currentDependencis !== undefined) {\n      throw new Error(\"Attempt to collect nested dependencies. Nested dependencies are not supported.\");\n    }\n    Base.currentDependencis = new Dependencies(updater, target, property);\n  }\n  static collectDependency(target, property) {\n    if (Base.currentDependencis === undefined) return;\n    Base.currentDependencis.addDependency(target, property);\n  }\n  static get commentSuffix() {\n    return settings.commentSuffix;\n  }\n  static set commentSuffix(val) {\n    settings.commentSuffix = val;\n  }\n  static get commentPrefix() {\n    return Base.commentSuffix;\n  }\n  static set commentPrefix(val) {\n    Base.commentSuffix = val;\n  }\n  /**\n   * Returns `true` if a passed `value` is an empty string, array, or object or if it equals to `undefined` or `null`.\n   *\n   * @param value A value to be checked.\n   * @param trimString *(Optional)* When this parameter is `true`, the method ignores whitespace characters at the beginning and end of a string value. Pass `false` to disable this functionality.\n   */\n  isValueEmpty(value, trimString = true) {\n    if (trimString) {\n      value = this.trimValue(value);\n    }\n    return Helpers.isValueEmpty(value);\n  }\n  equals(obj) {\n    if (!obj) return false;\n    if (this.isDisposed || obj.isDisposed) return false;\n    if (this.getType() != obj.getType()) return false;\n    return this.equalsCore(obj);\n  }\n  equalsCore(obj) {\n    if (this.name !== obj.name) return false;\n    return Helpers.isTwoValueEquals(this.toJSON(), obj.toJSON(), false, true, false);\n  }\n  trimValue(value) {\n    if (!!value && (typeof value === \"string\" || value instanceof String)) return value.trim();\n    return value;\n  }\n  static createPropertiesHash() {\n    return {};\n  }\n  constructor() {\n    this.dependencies = {};\n    this.propertyHash = Base.createPropertiesHash();\n    this.eventList = [];\n    this.isLoadingFromJsonValue = false;\n    this.loadingOwner = null;\n    /**\n     * An event that is raised when a property of this SurveyJS object has changed.\n     *\n     * Parameters:\n     *\n     * - `sender`: `this`\\\n     * A SurveyJS object whose property has changed.\n     * - `options.name`: `string`\\\n     * The name of the changed property.\n     * - `options.newValue`: `any`\\\n     * A new value for the property.\n     * - `options.oldValue`: `any`\\\n     * An old value of the property. If the property is an array, `oldValue` contains the same array as `newValue` does.\n     *\n     * If you need to add and remove property change event handlers dynamically, use the [`registerPropertyChangedHandlers`](#registerPropertyChangedHandlers) and [`unregisterPropertyChangedHandlers`](#unregisterPropertyChangedHandlers) methods instead.\n     */\n    this.onPropertyChanged = this.addEvent();\n    this.onNestedPropertyChanged = this.addEvent();\n    /**\n     * An event that is raised when an [`ItemValue`](https://surveyjs.io/form-library/documentation/itemvalue) property is changed.\n     *\n     * Parameters:\n     *\n     * - `sender`: `this`\\\n     * A SurveyJS object whose property contains an array of `ItemValue` objects.\n     * - `options.obj`: [`ItemValue`](https://surveyjs.io/form-library/documentation/itemvalue)\\\n     * An `ItemValue` object.\n     * - `options.propertyName`: `string`\\\n     * The name of the property to which an array of `ItemValue` objects is assigned (for example, `\"choices\"` or `\"rows\"`).\n     * - `options.name`: `\"text\"` | `\"value\"`\\\n     * The name of the changed property.\n     * - `options.newValue`: `any`\\\n     * A new value for the property.\n     */\n    this.onItemValuePropertyChanged = this.addEvent();\n    this.isCreating = true;\n    this.animationAllowedLock = 0;\n    //remove when knockout obsolete\n    this.supportOnElementRerenderedEvent = true;\n    this.onElementRerenderedEventEnabled = false;\n    this._onElementRerendered = new EventBase();\n    CustomPropertiesCollection.createProperties(this);\n    this.onBaseCreating();\n    this.isCreating = false;\n  }\n  dispose() {\n    for (var i = 0; i < this.eventList.length; i++) {\n      this.eventList[i].clear();\n    }\n    this.onPropertyValueChangedCallback = undefined;\n    this.isDisposedValue = true;\n    Object.keys(this.dependencies).forEach(key => this.dependencies[key].dispose());\n    // this.dependencies = {};\n    Object.keys(this.propertyHash).forEach(key => {\n      const propVal = this.getPropertyValueCore(this.propertyHash, key);\n      if (!!propVal && propVal.type == ComputedUpdater.ComputedUpdaterType) {\n        propVal.dispose();\n      }\n    });\n  }\n  get isDisposed() {\n    return this.isDisposedValue === true;\n  }\n  get isSurveyObj() {\n    return true;\n  }\n  addEvent() {\n    const res = new EventBase();\n    this.eventList.push(res);\n    return res;\n  }\n  onBaseCreating() {}\n  /**\n   * Returns the object type as it is used in the JSON schema.\n   */\n  getType() {\n    return \"base\";\n  }\n  /**\n   * Use this method to find out if the current object is of a given `typeName` or inherited from it.\n   *\n   * @param typeName One of the values listed in the [getType()](https://surveyjs.io/form-library/documentation/question#getType) description.\n   * @returns `true` if the current object is of a given `typeName` or inherited from it.\n   * @see getType\n   */\n  isDescendantOf(typeName) {\n    return Serializer.isDescendantOf(this.getType(), typeName);\n  }\n  getSurvey(isLive = false) {\n    return null;\n  }\n  /**\n   * Returns `true` if the survey is being designed in Survey Creator.\n   */\n  get isDesignMode() {\n    const survey = this.getSurvey();\n    return !!survey && survey.isDesignMode;\n  }\n  /**\n   * Returns `true` if the object is included in a survey.\n   *\n   * This property may return `false`, for example, when you [create a survey model dynamically](https://surveyjs.io/form-library/documentation/design-survey-create-a-simple-survey#create-or-change-a-survey-model-dynamically).\n   */\n  get inSurvey() {\n    return !!this.getSurvey(true);\n  }\n  get bindings() {\n    if (!this.bindingsValue) {\n      this.bindingsValue = new Bindings(this);\n    }\n    return this.bindingsValue;\n  }\n  isBindingEmpty() {\n    return !this.bindingsValue || this.bindingsValue.isEmpty();\n  }\n  checkBindings(valueName, value) {}\n  updateBindings(propertyName, value) {\n    if (!this.bindingsValue) return;\n    var valueName = this.bindings.getValueNameByPropertyName(propertyName);\n    if (!!valueName) {\n      this.updateBindingValue(valueName, value);\n    }\n  }\n  updateBindingValue(valueName, value) {}\n  getTemplate() {\n    return this.getType();\n  }\n  /**\n   * Returns `true` if the object configuration is being loaded from JSON.\n   */\n  get isLoadingFromJson() {\n    return this.isLoadingFromJsonValue || this.getIsLoadingFromJson();\n  }\n  getIsLoadingFromJson() {\n    if (!!this.loadingOwner && this.loadingOwner.isLoadingFromJson) return true;\n    return this.isLoadingFromJsonValue;\n  }\n  startLoadingFromJson(json) {\n    this.isLoadingFromJsonValue = true;\n    this.jsonObj = json;\n  }\n  endLoadingFromJson() {\n    this.isLoadingFromJsonValue = false;\n  }\n  /**\n   * Returns a JSON schema that corresponds to the current survey element.\n   * @param options An object with configuration options.\n   * @param {boolean} options.storeDefaults Pass `true` the JSON schema should include properties with default values.\n   * @returns A JSON schema of the survey element.\n   * @see fromJSON\n   */\n  toJSON(options) {\n    return new JsonObject().toJsonObject(this, options);\n  }\n  /**\n   * Assigns a new JSON schema to the current survey element.\n   *\n   * The JSON schema should contain only serializable properties of this survey element. Event handlers and properties that do not belong to the survey element are ignored.\n   *\n   * @param json A JSON schema that you want to apply to the current survey element.\n   * @param options An object with configuration options.\n   * @param {boolean} options.validatePropertyValues Pass `true` if you want to validate property values. Use the [`jsonErrors`](#jsonErrors) array to access validation errors.\n   * @see toJSON\n   */\n  fromJSON(json, options) {\n    new JsonObject().toObject(json, this, options);\n    this.onSurveyLoad();\n  }\n  onSurveyLoad() {}\n  /**\n   * Creates a new object that has the same type and properties as the current SurveyJS object.\n   */\n  clone() {\n    var clonedObj = Serializer.createClass(this.getType());\n    clonedObj.fromJSON(this.toJSON());\n    return clonedObj;\n  }\n  /**\n   * Returns a `JsonObjectProperty` object with metadata about a serializable property that belongs to the current SurveyJS object.\n   *\n   * If the property is not found, this method returns `null`.\n   * @param propName A property name.\n   */\n  getPropertyByName(propName) {\n    const type = this.getType();\n    if (!this.classMetaData || this.classMetaData.name !== type) {\n      this.classMetaData = Serializer.findClass(type);\n    }\n    return !!this.classMetaData ? this.classMetaData.findProperty(propName) : null;\n  }\n  isPropertyVisible(propName) {\n    const prop = this.getPropertyByName(propName);\n    return !!prop ? prop.isVisible(\"\", this) : false;\n  }\n  static createProgressInfo() {\n    return {\n      questionCount: 0,\n      answeredQuestionCount: 0,\n      requiredQuestionCount: 0,\n      requiredAnsweredQuestionCount: 0\n    };\n  }\n  getProgressInfo() {\n    return Base.createProgressInfo();\n  }\n  localeChanged() {}\n  locStrsChanged() {\n    if (!!this.arraysInfo) {\n      for (let key in this.arraysInfo) {\n        let item = this.arraysInfo[key];\n        if (item && item.isItemValues) {\n          var arr = this.getPropertyValue(key);\n          if (arr && !!Base.itemValueLocStrChanged) Base.itemValueLocStrChanged(arr);\n        }\n      }\n    }\n    if (!!this.localizableStrings) {\n      for (let key in this.localizableStrings) {\n        let item = this.getLocalizableString(key);\n        if (item) item.strChanged();\n      }\n    }\n  }\n  /**\n   * Returns the value of a property with a specified name.\n   *\n   * If the property is not found or does not have a value, this method returns either `undefined`, `defaultValue` specified in the property configuration, or a value passed as the `defaultValue` parameter.\n   *\n   * @param name A property name.\n   * @param defaultValue *(Optional)* A value to return if the property is not found or does not have a value.\n   */\n  getPropertyValue(name, defaultValue, calcFunc) {\n    const res = this.getPropertyValueWithoutDefault(name);\n    if (!!calcFunc && Array.isArray(res) && res.length === 0 && res.isReset === true) {\n      delete res.isReset;\n      this.setArrayPropertyDirectly(name, calcFunc(), false);\n      return res;\n    }\n    if (this.isValueUndefined(res)) {\n      const locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n      if (locStr) return locStr.text;\n      if (!this.isValueUndefined(defaultValue)) return defaultValue;\n      if (!!calcFunc) {\n        const newVal = calcFunc();\n        if (newVal !== undefined) {\n          if (Array.isArray(newVal)) {\n            const array = this.createNewArray(name);\n            array.splice(0, 0, ...newVal);\n            return array;\n          } else {\n            this.setPropertyValueDirectly(name, newVal);\n            return newVal;\n          }\n        }\n      }\n      const propDefaultValue = this.getDefaultPropertyValue(name);\n      if (propDefaultValue !== undefined) return propDefaultValue;\n    }\n    return res;\n  }\n  isValueUndefined(value) {\n    return Helpers.isValueUndefined(value);\n  }\n  getDefaultPropertyValue(name) {\n    const prop = this.getPropertyByName(name);\n    if (!prop || prop.isCustom && this.isCreating) return undefined;\n    if (!!prop.defaultValueFunc) return prop.defaultValueFunc(this);\n    const dValue = prop.getDefaultValue(this);\n    if (!this.isValueUndefined(dValue) && !Array.isArray(dValue)) return dValue;\n    const locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n    if (locStr && locStr.localizationName) return this.getLocalizationString(locStr.localizationName);\n    if (prop.type == \"boolean\" || prop.type == \"switch\") return false;\n    if (prop.isCustom && !!prop.onGetValue) return prop.onGetValue(this);\n    return undefined;\n  }\n  hasDefaultPropertyValue(name) {\n    return this.getDefaultPropertyValue(name) !== undefined;\n  }\n  resetPropertyValue(name) {\n    const locStr = this.localizableStrings ? this.localizableStrings[name] : undefined;\n    if (locStr) {\n      this.setLocalizableStringText(name, undefined);\n      locStr.clear();\n    } else {\n      this.setPropertyValue(name, undefined);\n    }\n  }\n  getPropertyValueWithoutDefault(name) {\n    return this.getPropertyValueCore(this.propertyHash, name);\n  }\n  getPropertyValueCore(propertiesHash, name) {\n    if (!this.isLoadingFromJson) {\n      Base.collectDependency(this, name);\n    }\n    if (this.getPropertyValueCoreHandler) return this.getPropertyValueCoreHandler(propertiesHash, name);else return propertiesHash[name];\n  }\n  geValueFromHash() {\n    return this.propertyHash[\"value\"];\n  }\n  setPropertyValueCore(propertiesHash, name, val) {\n    if (this.setPropertyValueCoreHandler) {\n      if (!this.isDisposedValue) {\n        this.setPropertyValueCoreHandler(propertiesHash, name, val);\n      } else {\n        ConsoleWarnings.disposedObjectChangedProperty(name, this.getType());\n      }\n    } else propertiesHash[name] = val;\n  }\n  get isEditingSurveyElement() {\n    var survey = this.getSurvey();\n    return !!survey && survey.isEditingSurveyElement;\n  }\n  iteratePropertiesHash(func) {\n    var keys = [];\n    for (var key in this.propertyHash) {\n      if (key === \"value\" && this.isEditingSurveyElement && Array.isArray(this.value)) continue;\n      keys.push(key);\n    }\n    keys.forEach(key => func(this.propertyHash, key));\n  }\n  /**\n   * Assigns a new value to a specified property.\n   * @param name A property name.\n   * @param val A new value for the property.\n   */\n  setPropertyValue(name, val) {\n    if (this.isDisposedValue) return;\n    if (!this.isLoadingFromJson) {\n      const prop = this.getPropertyByName(name);\n      if (!!prop) {\n        val = prop.settingValue(this, val);\n      }\n    }\n    var oldValue = this.getPropertyValue(name);\n    if (oldValue && Array.isArray(oldValue) && !!this.arraysInfo && (!val || Array.isArray(val))) {\n      if (!this.isTwoValueEquals(oldValue, val)) {\n        this.setArrayPropertyDirectly(name, val);\n      }\n    } else {\n      if (val !== oldValue) {\n        this.setPropertyValueDirectly(name, val);\n        if (!this.isTwoValueEquals(oldValue, val)) {\n          this.propertyValueChanged(name, oldValue, val);\n        }\n      }\n    }\n  }\n  setArrayPropertyDirectly(name, val, sendNotification = true) {\n    var arrayInfo = this.arraysInfo[name];\n    this.setArray(name, this.getPropertyValue(name), val, arrayInfo ? arrayInfo.isItemValues : false, arrayInfo ? sendNotification && arrayInfo.onPush : null);\n  }\n  setPropertyValueDirectly(name, val) {\n    this.setPropertyValueCore(this.propertyHash, name, val);\n  }\n  clearPropertyValue(name) {\n    this.setPropertyValueCore(this.propertyHash, name, null);\n    delete this.propertyHash[name];\n  }\n  onPropertyValueChangedCallback(name, oldValue, newValue, sender, arrayChanges) {}\n  itemValuePropertyChanged(item, name, oldValue, newValue) {\n    this.onItemValuePropertyChanged.fire(this, {\n      obj: item,\n      name: name,\n      oldValue: oldValue,\n      newValue: newValue,\n      propertyName: item.ownerPropertyName\n    });\n  }\n  onPropertyValueChanged(name, oldValue, newValue) {}\n  propertyValueChanged(name, oldValue, newValue, arrayChanges, target) {\n    if (this.isLoadingFromJson) return;\n    this.updateBindings(name, newValue);\n    this.onPropertyValueChanged(name, oldValue, newValue);\n    this.onPropertyChanged.fire(this, {\n      name: name,\n      oldValue: oldValue,\n      newValue: newValue,\n      arrayChanges: arrayChanges,\n      target: target\n    });\n    this.doPropertyValueChangedCallback(name, oldValue, newValue, arrayChanges, this);\n    this.checkConditionPropertyChanged(name);\n    if (!this.onPropChangeFunctions) return;\n    for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n      if (this.onPropChangeFunctions[i].name == name) this.onPropChangeFunctions[i].func(newValue, arrayChanges);\n    }\n  }\n  onBindingChanged(oldValue, newValue) {\n    if (this.isLoadingFromJson) return;\n    this.doPropertyValueChangedCallback(\"bindings\", oldValue, newValue);\n  }\n  get isInternal() {\n    return false;\n  }\n  doPropertyValueChangedCallback(name, oldValue, newValue, arrayChanges, target) {\n    const fireCallback = obj => {\n      if (!!obj && !!obj.onPropertyValueChangedCallback) {\n        obj.onPropertyValueChangedCallback(name, oldValue, newValue, target, arrayChanges);\n      }\n    };\n    if (this.isInternal) {\n      fireCallback(this);\n      return;\n    }\n    if (!target) target = this;\n    var notifier = this.getSurvey();\n    if (!notifier) notifier = this;\n    fireCallback(notifier);\n    if (notifier !== this) {\n      fireCallback(this);\n    }\n  }\n  addExpressionProperty(name, onExecute, canRun) {\n    if (!this.expressionInfo) {\n      this.expressionInfo = {};\n    }\n    this.expressionInfo[name] = {\n      onExecute: onExecute,\n      canRun: canRun\n    };\n  }\n  getDataFilteredValues() {\n    return {};\n  }\n  getDataFilteredProperties() {\n    return {};\n  }\n  runConditionCore(values, properties) {\n    if (!this.expressionInfo) return;\n    for (var key in this.expressionInfo) {\n      this.runConditionItemCore(key, values, properties);\n    }\n  }\n  canRunConditions() {\n    return !this.isDesignMode;\n  }\n  checkConditionPropertyChanged(propName) {\n    if (!this.expressionInfo || !this.expressionInfo[propName]) return;\n    if (!this.canRunConditions()) return;\n    this.runConditionItemCore(propName, this.getDataFilteredValues(), this.getDataFilteredProperties());\n  }\n  runConditionItemCore(propName, values, properties) {\n    const info = this.expressionInfo[propName];\n    const expression = this.getPropertyValue(propName);\n    if (!expression) return;\n    if (!!info.canRun && !info.canRun(this)) return;\n    if (!info.runner) {\n      info.runner = this.createExpressionRunner(expression);\n      info.runner.onRunComplete = res => {\n        info.onExecute(this, res);\n      };\n    }\n    info.runner.expression = expression;\n    info.runner.run(values, properties);\n  }\n  doBeforeAsynRun(id) {\n    if (!this.asynExpressionHash) this.asynExpressionHash = {};\n    const isChanged = !this.isAsyncExpressionRunning;\n    this.asynExpressionHash[id] = true;\n    if (isChanged) {\n      this.onAsyncRunningChanged();\n    }\n  }\n  doAfterAsynRun(id) {\n    if (!!this.asynExpressionHash) {\n      delete this.asynExpressionHash[id];\n      if (!this.isAsyncExpressionRunning) {\n        this.onAsyncRunningChanged();\n      }\n    }\n  }\n  onAsyncRunningChanged() {}\n  get isAsyncExpressionRunning() {\n    return !!this.asynExpressionHash && Object.keys(this.asynExpressionHash).length > 0;\n  }\n  createExpressionRunner(expression) {\n    const res = new ExpressionRunner(expression);\n    res.onBeforeAsyncRun = id => {\n      this.doBeforeAsynRun(id);\n    };\n    res.onAfterAsyncRun = id => {\n      this.doAfterAsynRun(id);\n    };\n    return res;\n  }\n  /**\n   * Registers a single value change handler for one or multiple properties.\n   *\n   * The `registerPropertyChangedHandlers` and [`unregisterPropertyChangedHandlers`](#unregisterPropertyChangedHandlers) methods allow you to manage property change event handlers dynamically. If you only need to attach an event handler without removing it afterwards, you can use the [`onPropertyChanged`](#onPropertyChanged) event instead.\n   * @param propertyNames An array of one or multiple property names.\n   * @param handler A function to call when one of the listed properties change. Accepts a new property value as an argument.\n   * @param key *(Optional)* A key that identifies the current registration. If a function for one of the properties is already registered with the same key, the function will be overwritten. You can also use the key to subsequently unregister handlers.\n   * @see unregisterPropertyChangedHandlers\n   */\n  registerPropertyChangedHandlers(propertyNames, handler, key = null) {\n    for (var i = 0; i < propertyNames.length; i++) {\n      this.registerFunctionOnPropertyValueChanged(propertyNames[i], handler, key);\n    }\n  }\n  /**\n   * Unregisters value change event handlers for the specified properties.\n   * @param propertyNames An array of one or multiple property names.\n   * @param key *(Optional)* A key of the registration that you want to cancel.\n   * @see registerPropertyChangedHandlers\n   */\n  unregisterPropertyChangedHandlers(propertyNames, key = null) {\n    for (var i = 0; i < propertyNames.length; i++) {\n      this.unRegisterFunctionOnPropertyValueChanged(propertyNames[i], key);\n    }\n  }\n  registerFunctionOnPropertyValueChanged(name, func, key = null) {\n    if (!this.onPropChangeFunctions) {\n      this.onPropChangeFunctions = [];\n    }\n    if (key) {\n      for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n        var item = this.onPropChangeFunctions[i];\n        if (item.name == name && item.key == key) {\n          item.func = func;\n          return;\n        }\n      }\n    }\n    this.onPropChangeFunctions.push({\n      name: name,\n      func: func,\n      key: key\n    });\n  }\n  registerFunctionOnPropertiesValueChanged(names, func, key = null) {\n    this.registerPropertyChangedHandlers(names, func, key);\n  }\n  unRegisterFunctionOnPropertyValueChanged(name, key = null) {\n    if (!this.onPropChangeFunctions) return;\n    for (var i = 0; i < this.onPropChangeFunctions.length; i++) {\n      var item = this.onPropChangeFunctions[i];\n      if (item.name == name && item.key == key) {\n        return this.onPropChangeFunctions.splice(i, 1);\n      }\n    }\n  }\n  unRegisterFunctionOnPropertiesValueChanged(names, key = null) {\n    this.unregisterPropertyChangedHandlers(names, key);\n  }\n  createCustomLocalizableObj(name) {\n    const locStr = this.getLocalizableString(name);\n    if (locStr) return locStr;\n    return this.createLocalizableString(name, this, false, true);\n  }\n  getLocale() {\n    const locOwner = this.getSurvey();\n    return !!locOwner ? locOwner.getLocale() : \"\";\n  }\n  getLocalizationString(strName) {\n    return getLocaleString(strName, this.getLocale());\n  }\n  getLocalizationFormatString(strName, ...args) {\n    const str = this.getLocalizationString(strName);\n    if (!str || !str.format) return \"\";\n    return str.format(...args);\n  }\n  createLocalizableString(name, owner, useMarkDown = false, defaultStr = false) {\n    let locName = undefined;\n    if (defaultStr) {\n      locName = defaultStr === true ? name : defaultStr;\n    }\n    const locStr = new LocalizableString(owner, useMarkDown, name, locName);\n    locStr.onStrChanged = (oldValue, newValue) => {\n      this.propertyValueChanged(name, oldValue, newValue);\n    };\n    if (!this.localizableStrings) {\n      this.localizableStrings = {};\n    }\n    this.localizableStrings[name] = locStr;\n    const prop = this.getPropertyByName(name);\n    locStr.disableLocalization = prop && prop.isLocalizable === false;\n    return locStr;\n  }\n  removeLocalizableString(name) {\n    if (this.localizableStrings) {\n      delete this.localizableStrings[name];\n    }\n  }\n  getLocalizableString(name) {\n    return !!this.localizableStrings ? this.localizableStrings[name] : null;\n  }\n  getLocalizableStringText(name, defaultStr = \"\") {\n    Base.collectDependency(this, name);\n    var locStr = this.getLocalizableString(name);\n    if (!locStr) return \"\";\n    var res = locStr.text;\n    return res ? res : defaultStr;\n  }\n  setLocalizableStringText(name, value) {\n    let locStr = this.getLocalizableString(name);\n    if (!locStr) return;\n    let oldValue = locStr.text;\n    if (oldValue != value) {\n      locStr.text = value;\n      // this.propertyValueChanged(name, oldValue, value);\n    }\n  }\n  addUsedLocales(locales) {\n    if (!!this.localizableStrings) {\n      for (let key in this.localizableStrings) {\n        let item = this.getLocalizableString(key);\n        if (item) this.AddLocStringToUsedLocales(item, locales);\n      }\n    }\n    if (!!this.arraysInfo) {\n      for (let key in this.arraysInfo) {\n        const prop = this.getPropertyByName(key);\n        if (!prop || !prop.isPropertySerializable(this)) continue;\n        let items = this.getPropertyValue(key);\n        if (!items || !items.length) continue;\n        for (let i = 0; i < items.length; i++) {\n          let item = items[i];\n          if (item && item.addUsedLocales) {\n            item.addUsedLocales(locales);\n          }\n        }\n      }\n    }\n  }\n  searchText(text, founded) {\n    var strs = [];\n    this.getSearchableLocalizedStrings(strs);\n    for (var i = 0; i < strs.length; i++) {\n      if (strs[i].setFindText(text)) {\n        founded.push({\n          element: this,\n          str: strs[i]\n        });\n      }\n    }\n  }\n  getSearchableLocalizedStrings(arr) {\n    if (!!this.localizableStrings) {\n      let keys = [];\n      this.getSearchableLocKeys(keys);\n      for (var i = 0; i < keys.length; i++) {\n        let item = this.getLocalizableString(keys[i]);\n        if (item) arr.push(item);\n      }\n    }\n    if (!this.arraysInfo) return;\n    let keys = [];\n    this.getSearchableItemValueKeys(keys);\n    for (var i = 0; i < keys.length; i++) {\n      var items = this.getPropertyValue(keys[i]);\n      if (!items) continue;\n      for (var j = 0; j < items.length; j++) {\n        arr.push(items[j].locText);\n      }\n    }\n  }\n  getSearchableLocKeys(keys) {}\n  getSearchableItemValueKeys(keys) {}\n  AddLocStringToUsedLocales(locStr, locales) {\n    var locs = locStr.getLocales();\n    for (var i = 0; i < locs.length; i++) {\n      if (locales.indexOf(locs[i]) < 0) {\n        locales.push(locs[i]);\n      }\n    }\n  }\n  createItemValues(name) {\n    var self = this;\n    var result = this.createNewArray(name, function (item) {\n      item.locOwner = self;\n      item.ownerPropertyName = name;\n      if (typeof item.getSurvey == \"function\") {\n        const survey = item.getSurvey();\n        if (!!survey && typeof survey.makeReactive == \"function\") {\n          survey.makeReactive(item);\n        }\n      }\n    });\n    this.arraysInfo[name].isItemValues = true;\n    return result;\n  }\n  notifyArrayChanged(ar, arrayChanges) {\n    !!ar.onArrayChanged && ar.onArrayChanged(arrayChanges);\n  }\n  createNewArrayCore(name) {\n    var res = null;\n    if (!!this.createArrayCoreHandler) {\n      res = this.createArrayCoreHandler(this.propertyHash, name);\n    }\n    if (!res) {\n      res = new Array();\n      this.setPropertyValueCore(this.propertyHash, name, res);\n    }\n    return res;\n  }\n  ensureArray(name, onPush = null, onRemove = null) {\n    if (this.arraysInfo && this.arraysInfo[name]) {\n      return;\n    }\n    return this.createNewArray(name, onPush, onRemove);\n  }\n  createNewArray(name, onPush = null, onRemove = null) {\n    var newArray = this.createNewArrayCore(name);\n    if (!this.arraysInfo) {\n      this.arraysInfo = {};\n    }\n    this.arraysInfo[name] = {\n      onPush: onPush,\n      isItemValues: false\n    };\n    var self = this;\n    newArray.push = function (value) {\n      var result = Object.getPrototypeOf(newArray).push.call(newArray, value);\n      if (!self.isDisposedValue) {\n        if (onPush) onPush(value, newArray.length - 1);\n        const arrayChanges = new ArrayChanges(newArray.length - 1, 0, [value], []);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.shift = function () {\n      var result = Object.getPrototypeOf(newArray).shift.call(newArray);\n      if (!self.isDisposedValue && result) {\n        if (onRemove) onRemove(result);\n        const arrayChanges = new ArrayChanges(newArray.length - 1, 1, [], []);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.unshift = function (value) {\n      var result = Object.getPrototypeOf(newArray).unshift.call(newArray, value);\n      if (!self.isDisposedValue) {\n        if (onPush) onPush(value, newArray.length - 1);\n        const arrayChanges = new ArrayChanges(0, 0, [value], []);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.pop = function () {\n      var result = Object.getPrototypeOf(newArray).pop.call(newArray);\n      if (!self.isDisposedValue) {\n        if (onRemove) onRemove(result);\n        const arrayChanges = new ArrayChanges(newArray.length - 1, 1, [], []);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    newArray.splice = function (start, deleteCount, ...items) {\n      if (!start) start = 0;\n      if (!deleteCount) deleteCount = 0;\n      var result = Object.getPrototypeOf(newArray).splice.call(newArray, start, deleteCount, ...items);\n      if (!items) items = [];\n      if (!self.isDisposedValue) {\n        if (onRemove && result) {\n          for (var i = 0; i < result.length; i++) {\n            onRemove(result[i]);\n          }\n        }\n        if (onPush) {\n          for (var i = 0; i < items.length; i++) {\n            onPush(items[i], start + i);\n          }\n        }\n        const arrayChanges = new ArrayChanges(start, deleteCount, items, result);\n        self.propertyValueChanged(name, newArray, newArray, arrayChanges);\n        self.notifyArrayChanged(newArray, arrayChanges);\n      }\n      return result;\n    };\n    return newArray;\n  }\n  getItemValueType() {\n    return undefined;\n  }\n  setArray(name, src, dest, isItemValues, onPush) {\n    var deletedItems = [].concat(src);\n    Object.getPrototypeOf(src).splice.call(src, 0, src.length);\n    if (!!dest) {\n      for (var i = 0; i < dest.length; i++) {\n        var item = dest[i];\n        if (isItemValues) {\n          if (!!Base.createItemValue) {\n            item = Base.createItemValue(item, this.getItemValueType());\n          }\n        }\n        Object.getPrototypeOf(src).push.call(src, item);\n        if (onPush) onPush(src[i]);\n      }\n      delete src.isReset;\n    } else {\n      src.isReset = true;\n    }\n    const arrayChanges = new ArrayChanges(0, deletedItems.length, src, deletedItems);\n    this.propertyValueChanged(name, deletedItems, src, arrayChanges);\n    this.notifyArrayChanged(src, arrayChanges);\n  }\n  isTwoValueEquals(x, y, caseInSensitive = false, trimString = false) {\n    return Helpers.checkIfValuesEqual(x, y, {\n      ignoreOrder: false,\n      caseSensitive: !caseInSensitive,\n      trimStrings: trimString,\n      doNotConvertNumbers: true\n    });\n  }\n  static copyObject(dst, src) {\n    for (var key in src) {\n      var source = src[key];\n      if (typeof source === \"object\") {\n        source = {};\n        this.copyObject(source, src[key]);\n      }\n      dst[key] = source;\n    }\n  }\n  copyCssClasses(dest, source) {\n    if (!source) return;\n    if (typeof source === \"string\" || source instanceof String) {\n      dest[\"root\"] = source;\n    } else {\n      Base.copyObject(dest, source);\n    }\n  }\n  getValueInLowCase(val) {\n    if (!!val && typeof val == \"string\") return val.toLowerCase();\n    return val;\n  }\n  getElementsInDesign(includeHidden = false) {\n    return [];\n  }\n  get animationAllowed() {\n    return this.getIsAnimationAllowed();\n  }\n  getIsAnimationAllowed() {\n    return settings.animationEnabled && this.animationAllowedLock >= 0 && !this.isLoadingFromJson && !this.isDisposed && (!!this.onElementRerendered || !this.supportOnElementRerenderedEvent);\n  }\n  blockAnimations() {\n    this.animationAllowedLock--;\n  }\n  releaseAnimations() {\n    this.animationAllowedLock++;\n  }\n  enableOnElementRerenderedEvent() {\n    this.onElementRerenderedEventEnabled = true;\n  }\n  disableOnElementRerenderedEvent() {\n    var _a;\n    (_a = this.onElementRerendered) === null || _a === void 0 ? void 0 : _a.fire(this, {\n      isCancel: true\n    });\n    this.onElementRerenderedEventEnabled = false;\n  }\n  get onElementRerendered() {\n    return this.supportOnElementRerenderedEvent && this.onElementRerenderedEventEnabled ? this._onElementRerendered : undefined;\n  }\n  afterRerender() {\n    var _a;\n    (_a = this.onElementRerendered) === null || _a === void 0 ? void 0 : _a.fire(this, {\n      isCancel: false\n    });\n  }\n}\nBase.currentDependencis = undefined;\nclass ArrayChanges {\n  constructor(index, deleteCount, itemsToAdd, deletedItems) {\n    this.index = index;\n    this.deleteCount = deleteCount;\n    this.itemsToAdd = itemsToAdd;\n    this.deletedItems = deletedItems;\n  }\n}\nclass Event {\n  get isEmpty() {\n    return this.length === 0;\n  }\n  get length() {\n    return !!this.callbacks ? this.callbacks.length : 0;\n  }\n  fireByCreatingOptions(sender, createOptions) {\n    if (!this.callbacks) return;\n    for (var i = 0; i < this.callbacks.length; i++) {\n      this.callbacks[i](sender, createOptions());\n      if (!this.callbacks) return;\n    }\n  }\n  fire(sender, options) {\n    if (!this.callbacks) return;\n    const callbacks = [].concat(this.callbacks);\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i](sender, options);\n      if (!this.callbacks) return;\n    }\n  }\n  clear() {\n    this.callbacks = undefined;\n  }\n  add(func) {\n    if (this.hasFunc(func)) return;\n    if (!this.callbacks) {\n      this.callbacks = new Array();\n    }\n    this.callbacks.push(func);\n    this.fireCallbackChanged();\n  }\n  remove(func) {\n    if (this.hasFunc(func)) {\n      var index = this.callbacks.indexOf(func, 0);\n      this.callbacks.splice(index, 1);\n      this.fireCallbackChanged();\n    }\n  }\n  hasFunc(func) {\n    if (this.callbacks == null) return false;\n    return this.callbacks.indexOf(func, 0) > -1;\n  }\n  fireCallbackChanged() {\n    if (!!this.onCallbacksChanged) {\n      this.onCallbacksChanged();\n    }\n  }\n}\nclass EventBase extends Event {}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nclass ResponsivityManager {\n  constructor(container, model, afterInitializeCallback) {\n    this.container = container;\n    this.model = model;\n    this.afterInitializeCallback = afterInitializeCallback;\n    this.resizeObserver = undefined;\n    this.isInitialized = false;\n    this.isResizeObserverStarted = false;\n    this.getComputedStyle = elt => {\n      return DomDocumentHelper.getComputedStyle(elt);\n    };\n    this.isDisposed = false;\n    if (typeof ResizeObserver !== \"undefined\") {\n      this.resizeObserver = new ResizeObserver(entries => {\n        DomWindowHelper.requestAnimationFrame(() => {\n          this.isResizeObserverStarted = true;\n          this.process();\n        });\n      });\n      this.resizeObserver.observe(this.container.parentElement);\n    }\n  }\n  getDimensions(element) {\n    return {\n      scroll: element.scrollWidth,\n      offset: element.offsetWidth\n    };\n  }\n  getAvailableSpace() {\n    const style = this.getComputedStyle(this.container);\n    let space = this.container.offsetWidth;\n    if (style.boxSizing === \"border-box\") {\n      space -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    return space;\n  }\n  getGap() {\n    const computedStyle = this.getComputedStyle(this.container);\n    if (computedStyle.display == \"flex\") {\n      const gap = parseFloat(computedStyle.rowGap);\n      return !isNaN(gap) ? gap : 0;\n    }\n    return 0;\n  }\n  calcItemSize(item) {\n    return item.offsetWidth || item.getBoundingClientRect().width;\n  }\n  updateItemsDimensions(callback) {\n    if (!this.container) return;\n    const actionsToUpdateDimension = this.isInitialized ? this.model.renderedActions.filter(action => action.needUpdateMaxDimension || action.needUpdateMinDimension) : this.model.renderedActions;\n    let actionsCounter = actionsToUpdateDimension.length;\n    if (actionsCounter == 0) {\n      callback();\n    }\n    const onItemDimensionsUpdated = () => {\n      if (--actionsCounter <= 0) {\n        callback();\n      }\n    };\n    actionsToUpdateDimension.forEach(action => {\n      const needUpdateMaxDimension = !this.isInitialized || action.needUpdateMaxDimension;\n      const needUpdateMinDimension = !this.isInitialized || action.needUpdateMinDimension;\n      const modeToCalculate = needUpdateMinDimension ? needUpdateMaxDimension ? undefined : \"small\" : \"large\";\n      action.updateDimensions(el => this.calcItemSize(el), () => {\n        action.needUpdateMaxDimension = false;\n        action.needUpdateMinDimension = false;\n        onItemDimensionsUpdated();\n      }, modeToCalculate);\n    });\n  }\n  get isContainerVisible() {\n    return !!this.container && isContainerVisible(this.container);\n  }\n  shouldProcessResponsiveness() {\n    return this.isContainerVisible && !this.model.isResponsivenessDisabled && !this.isDisposed;\n  }\n  process() {\n    if (this.shouldProcessResponsiveness()) {\n      this.updateItemsDimensions(() => {\n        if (this.shouldProcessResponsiveness()) {\n          this.model.fit({\n            availableSpace: this.getAvailableSpace(),\n            gap: this.getGap()\n          });\n        }\n        if (!this.isInitialized) {\n          this.isInitialized = true;\n          this.afterInitializeCallback && this.afterInitializeCallback();\n        }\n      });\n    }\n  }\n  update(forceUpdate) {\n    if (!this.isResizeObserverStarted) return;\n    if (!this.model.isResponsivenessDisabled) {\n      if (forceUpdate) {\n        this.isInitialized = false;\n      }\n      this.process();\n    }\n  }\n  dispose() {\n    this.isDisposed = true;\n    if (!!this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    this.isResizeObserverStarted = false;\n    this.resizeObserver = undefined;\n    this.container = undefined;\n  }\n}\nclass VerticalResponsivityManager extends ResponsivityManager {\n  constructor(container, model) {\n    super(container, model);\n  }\n  getDimensions() {\n    return {\n      scroll: this.container.scrollHeight,\n      offset: this.container.offsetHeight\n    };\n  }\n  getAvailableSpace() {\n    const style = this.getComputedStyle(this.container);\n    let space = this.container.offsetHeight;\n    if (style.boxSizing === \"border-box\") {\n      space -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    }\n    return space;\n  }\n  calcItemSize(item) {\n    return item.offsetHeight;\n  }\n}\nclass CssClassBuilder {\n  constructor() {\n    this.classes = [];\n  }\n  isEmpty() {\n    return this.toString() === \"\";\n  }\n  append(value, condition = true) {\n    if (!!value && condition) {\n      if (typeof value === \"string\") {\n        value = value.trim();\n      }\n      this.classes.push(value);\n    }\n    return this;\n  }\n  toString() {\n    return this.classes.join(\" \");\n  }\n}\nfunction debounce(func) {\n  let isSheduled = false;\n  let isCanceled = false;\n  let funcArgs;\n  const cancelCallback = () => {\n    isCanceled = true;\n    funcArgs = undefined;\n  };\n  return {\n    run: (...args) => {\n      isCanceled = false;\n      funcArgs = args;\n      if (!isSheduled) {\n        isSheduled = true;\n        queueMicrotask(() => {\n          if (!isCanceled) {\n            func.apply(this, funcArgs);\n          }\n          funcArgs = undefined;\n          isCanceled = false;\n          isSheduled = false;\n        });\n      }\n    },\n    cancel: cancelCallback,\n    getLastArguments: () => funcArgs,\n    flushSync: () => {\n      if (!isCanceled && isSheduled) {\n        func.apply(this, funcArgs);\n        cancelCallback();\n      }\n    }\n  };\n}\nlet defaultActionBarCss = {\n  root: \"sv-action-bar\",\n  defaultSizeMode: \"sv-action-bar--default-size-mode\",\n  smallSizeMode: \"sv-action-bar--small-size-mode\",\n  item: \"sv-action-bar-item\",\n  itemWithTitle: \"\",\n  itemAsIcon: \"sv-action-bar-item--icon\",\n  itemActive: \"sv-action-bar-item--active\",\n  itemPressed: \"sv-action-bar-item--pressed\",\n  itemIcon: \"sv-action-bar-item__icon\",\n  itemTitle: \"sv-action-bar-item__title\",\n  itemTitleWithIcon: \"sv-action-bar-item__title--with-icon\"\n};\nclass ActionContainer extends Base {\n  constructor() {\n    super(...arguments);\n    this.id = ActionContainer.ContainerID++;\n    this.visibleActions = [];\n    this.sizeMode = \"default\";\n    this.raiseUpdateCallback = debounce(isResetInitialized => {\n      this.update(isResetInitialized);\n    });\n    this.onActionPropertyChangedCallback = this.onActionPropertyChanged.bind(this);\n  }\n  getMarkdownHtml(text, name, item) {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name) {\n    return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    return this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n  getLocale() {\n    return !!this.locOwner ? this.locOwner.getLocale() : \"\";\n  }\n  getRenderedActions() {\n    return this.visibleActions;\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.actions.forEach(item => {\n      if (item.locTitle) item.locTitle.strChanged();\n      item.locStrsChanged();\n    });\n  }\n  flushUpdates() {\n    this.raiseUpdateCallback.flushSync();\n  }\n  raiseUpdate(options) {\n    var _a;\n    const lastArguments = this.raiseUpdateCallback.getLastArguments();\n    const lastOptions = (_a = lastArguments && lastArguments[0]) !== null && _a !== void 0 ? _a : {};\n    this.raiseUpdateCallback.run(this.mergeUpdateOptions(options, lastOptions));\n  }\n  mergeUpdateOptions(nextOptions, prevOptions) {\n    const options = Object.assign({}, nextOptions);\n    options.needUpdateActions = !!options.needUpdateActions || !!prevOptions.needUpdateActions;\n    options.needUpdateIsEmpty = !!options.needUpdateIsEmpty || !!prevOptions.needUpdateIsEmpty;\n    return options;\n  }\n  update(options) {\n    if (options === null || options === void 0 ? void 0 : options.needUpdateActions) {\n      this.updateVisibleActions();\n    }\n    if (options === null || options === void 0 ? void 0 : options.needUpdateIsEmpty) {\n      this.updateIsEmpty();\n    }\n  }\n  updateVisibleActions() {\n    this.visibleActions = this.getVisibleActions();\n  }\n  updateIsEmpty() {\n    this.isEmpty = this.getIsEmpty();\n  }\n  getIsEmpty() {\n    return this.visibleActions.length <= 0;\n  }\n  getVisibleActions() {\n    return this.actions.filter(action => action.visible !== false);\n  }\n  onSet() {\n    this.actions.forEach(action => {\n      this.patchAction(action);\n    });\n  }\n  onPush(action) {\n    this.patchAction(action);\n    this.raiseUpdate({\n      needUpdateActions: true,\n      needUpdateIsEmpty: true\n    });\n  }\n  onRemove(action) {\n    this.unPatchAction(action);\n    this.raiseUpdate({\n      needUpdateActions: true,\n      needUpdateIsEmpty: true\n    });\n  }\n  onActionPropertyChanged(action, options) {\n    if (options.name == \"_visible\") {\n      this.raiseUpdate({\n        needUpdateActions: true,\n        needUpdateIsEmpty: true\n      });\n    }\n  }\n  patchAction(action) {\n    this.setActionCssClasses(action);\n    action.owner = this;\n    action.onPropertyChanged.add(this.onActionPropertyChangedCallback);\n  }\n  unPatchAction(action) {\n    action.owner = null;\n    action.onPropertyChanged.remove(this.onActionPropertyChangedCallback);\n  }\n  setActionCssClasses(item) {\n    item.cssClasses = this.cssClasses;\n  }\n  get hasActions() {\n    return (this.actions || []).length > 0;\n  }\n  get hasVisibleActions() {\n    return !this.isEmpty;\n  }\n  get renderedActions() {\n    return this.getRenderedActions();\n  }\n  getRootStyle() {\n    return undefined;\n  }\n  getRootCss() {\n    const sizeModeClass = this.sizeMode === \"small\" ? this.cssClasses.smallSizeMode : this.cssClasses.defaultSizeMode;\n    return new CssClassBuilder().append(this.cssClasses.root + (!!sizeModeClass ? \" \" + sizeModeClass : \"\") + (!!this.containerCss ? \" \" + this.containerCss : \"\")).append(this.cssClasses.root + \"--empty\", this.isEmpty).toString();\n  }\n  getDefaultCssClasses() {\n    return defaultActionBarCss;\n  }\n  getAllActions() {\n    return this.actions;\n  }\n  setCssClasses(val, mergeWithDefault = true) {\n    this.cssClassesValue = {};\n    if (mergeWithDefault) {\n      this.copyCssClasses(this.cssClassesValue, this.getDefaultCssClasses());\n    }\n    mergeValues(val, this.cssClasses);\n    this.getAllActions().forEach(action => {\n      this.setActionCssClasses(action);\n    });\n  }\n  set cssClasses(val) {\n    this.setCssClasses(val);\n  }\n  get cssClasses() {\n    if (!this.cssClassesValue) {\n      this.cssClassesValue = this.getDefaultCssClasses();\n    }\n    return this.cssClassesValue;\n  }\n  createAction(item) {\n    return item instanceof BaseAction ? item : new Action(item);\n  }\n  addAction(val, sortByVisibleIndex = true) {\n    const res = this.createAction(val);\n    if (sortByVisibleIndex && !this.isActionVisible(res)) return res;\n    const items = [].concat(this.actions, res);\n    this.sortItems(items);\n    this.actions = items;\n    return res;\n  }\n  setItems(items, sortByVisibleIndex = true) {\n    const newActions = [];\n    items.forEach(item => {\n      if (!sortByVisibleIndex || this.isActionVisible(item)) {\n        newActions.push(this.createAction(item));\n      }\n    });\n    if (sortByVisibleIndex) {\n      this.sortItems(newActions);\n    }\n    this.actions = newActions;\n  }\n  sortItems(items) {\n    if (this.hasSetVisibleIndex(items)) {\n      items.sort(this.compareByVisibleIndex);\n    }\n  }\n  hasSetVisibleIndex(items) {\n    for (let i = 0; i < items.length; i++) {\n      const index = items[i].visibleIndex;\n      if (index !== undefined && index >= 0) return true;\n    }\n    return false;\n  }\n  compareByVisibleIndex(first, second) {\n    return first.visibleIndex - second.visibleIndex;\n  }\n  isActionVisible(item) {\n    return item.visibleIndex >= 0 || item.visibleIndex === undefined;\n  }\n  popupAfterShowCallback(itemValue) {}\n  mouseOverHandler(itemValue) {\n    itemValue.isHovered = true;\n    let needToShowPopup = false;\n    let otherPopupVisible = false;\n    this.actions.forEach(action => {\n      if (action === itemValue && !!itemValue.popupModel) {\n        needToShowPopup = true;\n      }\n      if (action.popupModel && action.popupModel.isVisible) {\n        otherPopupVisible = true;\n      }\n    });\n    if (needToShowPopup) {\n      const delay = otherPopupVisible ? Math.max(this.subItemsShowDelay, this.subItemsHideDelay) : this.subItemsShowDelay;\n      itemValue.showPopupDelayed(delay);\n      this.popupAfterShowCallback(itemValue);\n    }\n  }\n  initResponsivityManager(container, delayedUpdateFunction) {\n    return;\n  }\n  resetResponsivityManager() {}\n  getActionById(id) {\n    for (var i = 0; i < this.actions.length; i++) {\n      if (this.actions[i].id === id) return this.actions[i];\n    }\n    return null;\n  }\n  dispose() {\n    super.dispose();\n    this.resetResponsivityManager();\n    this.actions.forEach(action => action.dispose());\n    this.actions.length = 0;\n  }\n}\nActionContainer.ContainerID = 1;\n__decorate([propertyArray({})], ActionContainer.prototype, \"visibleActions\", void 0);\n__decorate([propertyArray({\n  onSet: (_, target) => {\n    target.onSet();\n  },\n  onPush: (item, i, target) => {\n    target.onPush(item);\n  },\n  onRemove: (item, i, target) => {\n    target.onRemove(item);\n  }\n})], ActionContainer.prototype, \"actions\", void 0);\n__decorate([property({})], ActionContainer.prototype, \"containerCss\", void 0);\n__decorate([property({\n  defaultValue: true\n})], ActionContainer.prototype, \"isEmpty\", void 0);\n__decorate([property({\n  defaultValue: 300\n})], ActionContainer.prototype, \"subItemsShowDelay\", void 0);\n__decorate([property({\n  defaultValue: 300\n})], ActionContainer.prototype, \"subItemsHideDelay\", void 0);\nclass ElementHelper {\n  static focusElement(element) {\n    element && element.focus();\n  }\n  static visibility(node) {\n    var style = DomDocumentHelper.getComputedStyle(node);\n    if (style.display === \"none\" || style.visibility === \"hidden\") return false;\n    return node.parentElement ? this.visibility(node.parentElement) : true;\n  }\n  static getNextElementPreorder(element) {\n    const result = !!element.nextElementSibling ? element.nextElementSibling : element.parentElement.firstElementChild;\n    if (this.visibility(result)) {\n      return result;\n    } else {\n      return this.getNextElementPreorder(result);\n    }\n  }\n  static getNextElementPostorder(element) {\n    const result = !!element.previousElementSibling ? element.previousElementSibling : element.parentElement.lastElementChild;\n    if (this.visibility(result)) {\n      return result;\n    } else {\n      return this.getNextElementPostorder(result);\n    }\n  }\n  static hasHorizontalScroller(element) {\n    if (!!element) {\n      return element.scrollWidth > element.offsetWidth;\n    }\n    return false;\n  }\n  static hasVerticalScroller(element) {\n    if (!!element) {\n      return element.scrollHeight > element.offsetHeight;\n    }\n    return false;\n  }\n}\n\n// isMobile\nlet _isMobile = false;\nlet vendor = null;\nif (typeof navigator !== \"undefined\" && !!navigator && DomWindowHelper.isAvailable()) {\n  vendor = navigator.userAgent || navigator.vendor || DomWindowHelper.hasOwn(\"opera\");\n}\n(function (a) {\n  if (!a) return;\n  if (navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 0 || navigator.platform === \"iPad\") {\n    _isMobile = true;\n  } else if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substring(0, 4))) _isMobile = true;\n})(vendor);\nlet _IPad = false;\nconst IsMobile = _isMobile || _IPad;\nvar mouseInfo = {\n  get isTouch() {\n    return !this.hasMouse && this.hasTouchEvent;\n  },\n  get hasTouchEvent() {\n    return DomWindowHelper.isAvailable() && (DomWindowHelper.hasOwn(\"ontouchstart\") || navigator.maxTouchPoints > 0);\n  },\n  hasMouse: true\n};\nconst matchMediaMethod = DomWindowHelper.matchMedia;\nmouseInfo.hasMouse = detectMouseSupport(matchMediaMethod);\nlet IsTouch = mouseInfo.isTouch;\n//for tests\nfunction _setIsTouch(val) {\n  IsTouch = val;\n}\n//for tests\nlet _isTablet = undefined;\nfunction _setIsTablet(val) {\n  _isTablet = val;\n}\nfunction calculateIsTablet(windowWidth, windowHeight, tabletSizeBreakpoint = 600) {\n  if (_isTablet !== undefined) return _isTablet;\n  const _windowWidth = windowWidth || DomWindowHelper.getInnerWidth();\n  const _windowHeight = windowHeight || DomWindowHelper.getInnerHeight();\n  const width = Math.min(_windowWidth, _windowHeight);\n  const isTablet = width >= tabletSizeBreakpoint;\n  return isTablet;\n}\nfunction detectMouseSupport(matchMedia) {\n  if (!matchMedia) return false;\n  if (IsMobile) return false;\n  const pointerQuery = matchMedia(\"(pointer:fine)\");\n  const hoverQuery = matchMedia(\"(any-hover:hover)\");\n  return !!pointerQuery && pointerQuery.matches || !!hoverQuery && hoverQuery.matches;\n}\nlet defaultListCss = {\n  root: \"sv-list__container\",\n  item: \"sv-list__item\",\n  searchClearButtonIcon: \"sv-list__filter-clear-button\",\n  loadingIndicator: \"sv-list__loading-indicator\",\n  itemSelected: \"sv-list__item--selected\",\n  itemGroup: \"sv-list__item--group\",\n  itemGroupSelected: \"sv-list__item--group-selected\",\n  itemWithIcon: \"sv-list__item--with-icon\",\n  itemDisabled: \"sv-list__item--disabled\",\n  itemFocused: \"sv-list__item--focused\",\n  itemHovered: \"sv-list__item--hovered\",\n  itemTextWrap: \"sv-list__item-text--wrap\",\n  itemIcon: \"sv-list__item-icon\",\n  itemMarkerIcon: \"sv-list-item__marker-icon\",\n  itemSeparator: \"sv-list__item-separator\",\n  itemBody: \"sv-list__item-body\",\n  itemsContainer: \"sv-list\",\n  itemsContainerFiltering: \"sv-list--filtering\",\n  filter: \"sv-list__filter\",\n  filterIcon: \"sv-list__filter-icon\",\n  filterInput: \"sv-list__input\",\n  emptyContainer: \"sv-list__empty-container\",\n  emptyText: \"sv-list__empty-text\"\n};\nclass ListModel extends ActionContainer {\n  hasText(item, filterStringInLow) {\n    if (!filterStringInLow) return true;\n    const text = item.title || \"\";\n    if (this.onTextSearchCallback) return this.onTextSearchCallback(item, filterStringInLow);\n    let textInLow = text.toLocaleLowerCase();\n    textInLow = settings.comparator.normalizeTextCallback(textInLow, \"filter\");\n    return textInLow.indexOf(filterStringInLow.toLocaleLowerCase()) > -1;\n  }\n  isItemVisible(item) {\n    if (item.id === this.loadingIndicator.id) return item.visible;\n    return item.visible && this.hasText(item, this.filterString);\n  }\n  getRenderedActions() {\n    let actions = super.getRenderedActions();\n    if (this.filterString) {\n      let newActions = [];\n      actions.forEach(action => {\n        newActions.push(action);\n        if (action.items) {\n          action.items.forEach(item => {\n            const a = new Action(item);\n            if (!a.iconName) {\n              a.iconName = action.iconName;\n            }\n            newActions.push(a);\n          });\n        }\n      });\n      return newActions;\n    }\n    return actions;\n  }\n  get visibleItems() {\n    return this.actions.filter(item => this.isItemVisible(item));\n  }\n  onFilterStringChanged(text) {\n    if (!!this.onFilterStringChangedCallback) {\n      this.onFilterStringChangedCallback(text);\n    }\n    this.raiseUpdate({\n      needUpdateIsEmpty: true\n    });\n  }\n  getIsEmpty() {\n    return !this.renderedActions.some(action => this.isItemVisible(action));\n  }\n  scrollToItem(classes, ms = 0) {\n    setTimeout(() => {\n      if (!this.listContainerHtmlElement) return;\n      const item = this.listContainerHtmlElement.querySelector(classesToSelector(classes));\n      if (item) {\n        setTimeout(() => {\n          item.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n            inline: \"start\"\n          });\n        }, ms);\n      }\n    }, ms);\n  }\n  constructor(items, onSelectionChanged, allowSelection, selectedItem, elementId) {\n    super();\n    this.onSelectionChanged = onSelectionChanged;\n    this.allowSelection = allowSelection;\n    this.elementId = elementId;\n    this.onItemClick = itemValue => {\n      if (this.isItemDisabled(itemValue)) {\n        return;\n      }\n      this.isExpanded = false;\n      if (this.allowSelection) {\n        this.selectedItem = itemValue;\n      }\n      if (!!this.onSelectionChanged) {\n        this.onSelectionChanged(itemValue);\n      }\n      const action = itemValue.action;\n      if (!!action) {\n        action(itemValue);\n      }\n    };\n    this.onItemHover = itemValue => {\n      this.mouseOverHandler(itemValue);\n    };\n    this.isItemDisabled = itemValue => {\n      return itemValue.enabled !== undefined && !itemValue.enabled;\n    };\n    this.getA11yItemAriaSelected = itemValue => {\n      if (this.listItemRole == \"option\") return this.isItemSelected(itemValue) ? \"true\" : \"false\";\n      return undefined;\n    };\n    this.getA11yItemAriaChecked = itemValue => {\n      if (this.listItemRole == \"menuitemradio\") return this.isItemSelected(itemValue) ? \"true\" : \"false\";\n      return undefined;\n    };\n    this.isItemSelected = itemValue => {\n      return this.areSameItems(this.selectedItem, itemValue);\n    };\n    this.isItemFocused = itemValue => {\n      return this.areSameItems(this.focusedItem, itemValue);\n    };\n    this.getListClass = () => {\n      return new CssClassBuilder().append(this.cssClasses.itemsContainer).append(this.cssClasses.itemsContainerFiltering, !!this.filterString && this.visibleActions.length !== this.visibleItems.length).toString();\n    };\n    this.getItemClass = itemValue => {\n      const isSelected = this.isItemSelected(itemValue);\n      return new CssClassBuilder().append(this.cssClasses.item).append(this.cssClasses.itemWithIcon, !!itemValue.iconName).append(this.cssClasses.itemDisabled, this.isItemDisabled(itemValue)).append(this.cssClasses.itemFocused, this.isItemFocused(itemValue)).append(this.cssClasses.itemSelected, !itemValue.hasSubItems && isSelected).append(this.cssClasses.itemGroup, itemValue.hasSubItems).append(this.cssClasses.itemGroupSelected, itemValue.hasSubItems && isSelected).append(this.cssClasses.itemHovered, itemValue.isHovered).append(this.cssClasses.itemTextWrap, this.textWrapEnabled).append(itemValue.css).toString();\n    };\n    // public getItemIndent = (itemValue: any) => {\n    //   const level: number = itemValue.level || 0;\n    //   return (level + 1) * ListModel.INDENT + \"px\";\n    // };\n    this.getItemStyle = itemValue => {\n      const level = itemValue.level || 0;\n      return {\n        \"--sjs-list-item-level\": level + 1\n      };\n    };\n    if (Object.keys(items).indexOf(\"items\") !== -1) {\n      const options = items;\n      Object.keys(options).forEach(key => {\n        switch (key) {\n          case \"items\":\n            this.setItems(options.items);\n            break;\n          case \"onFilterStringChangedCallback\":\n            this.setOnFilterStringChangedCallback(options.onFilterStringChangedCallback);\n            break;\n          case \"onTextSearchCallback\":\n            this.setOnTextSearchCallback(options.onTextSearchCallback);\n            break;\n          default:\n            this[key] = options[key];\n        }\n      });\n      this.updateActionsIds();\n    } else {\n      this.setItems(items);\n      this.selectedItem = selectedItem;\n    }\n  }\n  setOnFilterStringChangedCallback(callback) {\n    this.onFilterStringChangedCallback = callback;\n  }\n  setOnTextSearchCallback(callback) {\n    this.onTextSearchCallback = callback;\n  }\n  setItems(items, sortByVisibleIndex = true) {\n    super.setItems(items, sortByVisibleIndex);\n    this.updateActionsIds();\n    if (!this.isAllDataLoaded && !!this.actions.length) {\n      this.actions.push(this.loadingIndicator);\n    }\n  }\n  updateActionsIds() {\n    if (this.elementId) {\n      this.actions.forEach(action => {\n        action.elementId = this.elementId + action.id;\n      });\n    }\n  }\n  setSearchEnabled(newValue) {\n    this.searchEnabled = newValue;\n    this.showSearchClearButton = newValue;\n  }\n  onSet() {\n    this.showFilter = this.searchEnabled && (this.forceShowFilter || (this.actions || []).length > ListModel.MINELEMENTCOUNT);\n    super.onSet();\n  }\n  getDefaultCssClasses() {\n    return defaultListCss;\n  }\n  popupAfterShowCallback(itemValue) {\n    this.addScrollEventListener(() => {\n      itemValue.hidePopup();\n    });\n  }\n  onItemLeave(itemValue) {\n    itemValue.hidePopupDelayed(this.subItemsHideDelay);\n  }\n  areSameItems(item1, item2) {\n    if (!!this.areSameItemsCallback) return this.areSameItemsCallback(item1, item2);\n    return !!item1 && !!item2 && item1.id == item2.id;\n  }\n  get a11ya11y_input_ariaLabel() {\n    return this.listAriaLabel;\n  }\n  get filterStringPlaceholder() {\n    return this.getLocalizationString(\"filterStringPlaceholder\");\n  }\n  get emptyMessage() {\n    return this.isAllDataLoaded ? this.getLocalizationString(\"emptyMessage\") : this.getLocalizationString(\"loadingData\");\n  }\n  get scrollableContainer() {\n    return this.listContainerHtmlElement.querySelector(classesToSelector(this.cssClasses.itemsContainer));\n  }\n  get loadingIndicator() {\n    if (!this.loadingIndicatorValue) {\n      this.loadingIndicatorValue = new Action({\n        id: \"loadingIndicator\",\n        title: this.getLocalizationString(\"loadingPage\"),\n        action: () => {},\n        css: this.cssClasses.loadingIndicator\n      });\n    }\n    return this.loadingIndicatorValue;\n  }\n  goToItems(event) {\n    if (event.key === \"ArrowDown\" || event.keyCode === 40) {\n      const currentElement = event.target.parentElement;\n      const listElement = currentElement.parentElement.querySelector(\"ul\");\n      const firstChild = getFirstVisibleChild(listElement);\n      if (!!listElement && !!firstChild) {\n        ElementHelper.focusElement(firstChild);\n        event.preventDefault();\n      }\n    }\n  }\n  onMouseMove(event) {\n    this.resetFocusedItem();\n  }\n  onKeyDown(event) {\n    const currentElement = event.target;\n    if (event.key === \"ArrowDown\" || event.keyCode === 40) {\n      ElementHelper.focusElement(ElementHelper.getNextElementPreorder(currentElement));\n      event.preventDefault();\n    } else if (event.key === \"ArrowUp\" || event.keyCode === 38) {\n      ElementHelper.focusElement(ElementHelper.getNextElementPostorder(currentElement));\n      event.preventDefault();\n    }\n  }\n  onPointerDown(event, item) {}\n  refresh() {\n    if (this.filterString !== \"\") {\n      this.filterString = \"\";\n    } else {\n      this.raiseUpdate({\n        needUpdateIsEmpty: true\n      });\n    }\n    this.resetFocusedItem();\n  }\n  onClickSearchClearButton(event) {\n    event.currentTarget.parentElement.querySelector(\"input\").focus();\n    this.refresh();\n  }\n  resetFocusedItem() {\n    this.focusedItem = undefined;\n  }\n  focusFirstVisibleItem() {\n    if (!IsTouch) {\n      this.focusedItem = this.visibleItems[0];\n    }\n  }\n  focusLastVisibleItem() {\n    this.focusedItem = this.visibleItems[this.visibleItems.length - 1];\n  }\n  initFocusedItem() {\n    this.focusedItem = this.visibleItems.filter(item => item.visible && this.isItemSelected(item))[0];\n    if (!this.focusedItem) {\n      this.focusFirstVisibleItem();\n    }\n  }\n  focusNextVisibleItem() {\n    if (!this.focusedItem) {\n      this.initFocusedItem();\n    } else {\n      const items = this.visibleItems;\n      const currentFocusedItemIndex = items.indexOf(this.focusedItem);\n      const nextItem = items[currentFocusedItemIndex + 1];\n      if (nextItem) {\n        this.focusedItem = nextItem;\n      } else {\n        this.focusFirstVisibleItem();\n      }\n    }\n  }\n  focusPrevVisibleItem() {\n    if (!this.focusedItem) {\n      this.initFocusedItem();\n    } else {\n      const items = this.visibleItems;\n      const currentFocusedItemIndex = items.indexOf(this.focusedItem);\n      const prevItem = items[currentFocusedItemIndex - 1];\n      if (prevItem) {\n        this.focusedItem = prevItem;\n      } else {\n        this.focusLastVisibleItem();\n      }\n    }\n  }\n  selectFocusedItem() {\n    !!this.focusedItem && this.onItemClick(this.focusedItem);\n  }\n  initListContainerHtmlElement(htmlElement) {\n    this.listContainerHtmlElement = htmlElement;\n  }\n  onLastItemRended(item) {\n    if (this.isAllDataLoaded) return;\n    if (item === this.actions[this.actions.length - 1] && !!this.listContainerHtmlElement) {\n      this.hasVerticalScroller = ElementHelper.hasVerticalScroller(this.scrollableContainer);\n    }\n  }\n  scrollToFocusedItem() {\n    this.scrollToItem(this.cssClasses.itemFocused);\n  }\n  scrollToSelectedItem() {\n    if (!!this.selectedItem && this.selectedItem.items && this.selectedItem.items.length > 0) {\n      this.scrollToItem(this.cssClasses.itemGroupSelected, 110);\n    } else {\n      this.scrollToItem(this.cssClasses.itemSelected, 110);\n    }\n  }\n  addScrollEventListener(handler) {\n    if (!!handler) {\n      this.removeScrollEventListener();\n      this.scrollHandler = handler;\n    }\n    if (!!this.scrollHandler) {\n      this.scrollableContainer.addEventListener(\"scroll\", this.scrollHandler);\n    }\n  }\n  removeScrollEventListener() {\n    if (!!this.scrollHandler) {\n      this.scrollableContainer.removeEventListener(\"scroll\", this.scrollHandler);\n    }\n  }\n  dispose() {\n    super.dispose();\n    if (!!this.loadingIndicatorValue) {\n      this.loadingIndicatorValue.dispose();\n    }\n    this.listContainerHtmlElement = undefined;\n  }\n}\nListModel.INDENT = 16;\nListModel.MINELEMENTCOUNT = 10;\n__decorate([property({\n  defaultValue: true,\n  onSet: (newValue, target) => {\n    target.onSet();\n  }\n})], ListModel.prototype, \"searchEnabled\", void 0);\n__decorate([property({\n  defaultValue: false\n})], ListModel.prototype, \"showFilter\", void 0);\n__decorate([property({\n  defaultValue: false\n})], ListModel.prototype, \"forceShowFilter\", void 0);\n__decorate([property({\n  defaultValue: false\n})], ListModel.prototype, \"isExpanded\", void 0);\n__decorate([property({})], ListModel.prototype, \"selectedItem\", void 0);\n__decorate([property()], ListModel.prototype, \"focusedItem\", void 0);\n__decorate([property({\n  onSet: (_, target) => {\n    target.onFilterStringChanged(target.filterString);\n  }\n})], ListModel.prototype, \"filterString\", void 0);\n__decorate([property({\n  defaultValue: false\n})], ListModel.prototype, \"hasVerticalScroller\", void 0);\n__decorate([property({\n  defaultValue: true\n})], ListModel.prototype, \"isAllDataLoaded\", void 0);\n__decorate([property({\n  defaultValue: false\n})], ListModel.prototype, \"showSearchClearButton\", void 0);\n__decorate([property({\n  defaultValue: true\n})], ListModel.prototype, \"renderElements\", void 0);\n__decorate([property({\n  defaultValue: false\n})], ListModel.prototype, \"textWrapEnabled\", void 0);\n__decorate([property({\n  defaultValue: \"sv-list-item-content\"\n})], ListModel.prototype, \"itemComponent\", void 0);\n__decorate([property({\n  defaultValue: \"listbox\"\n})], ListModel.prototype, \"listRole\", void 0);\n__decorate([property({\n  defaultValue: \"option\"\n})], ListModel.prototype, \"listItemRole\", void 0);\n__decorate([property()], ListModel.prototype, \"listAriaLabel\", void 0);\nclass PopupModel extends Base {\n  refreshInnerModel() {\n    const innerModel = this.contentComponentData[\"model\"];\n    innerModel && innerModel.refresh && innerModel.refresh();\n  }\n  constructor(contentComponentName, contentComponentData, options) {\n    super();\n    this.focusFirstInputSelector = \"\";\n    this.onCancel = () => {};\n    this.onApply = () => {\n      return true;\n    };\n    this.onHide = () => {};\n    this.onShow = () => {};\n    this.onDispose = () => {};\n    this.onVisibilityChanged = this.addEvent();\n    this.onFooterActionsCreated = this.addEvent();\n    this.onRecalculatePosition = this.addEvent();\n    this.contentComponentName = contentComponentName;\n    this.contentComponentData = contentComponentData;\n    if (!!options) {\n      for (var key in options) {\n        this[key] = options[key];\n      }\n    }\n  }\n  get isVisible() {\n    return this.getPropertyValue(\"isVisible\", false);\n  }\n  set isVisible(value) {\n    if (this.isVisible === value) {\n      return;\n    }\n    this.setPropertyValue(\"isVisible\", value);\n    this.onVisibilityChanged.fire(this, {\n      model: this,\n      isVisible: value\n    });\n  }\n  toggleVisibility() {\n    this.isVisible = !this.isVisible;\n  }\n  show() {\n    if (!this.isVisible) this.isVisible = true;\n  }\n  hide() {\n    if (this.isVisible) this.isVisible = false;\n  }\n  recalculatePosition(isResetHeight) {\n    this.onRecalculatePosition.fire(this, {\n      isResetHeight: isResetHeight\n    });\n  }\n  updateFooterActions(footerActions) {\n    const options = {\n      actions: footerActions\n    };\n    this.onFooterActionsCreated.fire(this, options);\n    return options.actions;\n  }\n  getDisplayMode() {\n    if (this.isModal) {\n      return this.displayMode === \"popup\" ? \"modal-popup\" : \"modal-overlay\";\n    } else {\n      if (this.displayMode === \"popup\") {\n        return \"menu-popup\";\n      } else {\n        let result;\n        switch (this.overlayDisplayMode) {\n          case \"plain\":\n            {\n              result = \"menu-popup\";\n              break;\n            }\n          case \"dropdown-overlay\":\n            {\n              result = \"menu-overlay\";\n              break;\n            }\n          case \"tablet-dropdown-overlay\":\n            {\n              result = \"menu-popup-overlay\";\n              break;\n            }\n          case \"auto\":\n            {\n              if (!IsTouch) {\n                result = \"menu-popup\"; // desktop\n              } else {\n                result = \"menu-popup-overlay\"; //tablet\n              }\n              break;\n            }\n        }\n        return result;\n      }\n    }\n  }\n  updateDisplayMode(menuType) {\n    let newDisplayMode;\n    let newOverlayDisplayMode;\n    switch (menuType) {\n      case \"dropdown\":\n        {\n          newDisplayMode = \"popup\";\n          newOverlayDisplayMode = \"auto\";\n          break;\n        }\n      case \"popup\":\n        {\n          newDisplayMode = \"overlay\";\n          newOverlayDisplayMode = \"tablet-dropdown-overlay\";\n          break;\n        }\n      case \"overlay\":\n        {\n          newDisplayMode = \"overlay\";\n          newOverlayDisplayMode = \"dropdown-overlay\";\n          break;\n        }\n    }\n    if (this.displayMode !== newDisplayMode) {\n      const isDropdown = menuType === \"dropdown\";\n      this.setWidthByTarget = isDropdown;\n      this.isFocusedContent = !isDropdown;\n    }\n    if (this.displayMode !== newDisplayMode || this.overlayDisplayMode !== newOverlayDisplayMode) {\n      this.displayMode = newDisplayMode;\n      this.overlayDisplayMode = newOverlayDisplayMode;\n      return true;\n    } else {\n      return false;\n    }\n  }\n  onHiding() {\n    this.refreshInnerModel();\n    this.onHide();\n  }\n  dispose() {\n    super.dispose();\n    this.onDispose();\n  }\n}\n__decorate([property()], PopupModel.prototype, \"contentComponentName\", void 0);\n__decorate([property()], PopupModel.prototype, \"contentComponentData\", void 0);\n__decorate([property({\n  defaultValue: \"bottom\"\n})], PopupModel.prototype, \"verticalPosition\", void 0);\n__decorate([property({\n  defaultValue: \"left\"\n})], PopupModel.prototype, \"horizontalPosition\", void 0);\n__decorate([property({\n  defaultValue: true\n})], PopupModel.prototype, \"showPointer\", void 0);\n__decorate([property({\n  defaultValue: false\n})], PopupModel.prototype, \"isModal\", void 0);\n__decorate([property({\n  defaultValue: true\n})], PopupModel.prototype, \"canShrink\", void 0);\n__decorate([property({\n  defaultValue: true\n})], PopupModel.prototype, \"isFocusedContent\", void 0);\n__decorate([property({\n  defaultValue: true\n})], PopupModel.prototype, \"isFocusedContainer\", void 0);\n__decorate([property({\n  defaultValue: \"\"\n})], PopupModel.prototype, \"cssClass\", void 0);\n__decorate([property({\n  defaultValue: \"\"\n})], PopupModel.prototype, \"title\", void 0);\n__decorate([property({\n  defaultValue: \"auto\"\n})], PopupModel.prototype, \"overlayDisplayMode\", void 0);\n__decorate([property({\n  defaultValue: \"popup\"\n})], PopupModel.prototype, \"displayMode\", void 0);\n__decorate([property({\n  defaultValue: \"flex\"\n})], PopupModel.prototype, \"positionMode\", void 0);\nfunction createDropdownActionModel(actionOptions, dropdownOptions, locOwner) {\n  dropdownOptions.locOwner = locOwner;\n  return createDropdownActionModelAdvanced(actionOptions, dropdownOptions, dropdownOptions);\n}\nfunction createDropdownActionModelAdvanced(actionOptions, listOptions, popupOptions) {\n  var _a;\n  const originalSelectionChanged = listOptions.onSelectionChanged;\n  listOptions.onSelectionChanged = (item, ...params) => {\n    if (newAction.hasTitle) {\n      newAction.title = item.title;\n    }\n    if (originalSelectionChanged) {\n      originalSelectionChanged(item, params);\n    }\n  };\n  const popupModel = createPopupModelWithListModel(listOptions, popupOptions);\n  popupModel.getTargetCallback = getActionDropdownButtonTarget;\n  const newActionOptions = Object.assign({}, actionOptions, {\n    component: \"sv-action-bar-item-dropdown\",\n    popupModel: popupModel,\n    action: (action, isUserAction) => {\n      !!actionOptions.action && actionOptions.action();\n      popupModel.isFocusedContent = popupModel.isFocusedContent || !isUserAction;\n      popupModel.show();\n    }\n  });\n  const newAction = new Action(newActionOptions);\n  newAction.data = (_a = popupModel.contentComponentData) === null || _a === void 0 ? void 0 : _a.model;\n  return newAction;\n}\nfunction createPopupModelWithListModel(listOptions, popupOptions) {\n  if (!listOptions.listRole) listOptions.listRole = \"menu\";\n  if (!listOptions.listItemRole) listOptions.listItemRole = !!listOptions.allowSelection ? \"menuitemradio\" : \"menuitem\";\n  const listModel = new ListModel(listOptions);\n  listModel.onSelectionChanged = item => {\n    if (listOptions.onSelectionChanged) {\n      listOptions.onSelectionChanged(item);\n    }\n    popupModel.hide();\n  };\n  const _popupOptions = popupOptions || {};\n  _popupOptions.onDispose = () => {\n    listModel.dispose();\n  };\n  const popupModel = new PopupModel(\"sv-list\", {\n    model: listModel\n  }, _popupOptions);\n  popupModel.isFocusedContent = listModel.showFilter;\n  popupModel.onShow = () => {\n    if (!!_popupOptions.onShow) _popupOptions.onShow();\n    listModel.scrollToSelectedItem();\n  };\n  return popupModel;\n}\nfunction getActionDropdownButtonTarget(container) {\n  return container === null || container === void 0 ? void 0 : container.previousElementSibling;\n}\nclass BaseAction extends Base {\n  constructor() {\n    super(...arguments);\n    this.rendredIdValue = BaseAction.getNextRendredId();\n  }\n  static getNextRendredId() {\n    return BaseAction.renderedId++;\n  }\n  get data() {\n    return this._data;\n  }\n  set data(val) {\n    this._data = val;\n  }\n  addVisibilityChangedCallback(callback) {}\n  removeVisibilityChangedCallback(callback) {}\n  get renderedId() {\n    return this.rendredIdValue;\n  }\n  get owner() {\n    return this.ownerValue;\n  }\n  set owner(val) {\n    if (val !== this.owner) {\n      this.ownerValue = val;\n      this.locStrsChanged();\n    }\n  }\n  get visible() {\n    return this.getVisible();\n  }\n  set visible(val) {\n    this.setVisible(val);\n  }\n  get enabled() {\n    return this.getEnabled();\n  }\n  set enabled(val) {\n    this.setEnabled(val);\n  }\n  get component() {\n    return this.getComponent();\n  }\n  set component(val) {\n    this.setComponent(val);\n  }\n  get locTitle() {\n    return this.getLocTitle();\n  }\n  set locTitle(val) {\n    this.setLocTitle(val);\n  }\n  get title() {\n    return this.getTitle();\n  }\n  set title(val) {\n    this.setTitle(val);\n  }\n  set cssClasses(val) {\n    this.cssClassesValue = val;\n  }\n  get cssClasses() {\n    return this.cssClassesValue || defaultActionBarCss;\n  }\n  get isVisible() {\n    return this.visible && this.mode !== \"popup\" && this.mode !== \"removed\";\n  }\n  get disabled() {\n    return this.enabled !== undefined && !this.enabled;\n  }\n  get canShrink() {\n    return !this.disableShrink && !!this.iconName;\n  }\n  get hasTitle() {\n    return (this.mode != \"small\" && (this.showTitle || this.showTitle === undefined) || !this.iconName) && !!this.title;\n  }\n  get hasSubItems() {\n    return !!this.items && this.items.length > 0;\n  }\n  getActionBarItemTitleCss() {\n    return new CssClassBuilder().append(this.cssClasses.itemTitle).append(this.cssClasses.itemTitleWithIcon, !!this.iconName).toString();\n  }\n  getActionBarItemCss() {\n    const hasTitle = this.hasTitle;\n    return new CssClassBuilder().append(this.cssClasses.item).append(this.cssClasses.itemWithTitle, hasTitle).append(this.cssClasses.itemAsIcon, !hasTitle).append(this.cssClasses.itemActive, !!this.active).append(this.cssClasses.itemPressed, !!this.pressed).append(this.innerCss).toString();\n  }\n  getActionRootCss() {\n    return new CssClassBuilder().append(\"sv-action\").append(this.css).append(\"sv-action--space\", this.needSpace).append(\"sv-action--hidden\", !this.isVisible).toString();\n  }\n  getTooltip() {\n    return this.tooltip || this.title;\n  }\n  getIsTrusted(args) {\n    if (!!args.originalEvent) {\n      return args.originalEvent.isTrusted;\n    }\n    return args.isTrusted;\n  }\n  showPopup() {\n    if (!!this.popupModel) {\n      this.popupModel.show();\n    }\n  }\n  hidePopup() {\n    if (!!this.popupModel) {\n      this.popupModel.hide();\n    }\n  }\n  clearPopupTimeouts() {\n    if (this.showPopupTimeout) clearTimeout(this.showPopupTimeout);\n    if (this.hidePopupTimeout) clearTimeout(this.hidePopupTimeout);\n  }\n  showPopupDelayed(delay) {\n    this.clearPopupTimeouts();\n    this.showPopupTimeout = setTimeout(() => {\n      this.clearPopupTimeouts();\n      this.showPopup();\n    }, delay);\n  }\n  hidePopupDelayed(delay) {\n    var _a;\n    if ((_a = this.popupModel) === null || _a === void 0 ? void 0 : _a.isVisible) {\n      this.clearPopupTimeouts();\n      this.hidePopupTimeout = setTimeout(() => {\n        this.clearPopupTimeouts();\n        this.hidePopup();\n        this.isHovered = false;\n      }, delay);\n    } else {\n      this.clearPopupTimeouts();\n      this.isHovered = false;\n    }\n  }\n}\nBaseAction.renderedId = 1;\n__decorate([property()], BaseAction.prototype, \"tooltip\", void 0);\n__decorate([property()], BaseAction.prototype, \"showTitle\", void 0);\n__decorate([property()], BaseAction.prototype, \"innerCss\", void 0);\n__decorate([property()], BaseAction.prototype, \"active\", void 0);\n__decorate([property()], BaseAction.prototype, \"pressed\", void 0);\n__decorate([property()], BaseAction.prototype, \"popupModel\", void 0);\n__decorate([property()], BaseAction.prototype, \"needSeparator\", void 0);\n__decorate([property()], BaseAction.prototype, \"template\", void 0);\n__decorate([property({\n  defaultValue: \"large\"\n})], BaseAction.prototype, \"mode\", void 0);\n__decorate([property()], BaseAction.prototype, \"visibleIndex\", void 0);\n__decorate([property()], BaseAction.prototype, \"disableTabStop\", void 0);\n__decorate([property()], BaseAction.prototype, \"disableShrink\", void 0);\n__decorate([property()], BaseAction.prototype, \"disableHide\", void 0);\n__decorate([property({\n  defaultValue: false\n})], BaseAction.prototype, \"needSpace\", void 0);\n__decorate([property()], BaseAction.prototype, \"ariaChecked\", void 0);\n__decorate([property()], BaseAction.prototype, \"ariaExpanded\", void 0);\n__decorate([property({\n  defaultValue: \"button\"\n})], BaseAction.prototype, \"ariaRole\", void 0);\n__decorate([property()], BaseAction.prototype, \"iconName\", void 0);\n__decorate([property({\n  defaultValue: 24\n})], BaseAction.prototype, \"iconSize\", void 0);\n__decorate([property()], BaseAction.prototype, \"markerIconName\", void 0);\n__decorate([property()], BaseAction.prototype, \"css\", void 0);\n__decorate([property({\n  defaultValue: false\n})], BaseAction.prototype, \"isPressed\", void 0);\n__decorate([property({\n  defaultValue: false\n})], BaseAction.prototype, \"isHovered\", void 0);\nclass Action extends BaseAction {\n  constructor(innerItemData) {\n    super();\n    this.locTitleChanged = () => {\n      const val = this.locTitle.renderedHtml;\n      this.setPropertyValue(\"_title\", !!val ? val : undefined);\n    };\n    this.needUpdateMaxDimension = false;\n    this.needUpdateMinDimension = false;\n    const innerItem = innerItemData instanceof Action ? innerItemData.innerItem : innerItemData;\n    this.innerItem = innerItem;\n    this.locTitle = !!innerItem ? innerItem[\"locTitle\"] : null;\n    //Object.assign(this, item) to support IE11\n    if (!!innerItem) {\n      for (var key in innerItem) {\n        if (key === \"locTitle\" || key === \"title\" && !!this.locTitle && !!this.title) continue;\n        this[key] = innerItem[key];\n      }\n    }\n    if (!!this.locTitleName) {\n      this.locTitleChanged();\n    }\n    this.locStrChangedInPopupModel();\n  }\n  createLocTitle() {\n    return this.createLocalizableString(\"title\", this, true);\n  }\n  setSubItems(options) {\n    this.markerIconName = \"icon-next_16x16\";\n    this.component = this.getGroupComponentName();\n    this.items = [...options.items];\n    if (!this.popupModel) {\n      this.createPopupForSubitems(options);\n    } else {\n      const list = this.popupModel.contentComponentData.model;\n      list.setItems(this.items);\n    }\n  }\n  createPopupForSubitems(options) {\n    const listOptions = Object.assign({}, options);\n    listOptions.searchEnabled = false;\n    const popupModel = createPopupModelWithListModel(listOptions, {\n      horizontalPosition: \"right\",\n      showPointer: false,\n      canShrink: false\n    });\n    popupModel.cssClass = \"sv-popup-inner\";\n    this.popupModel = popupModel;\n  }\n  getLocTitle() {\n    return this.locTitleValue;\n  }\n  setLocTitle(val) {\n    if (!val && !this.locTitleValue) {\n      val = this.createLocTitle();\n    }\n    if (!!this.locTitleValue) {\n      this.locTitleValue.onStringChanged.remove(this.locTitleChanged);\n    }\n    this.locTitleValue = val;\n    this.locTitleValue.onStringChanged.add(this.locTitleChanged);\n    this.locTitleChanged();\n  }\n  getTitle() {\n    return this._title;\n  }\n  setTitle(val) {\n    this._title = val;\n  }\n  get locTitleName() {\n    return this.locTitle.localizationName;\n  }\n  set locTitleName(val) {\n    this.locTitle.localizationName = val;\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.locTooltipChanged();\n    this.locStrChangedInPopupModel();\n  }\n  doAction(args) {\n    const evt = !!args.originalEvent ? args.originalEvent : args;\n    this.action(this, evt.isTrusted);\n    evt.preventDefault();\n    evt.stopPropagation();\n    return true;\n  }\n  doMouseDown(args) {\n    this.isMouseDown = true;\n  }\n  doFocus(args) {\n    if (!!this.onFocus) {\n      const evt = !!args.originalEvent ? args.originalEvent : args;\n      this.onFocus(this.isMouseDown, evt);\n    }\n    this.isMouseDown = false;\n  }\n  locStrChangedInPopupModel() {\n    if (!this.popupModel || !this.popupModel.contentComponentData || !this.popupModel.contentComponentData.model) return;\n    const model = this.popupModel.contentComponentData.model;\n    if (Array.isArray(model.actions)) {\n      const actions = model.actions;\n      actions.forEach(item => {\n        if (!!item.locStrsChanged) {\n          item.locStrsChanged();\n        }\n      });\n    }\n  }\n  locTooltipChanged() {\n    if (!this.locTooltipName) return;\n    this.tooltip = getLocaleString(this.locTooltipName, this.locTitle.locale);\n  }\n  //ILocalizableOwner\n  getLocale() {\n    return this.owner ? this.owner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text, name, item) {\n    return this.owner ? this.owner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getProcessedText(text) {\n    return this.owner ? this.owner.getProcessedText(text) : text;\n  }\n  getRenderer(name) {\n    return this.owner ? this.owner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return this.owner ? this.owner.getRendererContext(locStr) : locStr;\n  }\n  setVisible(val) {\n    if (this.visible !== val) {\n      this._visible = val;\n    }\n  }\n  getVisible() {\n    return this._visible;\n  }\n  setEnabled(val) {\n    this._enabled = val;\n  }\n  getEnabled() {\n    if (this.enabledIf) return this.enabledIf();\n    return this._enabled;\n  }\n  setComponent(val) {\n    this._component = val;\n  }\n  getComponent() {\n    return this._component;\n  }\n  getGroupComponentName() {\n    return \"sv-list-item-group\";\n  }\n  dispose() {\n    if (!!this.locTitleValue) {\n      this.locTitleValue.onStringChanged.remove(this.locTitleChanged);\n    }\n    this.locTitleChanged = undefined;\n    this.action = undefined;\n    super.dispose();\n    if (this.popupModel) {\n      this.popupModel.dispose();\n    }\n  }\n  updateDimension(mode, htmlElement, calcDimension) {\n    const property = mode == \"small\" ? \"minDimension\" : \"maxDimension\";\n    if (htmlElement) {\n      const actionContainer = htmlElement;\n      if (actionContainer.classList.contains(\"sv-action--hidden\")) {\n        actionContainer.classList.remove(\"sv-action--hidden\");\n        this[property] = calcDimension(htmlElement);\n        actionContainer.classList.add(\"sv-action--hidden\");\n      } else {\n        this[property] = calcDimension(htmlElement);\n      }\n    }\n  }\n  afterRender() {\n    this.afterRenderCallback && this.afterRenderCallback();\n  }\n  updateMode(mode, callback) {\n    if (this.updateModeCallback) {\n      this.updateModeCallback(mode, callback);\n    } else {\n      this.afterRenderCallback = () => {\n        this.updateModeCallback(mode, callback);\n        this.afterRenderCallback = undefined;\n      };\n    }\n  }\n  updateDimensions(calcDimension, callback, modeToCalculate) {\n    const mode = !modeToCalculate || modeToCalculate == \"large\" && this.mode !== \"small\" ? this.mode : modeToCalculate;\n    this.updateMode(mode, (mode, htmlElement) => {\n      this.updateDimension(mode, htmlElement, calcDimension);\n      if (!modeToCalculate) {\n        this.updateMode(mode !== \"small\" ? \"small\" : \"large\", (mode, htmlElement) => {\n          this.updateDimension(mode, htmlElement, calcDimension);\n          callback();\n        });\n      } else {\n        callback();\n      }\n    });\n  }\n}\n__decorate([property()], Action.prototype, \"id\", void 0);\n__decorate([property({\n  defaultValue: true\n})], Action.prototype, \"_visible\", void 0);\n__decorate([property({\n  onSet: (_, target) => {\n    target.locTooltipChanged();\n  }\n})], Action.prototype, \"locTooltipName\", void 0);\n__decorate([property()], Action.prototype, \"_enabled\", void 0);\n__decorate([property()], Action.prototype, \"action\", void 0);\n__decorate([property()], Action.prototype, \"onFocus\", void 0);\n__decorate([property()], Action.prototype, \"_component\", void 0);\n__decorate([property()], Action.prototype, \"items\", void 0);\n__decorate([property({\n  onSet: (val, target) => {\n    if (target.locTitleValue.text === val) return;\n    target.locTitleValue.text = val;\n  }\n})], Action.prototype, \"_title\", void 0);\nclass ActionDropdownViewModel {\n  constructor(item) {\n    this.item = item;\n    this.funcKey = \"sv-dropdown-action\";\n    this.setupPopupCallbacks();\n  }\n  setupPopupCallbacks() {\n    const popupModel = this.popupModel = this.item.popupModel;\n    if (!popupModel) return;\n    popupModel.registerPropertyChangedHandlers([\"isVisible\"], () => {\n      if (!popupModel.isVisible) {\n        this.item.pressed = false;\n      } else {\n        this.item.pressed = true;\n      }\n    }, this.funcKey);\n  }\n  removePopupCallbacks() {\n    if (!!this.popupModel) {\n      this.popupModel.unregisterPropertyChangedHandlers([\"isVisible\"], this.funcKey);\n    }\n  }\n  dispose() {\n    this.removePopupCallbacks();\n  }\n}\nvar UpdateResponsivenessMode;\n(function (UpdateResponsivenessMode) {\n  UpdateResponsivenessMode[UpdateResponsivenessMode[\"None\"] = 0] = \"None\";\n  UpdateResponsivenessMode[UpdateResponsivenessMode[\"Light\"] = 1] = \"Light\";\n  UpdateResponsivenessMode[UpdateResponsivenessMode[\"Hard\"] = 3] = \"Hard\";\n})(UpdateResponsivenessMode || (UpdateResponsivenessMode = {}));\nclass AdaptiveActionContainer extends ActionContainer {\n  hideItemsGreaterN(visibleItemsCount) {\n    const actionsToHide = this.getActionsToHide();\n    visibleItemsCount = Math.max(visibleItemsCount, this.minVisibleItemsCount - (this.visibleActions.length - actionsToHide.length));\n    const hiddenItems = [];\n    actionsToHide.forEach(item => {\n      if (visibleItemsCount <= 0) {\n        item.mode = \"popup\";\n        hiddenItems.push(item.innerItem);\n      }\n      visibleItemsCount--;\n    });\n    this.hiddenItemsListModel.setItems(hiddenItems);\n  }\n  getActionsToHide() {\n    return this.visibleActions.filter(action => !action.disableHide);\n  }\n  updateItemMode(availableSpace, maxItemsSize) {\n    const items = this.visibleActions;\n    for (let index = items.length - 1; index >= 0; index--) {\n      if (maxItemsSize > availableSpace && !items[index].disableShrink) {\n        maxItemsSize -= items[index].maxDimension - items[index].minDimension;\n        items[index].mode = \"small\";\n      } else {\n        items[index].mode = \"large\";\n      }\n    }\n  }\n  constructor() {\n    super();\n    this.minVisibleItemsCount = 0;\n    this.isResponsivenessDisabled = false;\n    this.isInitialized = false;\n    this.dotsItem = createDropdownActionModelAdvanced({\n      id: \"dotsItem-id\" + this.id++,\n      css: \"sv-dots\",\n      innerCss: \"sv-dots__item\",\n      iconName: \"icon-more\",\n      visible: false,\n      tooltip: getLocaleString(\"more\")\n    }, {\n      items: [],\n      allowSelection: false\n    });\n  }\n  get hiddenItemsListModel() {\n    return this.dotsItem.data;\n  }\n  onSet() {\n    super.onSet();\n    this.raiseUpdate({\n      updateResponsivenessMode: UpdateResponsivenessMode.Hard\n    });\n  }\n  onPush(action) {\n    super.onPush(action);\n    this.raiseUpdate({\n      updateResponsivenessMode: UpdateResponsivenessMode.Hard\n    });\n  }\n  onRemove(action) {\n    super.onRemove(action);\n    this.raiseUpdate({\n      updateResponsivenessMode: UpdateResponsivenessMode.Hard\n    });\n  }\n  onActionPropertyChanged(action, options) {\n    super.onActionPropertyChanged(action, options);\n    if (options.name == \"_visible\" || options.name == \"_title\") {\n      action.needUpdateMaxDimension = action.visible;\n      action.needUpdateMinDimension = action.visible;\n      this.raiseUpdate({\n        updateResponsivenessMode: UpdateResponsivenessMode.Light\n      });\n    }\n    if (options.name == \"disableHide\" && options.newValue && action.mode == \"popup\") {\n      this.raiseUpdate({\n        updateResponsivenessMode: UpdateResponsivenessMode.Light\n      });\n    }\n  }\n  getRenderedActions() {\n    const actions = super.getRenderedActions();\n    if (actions.length == 0 || actions.length === 1 && !!actions[0].iconName) return actions;\n    return actions.concat([this.dotsItem]);\n  }\n  getAllActions() {\n    return this.actions.concat(this.dotsItem);\n  }\n  getActionMinDimension(action) {\n    return action.disableShrink ? action.maxDimension : action.minDimension;\n  }\n  getVisibleItemsCount(options) {\n    let {\n      availableSpace,\n      gap\n    } = options;\n    availableSpace -= this.dotsItem.minDimension + gap;\n    let currentItemsSize = 0;\n    if (this.visibleActions[0].disableHide) {\n      availableSpace += gap;\n    } else {\n      currentItemsSize -= gap;\n    }\n    this.visibleActions.filter(action => action.disableHide).forEach(action => {\n      return availableSpace -= this.getActionMinDimension(action) + gap;\n    });\n    const actionsToHide = this.getActionsToHide();\n    if (actionsToHide.length === 1 && !!actionsToHide[0].iconName) {\n      return 1;\n    }\n    for (let i = 0; i < actionsToHide.length; i++) {\n      currentItemsSize += this.getActionMinDimension(actionsToHide[i]) + gap;\n      if (currentItemsSize > availableSpace) {\n        return i;\n      }\n    }\n  }\n  fit(options) {\n    var _a;\n    if (options.availableSpace <= 0) return;\n    options.gap = (_a = options.gap) !== null && _a !== void 0 ? _a : 0;\n    const {\n      availableSpace,\n      gap\n    } = options;\n    this.dotsItem.visible = false;\n    const actions = this.visibleActions;\n    let minSize = -1 * options.gap;\n    let maxSize = -1 * options.gap;\n    actions.forEach(action => {\n      minSize += this.getActionMinDimension(action) + gap;\n      maxSize += action.maxDimension + gap;\n    });\n    if (availableSpace >= maxSize) {\n      this.setActionsMode(\"large\");\n    } else if (availableSpace < minSize) {\n      this.setActionsMode(\"small\");\n      this.hideItemsGreaterN(this.getVisibleItemsCount(options));\n      this.dotsItem.visible = !!this.hiddenItemsListModel.actions.length;\n    } else {\n      this.updateItemMode(options.availableSpace, maxSize);\n    }\n  }\n  createResponsivityManager(container) {\n    return new ResponsivityManager(container, this);\n  }\n  mergeUpdateOptions(nextOptions, prevOptions) {\n    const options = super.mergeUpdateOptions(nextOptions, prevOptions);\n    options.updateResponsivenessMode = options.updateResponsivenessMode | prevOptions.updateResponsivenessMode;\n    return options;\n  }\n  raiseUpdate(options) {\n    super.raiseUpdate(options);\n  }\n  update(options) {\n    var _a;\n    super.update(options);\n    if (options.updateResponsivenessMode) {\n      (_a = this.responsivityManager) === null || _a === void 0 ? void 0 : _a.update(options.updateResponsivenessMode == UpdateResponsivenessMode.Hard);\n    }\n  }\n  initResponsivityManager(container) {\n    if (!!this.responsivityManager) {\n      if (this.responsivityManager.container == container) {\n        return;\n      }\n      this.responsivityManager.dispose();\n    }\n    this.isInitialized = false;\n    this.responsivityManager = this.createResponsivityManager(container);\n    this.responsivityManager.afterInitializeCallback = () => {\n      this.isInitialized = true;\n    };\n  }\n  resetResponsivityManager() {\n    if (!!this.responsivityManager) {\n      this.responsivityManager.dispose();\n      this.responsivityManager = undefined;\n    }\n  }\n  getRootStyle() {\n    if (!this.isInitialized && !this.isResponsivenessDisabled) {\n      return {\n        opacity: 0\n      };\n    } else {\n      return undefined;\n    }\n  }\n  setActionsMode(mode) {\n    this.actions.forEach(action => {\n      if (mode == \"small\" && action.disableShrink) {\n        action.mode = \"large\";\n      } else {\n        action.mode = mode;\n      }\n    });\n  }\n  dispose() {\n    super.dispose();\n    this.dotsItem.data.dispose();\n    this.dotsItem.dispose();\n    this.resetResponsivityManager();\n  }\n}\n__decorate([property()], AdaptiveActionContainer.prototype, \"isInitialized\", void 0);\nclass AnimationUtils {\n  constructor() {\n    this.cancelQueue = [];\n  }\n  getMsFromRule(value) {\n    if (value === \"auto\") return 0;\n    return Number(value.slice(0, -1).replace(\",\", \".\")) * 1000;\n  }\n  reflow(element) {\n    return element.offsetHeight;\n  }\n  getAnimationsCount(element) {\n    let animationName = \"\";\n    if (getComputedStyle) {\n      animationName = getComputedStyle(element).animationName;\n    }\n    return animationName && animationName != \"none\" ? animationName.split(\", \").length : 0;\n  }\n  getAnimationDuration(element) {\n    const style = getComputedStyle(element);\n    const delays = style[\"animationDelay\"].split(\", \");\n    const durations = style[\"animationDuration\"].split(\", \");\n    let duration = 0;\n    for (let i = 0; i < Math.max(durations.length, delays.length); i++) {\n      duration = Math.max(duration, this.getMsFromRule(durations[i % durations.length]) + this.getMsFromRule(delays[i % delays.length]));\n    }\n    return duration;\n  }\n  addCancelCallback(callback) {\n    this.cancelQueue.push(callback);\n  }\n  removeCancelCallback(callback) {\n    if (this.cancelQueue.indexOf(callback) >= 0) {\n      this.cancelQueue.splice(this.cancelQueue.indexOf(callback), 1);\n    }\n  }\n  onAnimationEnd(element, callback, options) {\n    let cancelTimeout;\n    let animationsCount = this.getAnimationsCount(element);\n    const onEndCallback = (isCancel = true) => {\n      callback(isCancel);\n      clearTimeout(cancelTimeout);\n      this.removeCancelCallback(onEndCallback);\n      element.removeEventListener(\"animationend\", onAnimationEndCallback);\n    };\n    const onAnimationEndCallback = event => {\n      if (event.target == event.currentTarget && --animationsCount <= 0) {\n        onEndCallback(false);\n      }\n    };\n    if (animationsCount > 0) {\n      element.addEventListener(\"animationend\", onAnimationEndCallback);\n      this.addCancelCallback(onEndCallback);\n      cancelTimeout = setTimeout(() => {\n        onEndCallback(false);\n      }, this.getAnimationDuration(element) + 10);\n    } else {\n      callback(true);\n    }\n  }\n  afterAnimationRun(element, options) {\n    if (element && options) {\n      options.onAfterRunAnimation && options.onAfterRunAnimation(element);\n    }\n  }\n  beforeAnimationRun(element, options) {\n    if (element && options) {\n      options.onBeforeRunAnimation && options.onBeforeRunAnimation(element);\n    }\n  }\n  getCssClasses(options) {\n    return options.cssClass.replace(/\\s+$/, \"\").split(/\\s+/);\n  }\n  runAnimation(element, options, callback) {\n    if (element && (options === null || options === void 0 ? void 0 : options.cssClass)) {\n      this.reflow(element);\n      this.getCssClasses(options).forEach(cssClass => {\n        element.classList.add(cssClass);\n      });\n      this.onAnimationEnd(element, callback, options);\n    } else {\n      callback(true);\n    }\n  }\n  clearHtmlElement(element, options) {\n    if (element && options.cssClass) {\n      this.getCssClasses(options).forEach(cssClass => {\n        element.classList.remove(cssClass);\n      });\n    }\n    this.afterAnimationRun(element, options);\n  }\n  onNextRender(callback, isCancel = false) {\n    if (!isCancel && DomWindowHelper.isAvailable()) {\n      let latestRAF;\n      const cancelCallback = () => {\n        callback(true);\n        cancelAnimationFrame(latestRAF);\n      };\n      latestRAF = DomWindowHelper.requestAnimationFrame(() => {\n        latestRAF = DomWindowHelper.requestAnimationFrame(() => {\n          callback(false);\n          this.removeCancelCallback(cancelCallback);\n        });\n      });\n      this.addCancelCallback(cancelCallback);\n    } else {\n      callback(true);\n    }\n  }\n  cancel() {\n    const cancelQueue = [].concat(this.cancelQueue);\n    cancelQueue.forEach(callback => callback());\n    this.cancelQueue = [];\n  }\n}\nclass AnimationPropertyUtils extends AnimationUtils {\n  onEnter(options) {\n    const htmlElement = options.getAnimatedElement();\n    const enterOptions = options.getEnterOptions ? options.getEnterOptions() : {};\n    this.beforeAnimationRun(htmlElement, enterOptions);\n    this.runAnimation(htmlElement, enterOptions, () => {\n      this.clearHtmlElement(htmlElement, enterOptions);\n    });\n  }\n  onLeave(options, callback) {\n    const htmlElement = options.getAnimatedElement();\n    const leaveOptions = options.getLeaveOptions ? options.getLeaveOptions() : {};\n    this.beforeAnimationRun(htmlElement, leaveOptions);\n    this.runAnimation(htmlElement, leaveOptions, isCancel => {\n      callback();\n      this.onNextRender(() => {\n        this.clearHtmlElement(htmlElement, leaveOptions);\n      }, isCancel);\n    });\n  }\n}\nclass AnimationGroupUtils extends AnimationUtils {\n  runGroupAnimation(options, addedItems, removedItems, reorderedItems, callback) {\n    const info = {\n      isAddingRunning: addedItems.length > 0,\n      isDeletingRunning: removedItems.length > 0,\n      isReorderingRunning: reorderedItems.length > 0\n    };\n    const addedHtmlElements = addedItems.map(el => options.getAnimatedElement(el));\n    const enterOptions = addedItems.map(el => options.getEnterOptions ? options.getEnterOptions(el, info) : {});\n    const removedHtmlElements = removedItems.map(el => options.getAnimatedElement(el));\n    const leaveOptions = removedItems.map(el => options.getLeaveOptions ? options.getLeaveOptions(el, info) : {});\n    const reorderedHtmlElements = reorderedItems.map(el => options.getAnimatedElement(el.item));\n    const reorderedOptions = reorderedItems.map(el => options.getReorderOptions ? options.getReorderOptions(el.item, el.movedForward, info) : {});\n    addedItems.forEach((_, i) => {\n      this.beforeAnimationRun(addedHtmlElements[i], enterOptions[i]);\n    });\n    removedItems.forEach((_, i) => {\n      this.beforeAnimationRun(removedHtmlElements[i], leaveOptions[i]);\n    });\n    reorderedItems.forEach((_, i) => {\n      this.beforeAnimationRun(reorderedHtmlElements[i], reorderedOptions[i]);\n    });\n    let counter = addedItems.length + removedItems.length + reorderedHtmlElements.length;\n    const onAnimationEndCallback = isCancel => {\n      if (--counter <= 0) {\n        callback && callback();\n        this.onNextRender(() => {\n          addedItems.forEach((_, i) => {\n            this.clearHtmlElement(addedHtmlElements[i], enterOptions[i]);\n          });\n          removedItems.forEach((_, i) => {\n            this.clearHtmlElement(removedHtmlElements[i], leaveOptions[i]);\n          });\n          reorderedItems.forEach((_, i) => {\n            this.clearHtmlElement(reorderedHtmlElements[i], reorderedOptions[i]);\n          });\n        }, isCancel);\n      }\n    };\n    addedItems.forEach((_, i) => {\n      this.runAnimation(addedHtmlElements[i], enterOptions[i], onAnimationEndCallback);\n    });\n    removedItems.forEach((_, i) => {\n      this.runAnimation(removedHtmlElements[i], leaveOptions[i], onAnimationEndCallback);\n    });\n    reorderedItems.forEach((_, i) => {\n      this.runAnimation(reorderedHtmlElements[i], reorderedOptions[i], onAnimationEndCallback);\n    });\n  }\n}\nclass AnimationProperty {\n  constructor(animationOptions, update, getCurrentValue) {\n    this.animationOptions = animationOptions;\n    this.update = update;\n    this.getCurrentValue = getCurrentValue;\n    this._debouncedSync = debounce(newValue => {\n      this.cancelAnimations();\n      try {\n        this._sync(newValue);\n      } catch (_a) {\n        this.update(newValue);\n      }\n    });\n  }\n  onNextRender(callback, onCancel) {\n    const rerenderEvent = this.animationOptions.getRerenderEvent();\n    if (!rerenderEvent) {\n      if (DomWindowHelper.isAvailable()) {\n        const raf = DomWindowHelper.requestAnimationFrame(() => {\n          callback();\n          this.cancelCallback = undefined;\n        });\n        this.cancelCallback = () => {\n          onCancel && onCancel();\n          cancelAnimationFrame(raf);\n          this.cancelCallback = undefined;\n        };\n      } else {\n        throw new Error(\"Can't get next render\");\n      }\n    } else {\n      const clear = () => {\n        rerenderEvent.remove(nextRenderCallback);\n        this.cancelCallback = undefined;\n      };\n      const nextRenderCallback = (_, options) => {\n        if (options.isCancel) {\n          onCancel && onCancel();\n        } else {\n          callback();\n        }\n        clear();\n      };\n      this.cancelCallback = () => {\n        onCancel && onCancel();\n        clear();\n      };\n      rerenderEvent.add(nextRenderCallback);\n    }\n  }\n  sync(newValue) {\n    if (this.animationOptions.isAnimationEnabled()) {\n      this._debouncedSync.run(newValue);\n    } else {\n      this.cancel();\n      this.update(newValue);\n    }\n  }\n  cancel() {\n    this._debouncedSync.cancel();\n    this.cancelAnimations();\n  }\n  cancelAnimations() {\n    this.cancelCallback && this.cancelCallback();\n    this.animation.cancel();\n  }\n}\nclass AnimationBoolean extends AnimationProperty {\n  constructor() {\n    super(...arguments);\n    this.animation = new AnimationPropertyUtils();\n  }\n  _sync(newValue) {\n    if (newValue !== this.getCurrentValue()) {\n      if (newValue) {\n        this.onNextRender(() => {\n          this.animation.onEnter(this.animationOptions);\n        });\n        this.update(newValue);\n      } else {\n        this.animation.onLeave(this.animationOptions, () => {\n          this.update(newValue);\n        });\n      }\n    } else {\n      this.update(newValue);\n    }\n  }\n}\nclass AnimationGroup extends AnimationProperty {\n  constructor() {\n    super(...arguments);\n    this.animation = new AnimationGroupUtils();\n  }\n  _sync(newValue) {\n    var _a, _b;\n    newValue = [].concat(newValue);\n    const oldValue = [].concat(this.getCurrentValue());\n    const allowSyncRemovalAddition = (_a = this.animationOptions.allowSyncRemovalAddition) !== null && _a !== void 0 ? _a : true;\n    let compareResult = compareArrays(oldValue, newValue, (_b = this.animationOptions.getKey) !== null && _b !== void 0 ? _b : item => item);\n    if (!allowSyncRemovalAddition && (compareResult.reorderedItems.length > 0 || compareResult.addedItems.length > 0)) {\n      compareResult.deletedItems = [];\n      compareResult.mergedItems = newValue;\n    }\n    if (!!this.animationOptions.onCompareArrays) {\n      this.animationOptions.onCompareArrays(compareResult);\n    }\n    let {\n      addedItems,\n      reorderedItems,\n      deletedItems,\n      mergedItems\n    } = compareResult;\n    const runAnimationCallback = () => {\n      this.animation.runGroupAnimation(this.animationOptions, addedItems, deletedItems, reorderedItems, () => {\n        if (deletedItems.length > 0) {\n          this.update(newValue);\n        }\n      });\n    };\n    if ([addedItems, deletedItems, reorderedItems].some(arr => arr.length > 0)) {\n      if (deletedItems.length <= 0 || reorderedItems.length > 0 || addedItems.length > 0) {\n        this.onNextRender(runAnimationCallback, () => {\n          this.update(newValue);\n        });\n        this.update(mergedItems);\n      } else {\n        runAnimationCallback();\n      }\n    } else {\n      this.update(newValue);\n    }\n  }\n}\nclass AnimationTab extends AnimationProperty {\n  constructor(animationOptions, update, getCurrentValue, mergeValues) {\n    super(animationOptions, update, getCurrentValue);\n    this.mergeValues = mergeValues;\n    this.animation = new AnimationGroupUtils();\n  }\n  _sync(newValue) {\n    const oldValue = [].concat(this.getCurrentValue());\n    if (oldValue[0] !== newValue[0]) {\n      const tempValue = !!this.mergeValues ? this.mergeValues(newValue, oldValue) : [].concat(oldValue, newValue);\n      this.onNextRender(() => {\n        this.animation.runGroupAnimation(this.animationOptions, newValue, oldValue, [], () => {\n          this.update(newValue);\n        });\n      }, () => this.update(newValue));\n      this.update(tempValue, true);\n    } else {\n      this.update(newValue);\n    }\n  }\n}\n\n/**\n * A base class for the [`SurveyElement`](https://surveyjs.io/form-library/documentation/surveyelement) and [`SurveyModel`](https://surveyjs.io/form-library/documentation/surveymodel) classes.\n */\nclass SurveyElementCore extends Base {\n  constructor() {\n    super();\n    this.createLocTitleProperty();\n  }\n  createLocTitleProperty() {\n    return this.createLocalizableString(\"title\", this, true);\n  }\n  /**\n   * Returns `true` if the survey element is a page.\n   *\n   * This property returns `false` for [`PageModel`](https://surveyjs.io/form-library/documentation/api-reference/page-model) objects in the following cases:\n   *\n   * - `SurveyModel`'s [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) is set to `\"singlePage\"`.\n   * - The page is included in a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   *\n   * In those cases, the survey creates an internal `PageModel` object to show all questions on one page, and all regular pages become panels.\n   */\n  get isPage() {\n    return false;\n  }\n  /**\n   * Returns `true` if the survey element is a panel or acts as one.\n   *\n   * This property returns `true` for `PageModel` objects in the following cases:\n   *\n   * - `SurveyModel`'s [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) is set to `\"singlePage\"`.\n   * - The page is included in a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   *\n   * In those cases, the survey creates an internal `PageModel` object to show all questions on one page, and all regular pages become panels.\n   */\n  get isPanel() {\n    return false;\n  }\n  /**\n   * Returns `true` if the survey element is a question.\n   */\n  get isQuestion() {\n    return false;\n  }\n  /**\n   * Returns `true` if the element is a survey.\n   */\n  get isSurvey() {\n    return false;\n  }\n  /**\n   * A title for the survey element. If `title` is undefined, the `name` property value is displayed instead.\n   *\n   * Empty pages and panels do not display their titles or names.\n   *\n   * @see [Configure Question Titles](https://surveyjs.io/form-library/documentation/design-survey-question-titles)\n  */\n  get title() {\n    return this.getLocalizableStringText(\"title\", this.getDefaultTitleValue());\n  }\n  set title(val) {\n    this.setTitleValue(val);\n  }\n  get locTitle() {\n    return this.getLocalizableString(\"title\");\n  }\n  get locRenderedTitle() {\n    return this.locTitle;\n  }\n  getDefaultTitleValue() {\n    return undefined;\n  }\n  setTitleValue(val) {\n    this.setLocalizableStringText(\"title\", val);\n  }\n  /**\n   * Returns `true` if the survey element has a description.\n   * @see description\n  */\n  get hasDescription() {\n    return this.getPropertyValue(\"hasDescription\", undefined, () => this.calcDescriptionVisibility());\n  }\n  set hasDescription(val) {\n    this.setPropertyValue(\"hasDescription\", val);\n  }\n  calcDescriptionVisibility() {\n    const newDescription = this.description;\n    let showPlaceholder = false;\n    if (this.isDesignMode) {\n      const property = Serializer.findProperty(this.getType(), \"description\");\n      showPlaceholder = !!(property === null || property === void 0 ? void 0 : property.placeholder);\n    }\n    return !!newDescription || showPlaceholder && this.isDesignMode;\n  }\n  resetDescriptionVisibility() {\n    this.resetPropertyValue(\"hasDescription\");\n  }\n  get locDescription() {\n    return this.getLocalizableString(\"description\");\n  }\n  get titleTagName() {\n    let titleTagName = this.getDefaultTitleTagName();\n    const survey = this.getSurvey();\n    return !!survey ? survey.getElementTitleTagName(this, titleTagName) : titleTagName;\n  }\n  getDefaultTitleTagName() {\n    return settings.titleTags[this.getType()];\n  }\n  get hasTitle() {\n    return this.title.length > 0;\n  }\n  get hasTitleActions() {\n    return false;\n  }\n  get hasTitleEvents() {\n    return this.hasTitleActions;\n  }\n  getTitleToolbar() {\n    return null;\n  }\n  getTitleOwner() {\n    return undefined;\n  }\n  get isTitleOwner() {\n    return !!this.getTitleOwner();\n  }\n  get isTitleRenderedAsString() {\n    return this.getIsTitleRenderedAsString();\n  }\n  toggleState() {\n    return undefined;\n  }\n  get cssClasses() {\n    return {};\n  }\n  get cssTitle() {\n    return \"\";\n  }\n  get ariaTitleId() {\n    return undefined;\n  }\n  get ariaDescriptionId() {\n    return undefined;\n  }\n  get titleTabIndex() {\n    return undefined;\n  }\n  get titleAriaExpanded() {\n    return undefined;\n  }\n  get titleAriaRole() {\n    return undefined;\n  }\n  get ariaLabel() {\n    return this.locTitle.renderedHtml;\n  }\n  get titleAriaLabel() {\n    return this.ariaLabel;\n  }\n  getIsTitleRenderedAsString() {\n    return !this.isTitleOwner;\n  }\n}\n__decorate([property({\n  localizable: true,\n  onSet: (newDescription, self) => {\n    self.resetDescriptionVisibility();\n  }\n})], SurveyElementCore.prototype, \"description\", void 0);\n/**\n * A base class for all survey elements.\n */\nclass SurveyElement extends SurveyElementCore {\n  static getProgressInfoByElements(children, isRequired) {\n    const info = Base.createProgressInfo();\n    for (let i = 0; i < children.length; i++) {\n      if (!children[i].isVisible) continue;\n      const childInfo = children[i].getProgressInfo();\n      info.questionCount += childInfo.questionCount;\n      info.answeredQuestionCount += childInfo.answeredQuestionCount;\n      info.requiredQuestionCount += childInfo.requiredQuestionCount;\n      info.requiredAnsweredQuestionCount += childInfo.requiredAnsweredQuestionCount;\n    }\n    if (isRequired && info.questionCount > 0) {\n      if (info.requiredQuestionCount == 0) info.requiredQuestionCount = 1;\n      if (info.answeredQuestionCount > 0) info.requiredAnsweredQuestionCount = 1;\n    }\n    return info;\n  }\n  static IsNeedScrollIntoView(el, checkLeft, scrollIfVisible) {\n    const elTop = scrollIfVisible ? -1 : el.getBoundingClientRect().top;\n    let needScroll = elTop < 0;\n    let elLeft = -1;\n    if (!needScroll && checkLeft) {\n      elLeft = el.getBoundingClientRect().left;\n      needScroll = elLeft < 0;\n    }\n    if (!needScroll && DomWindowHelper.isAvailable()) {\n      const height = DomWindowHelper.getInnerHeight();\n      needScroll = height > 0 && height < elTop;\n      if (!needScroll && checkLeft) {\n        const width = DomWindowHelper.getInnerWidth();\n        needScroll = width > 0 && width < elLeft;\n      }\n    }\n    return needScroll;\n  }\n  static ScrollIntoView(el, scrollIntoViewOptions, doneCallback) {\n    el.scrollIntoView(scrollIntoViewOptions);\n    if (typeof doneCallback === \"function\") {\n      let lastPos = null;\n      let same = 0;\n      const checkPos = () => {\n        const newPos = el.getBoundingClientRect().top;\n        if (newPos === lastPos) {\n          if (same++ > 2) {\n            doneCallback();\n            return;\n          }\n        } else {\n          lastPos = newPos;\n          same = 0;\n        }\n        requestAnimationFrame(checkPos);\n      };\n      DomWindowHelper.requestAnimationFrame(checkPos);\n    }\n  }\n  static ScrollElementToTop(element, scrollIfVisible, scrollIntoViewOptions, doneCallback) {\n    return SurveyElement.ScrollElementToViewCore(element, false, scrollIfVisible, scrollIntoViewOptions, doneCallback);\n  }\n  static ScrollElementToViewCore(el, checkLeft, scrollIfVisible, scrollIntoViewOptions, doneCallback) {\n    if (!el || !el.scrollIntoView) {\n      doneCallback && doneCallback();\n      return false;\n    }\n    const needScroll = SurveyElement.IsNeedScrollIntoView(el, checkLeft, scrollIfVisible);\n    if (needScroll) {\n      SurveyElement.ScrollIntoView(el, scrollIntoViewOptions, doneCallback);\n    } else {\n      doneCallback && doneCallback();\n    }\n    return needScroll;\n  }\n  static GetFirstNonTextElement(elements, removeSpaces = false) {\n    if (!elements || !elements.length || elements.length == 0) return null;\n    if (removeSpaces) {\n      let tEl = elements[0];\n      if (tEl.nodeName === \"#text\") tEl.data = \"\";\n      tEl = elements[elements.length - 1];\n      if (tEl.nodeName === \"#text\") tEl.data = \"\";\n    }\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].nodeName != \"#text\" && elements[i].nodeName != \"#comment\") return elements[i];\n    }\n    return null;\n  }\n  static FocusElement(elementId, isTimeOut, containerEl) {\n    if (!elementId || !DomDocumentHelper.isAvailable()) return false;\n    const res = !isTimeOut ? SurveyElement.focusElementCore(elementId, containerEl) : false;\n    if (!res) {\n      setTimeout(() => {\n        SurveyElement.focusElementCore(elementId, containerEl);\n      }, isTimeOut ? 100 : 10);\n    }\n    return res;\n  }\n  static focusElementCore(elementId, containerEl) {\n    const {\n      root\n    } = settings.environment;\n    if (!root && !containerEl) return false;\n    const el = containerEl ? containerEl.querySelector(`#${CSS.escape(elementId)}`) : root.getElementById(elementId);\n    // https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n    if (el && !el[\"disabled\"] && el.style.display !== \"none\" && el.offsetParent !== null) {\n      SurveyElement.ScrollElementToViewCore(el, true, false);\n      el.focus();\n      return true;\n    }\n    return false;\n  }\n  get effectiveColSpan() {\n    const res = this.getPropertyValueWithoutDefault(\"effectiveColSpan\");\n    if (res !== undefined) return res;\n    this.setRootStyle();\n    return this.getPropertyValue(\"effectiveColSpan\");\n  }\n  /**\n   * Specifies how many columns this survey element spans in the grid layout. Applies only if you set the `SurveyModel`'s [`gridLayoutEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#gridLayoutEnabled) property to `true` and define the [`gridLayoutColumns`](https://surveyjs.io/form-library/documentation/api-reference/page-model#gridLayoutColumns) array for the parent page or panel.\n   *\n   * Default value: 1\n   */\n  get colSpan() {\n    return this.getPropertyValue(\"colSpan\", 1);\n  }\n  set colSpan(val) {\n    this.setPropertyValue(\"colSpan\", val);\n  }\n  constructor(name) {\n    super();\n    this.selectedElementInDesignValue = this;\n    this.disableDesignActions = SurveyElement.CreateDisabledDesignElements;\n    this.parentQuestionValue = null;\n    this.isContentElement = false;\n    this.isEditableTemplateElement = false;\n    this.isInteractiveDesignElement = true;\n    this.isSingleInRow = true;\n    this._renderedIsExpanded = true;\n    this._isAnimatingCollapseExpand = false;\n    this.animationCollapsed = new AnimationBoolean(this.getExpandCollapseAnimationOptions(), val => {\n      this._renderedIsExpanded = val;\n      if (this.animationAllowed) {\n        if (val) {\n          this.isAnimatingCollapseExpand = true;\n        } else {\n          this.updateElementCss(false);\n        }\n      }\n    }, () => this.renderedIsExpanded);\n    this.onAfterRenderElement = this.addEvent();\n    this.setPropertyValueDirectly(\"name\", this.getValidName(name));\n    this.createNewArray(\"errors\");\n    this.createNewArray(\"titleActions\");\n    this.registerPropertyChangedHandlers([\"isReadOnly\"], () => {\n      this.onReadOnlyChanged();\n    });\n    this.registerPropertyChangedHandlers([\"errors\"], () => {\n      this.updateVisibleErrors();\n    });\n    this.registerPropertyChangedHandlers([\"isSingleInRow\"], () => {\n      this.updateElementCss(false);\n    });\n    this.registerPropertyChangedHandlers([\"minWidth\", \"maxWidth\", \"renderWidth\", \"allowRootStyle\", \"parent\"], () => {\n      this.updateRootStyle();\n    });\n    this.registerPropertyChangedHandlers([\"effectiveColSpan\"], val => {\n      this.colSpan = val;\n    });\n  }\n  onPropertyValueChanged(name, oldValue, newValue) {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (name === \"state\") {\n      this.updateElementCss(false);\n      this.notifyStateChanged(oldValue);\n      if (this.stateChangedCallback) this.stateChangedCallback();\n    }\n  }\n  getSkeletonComponentNameCore() {\n    if (this.survey) {\n      return this.survey.getSkeletonComponentName(this);\n    }\n    return \"sv-skeleton\";\n  }\n  /**\n   * A Dynamic Panel, Dynamic Matrix, or Dropdown Matrix that includes the current question.\n   *\n   * This property is `null` for standalone questions.\n   */\n  get parentQuestion() {\n    return this.parentQuestionValue;\n  }\n  setParentQuestion(val) {\n    this.parentQuestionValue = val;\n    this.onParentQuestionChanged();\n  }\n  onParentQuestionChanged() {}\n  updateElementVisibility() {\n    this.setPropertyValue(\"isVisible\", this.isVisible);\n  }\n  get skeletonComponentName() {\n    return this.getSkeletonComponentNameCore();\n  }\n  /**\n   * Gets and sets the survey element's expand state.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - The survey element is displayed in full and cannot be collapsed in the UI.\n   * - `\"expanded\"` - The survey element is displayed in full and can be collapsed in the UI.\n   * - `\"collapsed\"` - The survey element displays only `title` and `description` and can be expanded in the UI.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-properties-on-multiple-questions-using-panel/ (linkStyle))\n   * @hidefor PageModel\n   * @see toggleState\n   * @see collapse\n   * @see expand\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  get state() {\n    return this.getPropertyValue(\"state\");\n  }\n  set state(val) {\n    this.setPropertyValue(\"state\", val);\n    this.renderedIsExpanded = !this.isCollapsed;\n  }\n  notifyStateChanged(prevState) {\n    if (this.survey) {\n      this.survey.elementContentVisibilityChanged(this);\n    }\n  }\n  /**\n   * Returns `true` if the survey element is collapsed.\n   * @hidefor PageModel\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see expand\n   * @see isExpanded\n   */\n  get isCollapsed() {\n    return this.state === \"collapsed\" && !this.isDesignMode;\n  }\n  /**\n   * Returns `true` if the survey element is expanded.\n   * @hidefor PageModel\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see expand\n   * @see isCollapsed\n   */\n  get isExpanded() {\n    return this.state === \"expanded\";\n  }\n  /**\n   * Collapses the survey element.\n   *\n   * In collapsed state, the element displays only `title` and `description`.\n   * @hidefor PageModel\n   * @see title\n   * @see description\n   * @see state\n   * @see toggleState\n   * @see expand\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  collapse() {\n    if (this.isDesignMode) return;\n    this.state = \"collapsed\";\n  }\n  /**\n   * Expands the survey element.\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  expand() {\n    this.state = \"expanded\";\n  }\n  /**\n   * Toggles the survey element's `state` between collapsed and expanded.\n   * @hidefor PageModel\n   * @see state\n   * @see collapse\n   * @see expand\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  toggleState() {\n    if (this.isCollapsed) {\n      this.expand();\n      return true;\n    }\n    if (this.isExpanded) {\n      this.collapse();\n      return false;\n    }\n    return true;\n  }\n  get hasStateButton() {\n    return this.isExpanded || this.isCollapsed;\n  }\n  get shortcutText() {\n    return this.title || this.name;\n  }\n  getTitleToolbar() {\n    if (!this.titleToolbarValue) {\n      this.titleToolbarValue = this.createActionContainer(true);\n      this.titleToolbarValue.locOwner = this;\n      this.titleToolbarValue.containerCss = (this.isPanel ? this.cssClasses.panel.titleBar : this.cssClasses.titleBar) || \"sv-action-title-bar\";\n      this.titleToolbarValue.setItems(this.getTitleActions());\n      this.titleToolbarValue.flushUpdates();\n    }\n    return this.titleToolbarValue;\n  }\n  createActionContainer(allowAdaptiveActions) {\n    const actionContainer = allowAdaptiveActions ? new AdaptiveActionContainer() : new ActionContainer();\n    if (this.survey && !!this.survey.getCss().actionBar) {\n      actionContainer.cssClasses = this.survey.getCss().actionBar;\n    }\n    return actionContainer;\n  }\n  get titleActions() {\n    return this.getPropertyValue(\"titleActions\");\n  }\n  getTitleActions() {\n    if (!this.isTitleActionRequested) {\n      this.updateTitleActions();\n      this.isTitleActionRequested = true;\n    }\n    return this.titleActions;\n  }\n  getDefaultTitleActions() {\n    return [];\n  }\n  updateTitleActions() {\n    let actions = this.getDefaultTitleActions();\n    if (!!this.survey) {\n      actions = this.survey.getUpdatedElementTitleActions(this, actions);\n    }\n    this.setPropertyValue(\"titleActions\", actions);\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    if (!!this.titleToolbarValue) {\n      this.titleToolbarValue.locStrsChanged();\n    }\n  }\n  get hasTitleActions() {\n    return this.getTitleActions().length > 0;\n  }\n  get hasTitleEvents() {\n    return this.state !== undefined && this.state !== \"default\";\n  }\n  get titleTabIndex() {\n    return !this.isPage && this.state !== \"default\" ? 0 : undefined;\n  }\n  get titleAriaExpanded() {\n    if (this.isPage || this.state === \"default\") return undefined;\n    return this.state === \"expanded\" ? \"true\" : \"false\";\n  }\n  get titleAriaRole() {\n    if (this.isPage || this.state === \"default\") return undefined;\n    return \"button\";\n  }\n  setSurveyImpl(value, isLight) {\n    this.surveyImplValue = value;\n    if (!this.surveyImplValue) {\n      this.setSurveyCore(null);\n      this.surveyDataValue = null;\n    } else {\n      this.surveyDataValue = this.surveyImplValue.getSurveyData();\n      this.setSurveyCore(this.surveyImplValue.getSurvey());\n      this.textProcessorValue = this.surveyImplValue.getTextProcessor();\n      this.onSetData();\n    }\n    if (!!this.survey) {\n      this.resetDescriptionVisibility();\n      this.clearCssClasses();\n    }\n    this.blockAnimations();\n    this.renderedIsExpanded = !this.isCollapsed;\n    this.releaseAnimations();\n  }\n  canRunConditions() {\n    return super.canRunConditions() && !!this.data;\n  }\n  getDataFilteredValues() {\n    return !!this.data ? this.data.getFilteredValues() : {};\n  }\n  getDataFilteredProperties() {\n    var props = !!this.data ? this.data.getFilteredProperties() : {};\n    props.question = this;\n    return props;\n  }\n  get surveyImpl() {\n    return this.surveyImplValue;\n  }\n  /* You shouldn't use this method ever */\n  __setData(data) {\n    this.surveyDataValue = data;\n  }\n  get data() {\n    return this.surveyDataValue;\n  }\n  /**\n   * Returns the survey object.\n   */\n  get survey() {\n    return this.getSurvey();\n  }\n  getSurvey(live = false) {\n    if (!!this.surveyValue) return this.surveyValue;\n    if (!!this.surveyImplValue) {\n      this.setSurveyCore(this.surveyImplValue.getSurvey());\n    }\n    return this.surveyValue;\n  }\n  setSurveyCore(value) {\n    this.surveyValue = value;\n    if (!!this.surveyChangedCallback) {\n      this.surveyChangedCallback();\n    }\n  }\n  get skeletonHeight() {\n    let skeletonHeight = undefined;\n    if (!!this.survey && this.survey.skeletonHeight) {\n      skeletonHeight = this.survey.skeletonHeight + \"px\";\n    }\n    return skeletonHeight;\n  }\n  get isInternal() {\n    return this.isContentElement;\n  }\n  get areInvisibleElementsShowing() {\n    return !!this.survey && this.survey.areInvisibleElementsShowing && !this.isContentElement;\n  }\n  get isVisible() {\n    return true;\n  }\n  /**\n   * Returns `true` if the survey element or its parent element is read-only.\n   *\n   * If you want to switch a survey element to the read-only state based on a condition, specify the [`enableIf`](https://surveyjs.io/form-library/documentation/question#enableIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see readOnly\n   */\n  get isReadOnly() {\n    return this.readOnly;\n  }\n  /**\n   * Makes the survey element read-only.\n   *\n   * If you want to switch a survey element to the read-only state based on a condition, specify the [`enableIf`](https://surveyjs.io/form-library/documentation/question#enableIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isReadOnly\n   */\n  get readOnly() {\n    return this.getPropertyValue(\"readOnly\");\n  }\n  set readOnly(val) {\n    if (this.readOnly == val) return;\n    this.setPropertyValue(\"readOnly\", val);\n    if (!this.isLoadingFromJson) {\n      this.setPropertyValue(\"isReadOnly\", this.isReadOnly);\n    }\n  }\n  onReadOnlyChanged() {\n    if (!!this.readOnlyChangedCallback) {\n      this.readOnlyChangedCallback();\n    }\n  }\n  get css() {\n    return !!this.survey ? this.survey.getCss() : {};\n  }\n  get cssClassesValue() {\n    let res = this.getPropertyValueWithoutDefault(\"cssClassesValue\");\n    if (!res && !this.isCssValueCalculating) {\n      this.isCssValueCalculating = true;\n      res = this.createCssClassesValue();\n      this.isCssValueCalculating = false;\n    }\n    return res;\n  }\n  createCssClassesValue() {\n    const res = this.calcCssClasses(this.css);\n    this.setPropertyValue(\"cssClassesValue\", res);\n    this.onCalcCssClasses(res);\n    this.updateElementCssCore(this.cssClassesValue);\n    return res;\n  }\n  onCalcCssClasses(classes) {}\n  /**\n   * Returns an object in which keys are UI elements and values are CSS classes applied to them.\n   *\n   * Use the following events of the [`SurveyModel`](https://surveyjs.io/form-library/documentation/surveymodel) object to override CSS classes:\n   *\n   * - [`onUpdateQuestionCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdateQuestionCssClasses)\n   * - [`onUpdatePanelCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdatePanelCssClasses)\n   * - [`onUpdatePageCssClasses`](https://surveyjs.io/form-library/documentation/surveymodel#onUpdatePageCssClasses)\n   * - [`onUpdateChoiceItemCss`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onUpdateChoiceItemCss)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   */\n  get cssClasses() {\n    this.cssClassesValue;\n    if (!this.survey) return this.calcCssClasses(this.css);\n    if (!this.cssClassesValue) {\n      this.createCssClassesValue();\n    }\n    return this.cssClassesValue;\n  }\n  get cssTitleNumber() {\n    const css = this.cssClasses;\n    if (css.number) return css.number;\n    return css.panel ? css.panel.number : undefined;\n  }\n  get cssRequiredMark() {\n    const css = this.cssClasses;\n    return css.requiredMark || css.panel && css.panel.requiredMark;\n  }\n  getCssTitleExpandableSvg() {\n    if (this.state === \"default\") return null;\n    return this.cssClasses.titleExpandableSvg;\n  }\n  calcCssClasses(css) {\n    return undefined;\n  }\n  updateElementCssCore(cssClasses) {}\n  get cssError() {\n    return \"\";\n  }\n  updateElementCss(reNew) {\n    this.clearCssClasses();\n  }\n  clearCssClasses() {\n    this.resetPropertyValue(\"cssClassesValue\");\n  }\n  getIsLoadingFromJson() {\n    if (super.getIsLoadingFromJson()) return true;\n    return this.surveyValue ? this.surveyValue.isLoadingFromJson : false;\n  }\n  /**\n   * A survey element identifier.\n   *\n   * > Question names must be unique.\n   */\n  get name() {\n    return this.getPropertyValue(\"name\", \"\");\n  }\n  set name(val) {\n    var oldValue = this.name;\n    this.setPropertyValue(\"name\", this.getValidName(val));\n    if (!this.isLoadingFromJson && !!oldValue) {\n      this.onNameChanged(oldValue);\n    }\n  }\n  getValidName(name) {\n    return name;\n  }\n  onNameChanged(oldValue) {}\n  updateBindingValue(valueName, value) {\n    if (!!this.data && !this.isTwoValueEquals(value, this.data.getValue(valueName))) {\n      this.data.setValue(valueName, value, false);\n    }\n  }\n  /**\n   * Validation errors. Call the `validate()` method to validate survey element data.\n   * @see validate\n   */\n  get errors() {\n    return this.getPropertyValue(\"errors\");\n  }\n  set errors(val) {\n    this.setPropertyValue(\"errors\", val);\n  }\n  updateVisibleErrors() {\n    var counter = 0;\n    for (var i = 0; i < this.errors.length; i++) {\n      if (this.errors[i].visible) counter++;\n    }\n    this.hasVisibleErrors = counter > 0;\n  }\n  /**\n   * Returns `true` if the survey element or its child elements have validation errors.\n   *\n   * This property contains the result of the most recent validation. This result may be outdated. Call the `validate` method to get an up-to-date value.\n   * @see errors\n   */\n  get containsErrors() {\n    return this.getPropertyValue(\"containsErrors\", false);\n  }\n  updateContainsErrors() {\n    this.setPropertyValue(\"containsErrors\", this.getContainsErrors());\n  }\n  getContainsErrors() {\n    return this.errors.length > 0;\n  }\n  get selectedElementInDesign() {\n    return this.selectedElementInDesignValue;\n  }\n  set selectedElementInDesign(val) {\n    this.selectedElementInDesignValue = val;\n  }\n  updateCustomWidgets() {}\n  onSurveyLoad() {}\n  get wasRendered() {\n    return !!this.wasRenderedValue;\n  }\n  resetWasRendered() {\n    this.wasRenderedValue = false;\n  }\n  onFirstRendering() {\n    if (!this.wasRendered) {\n      this.wasRenderedValue = true;\n      this.onFirstRenderingCore();\n    }\n  }\n  onFirstRenderingCore() {}\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    if (!this.survey) {\n      this.onSurveyLoad();\n    }\n  }\n  setVisibleIndex(index) {\n    return 0;\n  }\n  delete(doDispose) {}\n  /**\n   * Returns the survey's [locale](https://surveyjs.io/form-library/documentation/surveymodel#locale).\n   *\n   * If a default locale is used, this method returns an empty string. To get the applied locale in this case, use the following code:\n   *\n   * ```js\n   * import { surveyLocalization } from 'survey-core';\n   * const defaultLocale = surveyLocalization.defaultLocale;\n   * ```\n   *\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/localization)\n   */\n  getLocale() {\n    return this.survey ? this.survey.getLocale() : this.locOwner ? this.locOwner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text, name, item) {\n    return this.survey ? this.survey.getSurveyMarkdownHtml(this, text, name, item) : this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name) {\n    return this.survey && typeof this.survey.getRendererForString === \"function\" ? this.survey.getRendererForString(this, name) : this.locOwner && typeof this.locOwner.getRenderer === \"function\" ? this.locOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return this.survey && typeof this.survey.getRendererContextForString === \"function\" ? this.survey.getRendererContextForString(this, locStr) : this.locOwner && typeof this.locOwner.getRendererContext === \"function\" ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    if (this.isLoadingFromJson) return text;\n    if (this.textProcessor) return this.textProcessor.processText(text, this.getUseDisplayValuesInDynamicTexts());\n    if (this.locOwner) return this.locOwner.getProcessedText(text);\n    return text;\n  }\n  getUseDisplayValuesInDynamicTexts() {\n    return true;\n  }\n  removeSelfFromList(list) {\n    if (!list || !Array.isArray(list)) return;\n    const index = list.indexOf(this);\n    if (index > -1) {\n      list.splice(index, 1);\n    }\n  }\n  get textProcessor() {\n    return this.textProcessorValue;\n  }\n  getProcessedHtml(html) {\n    if (!html || !this.textProcessor) return html;\n    return this.textProcessor.processText(html, true);\n  }\n  onSetData() {}\n  get parent() {\n    return this.getPropertyValue(\"parent\", null);\n  }\n  set parent(val) {\n    this.setPropertyValue(\"parent\", val);\n  }\n  getPage(parent) {\n    while (parent && parent.parent) parent = parent.parent;\n    if (parent && parent.isPage) return parent;\n    return null;\n  }\n  moveToBase(parent, container, insertBefore = null) {\n    if (!container) return false;\n    parent.removeElement(this);\n    let index = -1;\n    if (Helpers.isNumber(insertBefore)) {\n      index = parseInt(insertBefore);\n    }\n    if (index == -1 && !!insertBefore && !!insertBefore.getType) {\n      index = container.indexOf(insertBefore);\n    }\n    container.addElement(this, index);\n    return true;\n  }\n  setPage(parent, newPage) {\n    const oldPage = this.getPage(parent);\n    this.prevSurvey = this.survey;\n    //fix for the creator v1: https://github.com/surveyjs/survey-creator/issues/1744\n    if (typeof newPage === \"string\") {\n      const survey = this.getSurvey();\n      survey.pages.forEach(page => {\n        if (newPage === page.name) newPage = page;\n      });\n    }\n    if (oldPage === newPage) return;\n    if (parent) parent.removeElement(this);\n    if (newPage) {\n      newPage.addElement(this, -1);\n    }\n    this.prevSurvey = undefined;\n  }\n  getSearchableLocKeys(keys) {\n    keys.push(\"title\");\n    keys.push(\"description\");\n  }\n  get hasParent() {\n    return this.parent && !this.parent.isPage || this.parent === undefined;\n  }\n  shouldAddRunnerStyles() {\n    return !this.isDesignMode;\n  }\n  get isCompact() {\n    return this.survey && this.survey[\"isCompact\"];\n  }\n  canHaveFrameStyles() {\n    var _a;\n    if (((_a = this.survey) === null || _a === void 0 ? void 0 : _a.currentSingleElement) === this) return true;\n    return this.parent !== undefined && (!this.hasParent || this.parent && this.parent.showPanelAsPage);\n  }\n  getHasFrameV2() {\n    return this.shouldAddRunnerStyles() && this.canHaveFrameStyles();\n  }\n  getIsNested() {\n    return this.shouldAddRunnerStyles() && !this.canHaveFrameStyles();\n  }\n  getCssRoot(cssClasses) {\n    const isExpanadable = !!this.isCollapsed || !!this.isExpanded;\n    return new CssClassBuilder().append(cssClasses.withFrame, this.getHasFrameV2() && !this.isCompact).append(cssClasses.compact, this.isCompact && this.getHasFrameV2()).append(cssClasses.collapsed, !!this.isCollapsed).append(cssClasses.expandableAnimating, isExpanadable && this.isAnimatingCollapseExpand).append(cssClasses.expanded, !!this.isExpanded && this.renderedIsExpanded).append(cssClasses.expandable, isExpanadable).append(cssClasses.nested, this.getIsNested()).toString();\n  }\n  /**\n   * Sets survey element width in CSS values.\n   *\n   * Default value: \"\"\n   * @see minWidth\n   * @see maxWidth\n  */\n  get width() {\n    return this.getPropertyValue(\"width\", \"\");\n  }\n  set width(val) {\n    this.setPropertyValue(\"width\", val);\n  }\n  /**\n   * Gets or sets minimum survey element width in CSS values.\n   *\n   * Default value: \"300px\" (taken from [`settings.minWidth`](https://surveyjs.io/form-library/documentation/settings#minWidth))\n   * @see maxWidth\n   * @see renderWidth\n   * @see width\n   */\n  get minWidth() {\n    return this.getPropertyValue(\"minWidth\");\n  }\n  set minWidth(val) {\n    this.setPropertyValue(\"minWidth\", val);\n  }\n  /**\n   * Gets or sets maximum survey element width in CSS values.\n   *\n   * Default value: \"100%\" (taken from [`settings.maxWidth`](https://surveyjs.io/form-library/documentation/settings#maxWidth))\n   * @see minWidth\n   * @see renderWidth\n   * @see width\n   */\n  get maxWidth() {\n    return this.getPropertyValue(\"maxWidth\");\n  }\n  set maxWidth(val) {\n    this.setPropertyValue(\"maxWidth\", val);\n  }\n  /**\n   * Returns a calculated width of the rendered survey element in CSS values.\n   * @see width\n   * @see minWidth\n   * @see maxWidth\n   */\n  get renderWidth() {\n    return this.getPropertyValue(\"renderWidth\", \"\");\n  }\n  set renderWidth(val) {\n    this.setPropertyValue(\"renderWidth\", val);\n  }\n  /**\n   * Increases or decreases an indent of survey element content from the left edge. Accepts positive integer values and 0.\n   */\n  get indent() {\n    return this.getPropertyValue(\"indent\");\n  }\n  set indent(val) {\n    this.setPropertyValue(\"indent\", val);\n  }\n  get rightIndent() {\n    return this.getPropertyValue(\"rightIndent\", 0);\n  }\n  set rightIndent(val) {\n    this.setPropertyValue(\"rightIndent\", val);\n  }\n  getRootStyle() {\n    const style = {};\n    if (!!this.paddingLeft) {\n      style[\"--sv-element-add-padding-left\"] = this.paddingLeft;\n    }\n    if (!!this.paddingRight) {\n      style[\"--sv-element-add-padding-right\"] = this.paddingRight;\n    }\n    return style;\n  }\n  get paddingLeft() {\n    return this.getPropertyValue(\"paddingLeft\", undefined, () => this.calcPaddingLeft());\n  }\n  calcPaddingLeft() {\n    return \"\";\n  }\n  get paddingRight() {\n    return this.getPropertyValue(\"paddingRight\", undefined, () => this.calcPaddingRight());\n  }\n  set paddingRight(val) {\n    this.setPropertyValue(\"paddingRight\", val);\n  }\n  calcPaddingRight() {\n    return \"\";\n  }\n  resetIndents() {\n    this.resetPropertyValue(\"paddingLeft\");\n    this.resetPropertyValue(\"paddingRight\");\n  }\n  get rootStyle() {\n    return this.getPropertyValue(\"rootStyle\", undefined, () => this.calcRootStyle());\n  }\n  set rootStyle(val) {\n    this.setPropertyValue(\"rootStyle\", val);\n  }\n  updateRootStyle() {\n    if (!this.getPropertyValueWithoutDefault(\"rootStyle\")) {\n      this.resetPropertyValue(\"effectiveColSpan\");\n    } else {\n      this.setRootStyle();\n    }\n  }\n  setRootStyle() {\n    this.rootStyle = this.calcRootStyle();\n  }\n  calcRootStyle() {\n    const style = {};\n    let _width;\n    if (!!this.parent) {\n      const columns = this.parent.getColumsForElement(this);\n      _width = columns.reduce((sum, col) => col.effectiveWidth + sum, 0);\n      if (!!_width && _width !== 100) {\n        style[\"flexGrow\"] = 1;\n        style[\"flexShrink\"] = 0;\n        style[\"flexBasis\"] = _width + \"%\";\n        style[\"minWidth\"] = undefined;\n        style[\"maxWidth\"] = this.maxWidth;\n      }\n    }\n    if (Object.keys(style).length == 0) {\n      let minWidth = \"\" + this.minWidth;\n      if (!!minWidth && minWidth != \"auto\") {\n        if (minWidth.indexOf(\"px\") != -1 && this.survey) {\n          minWidth = minWidth.replace(\"px\", \"\");\n          let minWidthNum = parseFloat(minWidth);\n          if (!isNaN(minWidthNum)) {\n            minWidth = minWidthNum * this.survey.widthScale / 100;\n            minWidth = \"\" + minWidth + \"px\";\n          }\n        }\n        minWidth = \"min(100%, \" + minWidth + \")\";\n      }\n      if (this.allowRootStyle && this.renderWidth) {\n        style[\"flexGrow\"] = 1;\n        style[\"flexShrink\"] = 1;\n        style[\"flexBasis\"] = this.renderWidth;\n        style[\"minWidth\"] = minWidth;\n        style[\"maxWidth\"] = this.maxWidth;\n      }\n    }\n    return style;\n  }\n  isContainsSelection(el) {\n    let elementWithSelection = undefined;\n    const _document = DomDocumentHelper.getDocument();\n    if (DomDocumentHelper.isAvailable() && !!_document && _document[\"selection\"]) {\n      elementWithSelection = _document[\"selection\"].createRange().parentElement();\n    } else {\n      var selection = DomWindowHelper.getSelection();\n      if (!!selection && selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        if (range.startOffset !== range.endOffset) {\n          elementWithSelection = range.startContainer.parentNode;\n        }\n      }\n    }\n    return elementWithSelection == el;\n  }\n  get clickTitleFunction() {\n    if (this.needClickTitleFunction()) {\n      return event => {\n        if (!!event && this.isContainsSelection(event.target)) {\n          return;\n        }\n        return this.processTitleClick();\n      };\n    }\n    return undefined;\n  }\n  needClickTitleFunction() {\n    return this.state !== \"default\";\n  }\n  processTitleClick() {\n    if (this.state !== \"default\") {\n      this.toggleState();\n    }\n  }\n  get hasAdditionalTitleToolbar() {\n    return false;\n  }\n  get additionalTitleToolbar() {\n    return this.getAdditionalTitleToolbar();\n  }\n  getAdditionalTitleToolbar() {\n    return null;\n  }\n  getCssTitle(cssClasses) {\n    if (!cssClasses) return \"\";\n    const isExpandable = this.state !== \"default\";\n    const numInlineLimit = 4;\n    return new CssClassBuilder().append(cssClasses.title).append(cssClasses.titleNumInline, (this.no || \"\").length > numInlineLimit || isExpandable).append(cssClasses.titleExpandable, isExpandable).append(cssClasses.titleExpanded, this.isExpanded).append(cssClasses.titleCollapsed, this.isCollapsed).append(cssClasses.titleDisabled, this.isDisabledStyle).append(cssClasses.titleReadOnly, this.isReadOnly).append(cssClasses.titleOnError, this.containsErrors).toString();\n  }\n  get isDisabledStyle() {\n    return this.getIsDisableAndReadOnlyStyles(false)[1];\n  }\n  get isReadOnlyStyle() {\n    return this.getIsDisableAndReadOnlyStyles(false)[0];\n  }\n  getIsDisableAndReadOnlyStyles(itemReadOnly) {\n    const isPreview = this.isPreviewStyle;\n    const isReadOnly = itemReadOnly || this.isReadOnly;\n    const isReadOnlyStyle = isReadOnly && !isPreview;\n    // const isDisableStyle = this.isDefaultV2Theme && (isReadOnly || isPreview); this was useful for the old theme\n    return [isReadOnlyStyle, false];\n  }\n  get isPreviewStyle() {\n    return !!this.survey && this.survey.state === \"preview\";\n  }\n  localeChanged() {\n    super.localeChanged();\n    this.resetDescriptionVisibility();\n    if (this.errors.length > 0) {\n      this.errors.forEach(err => {\n        err.updateText();\n      });\n    }\n  }\n  setWrapperElement(element) {\n    this.wrapperElement = element;\n  }\n  getWrapperElement() {\n    return this.wrapperElement;\n  }\n  set isAnimatingCollapseExpand(val) {\n    if (val !== this._isAnimatingCollapseExpand) {\n      this._isAnimatingCollapseExpand = val;\n      this.updateElementCss(false);\n    }\n  }\n  get isAnimatingCollapseExpand() {\n    return this._isAnimatingCollapseExpand || this._renderedIsExpanded != this.isExpanded;\n  }\n  onElementExpanded(elementIsRendered) {}\n  getExpandCollapseAnimationOptions() {\n    const beforeRunAnimation = el => {\n      this.isAnimatingCollapseExpand = true;\n      prepareElementForVerticalAnimation(el);\n    };\n    const afterRunAnimation = el => {\n      this.isAnimatingCollapseExpand = false;\n      cleanHtmlElementAfterAnimation(el);\n    };\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      getEnterOptions: () => {\n        const cssClasses = this.isPanel ? this.cssClasses.panel : this.cssClasses;\n        return {\n          cssClass: cssClasses.contentEnter,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: el => {\n            afterRunAnimation(el);\n            this.onElementExpanded(true);\n          }\n        };\n      },\n      getLeaveOptions: () => {\n        const cssClasses = this.isPanel ? this.cssClasses.panel : this.cssClasses;\n        return {\n          cssClass: cssClasses.contentLeave,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: afterRunAnimation\n        };\n      },\n      getAnimatedElement: () => {\n        var _a;\n        const cssClasses = this.isPanel ? this.cssClasses.panel : this.cssClasses;\n        if (cssClasses.content) {\n          const selector = classesToSelector(cssClasses.content);\n          if (selector) {\n            return (_a = this.getWrapperElement()) === null || _a === void 0 ? void 0 : _a.querySelector(`:scope ${selector}`);\n          }\n        }\n        return undefined;\n      },\n      isAnimationEnabled: () => this.isExpandCollapseAnimationEnabled\n    };\n  }\n  get isExpandCollapseAnimationEnabled() {\n    return this.animationAllowed && !this.isDesignMode;\n  }\n  set renderedIsExpanded(val) {\n    const oldValue = this._renderedIsExpanded;\n    this.animationCollapsed.sync(val);\n    if (!this.isExpandCollapseAnimationEnabled && !oldValue && this.renderedIsExpanded) {\n      this.onElementExpanded(false);\n    }\n  }\n  get renderedIsExpanded() {\n    return !!this._renderedIsExpanded;\n  }\n  getIsAnimationAllowed() {\n    return super.getIsAnimationAllowed() && !!this.survey && !this.survey[\"isEndLoadingFromJson\"];\n  }\n  afterRenderCore(element) {\n    this.onAfterRenderElement.fire(this, {\n      htmlElement: element\n    });\n  }\n  dispose() {\n    super.dispose();\n    if (this.titleToolbarValue) {\n      this.titleToolbarValue.dispose();\n    }\n  }\n}\n// TODO V2: get rid of this flag\nSurveyElement.CreateDisabledDesignElements = false;\n__decorate([property({\n  defaultValue: false\n})], SurveyElement.prototype, \"hasVisibleErrors\", void 0);\n__decorate([property({\n  defaultValue: true\n})], SurveyElement.prototype, \"isSingleInRow\", void 0);\n__decorate([property({\n  defaultValue: true\n})], SurveyElement.prototype, \"allowRootStyle\", void 0);\n__decorate([property()], SurveyElement.prototype, \"_renderedIsExpanded\", void 0);\nclass RenderingCompletedAwaiter {\n  constructor(_elements, _renderedHandler, waitingTimeout = 100) {\n    this._elements = _elements;\n    this._renderedHandler = _renderedHandler;\n    this._elementsToRenderCount = 0;\n    this._elementsToRenderTimer = undefined;\n    this._elementRenderedHandler = (s, o) => {\n      var _a;\n      (_a = s.onAfterRenderElement) === null || _a === void 0 ? void 0 : _a.remove(this._elementRenderedHandler);\n      this._elementsToRenderCount--;\n      if (this._elementsToRenderCount <= 0) {\n        this.visibleElementsRendered();\n      }\n    };\n    this._elements.forEach(element => {\n      if (element.onAfterRenderElement) {\n        element.onAfterRenderElement.add(this._elementRenderedHandler);\n        this._elementsToRenderCount++;\n      }\n    });\n    if (this._elementsToRenderCount > 0) {\n      this._elementsToRenderTimer = setTimeout(() => {\n        if (this._elementsToRenderCount > 0) {\n          this.visibleElementsRendered();\n        }\n      }, waitingTimeout);\n    } else {\n      this.visibleElementsRendered();\n    }\n  }\n  stopWaitingForElementsRendering() {\n    if (this._elementsToRenderTimer) {\n      clearTimeout(this._elementsToRenderTimer);\n      this._elementsToRenderTimer = undefined;\n    }\n    this._elements.forEach(element => {\n      var _a;\n      (_a = element.onAfterRenderElement) === null || _a === void 0 ? void 0 : _a.remove(this._elementRenderedHandler);\n    });\n    this._elementsToRenderCount = 0;\n  }\n  visibleElementsRendered() {\n    const renderedHandler = this._renderedHandler;\n    this.dispose();\n    if (typeof renderedHandler == \"function\") {\n      renderedHandler();\n    }\n  }\n  dispose() {\n    this.stopWaitingForElementsRendering();\n    this._elements = undefined;\n    this._renderedHandler = undefined;\n  }\n}\n\n/**\n * The class represents the string that supports multi-languages and markdown.\n * It uses in all objects where support for multi-languages and markdown is required.\n */\nclass LocalizableString {\n  static get defaultLocale() {\n    return settings.localization.defaultLocaleName;\n  }\n  static set defaultLocale(val) {\n    settings.localization.defaultLocaleName = val;\n  }\n  get localizationName() {\n    return this._localizationName;\n  }\n  set localizationName(val) {\n    if (this._localizationName != val) {\n      this._localizationName = val;\n      this.strChanged();\n    }\n  }\n  get allowLineBreaks() {\n    var _a;\n    if (this._allowLineBreaks === undefined) {\n      this._allowLineBreaks = false;\n      if (!!this.name && this.owner instanceof SurveyElementCore) {\n        this._allowLineBreaks = ((_a = Serializer.findProperty(this.owner.getType(), this.name)) === null || _a === void 0 ? void 0 : _a.type) == \"text\";\n      }\n    }\n    return this._allowLineBreaks;\n  }\n  constructor(owner, useMarkdown = false, name, locName) {\n    this.owner = owner;\n    this.useMarkdown = useMarkdown;\n    this.name = name;\n    this.values = {};\n    this.htmlValues = {};\n    this.onStringChanged = new EventBase();\n    this._localizationName = locName;\n    this.onCreating();\n  }\n  getIsMultiple() {\n    return false;\n  }\n  get locale() {\n    if (this.owner && this.owner.getLocale) {\n      const res = this.owner.getLocale();\n      if (!!res || !this.sharedData) return res;\n    }\n    if (!!this.sharedData) return this.sharedData.locale;\n    return \"\";\n  }\n  get isDefautlLocale() {\n    const loc = this.locale;\n    return !loc || loc === settings.defaultLocaleName;\n  }\n  strChanged() {\n    if (!this.isTextRequested) return;\n    this.searchableText = undefined;\n    if (this.renderedText === undefined && this.isEmpty && !this.onGetTextCallback && !this.localizationName) return;\n    this.calculatedTextValue = this.calcText();\n    if (this.renderedText !== this.calculatedTextValue) {\n      this.renderedText = undefined;\n      this.calculatedTextValue = undefined;\n    }\n    this.htmlValues = {};\n    this.onChanged();\n    this.onStringChanged.fire(this, {});\n  }\n  get text() {\n    return this.pureText;\n  }\n  set text(value) {\n    this.setLocaleText(this.locale, value);\n  }\n  get calculatedText() {\n    this.renderedText = this.calculatedTextValue !== undefined ? this.calculatedTextValue : this.calcText();\n    this.calculatedTextValue = undefined;\n    return this.renderedText;\n  }\n  getPlaceholder() {\n    let res = \"\";\n    if (!this.isDefautlLocale) {\n      const dialectLocale = this.getRootDialect(this.locale);\n      res = this.getLocaleText(dialectLocale || settings.defaultLocaleName);\n    }\n    if (!res && this.onGetTextCallback) {\n      res = this.onGetTextCallback(\"\", \"\");\n    }\n    return res;\n  }\n  calcText() {\n    const pureText = this.pureText;\n    let res = pureText;\n    if (res && this.owner && this.owner.getProcessedText && res.indexOf(\"{\") > -1) {\n      res = this.owner.getProcessedText(res);\n    }\n    if (this.onGetTextCallback) res = this.onGetTextCallback(res, pureText);\n    return res;\n  }\n  get pureText() {\n    this.isTextRequested = true;\n    var loc = this.locale;\n    if (!loc) loc = this.defaultLoc;\n    var res = this.getValue(loc);\n    if (this.isValueEmpty(res) && loc === this.defaultLoc) {\n      res = this.getValue(surveyLocalization.defaultLocale);\n    }\n    if (this.isValueEmpty(res)) {\n      const dialect = this.getRootDialect(loc);\n      if (!!dialect) {\n        res = this.getValue(dialect);\n      }\n    }\n    if (this.isValueEmpty(res) && loc !== this.defaultLoc) {\n      res = this.getValue(this.defaultLoc);\n    }\n    if (this.isValueEmpty(res) && !!this.getLocalizationName()) {\n      res = this.getLocalizationStr();\n    }\n    if (!res) res = this.defaultValue || \"\";\n    return res;\n  }\n  getRootDialect(loc) {\n    if (!loc) return loc;\n    const index = loc.indexOf(\"-\");\n    return index > -1 ? loc.substring(0, index) : \"\";\n  }\n  getLocalizationName() {\n    return !!this.sharedData ? this.sharedData.localizationName : this.localizationName;\n  }\n  getLocalizationStr() {\n    const name = this.getLocalizationName();\n    return !!name ? getLocaleString(name, this.locale) : \"\";\n  }\n  get hasHtml() {\n    return this.hasHtmlValue();\n  }\n  get html() {\n    if (!this.hasHtml) return \"\";\n    return this.getHtmlValue();\n  }\n  get isEmpty() {\n    return this.getValuesKeys().length == 0;\n  }\n  get textOrHtml() {\n    return this.hasHtml ? this.getHtmlValue() : this.calculatedText;\n  }\n  get renderedHtml() {\n    return this.textOrHtml;\n  }\n  getLocaleText(loc) {\n    const res = this.getLocaleTextCore(loc);\n    return res ? res : \"\";\n  }\n  getLocaleTextCore(loc) {\n    if (!loc) loc = this.defaultLoc;\n    return this.getValue(loc);\n  }\n  isLocaleTextEqualsWithDefault(loc, val) {\n    let res = this.getLocaleTextCore(loc);\n    if (res === val) return true;\n    return this.isValueEmpty(res) && this.isValueEmpty(val);\n  }\n  clear() {\n    this.setJson(undefined);\n  }\n  clearLocale(loc) {\n    this.setLocaleText(loc, undefined);\n  }\n  setLocaleText(loc, value) {\n    loc = this.getValueLoc(loc);\n    this.lastChangedLoc = loc;\n    if (!!loc && value === undefined) {\n      const oldValue = this.getValue(loc);\n      if (oldValue !== undefined) {\n        this.deleteValue(loc);\n        this.fireStrChanged(loc, oldValue);\n      }\n      return;\n    }\n    if (!this.storeDefaultText && this.isLocaleTextEqualsWithDefault(loc, value)) {\n      if (!this.isValueEmpty(value) || !!loc && loc !== this.defaultLoc) return;\n      let dl = surveyLocalization.defaultLocale;\n      let oldValue = this.getValue(dl);\n      if (!!dl && !this.isValueEmpty(oldValue)) {\n        this.setValue(dl, value);\n        this.fireStrChanged(dl, oldValue);\n      }\n      return;\n    }\n    if (!settings.localization.storeDuplicatedTranslations && !this.isValueEmpty(value) && loc && loc != this.defaultLoc && !this.getValue(loc) && value == this.getLocaleText(this.defaultLoc)) return;\n    var curLoc = this.curLocale;\n    if (!loc) loc = this.defaultLoc;\n    var oldValue = this.onStrChanged && loc === curLoc ? this.pureText : undefined;\n    delete this.htmlValues[loc];\n    if (this.isValueEmpty(value)) {\n      this.deleteValue(loc);\n    } else {\n      if (typeof value === \"string\") {\n        if (this.canRemoveLocValue(loc, value)) {\n          this.setLocaleText(loc, null);\n        } else {\n          this.setValue(loc, value);\n          if (loc == this.defaultLoc) {\n            this.deleteValuesEqualsToDefault(value);\n          }\n        }\n      }\n    }\n    this.fireStrChanged(loc, oldValue);\n  }\n  isValueEmpty(val) {\n    if (val === undefined || val === null) return true;\n    if (this.localizationName) return false;\n    return val === \"\";\n  }\n  get curLocale() {\n    return !!this.locale ? this.locale : this.defaultLoc;\n  }\n  canRemoveLocValue(loc, val) {\n    if (settings.localization.storeDuplicatedTranslations) return false;\n    if (loc === this.defaultLoc) return false;\n    const dialect = this.getRootDialect(loc);\n    if (!!dialect) {\n      const dialectVal = this.getLocaleText(dialect);\n      if (!!dialectVal) return dialectVal == val;\n      return this.canRemoveLocValue(dialect, val);\n    } else {\n      return val == this.getLocaleText(this.defaultLoc);\n    }\n  }\n  fireStrChanged(loc, oldValue) {\n    this.strChanged();\n    if (!this.onStrChanged) return;\n    const value = this.pureText;\n    if (loc !== this.curLocale || oldValue !== value) {\n      this.onStrChanged(oldValue, value);\n    }\n  }\n  hasNonDefaultText() {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return false;\n    return keys.length > 1 || keys[0] != this.defaultLoc;\n  }\n  getLocales() {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return [];\n    return keys;\n  }\n  getJson() {\n    if (!!this.sharedData) return this.sharedData.getJson();\n    const keys = this.getValuesKeys();\n    if (keys.length == 0) {\n      if (this.serializeCallBackText) {\n        const text = this.calcText();\n        if (!!text) return text;\n      }\n      return null;\n    }\n    if (keys.length == 1 && keys[0] == settings.localization.defaultLocaleName && !settings.serialization.localizableStringSerializeAsObject) return this.values[keys[0]];\n    const res = {};\n    for (let key in this.values) {\n      res[key] = this.values[key];\n    }\n    return res;\n  }\n  setJson(value, isLoading) {\n    if (!!this.sharedData) {\n      this.sharedData.setJson(value, isLoading);\n      return;\n    }\n    this.lastChangedLoc = undefined;\n    this.values = {};\n    this.htmlValues = {};\n    if (value === null || value === undefined) return;\n    if (isLoading) {\n      if (typeof value === \"string\") {\n        this.values[settings.defaultLocaleName] = value;\n      } else {\n        this.values = value;\n        delete this.values[\"pos\"];\n      }\n    } else {\n      if (typeof value === \"string\") {\n        this.setLocaleText(null, value);\n      } else {\n        for (var key in value) {\n          this.setLocaleText(key, value[key]);\n        }\n      }\n      this.strChanged();\n    }\n  }\n  get renderAs() {\n    if (!this.owner || typeof this.owner.getRenderer !== \"function\") {\n      return LocalizableString.defaultRenderer;\n    }\n    return this.owner.getRenderer(this.name) || LocalizableString.defaultRenderer;\n  }\n  get renderAsData() {\n    if (!this.owner || typeof this.owner.getRendererContext !== \"function\") {\n      return this;\n    }\n    return this.owner.getRendererContext(this) || this;\n  }\n  equals(obj) {\n    if (!!this.sharedData) return this.sharedData.equals(obj);\n    if (!obj || !obj.values) return false;\n    return Helpers.isTwoValueEquals(this.values, obj.values, false, true, false);\n  }\n  setFindText(text) {\n    if (this.searchText == text) return;\n    this.searchText = text;\n    if (!this.searchableText) {\n      let textOrHtml = this.textOrHtml;\n      this.searchableText = !!textOrHtml ? textOrHtml.toLowerCase() : \"\";\n    }\n    var str = this.searchableText;\n    var index = !!str && !!text ? str.indexOf(text) : undefined;\n    if (index < 0) index = undefined;\n    if (index != undefined || this.searchIndex != index) {\n      this.searchIndex = index;\n      if (!!this.onSearchChanged) {\n        this.onSearchChanged();\n      }\n    }\n    return this.searchIndex != undefined;\n  }\n  onChanged() {}\n  onCreating() {}\n  hasHtmlValue() {\n    if (!this.owner || !this.useMarkdown) return false;\n    let loc = this.locale;\n    if (!loc) loc = this.defaultLoc;\n    if (this.htmlValues[loc] !== undefined) return !!this.htmlValues[loc];\n    let renderedText = this.calculatedText;\n    if (!renderedText) {\n      this.setHtmlValue(loc, \"\");\n      return false;\n    }\n    if (!!this.getLocalizationName() && renderedText === this.getLocalizationStr()) {\n      this.setHtmlValue(loc, \"\");\n      return false;\n    }\n    const res = this.owner.getMarkdownHtml(renderedText, this.name);\n    this.setHtmlValue(loc, res);\n    return !!res;\n  }\n  setHtmlValue(loc, val) {\n    this.htmlValues[loc] = val;\n  }\n  getHtmlValue() {\n    var loc = this.locale;\n    if (!loc) loc = this.defaultLoc;\n    return this.htmlValues[loc];\n  }\n  deleteValuesEqualsToDefault(defaultValue) {\n    if (settings.localization.storeDuplicatedTranslations) return;\n    var keys = this.getValuesKeys();\n    for (var i = 0; i < keys.length; i++) {\n      if (keys[i] == this.defaultLoc) continue;\n      if (this.getValue(keys[i]) == defaultValue) {\n        this.deleteValue(keys[i]);\n      }\n    }\n  }\n  getValue(loc) {\n    if (!!this.sharedData) return this.sharedData.getValue(loc);\n    return this.values[this.getValueLoc(loc)];\n  }\n  setValue(loc, value) {\n    if (!!this.sharedData) this.sharedData.setValue(loc, value);else this.values[this.getValueLoc(loc)] = value;\n  }\n  deleteValue(loc) {\n    if (!!this.sharedData) this.sharedData.deleteValue(loc);else delete this.values[this.getValueLoc(loc)];\n  }\n  getValueLoc(loc) {\n    if (this.disableLocalization) return settings.localization.defaultLocaleName;\n    return loc;\n  }\n  getValuesKeys() {\n    if (!!this.sharedData) return this.sharedData.getValuesKeys();\n    return Object.keys(this.values);\n  }\n  get defaultLoc() {\n    return settings.localization.defaultLocaleName;\n  }\n}\nLocalizableString.SerializeAsObject = false;\nLocalizableString.defaultRenderer = \"sv-string-viewer\";\nLocalizableString.editableRenderer = \"sv-string-editor\";\n/**\n * The class represents the list of strings that supports multi-languages.\n */\nclass LocalizableStrings {\n  constructor(owner) {\n    this.owner = owner;\n    this.values = {};\n  }\n  getIsMultiple() {\n    return true;\n  }\n  get locale() {\n    return this.owner && this.owner.getLocale ? this.owner.getLocale() : \"\";\n  }\n  get value() {\n    return this.getValue(\"\");\n  }\n  set value(val) {\n    this.setValue(\"\", val);\n  }\n  get text() {\n    return Array.isArray(this.value) ? this.value.join(\"\\n\") : \"\";\n  }\n  set text(val) {\n    this.value = !!val ? val.split(\"\\n\") : [];\n  }\n  getLocaleText(loc) {\n    var res = this.getValueCore(loc, !loc || loc === this.locale);\n    if (!res || !Array.isArray(res) || res.length == 0) return \"\";\n    return res.join(\"\\n\");\n  }\n  setLocaleText(loc, newValue) {\n    var val = !!newValue ? newValue.split(\"\\n\") : null;\n    this.setValue(loc, val);\n  }\n  getValue(loc) {\n    return this.getValueCore(loc);\n  }\n  getValueCore(loc, useDefault = true) {\n    loc = this.getLocale(loc);\n    if (this.values[loc]) return this.values[loc];\n    if (useDefault) {\n      var defLoc = settings.localization.defaultLocaleName;\n      if (loc !== defLoc && this.values[defLoc]) return this.values[defLoc];\n    }\n    return [];\n  }\n  setValue(loc, val) {\n    loc = this.getLocale(loc);\n    const oldValue = Helpers.createCopy(this.values);\n    if (!val || val.length == 0) {\n      delete this.values[loc];\n    } else {\n      this.values[loc] = val;\n    }\n    if (!!this.onValueChanged) {\n      this.onValueChanged(oldValue, this.values);\n    }\n  }\n  hasValue(loc = \"\") {\n    return !this.isEmpty && this.getValue(loc).length > 0;\n  }\n  get isEmpty() {\n    return this.getValuesKeys().length == 0;\n  }\n  getLocale(loc) {\n    if (!!loc) return loc;\n    loc = this.locale;\n    return !!loc ? loc : settings.localization.defaultLocaleName;\n  }\n  getLocales() {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return [];\n    return keys;\n  }\n  getJson() {\n    var keys = this.getValuesKeys();\n    if (keys.length == 0) return null;\n    if (keys.length == 1 && keys[0] == settings.localization.defaultLocaleName && !settings.serialization.localizableStringSerializeAsObject) return this.values[keys[0]];\n    return Helpers.createCopy(this.values);\n  }\n  setJson(value) {\n    this.values = {};\n    if (!value) return;\n    if (Array.isArray(value)) {\n      this.setValue(null, value);\n    } else {\n      for (var key in value) {\n        this.setValue(key, value[key]);\n      }\n    }\n  }\n  getValuesKeys() {\n    return Object.keys(this.values);\n  }\n}\nfunction confirmAction(message) {\n  if (!!settings && !!settings.confirmActionFunc) return settings.confirmActionFunc(message);\n  return confirm(message);\n}\nfunction confirmActionAsync(options) {\n  const callbackFunc = res => {\n    if (res) options.funcOnYes();else if (!!options.funcOnNo) options.funcOnNo();\n  };\n  if (!!settings && !!settings.confirmActionAsync) {\n    if (settings.confirmActionAsync(options.message, callbackFunc, options)) return;\n  }\n  callbackFunc(confirmAction(options.message));\n}\nfunction detectIEOrEdge() {\n  if (typeof detectIEOrEdge.isIEOrEdge === \"undefined\") {\n    const ua = navigator.userAgent;\n    const msie = ua.indexOf(\"MSIE \");\n    const trident = ua.indexOf(\"Trident/\");\n    const edge = ua.indexOf(\"Edge/\");\n    detectIEOrEdge.isIEOrEdge = edge > 0 || trident > 0 || msie > 0;\n  }\n  return detectIEOrEdge.isIEOrEdge;\n}\nfunction loadFileFromBase64(b64Data, fileName) {\n  try {\n    const byteString = atob(b64Data.split(\",\")[1]);\n    // separate out the mime component\n    const mimeString = b64Data.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n    // write the bytes of the string to an ArrayBuffer\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n    // write the ArrayBuffer to a blob, and you're done\n    const bb = new Blob([ab], {\n      type: mimeString\n    });\n    if (!!navigator && navigator[\"msSaveBlob\"]) {\n      navigator[\"msSaveOrOpenBlob\"](bb, fileName);\n    }\n  } catch (err) {}\n}\nconst isShadowDOM = rootElement => {\n  return !!rootElement && !!(\"host\" in rootElement && rootElement.host);\n};\nconst getElement = element => {\n  const {\n    root\n  } = settings.environment;\n  return typeof element === \"string\" ? root.getElementById(element) : element;\n};\nfunction isElementVisible(element, threshold = 0) {\n  if (typeof settings.environment === \"undefined\" || !element.offsetHeight) {\n    return false;\n  }\n  const {\n    root\n  } = settings.environment;\n  const clientHeight = isShadowDOM(root) ? root.host.clientHeight : root.documentElement.clientHeight;\n  const elementRect = element.getBoundingClientRect();\n  const viewHeight = Math.max(clientHeight, DomWindowHelper.getInnerHeight());\n  const topWin = -threshold;\n  const bottomWin = viewHeight + threshold;\n  const topEl = elementRect.top;\n  const bottomEl = elementRect.bottom;\n  const maxTop = Math.max(topWin, topEl);\n  const minBottom = Math.min(bottomWin, bottomEl);\n  return maxTop <= minBottom;\n}\nfunction findScrollableParent(element) {\n  if (!element) {\n    return DomDocumentHelper.isAvailable() ? DomDocumentHelper.getDocument().documentElement : undefined;\n  }\n  if (element.scrollHeight > element.clientHeight && (getComputedStyle(element).overflowY === \"scroll\" || getComputedStyle(element).overflowY === \"auto\")) {\n    return element;\n  }\n  if (element.scrollWidth > element.clientWidth && (getComputedStyle(element).overflowX === \"scroll\" || getComputedStyle(element).overflowX === \"auto\")) {\n    return element;\n  }\n  if (!element.parentElement) {\n    const rootNode = element.getRootNode();\n    if (rootNode instanceof Document || rootNode instanceof ShadowRoot) {\n      return isShadowDOM(rootNode) ? rootNode.host : rootNode.documentElement;\n    }\n  }\n  return findScrollableParent(element.parentElement);\n}\nfunction activateLazyRenderingChecks(element) {\n  if (!element) return;\n  const scrollableEl = findScrollableParent(element);\n  if (!!scrollableEl) {\n    setTimeout(() => scrollableEl.dispatchEvent(new CustomEvent(\"scroll\")), 10);\n  }\n}\nfunction navigateToUrl(url) {\n  const location = DomWindowHelper.getLocation();\n  if (!url || !location) return;\n  location.href = getSafeUrl(url);\n}\nfunction wrapUrlForBackgroundImage(url) {\n  return !!url ? [\"url(\", url, \")\"].join(\"\") : \"\";\n}\nfunction isBase64URL(url) {\n  if (typeof url == \"string\") {\n    return /^data:((?:\\w+\\/(?:(?!;).)+)?)((?:;[^;]+?)*),(.+)$/.test(url);\n  }\n  return null;\n}\n// old-name: new-name\nconst renamedIcons = {\n  \"changecamera\": \"flip-24x24\",\n  \"clear\": \"clear-24x24\",\n  \"cancel\": \"cancel-24x24\",\n  \"closecamera\": \"close-24x24\",\n  \"defaultfile\": \"file-72x72\",\n  \"choosefile\": \"folder-24x24\",\n  \"file\": \"toolbox-file-24x24\",\n  \"left\": \"chevronleft-16x16\",\n  \"modernbooleancheckchecked\": \"plus-32x32\",\n  \"modernbooleancheckunchecked\": \"minus-32x32\",\n  \"more\": \"more-24x24\",\n  \"navmenu_24x24\": \"navmenu-24x24\",\n  \"removefile\": \"error-24x24\",\n  \"takepicture\": \"camera-32x32\",\n  \"takepicture_24x24\": \"camera-24x24\",\n  \"v2check\": \"check-16x16\",\n  \"checked\": \"check-16x16\",\n  \"v2check_24x24\": \"check-24x24\",\n  \"back-to-panel_16x16\": \"restoredown-16x16\",\n  \"clear_16x16\": \"clear-16x16\",\n  \"close_16x16\": \"close-16x16\",\n  \"collapsedetail\": \"collapsedetails-16x16\",\n  \"expanddetail\": \"expanddetails-16x16\",\n  \"full-screen_16x16\": \"maximize-16x16\",\n  \"loading\": \"loading-48x48\",\n  \"minimize_16x16\": \"minimize-16x16\",\n  \"next_16x16\": \"chevronright-16x16\",\n  \"previous_16x16\": \"chevronleft-16x16\",\n  \"no-image\": \"noimage-48x48\",\n  \"ranking-dash\": \"rankingundefined-16x16\",\n  \"drag-n-drop\": \"drag-24x24\",\n  \"ranking-arrows\": \"reorder-24x24\",\n  \"restore_16x16\": \"fullsize-16x16\",\n  \"reset\": \"restore-24x24\",\n  \"search\": \"search-24x24\",\n  \"average\": \"smiley-rate5-24x24\",\n  \"excellent\": \"smiley-rate9-24x24\",\n  \"good\": \"smiley-rate7-24x24\",\n  \"normal\": \"smiley-rate6-24x24\",\n  \"not-good\": \"smiley-rate4-24x24\",\n  \"perfect\": \"smiley-rate10-24x24\",\n  \"poor\": \"smiley-rate3-24x24\",\n  \"terrible\": \"smiley-rate1-24x24\",\n  \"very-good\": \"smiley-rate8-24x24\",\n  \"very-poor\": \"smiley-rate2-24x24\",\n  \"add_16x16\": \"add-16x16\",\n  \"add_24x24\": \"add-24x24\",\n  \"alert_24x24\": \"warning-24x24\",\n  \"apply\": \"apply-24x24\",\n  \"arrow-down\": \"arrowdown-24x24\",\n  \"arrow-left\": \"arrowleft-24x24\",\n  \"arrow-left_16x16\": \"arrowleft-16x16\",\n  \"arrowleft\": \"arrowleft-16x16\",\n  \"arrow-right\": \"arrowright-24x24\",\n  \"arrow-right_16x16\": \"arrowright-16x16\",\n  \"arrowright\": \"arrowright-16x16\",\n  \"arrow-up\": \"arrowup-24x24\",\n  \"boolean\": \"toolbox-boolean-24x24\",\n  \"change-question-type_16x16\": \"speechbubble-16x16\",\n  \"checkbox\": \"toolbox-checkbox-24x24\",\n  \"collapse-detail_16x16\": \"minusbox-16x16\",\n  \"collapse-panel\": \"collapse-pg-24x24\",\n  \"collapse_16x16\": \"collapse-16x16\",\n  \"color-picker\": \"dropper-16x16\",\n  \"comment\": \"toolbox-longtext-24x24\",\n  \"config\": \"wrench-24x24\",\n  \"copy\": \"copy-24x24\",\n  \"default\": \"toolbox-customquestion-24x24\",\n  \"delete_16x16\": \"delete-16x16\",\n  \"delete_24x24\": \"delete-24x24\",\n  \"delete\": \"delete-24x24\",\n  \"description-hide\": \"hidehint-16x16\",\n  \"description\": \"hint-16x16\",\n  \"device-desktop\": \"desktop-24x24\",\n  \"device-phone\": \"phone-24x24\",\n  \"device-rotate\": \"rotate-24x24\",\n  \"device-tablet\": \"tablet-24x24\",\n  \"download\": \"download-24x24\",\n  \"drag-area-indicator\": \"drag-24x24\",\n  \"drag-area-indicator_24x16\": \"draghorizontal-24x16\",\n  \"v2dragelement_16x16\": \"draghorizontal-24x16\",\n  \"drop-down-arrow\": \"chevrondown-24x24\",\n  \"drop-down-arrow_16x16\": \"chevrondown-16x16\",\n  \"chevron_16x16\": \"chevrondown-16x16\",\n  \"dropdown\": \"toolbox-dropdown-24x24\",\n  \"duplicate_16x16\": \"copy-16x16\",\n  \"edit\": \"edit-24x24\",\n  \"edit_16x16\": \"edit-16x16\",\n  \"editing-finish\": \"finishedit-24x24\",\n  \"error\": \"error-16x16\",\n  \"expand-detail_16x16\": \"plusbox-16x16\",\n  \"expand-panel\": \"expand-pg-24x24\",\n  \"expand_16x16\": \"expand-16x16\",\n  \"expression\": \"toolbox-expression-24x24\",\n  \"fast-entry\": \"textedit-24x24\",\n  \"fix\": \"fix-24x24\",\n  \"html\": \"toolbox-html-24x24\",\n  \"image\": \"toolbox-image-24x24\",\n  \"imagepicker\": \"toolbox-imagepicker-24x24\",\n  \"import\": \"import-24x24\",\n  \"invisible-items\": \"invisible-24x24\",\n  \"language\": \"language-24x24\",\n  \"load\": \"import-24x24\",\n  \"logic-collapse\": \"collapse-24x24\",\n  \"logic-expand\": \"expand-24x24\",\n  \"logo\": \"image-48x48\",\n  \"matrix\": \"toolbox-matrix-24x24\",\n  \"matrixdropdown\": \"toolbox-multimatrix-24x24\",\n  \"matrixdynamic\": \"toolbox-dynamicmatrix-24x24\",\n  \"multipletext\": \"toolbox-multipletext-24x24\",\n  \"panel\": \"toolbox-panel-24x24\",\n  \"paneldynamic\": \"toolbox-dynamicpanel-24x24\",\n  \"preview\": \"preview-24x24\",\n  \"radiogroup\": \"toolbox-radiogroup-24x24\",\n  \"ranking\": \"toolbox-ranking-24x24\",\n  \"rating\": \"toolbox-rating-24x24\",\n  \"slider\": \"toolbox-slider-24x24\",\n  \"redo\": \"redo-24x24\",\n  \"remove_16x16\": \"remove-16x16\",\n  \"required\": \"required-16x16\",\n  \"save\": \"save-24x24\",\n  \"select-page\": \"selectpage-24x24\",\n  \"settings\": \"settings-24x24\",\n  \"settings_16x16\": \"settings-16x16\",\n  \"signaturepad\": \"toolbox-signature-24x24\",\n  \"switch-active_16x16\": \"switchon-16x16\",\n  \"switch-inactive_16x16\": \"switchoff-16x16\",\n  \"tagbox\": \"toolbox-tagbox-24x24\",\n  \"text\": \"toolbox-singleline-24x24\",\n  \"theme\": \"theme-24x24\",\n  \"toolbox\": \"toolbox-24x24\",\n  \"undo\": \"undo-24x24\",\n  \"visible\": \"visible-24x24\",\n  \"wizard\": \"wand-24x24\",\n  \"searchclear\": \"clear-16x16\",\n  \"chevron-16x16\": \"chevrondown-16x16\",\n  \"chevron\": \"chevrondown-24x24\",\n  \"progressbuttonv2\": \"arrowleft-16x16\",\n  \"right\": \"chevronright-16x16\",\n  \"add-lg\": \"add-24x24\",\n  \"add\": \"add-24x24\"\n};\nfunction getIconNameFromProxy(iconName) {\n  const customIconName = getCustomNewIconNameIfExists(iconName);\n  return customIconName || getNewIconName(iconName);\n}\nfunction getNewIconName(iconName) {\n  const prefix = \"icon-\";\n  const nameWithoutPrefix = iconName.replace(prefix, \"\");\n  const result = renamedIcons[nameWithoutPrefix] || nameWithoutPrefix;\n  return prefix + result;\n}\nfunction getCustomNewIconNameIfExists(iconName) {\n  // only for settings.customIcons[\"icon-import\"] = \"icon-export\"; feature\n  let result = settings.customIcons[iconName];\n  if (result) return getNewIconName(result);\n  iconName = getNewIconName(iconName);\n  result = settings.customIcons[iconName];\n  if (result) return result;\n  return null;\n}\nfunction createSvg(size, width, height, iconName, svgElem, title) {\n  if (!svgElem) return;\n  if (size !== \"auto\") {\n    svgElem.style.width = (size || width || 16) + \"px\";\n    svgElem.style.height = (size || height || 16) + \"px\";\n  }\n  const node = svgElem.childNodes[0];\n  const realIconName = getIconNameFromProxy(iconName);\n  node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", \"#\" + realIconName);\n  let titleElement = svgElem.getElementsByTagName(\"title\")[0];\n  if (!title) {\n    if (!!titleElement) {\n      svgElem.removeChild(titleElement);\n    }\n    return;\n  } else {\n    if (!titleElement) {\n      titleElement = DomDocumentHelper.getDocument().createElementNS(\"http://www.w3.org/2000/svg\", \"title\");\n      svgElem.appendChild(titleElement);\n    }\n  }\n  titleElement.textContent = title;\n}\nfunction getSafeUrl(url) {\n  if (!url) return url;\n  if (url.toLocaleLowerCase().indexOf(\"javascript:\") > -1) return encodeURIComponent(url);\n  return url;\n}\nfunction unwrap(value) {\n  if (typeof value !== \"function\") {\n    return value;\n  } else {\n    return value();\n  }\n}\n// export function getSize(value: any): number {\n//   if (typeof value === \"number\") {\n//     return value;\n//   }\n//   if (typeof value === \"string\" && value.includes(\"px\")) {\n//     return parseInt(value);\n//   }\n//   if (!!value && typeof value === \"string\" && value.length > 0) {\n//     const lastSymbol: string = value[value.length - 1];\n//     if ((lastSymbol >= \"0\" && lastSymbol <= \"9\") || lastSymbol == \".\") {\n//       try {\n//         const num: number = parseInt(value);\n//         return num;\n//       } catch { }\n//     }\n//   }\n//   return value;\n// }\nfunction getRenderedSize(val) {\n  if (typeof val == \"string\") {\n    if (!isNaN(Number(val))) {\n      return Number(val);\n    } else if (val.includes(\"px\")) {\n      return parseFloat(val);\n    }\n  }\n  if (typeof val == \"number\") {\n    return val;\n  }\n  return undefined;\n}\nfunction getRenderedStyleSize(val) {\n  if (getRenderedSize(val) !== undefined) {\n    return undefined;\n  }\n  return val;\n}\nconst keyFocusedClassName = \"sv-focused--by-key\";\nfunction doKey2ClickBlur(evt) {\n  const element = evt.target;\n  if (!element || !element.classList) return;\n  element.classList.remove(keyFocusedClassName);\n}\nfunction doKey2ClickUp(evt, options) {\n  if (!!evt.target && evt.target[\"contentEditable\"] === \"true\") {\n    return;\n  }\n  const element = evt.target;\n  if (!element) return;\n  const char = evt.which || evt.keyCode;\n  if (char === 9) {\n    if (!!element.classList && !element.classList.contains(keyFocusedClassName)) {\n      element.classList.add(keyFocusedClassName);\n    }\n    return;\n  }\n  if (options) {\n    if (!options.__keyDownReceived) return;\n    options.__keyDownReceived = false;\n  }\n  if (char === 13 || char === 32) {\n    if (element.click) element.click();\n  } else if ((!options || options.processEsc) && char === 27) {\n    if (element.blur) element.blur();\n  }\n}\nfunction doKey2ClickDown(evt, options = {\n  processEsc: true\n}) {\n  if (options) options.__keyDownReceived = true;\n  if (!!evt.target && evt.target[\"contentEditable\"] === \"true\") {\n    return;\n  }\n  var char = evt.which || evt.keyCode;\n  const supportedCodes = [13, 32];\n  if (options.processEsc) {\n    supportedCodes.push(27);\n  }\n  if (supportedCodes.indexOf(char) !== -1) {\n    evt.preventDefault();\n  }\n}\nfunction increaseHeightByContent(element, getComputedStyle) {\n  if (!element) return;\n  if (!getComputedStyle) getComputedStyle = elt => {\n    return DomDocumentHelper.getComputedStyle(elt);\n  };\n  const style = getComputedStyle(element);\n  element.style.height = \"auto\";\n  if (!!element.scrollHeight) {\n    element.style.height = element.scrollHeight + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth) + \"px\";\n  }\n}\nfunction getOriginalEvent(event) {\n  return event.originalEvent || event;\n}\nfunction preventDefaults(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nfunction classesToSelector(str) {\n  if (!str) return str;\n  const re = /\\s*?([\\w-]+)\\s*?/g;\n  return str.replace(re, \".$1\");\n}\nfunction getElementWidth(el) {\n  return !!getComputedStyle ? Number.parseFloat(getComputedStyle(el).width) : el.offsetWidth;\n}\nfunction isContainerVisible(el) {\n  return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\nfunction getFirstVisibleChild(el) {\n  let result;\n  for (let index = 0; index < el.children.length; index++) {\n    if (!result && getComputedStyle(el.children[index]).display !== \"none\") {\n      result = el.children[index];\n    }\n  }\n  return result;\n}\nfunction sanitizeEditableContent(element, cleanLineBreaks = true) {\n  if (DomWindowHelper.isAvailable() && DomDocumentHelper.isAvailable() && element.childNodes.length > 0) {\n    const selection = DomWindowHelper.getSelection();\n    if (selection.rangeCount == 0) {\n      return;\n    }\n    let range = selection.getRangeAt(0);\n    range.setStart(range.endContainer, range.endOffset);\n    range.setEndAfter(element.lastChild);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    let tail = selection.toString();\n    let innerText = element.innerText;\n    tail = tail.replace(/\\r/g, \"\");\n    if (cleanLineBreaks) {\n      tail = tail.replace(/\\n/g, \"\");\n      innerText = innerText.replace(/\\n/g, \"\");\n    }\n    const tail_len = tail.length;\n    element.innerText = innerText;\n    range = DomDocumentHelper.getDocument().createRange();\n    range.setStart(element.firstChild, 0);\n    range.setEnd(element.firstChild, 0);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    while (selection.toString().length < innerText.length - tail_len) {\n      const selLen = selection.toString().length;\n      selection.modify(\"extend\", \"forward\", \"character\");\n      if (selection.toString().length == selLen) break;\n    }\n    range = selection.getRangeAt(0);\n    range.setStart(range.endContainer, range.endOffset);\n  }\n}\nfunction mergeValues(src, dest) {\n  if (!dest || !src) return;\n  if (typeof dest !== \"object\") return;\n  for (var key in src) {\n    var value = src[key];\n    if (!Array.isArray(value) && value && typeof value === \"object\") {\n      if (!dest[key] || typeof dest[key] !== \"object\") dest[key] = {};\n      mergeValues(value, dest[key]);\n    } else {\n      dest[key] = value;\n    }\n  }\n}\nfunction updateListCssValues(res, css) {\n  const listCssClasses = {};\n  mergeValues(css.list, listCssClasses);\n  mergeValues(res.list, listCssClasses);\n  res[\"list\"] = listCssClasses;\n}\nfunction showConfirmDialog(message, callback, options = {}) {\n  const locStr = new LocalizableString(undefined, false);\n  locStr.defaultValue = message || options.message;\n  const popupViewModel = settings.showDialog({\n    componentName: \"sv-string-viewer\",\n    data: {\n      locStr: locStr,\n      locString: locStr,\n      model: locStr\n    },\n    //TODO fix in library\n    onApply: () => {\n      callback(true);\n      return true;\n    },\n    onCancel: () => {\n      callback(false);\n      return false;\n    },\n    displayMode: \"popup\",\n    isFocusedContent: false,\n    cssClass: options.cssClass || \"sv-popup--confirm\"\n  }, options.rootElement);\n  const toolbar = popupViewModel.footerToolbar;\n  const applyBtn = toolbar.getActionById(\"apply\");\n  const cancelBtn = toolbar.getActionById(\"cancel\");\n  cancelBtn.title = getLocaleString(\"cancel\", options.locale);\n  applyBtn.title = options.applyTitle || getLocaleString(\"ok\", options.locale);\n  applyBtn.innerCss = \"sd-btn--danger\";\n  configConfirmDialog(popupViewModel);\n  return true;\n}\nfunction configConfirmDialog(popupViewModel) {\n  popupViewModel.width = \"min-content\";\n}\nfunction chooseFiles(input, callback) {\n  if (!DomWindowHelper.isFileReaderAvailable()) return;\n  input.value = \"\";\n  input.onchange = event => {\n    if (!DomWindowHelper.isFileReaderAvailable()) return;\n    if (!input || !input.files || input.files.length < 1) return;\n    let files = [];\n    for (let i = 0; i < input.files.length; i++) {\n      files.push(input.files[i]);\n    }\n    callback(files);\n  };\n  input.click();\n}\nfunction compareArrays(oldValue, newValue, getKey) {\n  const oldItemsMap = new Map();\n  const newItemsMap = new Map();\n  const commonItemsInNewMap = new Map();\n  const commonItemsInOldMap = new Map();\n  oldValue.forEach(item => {\n    const itemKey = getKey(item);\n    if (!oldItemsMap.has(itemKey)) {\n      oldItemsMap.set(getKey(item), item);\n    } else {\n      //if keys are set incorrectly do not process comparing\n      throw new Error(\"keys must be unique\");\n    }\n  });\n  newValue.forEach(item => {\n    const itemKey = getKey(item);\n    if (!newItemsMap.has(itemKey)) {\n      newItemsMap.set(itemKey, item);\n    } else {\n      //if keys are set incorrectly do not process comparing\n      throw new Error(\"keys must be unique\");\n    }\n  });\n  const addedItems = [];\n  const deletedItems = [];\n  //calculating addedItems and items that exist in both arrays\n  newItemsMap.forEach((item, key) => {\n    if (!oldItemsMap.has(key)) {\n      addedItems.push(item);\n    } else {\n      commonItemsInNewMap.set(key, commonItemsInNewMap.size);\n    }\n  });\n  //calculating deletedItems and items that exist in both arrays\n  oldItemsMap.forEach((item, key) => {\n    if (!newItemsMap.has(key)) {\n      deletedItems.push(item);\n    } else {\n      commonItemsInOldMap.set(key, commonItemsInOldMap.size);\n    }\n  });\n  //calculating reordered items\n  const reorderedItems = [];\n  commonItemsInNewMap.forEach((index, key) => {\n    const oldIndex = commonItemsInOldMap.get(key);\n    const item = newItemsMap.get(key);\n    if (oldIndex !== index) reorderedItems.push({\n      item: item,\n      movedForward: oldIndex < index\n    });\n  });\n  //calculating merged array if multiple operations are applied at once\n  const oldItemsWithCorrectOrder = new Array(oldValue.length);\n  let commonItemsIndex = 0;\n  const commonItemsKeysOrder = Array.from(commonItemsInNewMap.keys());\n  oldValue.forEach((item, index) => {\n    if (commonItemsInNewMap.has(getKey(item))) {\n      oldItemsWithCorrectOrder[index] = newItemsMap.get(commonItemsKeysOrder[commonItemsIndex]);\n      commonItemsIndex++;\n    } else {\n      oldItemsWithCorrectOrder[index] = item;\n    }\n  });\n  const valuesToInsertBeforeKey = new Map();\n  let tempValuesArray = [];\n  oldItemsWithCorrectOrder.forEach(item => {\n    const itemKey = getKey(item);\n    if (newItemsMap.has(itemKey)) {\n      if (tempValuesArray.length > 0) {\n        valuesToInsertBeforeKey.set(itemKey, tempValuesArray);\n        tempValuesArray = [];\n      }\n    } else {\n      tempValuesArray.push(item);\n    }\n  });\n  const mergedItems = new Array();\n  newItemsMap.forEach((item, key) => {\n    if (valuesToInsertBeforeKey.has(key)) {\n      valuesToInsertBeforeKey.get(key).forEach(item => {\n        mergedItems.push(item);\n      });\n    }\n    mergedItems.push(item);\n  });\n  tempValuesArray.forEach(item => {\n    mergedItems.push(item);\n  });\n  return {\n    reorderedItems,\n    deletedItems,\n    addedItems,\n    mergedItems\n  };\n}\nfunction getVerticalDimensions(el) {\n  if (DomDocumentHelper.isAvailable()) {\n    const {\n      paddingTop,\n      paddingBottom,\n      borderTopWidth,\n      borderBottomWidth,\n      marginTop,\n      marginBottom,\n      boxSizing\n    } = DomDocumentHelper.getComputedStyle(el);\n    let heightTo = el.offsetHeight + \"px\";\n    if (boxSizing == \"content-box\") {\n      let heightPx = el.offsetHeight;\n      [borderBottomWidth, borderTopWidth, paddingBottom, paddingTop].forEach(style => {\n        heightPx -= parseFloat(style);\n      });\n      heightTo = heightPx + \"px\";\n    }\n    return {\n      paddingTop,\n      paddingBottom,\n      borderTopWidth,\n      borderBottomWidth,\n      marginTop,\n      marginBottom,\n      heightFrom: \"0px\",\n      heightTo: heightTo\n    };\n  } else {\n    return undefined;\n  }\n}\nfunction setPropertiesOnElementForAnimation(el, styles, prefix = \"--animation-\") {\n  var _a;\n  el[\"__sv_created_properties\"] = (_a = el[\"__sv_created_properties\"]) !== null && _a !== void 0 ? _a : [];\n  Object.keys(styles).forEach(key => {\n    const propertyName = `${prefix}${key.split(/\\.?(?=[A-Z])/).join(\"-\").toLowerCase()}`;\n    el.style.setProperty(propertyName, styles[key]);\n    el[\"__sv_created_properties\"].push(propertyName);\n  });\n}\nfunction prepareElementForVerticalAnimation(el) {\n  setPropertiesOnElementForAnimation(el, getVerticalDimensions(el));\n}\nfunction cleanHtmlElementAfterAnimation(el) {\n  if (Array.isArray(el[\"__sv_created_properties\"])) {\n    el[\"__sv_created_properties\"].forEach(propertyName => {\n      el.style.removeProperty(propertyName);\n    });\n    delete el[\"__sv_created_properties\"];\n  }\n}\nfunction floorTo2Decimals(number) {\n  return Math.floor(number * 100) / 100;\n}\nconst document$1 = typeof globalThis !== \"undefined\" ? globalThis.document : this.document;\nconst defaultEnvironment = !!document$1 ? {\n  root: document$1,\n  _rootElement: DomDocumentHelper.getBody(),\n  get rootElement() {\n    var _a;\n    return (_a = this._rootElement) !== null && _a !== void 0 ? _a : DomDocumentHelper.getBody();\n  },\n  set rootElement(rootElement) {\n    this._rootElement = rootElement;\n  },\n  _popupMountContainer: DomDocumentHelper.getBody(),\n  get popupMountContainer() {\n    var _a;\n    return (_a = this._popupMountContainer) !== null && _a !== void 0 ? _a : DomDocumentHelper.getBody();\n  },\n  set popupMountContainer(popupMountContainer) {\n    this._popupMountContainer = popupMountContainer;\n  },\n  svgMountContainer: document$1.head,\n  stylesSheetsMountContainer: document$1.head\n} : undefined;\nconst columnWidthsByType = {\n  \"file\": {\n    minWidth: \"240px\"\n  },\n  \"comment\": {\n    minWidth: \"200px\"\n  }\n};\n/**\n * Global settings that apply to all surveys on the page. To specify one of the settings, use the code below:\n *\n * ```js\n * import { settings } from \"survey-core\";\n *\n * settings.settingName = \"value\";\n * ```\n */\nvar settings = {\n  version: \"\",\n  /**\n   * An object that configures survey appearance when the survey is being designed in Survey Creator.\n   *\n   * Nested properties:\n   *\n   * - `showEmptyDescriptions`: `boolean`\\\n   * Specifies whether to display an empty description for pages and panels. Default value: `true`.\n   *\n   * - `showEmptyTitles`: `boolean`\\\n   * Specifies whether to display an empty title for pages and panels. Default value: `true`.\n   */\n  designMode: {\n    showEmptyDescriptions: true,\n    showEmptyTitles: true\n  },\n  //#region designMode section, Obsolete properties\n  get allowShowEmptyDescriptionInDesignMode() {\n    return this.designMode.showEmptyDescriptions;\n  },\n  set allowShowEmptyDescriptionInDesignMode(val) {\n    this.designMode.showEmptyDescriptions = val;\n  },\n  get allowShowEmptyTitleInDesignMode() {\n    return this.designMode.showEmptyTitles;\n  },\n  set allowShowEmptyTitleInDesignMode(val) {\n    this.designMode.showEmptyTitles = val;\n  },\n  //#endregion\n  /**\n   * An object that contains properties related to localization.\n   *\n   * Nested properties:\n   *\n   * - `defaultLocaleName`: `string`\\\n   * A property key that stores a translation for the default locale. Default value: `\"default\"`.\n   *\n   * - `storeDuplicatedTranslations`: `boolean`\\\n   * Specifies whether surveys should store translation strings that equal the translation strings in the default locale. Default value: `false`.\n   *\n   * - `useLocalTimeZone`: `boolean`\\\n   * Obsolete. Use the [`storeUtcDates`](https://surveyjs.io/form-library/documentation/api-reference/settings#storeUtcDates) setting instead.\n   */\n  localization: {\n    /**\n     * @deprecated Use the [`storeUtcDates`](https://surveyjs.io/form-library/documentation/api-reference/settings#storeUtcDates) property instead.\n     */\n    useLocalTimeZone: true,\n    storeDuplicatedTranslations: false,\n    defaultLocaleName: \"default\"\n  },\n  //#region localization section, obsolete properties\n  get useLocalTimeZone() {\n    return this.localization.useLocalTimeZone;\n  },\n  set useLocalTimeZone(val) {\n    this.localization.useLocalTimeZone = val;\n  },\n  get storeDuplicatedTranslations() {\n    return this.localization.storeDuplicatedTranslations;\n  },\n  set storeDuplicatedTranslations(val) {\n    this.localization.storeDuplicatedTranslations = val;\n  },\n  get defaultLocaleName() {\n    return this.localization.defaultLocaleName;\n  },\n  set defaultLocaleName(val) {\n    this.localization.defaultLocaleName = val;\n  },\n  //#endregion\n  /**\n   * An object with properties that configure surveys when they work with a web service.\n   *\n   * Nested properties:\n   *\n   * - `encodeUrlParams`: `boolean`\\\n   * Specifies whether to encode URL parameters when you access a web service. Default value: `true`.\n   *\n   * - `cacheLoadedChoices`: `boolean`\\\n   * Specifies whether to cache [choices loaded from a web service](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choicesByUrl). Default value: `true`.\n   *\n   * - `disableQuestionWhileLoadingChoices`: `boolean`\\\n   * Disables a question while its choices are being loaded from a web service. Default value: `false`.\n   *\n   * - `surveyServiceUrl`: `string`\\\n   * Obsolete. Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   *\n   * - `onBeforeRequestChoices`: `(sender: ChoicesRestful, options: { url: string, request?: XMLHttpRequest, fetchOptions?: RequestInit })`\\\n   * An event that is raised before a request for choices is sent. Applies to questions with a specified [`choiceByUrl`](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choicesByUrl) property. Use the `options` parameter to access and modify the request to be sent. The `options.fetchOptions` object is defined only when the Form Library is run on a Node.js server; `options.request` is defined in the rest of cases. The following example shows how you can add authentication headers to a request for choices:\n   *\n   *     ```js\n   *     import { settings } from \"survey-core\";\n   *\n   *     settings.web.onBeforeRequestChoices = (_, options) => {\n   *       if (options.request) {\n   *         options.request.setRequestHeader(\"RequestVerificationToken\", requestVerificationToken);\n   *       }\n   *       if (options.fetchOptions) {\n   *         options.fetchOptions.headers.append(\"RequestVerificationToken\", requestVerificationToken);\n   *       }\n   *     };\n   *     ```\n   */\n  web: {\n    onBeforeRequestChoices: (sender, options) => {},\n    encodeUrlParams: true,\n    cacheLoadedChoices: true,\n    disableQuestionWhileLoadingChoices: false\n  },\n  //#region web section, obsolete properties\n  get webserviceEncodeParameters() {\n    return this.web.encodeUrlParams;\n  },\n  set webserviceEncodeParameters(val) {\n    this.web.encodeUrlParams = val;\n  },\n  get useCachingForChoicesRestful() {\n    return this.web.cacheLoadedChoices;\n  },\n  set useCachingForChoicesRestful(val) {\n    this.web.cacheLoadedChoices = val;\n  },\n  get useCachingForChoicesRestfull() {\n    return this.web.cacheLoadedChoices;\n  },\n  set useCachingForChoicesRestfull(val) {\n    this.web.cacheLoadedChoices = val;\n  },\n  get disableOnGettingChoicesFromWeb() {\n    return this.web.disableQuestionWhileLoadingChoices;\n  },\n  set disableOnGettingChoicesFromWeb(val) {\n    this.web.disableQuestionWhileLoadingChoices = val;\n  },\n  //#endregion\n  /**\n   * An object that contains properties related to [triggers](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers).\n   *\n   * Nested properties:\n   *\n   * - `changeNavigationButtonsOnComplete`: `boolean`\\\n   * Specifies whether to re-evaluate an expression associated with the [Complete trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete) immediately when a question value changes. If the expression evaluates to `true`, the trigger is executed. Default value: `false`.\\\n   * Keep this property set to `false` if you want to re-evaluate the Complete trigger's expression only when the respondents navigate to another page.\n   *\n   * - `executeCompleteOnValueChanged`: `boolean`\\\n   * Specifies whether to replace the Next button with the Complete button when the [Complete trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete) is going to be executed. Default value: `true`.\n   *\n   * - `executeSkipOnValueChanged`: `boolean`\\\n   * Specifies whether to re-evaluate an expression associated with the [Skip trigger](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#skip) immediately when a question value changes. If the expression evaluates to `true`, the trigger is executed. Default value: `true`.\\\n   * Disable this property if you want to re-evaluate the Skip trigger's expression only when respondents navigate to another page.\n   */\n  triggers: {\n    changeNavigationButtonsOnComplete: true,\n    executeCompleteOnValueChanged: false,\n    executeSkipOnValueChanged: true\n  },\n  //#region triggers section, Obsolete properties\n  get executeCompleteTriggerOnValueChanged() {\n    return this.triggers.executeCompleteOnValueChanged;\n  },\n  set executeCompleteTriggerOnValueChanged(val) {\n    this.triggers.executeCompleteOnValueChanged = val;\n  },\n  get changeNavigationButtonsOnCompleteTrigger() {\n    return this.triggers.changeNavigationButtonsOnComplete;\n  },\n  set changeNavigationButtonsOnCompleteTrigger(val) {\n    this.triggers.changeNavigationButtonsOnComplete = val;\n  },\n  get executeSkipTriggerOnValueChanged() {\n    return this.triggers.executeSkipOnValueChanged;\n  },\n  set executeSkipTriggerOnValueChanged(val) {\n    this.triggers.executeSkipOnValueChanged = val;\n  },\n  //#endregion\n  /**\n   * An object that contains properties related to JSON serialization.\n   *\n   * Nested properties:\n   *\n   * - `itemValueSerializeAsObject`: `boolean`\\\n   * Enable this property if you want to serialize [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) instances (choice options, matrix rows, columns in a [Single-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model)) as objects even when they include only the `value` property. Default value: `false`.\n   *\n   * - `itemValueSerializeDisplayText`: `boolean`\\\n   * Enable this property if you want to serialize the `text` property of [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) objects even when it is empty or equal to the `value` property. Default value: `false`.\n   *\n   * - `localizableStringSerializeAsObject`: `boolean`\\\n   * Enable this property if you want to serialize [`LocalizableString`](https://surveyjs.io/form-library/documentation/api-reference/localizablestring) instances as objects even when they include only a translation string for the default locale. For example, `\"Custom String\"` will be serialized as `{ default: \"Custom String\" }`. Default value: `false`.\n   *\n   * - `matrixDropdownColumnSerializeTitle`: `boolean`\\\n   * Enable this property if you want to serialize the `title` property of [`MatrixDropdownColumn`](https://surveyjs.io/form-library/documentation/api-reference/multi-select-matrix-column-values) objects even when it is empty or equal to the `name` property. Default value: `false`.\n   * @see [settings.parseNumber](https://surveyjs.io/form-library/documentation/api-reference/settings#parseNumber)\n   */\n  serialization: {\n    itemValueSerializeAsObject: false,\n    itemValueSerializeDisplayText: false,\n    localizableStringSerializeAsObject: false,\n    matrixDropdownColumnSerializeTitle: false\n  },\n  //#region serialization section, Obsolete properties\n  get itemValueAlwaysSerializeAsObject() {\n    return this.serialization.itemValueSerializeAsObject;\n  },\n  set itemValueAlwaysSerializeAsObject(val) {\n    this.serialization.itemValueSerializeAsObject = val;\n  },\n  get itemValueAlwaysSerializeText() {\n    return this.serialization.itemValueSerializeDisplayText;\n  },\n  set itemValueAlwaysSerializeText(val) {\n    this.serialization.itemValueSerializeDisplayText = val;\n  },\n  get serializeLocalizableStringAsObject() {\n    return this.serialization.localizableStringSerializeAsObject;\n  },\n  set serializeLocalizableStringAsObject(val) {\n    this.serialization.localizableStringSerializeAsObject = val;\n  },\n  //#endregion\n  /**\n   * An object that configures lazy rendering.\n   *\n   * Nested properties:\n   *\n   * - `enabled`: `boolean`\\\n   * Specifies whether to add questions to the DOM only when they get into the viewport. Default value: `false`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-lazy/ (linkStyle))\n   * @see [SurveyModel.lazyRenderEnabled](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#lazyRenderEnabled)\n   */\n  lazyRender: {\n    enabled: false,\n    firstBatchSize: 3\n  },\n  //#region lazyRender section, Obsolete properties\n  get lazyRowsRendering() {\n    return this.lazyRender.enabled;\n  },\n  set lazyRowsRendering(val) {\n    this.lazyRender.enabled = val;\n  },\n  get lazyRowsRenderingStartRow() {\n    return this.lazyRender.firstBatchSize;\n  },\n  set lazyRowsRenderingStartRow(val) {\n    this.lazyRender.firstBatchSize = val;\n  },\n  //#endregion\n  /**\n   * An object with properties that apply to [Single-Choice](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model), [Multiple-Choice](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list), and [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model) questions.\n   *\n   * Nested properties:\n   *\n   * - `defaultRowName`: `string`\\\n   * A property key that stores an object with default cell values. Default value: \"default\".\n   *\n   * - `defaultCellType`: `string`\\\n   * The default type of matrix cells. Default value: `\"dropdown\"`.\\\n   * You can specify this setting for individual questions or matrix columns: [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#cellType). Refer to the `cellType` property description for information on possible values.\n   *\n   * - `totalsSuffix`: `string`\\\n   * A suffix added to the name of the property that stores total values. The resulting property name consists of the matrix name and the suffix. Default value: `\"-total\"`.\n   *\n   * - `maxRowCount`: `number`\\\n   * A maximum number of rows in a Dynamic Matrix. Default value: 1000.\\\n   * You can specify this setting for an individual Dynamic Matrix: [`maxRowCount`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#maxRowCount).\n   *\n   * - `maxRowCountInCondition`: `number`\\\n   * A maximum number of matrix rows included in the Condition drop-down menu in Survey Creator. This menu is used to configure conditional survey logic. Default value: 1.\\\n   * If you set this property to 0, the Condition menu does not include any matrix rows. Users still can specify conditions that use matrix rows but only with Manual Entry.\n   *\n   * - `renderRemoveAsIcon`: `boolean`\\\n   * Disable this property if you want to render the Remove action in Dynamic Matrix as a button. Otherwise, the action is rendered as an icon. Default value: `true`.\n   *\n   * - `columnWidthsByType`: `object`\\\n   * An object that specifies fixed and minimum column width based on the column type.\\\n   * Example: `settings.matrix.columnWidthsByType = { \"tagbox\": { minWidth: \"240px\", width: \"300px\" } }`\n   *\n   * - `rateSize`: `\"small\"` (default) | `\"normal\"`\\\n   * Specifies the size of rate values. Applies to [Rating Scale](https://surveyjs.io/form-library/examples/rating-scale/) questions within matrixes.\n   */\n  matrix: {\n    defaultCellType: \"dropdown\",\n    defaultRowName: \"default\",\n    totalsSuffix: \"-total\",\n    maxRowCount: 1000,\n    maxRowCountInCondition: 1,\n    renderRemoveAsIcon: true,\n    columnWidthsByType: columnWidthsByType,\n    rateSize: \"small\"\n  },\n  //#region matrix section, Obsolete properties\n  get matrixDefaultRowName() {\n    return this.matrix.defaultRowName;\n  },\n  set matrixDefaultRowName(val) {\n    this.matrix.defaultRowName = val;\n  },\n  get matrixDefaultCellType() {\n    return this.matrix.defaultCellType;\n  },\n  set matrixDefaultCellType(val) {\n    this.matrix.defaultCellType = val;\n  },\n  get matrixTotalValuePostFix() {\n    return this.matrix.totalsSuffix;\n  },\n  set matrixTotalValuePostFix(val) {\n    this.matrix.totalsSuffix = val;\n  },\n  get matrixMaximumRowCount() {\n    return this.matrix.maxRowCount;\n  },\n  set matrixMaximumRowCount(val) {\n    this.matrix.maxRowCount = val;\n  },\n  get matrixMaxRowCountInCondition() {\n    return this.matrix.maxRowCountInCondition;\n  },\n  set matrixMaxRowCountInCondition(val) {\n    this.matrix.maxRowCountInCondition = val;\n  },\n  get matrixRenderRemoveAsIcon() {\n    return this.matrix.renderRemoveAsIcon;\n  },\n  set matrixRenderRemoveAsIcon(val) {\n    this.matrix.renderRemoveAsIcon = val;\n  },\n  //#endregion\n  /**\n   * An object with properties that apply to [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model) questions.\n   *\n   * Nested properties:\n   *\n   * - `maxPanelCount`: `number`\\\n   * A maximum number of panels in Dynamic Panel. Default value: 100.\\\n   * You can specify this setting for an individual Dynamic Panel: [`maxPanelCount`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#maxPanelCount).\n   *\n   * - `maxPanelCountInCondition`: `number`\\\n   * A maximum number of Dynamic Panel panels included in the Condition drop-down menu in Survey Creator. This menu is used to configure conditional survey logic. Default value: 1.\\\n   * If you set this property to 0, the Condition menu does not include any panel questions. Users still can specify conditions that use panel questions but only with Manual Entry.\n   */\n  panel: {\n    maxPanelCount: 100,\n    maxPanelCountInCondition: 1\n  },\n  //#region panel section, Obsolete properties\n  get panelDynamicMaxPanelCountInCondition() {\n    return this.panel.maxPanelCountInCondition;\n  },\n  set panelDynamicMaxPanelCountInCondition(val) {\n    this.panel.maxPanelCountInCondition = val;\n  },\n  get panelMaximumPanelCount() {\n    return this.panel.maxPanelCount;\n  },\n  set panelMaximumPanelCount(val) {\n    this.panel.maxPanelCount = val;\n  },\n  //#endregion\n  /**\n   * An object with properties that configure questions in read-only mode.\n   *\n   * Nested properties:\n   *\n   * - `commentRenderMode`: `\"textarea\"` (default) | `\"div\"`\\\n   * Specifies how to render the input field of [Comment](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model) questions in [read-only](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model#readOnly) mode: as a disabled `<textarea>` element or as a `<div>` element with a non-editable question value within it.\n   *\n   * - `textRenderMode`: `\"input\"` (default) | `\"div\"`\\\n   * Specifies how to render the input field of [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) questions in [read-only](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#readOnly) mode: as a disabled `<input>` element or as a `<div>` element with a non-editable question value within it.\n   */\n  readOnly: {\n    enableValidation: false,\n    commentRenderMode: \"textarea\",\n    textRenderMode: \"input\"\n  },\n  //#region readOnly section, Obsolete properties\n  get readOnlyCommentRenderMode() {\n    return this.readOnly.commentRenderMode;\n  },\n  set readOnlyCommentRenderMode(val) {\n    this.readOnly.commentRenderMode = val;\n  },\n  get readOnlyTextRenderMode() {\n    return this.readOnly.textRenderMode;\n  },\n  set readOnlyTextRenderMode(val) {\n    this.readOnly.textRenderMode = val;\n  },\n  //#endregion\n  /**\n   * An object with properties that configure question numbering.\n   *\n   * Nested properties:\n   *\n   * - `includeQuestionsWithHiddenNumber`: `boolean`\\\n   * Specifies whether to number questions whose [`showNumber`](https://surveyjs.io/form-library/documentation/api-reference/question#showNumber) property is disabled. Default value: `false`.\n   *\n   * - `includeQuestionsWithHiddenTitle`: `boolean`\\\n   * Specifies whether to number questions whose [`titleLocation`](https://surveyjs.io/form-library/documentation/api-reference/question#titleLocation) property is set to `\"hidden\"`. Default value: `false`.\n   */\n  numbering: {\n    includeQuestionsWithHiddenNumber: false,\n    includeQuestionsWithHiddenTitle: false\n  },\n  //#region numbering section, Obsolete properties\n  get setQuestionVisibleIndexForHiddenTitle() {\n    return this.numbering.includeQuestionsWithHiddenTitle;\n  },\n  set setQuestionVisibleIndexForHiddenTitle(val) {\n    this.numbering.includeQuestionsWithHiddenTitle = val;\n  },\n  get setQuestionVisibleIndexForHiddenNumber() {\n    return this.numbering.includeQuestionsWithHiddenNumber;\n  },\n  set setQuestionVisibleIndexForHiddenNumber(val) {\n    this.numbering.includeQuestionsWithHiddenNumber = val;\n  },\n  //#endregion\n  /**\n   * Specifies an action to perform when users press the Enter key within a survey.\n   *\n   * Possible values:\n   *\n   * - `\"moveToNextEditor\"` - Moves focus to the next editor.\n   * - `\"loseFocus\"` - Removes focus from the current editor.\n   * - `\"default\"` - Behaves as a standard `<input>` element.\n   */\n  enterKeyAction: \"default\",\n  /**\n   * An object that configures string comparison.\n   *\n   * Nested properties:\n   *\n   * - `trimStrings`: `boolean`\\\n   * Specifies whether to remove whitespace from both ends of a string before the comparison. Default value: `true`.\n   *\n   * - `caseSensitive`: `boolean`\\\n   * Specifies whether to differentiate between capital and lower-case letters. Default value: `false`.\n   */\n  comparator: {\n    trimStrings: true,\n    caseSensitive: false,\n    normalizeTextCallback: (str, reason) => {\n      return str;\n    }\n  },\n  expressionDisableConversionChar: \"#\",\n  get commentPrefix() {\n    return settings.commentSuffix;\n  },\n  set commentPrefix(val) {\n    settings.commentSuffix = val;\n  },\n  /**\n   * A suffix added to the name of the property that stores comments.\n   *\n   * Default value: \"-Comment\"\n   *\n   * You can specify this setting for an individual survey: [`commentSuffix`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#commentSuffix).\n   */\n  commentSuffix: \"-Comment\",\n  /**\n   * A separator used in a shorthand notation that specifies a value and display text for an [`ItemValue`](https://surveyjs.io/form-library/documentation/api-reference/itemvalue) object: `\"value|text\"`.\n   *\n   * Default value: `\"|\"`\n   * @see [settings.choicesSeparator](https://surveyjs.io/form-library/documentation/api-reference/settings#choicesSeparator)\n   */\n  itemValueSeparator: \"|\",\n  /**\n   * A maximum number of rate values in a [Rating](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model) question.\n   *\n   * Default value: 20\n   */\n  ratingMaximumRateValueCount: 20,\n  /**\n   * Specifies whether to close the drop-down menu of a [Multi-Select Dropdown (Tag Box)](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/) question after a user selects a value.\n   *\n   * This setting applies to all Multi-Select Dropdown questions on a web page. You can use the [`closeOnSelect`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model#closeOnSelect) property to specify the same setting for an individual Multi-Select Dropdown question.\n   */\n  tagboxCloseOnSelect: false,\n  /**\n   * A time interval in milliseconds between the last entered character and the beginning of search in [Single-](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/) and [Multi-Select Dropdown](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/) questions. Applies only to questions with the [`choicesLazyLoadEnabled`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#choicesLazyLoadEnabled) property set to `true`.\n   *\n   * Default value: 500\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/lazy-loading-dropdown/ (linkStyle))\n   */\n  dropdownSearchDelay: 500,\n  /**\n   * A function that activates a browser confirm dialog.\n   *\n   * Use the following code to execute this function:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * // `result` contains `true` if the action was confirmed or `false` otherwise\n   * const result = settings.confirmActionFunc(\"Are you sure?\");\n   * ```\n   *\n   * You can redefine the `confirmActionFunc` function if you want to display a custom dialog window. Your function should return `true` if a user confirms an action or `false` otherwise.\n   * @param message A message to be displayed in the confirm dialog window.\n   */\n  confirmActionFunc: function (message) {\n    return confirm(message);\n  },\n  /**\n   * A function that activates a proprietary SurveyJS confirm dialog.\n   *\n   * Use the following code to execute this function:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.confirmActionAsync(\"Are you sure?\", (confirmed) => {\n   *   if (confirmed) {\n   *     // ...\n   *     // Proceed with the action\n   *     // ...\n   *   } else {\n   *     // ...\n   *     // Cancel the action\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * You can redefine the `confirmActionAsync` function if you want to display a custom dialog window. Your function should return `true` to be enabled; otherwise, a survey executes the [`confirmActionFunc`](#confirmActionFunc) function. Pass the dialog result as the `callback` parameter: `true` if a user confirms an action, `false` otherwise.\n   * @param message A message to be displayed in the confirm dialog window.\n   * @param callback A callback function that should be called with `true` if a user confirms an action or `false` otherwise.\n   */\n  confirmActionAsync: function (message, callback, options) {\n    return showConfirmDialog(message, callback, options);\n  },\n  /**\n   * A minimum width value for all survey elements.\n   *\n   * Default value: `\"300px\"`\n   *\n   * You can override this setting for individual elements: [`minWidth`](https://surveyjs.io/form-library/documentation/api-reference/surveyelement#minWidth).\n   */\n  minWidth: \"300px\",\n  /**\n   * A maximum width value for all survey elements.\n   *\n   * Default value: `\"100%\"`\n   *\n   * You can override this setting for individual elements: [`maxWidth`](https://surveyjs.io/form-library/documentation/api-reference/surveyelement#maxWidth).\n   */\n  maxWidth: \"100%\",\n  /**\n   * Specifies how many times surveys can re-evaluate expressions when a question value changes. This limit helps avoid recursions in expressions.\n   *\n   * Default value: 10\n   */\n  maxConditionRunCountOnValueChanged: 10,\n  /**\n   * An object that configures notifications.\n   *\n   * Nested properties:\n   *\n   * - `lifetime`: `number`\\\n   * Specifies a time period during which a notification is displayed; measured in milliseconds. Default value: 2000.\n   */\n  notifications: {\n    lifetime: 2000\n  },\n  /**\n   * Specifies how many milliseconds a survey should wait before it automatically switches to the next page. Applies only when [auto-advance](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) is enabled.\n   *\n   * Default value: 300\n   */\n  autoAdvanceDelay: 300,\n  /**\n   * Specifies the direction in which to lay out Checkbox and Radio Button Group items. This setting affects the resulting UI when items are arranged in [more than one column](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#colCount).\n   *\n   * Possible values:\n   *\n   * - `\"column\"` (default) - Items fill the current column, then move on to the next column.\n   * - `\"row\"` - Items fill the current row, then move on to the next row.\n   */\n  itemFlowDirection: \"column\",\n  /**\n   * @deprecated Use the [`itemFlowDirection`](https://surveyjs.io/form-library/documentation/api-reference/settings#itemFlowDirection) property instead.\n   */\n  get showItemsInOrder() {\n    return settings.itemFlowDirection;\n  },\n  set showItemsInOrder(val) {\n    settings.itemFlowDirection = val;\n  },\n  /**\n   * A value to save in survey results when respondents select the \"None\" choice item.\n   *\n   * Default value: `\"none\"`\n   */\n  noneItemValue: \"none\",\n  /**\n   * A value to save in survey results when respondents select the \"Refuse to answer\" choice item.\n   *\n   * Default value: `\"refused\"`\n   */\n  refuseItemValue: \"refused\",\n  /**\n   * A value to save in survey results when respondents select the \"Don't know\" choice item.\n   *\n   * Default value: `\"dontknow\"`\n   */\n  dontKnowItemValue: \"dontknow\",\n  /**\n   * An object whose properties specify the order of the special choice items (\"None\", \"Other\", \"Select All\", \"Refuse to answer\", \"Don't know\") in select-based questions.\n   *\n   * Default value: `{ selectAllItem: [-1], noneItem: [1], otherItem: [2], dontKnowItem: [3], otherItem: [4] }`\n   *\n   * Use this object to reorder special choices. Each property accepts an array of integer numbers. Negative numbers place a special choice item above regular choice items, positive numbers place it below them. For instance, the code below specifies the following order of choices: None, Select All, regular choices, Other.\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.specialChoicesOrder.noneItem = [-2];\n   * settings.specialChoicesOrder.selectAllItem = [-1];\n   * settings.specialChoicesOrder.otherItem = [1];\n   * ```\n   *\n   * If you want to duplicate a special choice item above and below other choices, add two numbers to the corresponding array:\n   *\n   * ```js\n   * settings.specialChoicesOrder.selectAllItem = [-1, 3] // Displays Select All above and below other choices\n   * ```\n   */\n  specialChoicesOrder: {\n    selectAllItem: [-1],\n    noneItem: [1],\n    refuseItem: [2],\n    dontKnowItem: [3],\n    otherItem: [4]\n  },\n  /**\n   * One or several characters used to separate choice options in a list.\n   *\n   * Default value: `\", \"`\n   * @see [settings.itemValueSeparator](https://surveyjs.io/form-library/documentation/api-reference/settings#itemValueSeparator)\n   */\n  choicesSeparator: \", \",\n  /**\n   * A list of supported validators by question type.\n   */\n  supportedValidators: {\n    question: [\"expression\"],\n    comment: [\"text\", \"regex\"],\n    text: [\"numeric\", \"text\", \"regex\", \"email\"],\n    checkbox: [\"answercount\"],\n    imagepicker: [\"answercount\"]\n  },\n  /**\n   * Specifies a minimum date that users can enter into a [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) question with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"date\"` or `\"datetime-local\"`. Set this property to a string with the folllowing format: `\"yyyy-mm-dd\"`.\n   */\n  minDate: \"\",\n  /**\n   * Specifies a maximum date that users can enter into a [Text](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model) question with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"date\"` or `\"datetime-local\"`. Set this property to a string with the folllowing format: `\"yyyy-mm-dd\"`.\n   */\n  maxDate: \"\",\n  showDialog: undefined,\n  showDefaultItemsInCreator: true,\n  /**\n   * An object that specifies icon replacements. Object keys are built-in icon names. To use a custom icon, assign its name to the key of the icon you want to replace:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.customIcons[\"icon-redo\"] = \"custom-redo-icon\";\n   * ```\n   *\n   * For more information about icons in SurveyJS, refer to the following help topic: [UI Icons](https://surveyjs.io/form-library/documentation/icons).\n   */\n  customIcons: {},\n  /**\n   * Specifies which part of a choice item responds to a drag gesture in Ranking questions.\n   *\n   * Possible values:\n   *\n   * - `\"entireItem\"` (default) - Users can use the entire choice item as a drag handle.\n   * - `\"icon\"` - Users can only use the choice item icon as a drag handle.\n   */\n  rankingDragHandleArea: \"entireItem\",\n  environment: defaultEnvironment,\n  /**\n   * Allows you to hide the maximum length indicator in text input questions.\n   *\n   * If you specify a question's [`maxLength`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maxLength) property or a survey's [`maxTextLength`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#maxTextLength) property, text input questions indicate the number of entered characters and the character limit. Assign `false` to the `settings.showMaxLengthIndicator` property if you want to hide this indicator.\n   *\n   * Default value: `true`\n   */\n  showMaxLengthIndicator: true,\n  /**\n   * Specifies whether to animate survey elements.\n   *\n   * Default value: `true`\n  */\n  animationEnabled: true,\n  /**\n   * An object that specifies HTML tags to use when rendering survey, page, panel, and question titles.\n   *\n   * Default value: `{ survey: \"div\", page: \"div\", panel: \"div\", question: \"div\" }`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/change-heading-levels/ (linkStyle))\n   *\n   * If you want to modify HTML tags for individual titles, handle `SurveyModel`'s [`onGetTitleTagName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetTitleTagName) event.\n   */\n  titleTags: {\n    survey: \"div\",\n    page: \"div\",\n    panel: \"div\",\n    question: \"div\"\n  },\n  questions: {\n    inputTypes: [\"color\", \"date\", \"datetime-local\", \"email\", \"month\", \"number\", \"password\", \"range\", \"tel\", \"text\", \"time\", \"url\", \"week\"],\n    dataList: [\"\", \"name\", \"honorific-prefix\", \"given-name\", \"additional-name\", \"family-name\", \"honorific-suffix\", \"nickname\", \"organization-title\", \"username\", \"new-password\", \"current-password\", \"organization\", \"street-address\", \"address-line1\", \"address-line2\", \"address-line3\", \"address-level4\", \"address-level3\", \"address-level2\", \"address-level1\", \"country\", \"country-name\", \"postal-code\", \"cc-name\", \"cc-given-name\", \"cc-additional-name\", \"cc-family-name\", \"cc-number\", \"cc-exp\", \"cc-exp-month\", \"cc-exp-year\", \"cc-csc\", \"cc-type\", \"transaction-currency\", \"transaction-amount\", \"language\", \"bday\", \"bday-day\", \"bday-month\", \"bday-year\", \"sex\", \"url\", \"photo\", \"tel\", \"tel-country-code\", \"tel-national\", \"tel-area-code\", \"tel-local\", \"tel-local-prefix\", \"tel-local-suffix\", \"tel-extension\", \"email\", \"impp\"]\n  },\n  legacyProgressBarView: false,\n  /**\n   * An object with properties that configure input masks.\n   *\n   * Nested properties:\n   *\n   * - `patternPlaceholderChar`: `string`\\\n   * A symbol used as a placeholder for characters to be entered in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `\"_\"`.\n   *\n   * - `patternEscapeChar`: `string`\\\n   * A symbol used to insert literal representations of special characters in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `\"\\\\\"`.\n   *\n   * - `patternDefinitions`: `<{ [key: string]: RegExp }>`\\\n   * An object that maps placeholder symbols to regular expressions in [pattern masks](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern). Default value: `{ \"9\": /[0-9]/, \"a\": /[a-zA-Z]/, \"#\": /[a-zA-Z0-9]/ }`.\n   */\n  maskSettings: {\n    patternPlaceholderChar: \"_\",\n    patternEscapeChar: \"\\\\\",\n    patternDefinitions: {\n      \"9\": /[0-9]/,\n      \"a\": /[a-zA-Z]/,\n      \"#\": /[a-zA-Z0-9]/\n    }\n  },\n  /**\n   * Specifies whether to store date-time values in the following format: `\"YYYY-MM-DDThh:mm:ss.sssZ\"`. Applies only to form fields with [`inputType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputType) set to `\"datetime-local\"`.\n   *\n   * Default value: `false`\n   *\n   * If you enable this setting, date-time values are converted from local time to UTC when they are saved to the survey's [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data) object, while the question values remain in local time. Therefore, when you specify default values using a question's [`defaultValue`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#defaultValue) property, you need to use local time, but if you specify them using the `data` object, use a UTC date-time value in the following format: `\"YYYY-MM-DDThh:mm:ss.sssZ\"`.\n   *\n   * ```js\n   * const surveyJson = {\n   *   \"elements\": [{\n   *     \"name\": \"datetime\",\n   *     \"type\": \"text\",\n   *     \"title\": \"Select a date and time\",\n   *     \"inputType\": \"datetime-local\",\n   *     \"defaultValue\": \"2024-07-16T12:15:00\" // Local date-time value\n   *   }]\n   * }\n   * ```\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   * const surveyJson = { ... }\n   * const survey = new Model(surveyJson);\n   *\n   * survey.data = {\n   *   datetime: \"2024-07-16T12:15:00.000Z\" // UTC date-time value\n   * }\n   * ```\n   */\n  storeUtcDates: false,\n  // @param reason \"function-[functionname]\", \"question-[questionname]\", \"expression-operand\"\n  onDateCreated: (newDate, reason, val) => {\n    return newDate;\n  },\n  /**\n   * A function that allows you to define custom parsing rules for numbers represented as string values.\n   *\n   * The following code shows a template that you can use to implement the `parseNumber` function:\n   *\n   * ```js\n   * import { settings } from \"survey-core\";\n   *\n   * settings.parseNumber = (stringValue, numericValue) => {\n   *   if (typeof stringValue !== \"string\" || !stringValue)\n   *     return numericValue;\n   *   let parsedNumber = numericValue;\n   *   // ...\n   *   // Parsing the number according to custom parsing rules\n   *   // ...\n   *   return parsedNumber;\n   * };\n   * ```\n   * @param stringValue A number represented as a string value.\n   * @param numericValue A number parsed using a default parsing function. `NaN` if the original string is not a number.\n   * @returns A number that results from parsing the string value.\n   * @see [settings.serialization](https://surveyjs.io/form-library/documentation/api-reference/settings#serialization)\n   */\n  parseNumber: (stringValue, numericValue) => {\n    return numericValue;\n  }\n};\nclass SurveyError {\n  constructor(text = null, errorOwner = null) {\n    this.text = text;\n    this.errorOwner = errorOwner;\n    this.visible = true;\n    this.onUpdateErrorTextCallback = undefined;\n  }\n  equals(error) {\n    if (!error || !error.getErrorType) return false;\n    if (this.getErrorType() !== error.getErrorType()) return false;\n    return this.text === error.text && this.visible === error.visible;\n  }\n  get locText() {\n    if (!this.locTextValue) {\n      this.locTextValue = new LocalizableString(this.errorOwner, true);\n      this.locTextValue.storeDefaultText = true;\n      this.locTextValue.text = this.getText();\n    }\n    return this.locTextValue;\n  }\n  getText() {\n    var res = this.text;\n    if (!res) res = this.getDefaultText();\n    if (!!this.errorOwner) {\n      res = this.errorOwner.getErrorCustomText(res, this);\n    }\n    return res;\n  }\n  getErrorType() {\n    return \"base\";\n  }\n  getDefaultText() {\n    return \"\";\n  }\n  getLocale() {\n    return !!this.errorOwner ? this.errorOwner.getLocale() : \"\";\n  }\n  getLocalizationString(locStrName) {\n    return getLocaleString(locStrName, this.getLocale());\n  }\n  updateText() {\n    if (this.onUpdateErrorTextCallback) {\n      this.onUpdateErrorTextCallback(this);\n    }\n    this.locText.text = this.getText();\n  }\n}\nclass AnswerRequiredError extends SurveyError {\n  constructor(text = null, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"required\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"requiredError\");\n  }\n}\nclass OneAnswerRequiredError extends SurveyError {\n  constructor(text = null, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"requireoneanswer\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"requiredErrorInPanel\");\n  }\n}\nclass RequreNumericError extends SurveyError {\n  constructor(text = null, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"requirenumeric\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"numericError\");\n  }\n}\nclass ExceedSizeError extends SurveyError {\n  constructor(maxSize, errorOwner = null) {\n    super(null, errorOwner);\n    this.maxSize = maxSize;\n    this.locText.text = this.getText();\n  }\n  getErrorType() {\n    return \"exceedsize\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"exceedMaxSize\")[\"format\"](this.getTextSize());\n  }\n  getTextSize() {\n    var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    var fixed = [0, 0, 2, 3, 3];\n    if (this.maxSize === 0) {\n      return \"0 Byte\";\n    }\n    var i = Math.floor(Math.log(this.maxSize) / Math.log(1024));\n    var value = this.maxSize / Math.pow(1024, i);\n    return value.toFixed(fixed[i]) + \" \" + sizes[i];\n  }\n}\nclass WebRequestError extends SurveyError {\n  constructor(status, response, errorOwner = null) {\n    super(null, errorOwner);\n    this.status = status;\n    this.response = response;\n  }\n  getErrorType() {\n    return \"webrequest\";\n  }\n  getDefaultText() {\n    const str = this.getLocalizationString(\"urlRequestError\");\n    return !!str ? str[\"format\"](this.status, this.response) : \"\";\n  }\n}\nclass WebRequestEmptyError extends SurveyError {\n  constructor(text, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"webrequestempty\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"urlGetChoicesError\");\n  }\n}\nclass OtherEmptyError extends SurveyError {\n  constructor(text, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"otherempty\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"otherRequiredError\");\n  }\n}\nclass UploadingFileError extends SurveyError {\n  constructor(text, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"uploadingfile\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"uploadingFile\");\n  }\n}\nclass RequiredInAllRowsError extends SurveyError {\n  constructor(text, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"requiredinallrowserror\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"requiredInAllRowsError\");\n  }\n}\nclass EachRowUniqueError extends SurveyError {\n  constructor(text, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"eachrowuniqueeerror\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"eachRowUniqueError\");\n  }\n}\nclass MinRowCountError extends SurveyError {\n  constructor(minRowCount, errorOwner = null) {\n    super(null, errorOwner);\n    this.minRowCount = minRowCount;\n  }\n  getErrorType() {\n    return \"minrowcounterror\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"minRowCountError\")[\"format\"](this.minRowCount);\n  }\n}\nclass KeyDuplicationError extends SurveyError {\n  constructor(text, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"keyduplicationerror\";\n  }\n  getDefaultText() {\n    return this.getLocalizationString(\"keyDuplicationError\");\n  }\n}\nclass CustomError extends SurveyError {\n  constructor(text, errorOwner = null) {\n    super(text, errorOwner);\n    this.text = text;\n  }\n  getErrorType() {\n    return \"custom\";\n  }\n}\nclass ValidatorResult {\n  constructor(value, error = null) {\n    this.value = value;\n    this.error = error;\n  }\n}\n/**\n * A base class for all classes that implement validators.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nclass SurveyValidator extends Base {\n  constructor() {\n    super();\n    this.createLocalizableString(\"text\", this, true);\n  }\n  get isValidator() {\n    return true;\n  }\n  getSurvey(live = false) {\n    return !!this.errorOwner && !!this.errorOwner[\"getSurvey\"] ? this.errorOwner.getSurvey() : null;\n  }\n  /**\n   * An error message to display when a value fails validation.\n   */\n  get text() {\n    return this.getLocalizableStringText(\"text\");\n  }\n  set text(value) {\n    this.setLocalizableStringText(\"text\", value);\n  }\n  get isValidateAllValues() {\n    return false;\n  }\n  get locText() {\n    return this.getLocalizableString(\"text\");\n  }\n  getErrorText(name) {\n    if (this.text) return this.text;\n    return this.getDefaultErrorText(name);\n  }\n  getDefaultErrorText(name) {\n    return \"\";\n  }\n  validate(value, name = null, values = null, properties = null) {\n    return null;\n  }\n  get isRunning() {\n    return false;\n  }\n  get isAsync() {\n    return false;\n  }\n  getLocale() {\n    return !!this.errorOwner ? this.errorOwner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text, name, item) {\n    return !!this.errorOwner ? this.errorOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name) {\n    return !!this.errorOwner ? this.errorOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return !!this.errorOwner ? this.errorOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    return !!this.errorOwner ? this.errorOwner.getProcessedText(text) : text;\n  }\n  createCustomError(name) {\n    const err = new CustomError(this.getErrorText(name), this.errorOwner);\n    err.onUpdateErrorTextCallback = err => err.text = this.getErrorText(name);\n    return err;\n  }\n  toString() {\n    var res = this.getType().replace(\"validator\", \"\");\n    if (!!this.text) {\n      res += \", \" + this.text;\n    }\n    return res;\n  }\n}\nclass ValidatorRunner {\n  run(owner) {\n    var res = [];\n    var values = null;\n    var properties = null;\n    this.prepareAsyncValidators();\n    var asyncResults = [];\n    var validators = owner.getValidators();\n    for (var i = 0; i < validators.length; i++) {\n      var validator = validators[i];\n      if (!values && validator.isValidateAllValues) {\n        values = owner.getDataFilteredValues();\n        properties = owner.getDataFilteredProperties();\n      }\n      if (validator.isAsync) {\n        this.asyncValidators.push(validator);\n        validator.onAsyncCompleted = result => {\n          if (!!result && !!result.error) asyncResults.push(result.error);\n          if (!this.onAsyncCompleted) return;\n          for (var i = 0; i < this.asyncValidators.length; i++) {\n            if (this.asyncValidators[i].isRunning) return;\n          }\n          this.onAsyncCompleted(asyncResults);\n        };\n      }\n    }\n    validators = owner.getValidators();\n    for (var i = 0; i < validators.length; i++) {\n      var validator = validators[i];\n      var validatorResult = validator.validate(owner.validatedValue, owner.getValidatorTitle(), values, properties);\n      if (!!validatorResult && !!validatorResult.error) {\n        res.push(validatorResult.error);\n      }\n    }\n    if (this.asyncValidators.length == 0 && !!this.onAsyncCompleted) this.onAsyncCompleted([]);\n    return res;\n  }\n  prepareAsyncValidators() {\n    if (!!this.asyncValidators) {\n      for (var i = 0; i < this.asyncValidators.length; i++) {\n        this.asyncValidators[i].onAsyncCompleted = null;\n      }\n    }\n    this.asyncValidators = [];\n  }\n}\n/**\n * A class that implements a validator for numeric values.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nclass NumericValidator extends SurveyValidator {\n  constructor(minValue = null, maxValue = null) {\n    super();\n    this.minValue = minValue;\n    this.maxValue = maxValue;\n  }\n  getType() {\n    return \"numericvalidator\";\n  }\n  validate(value, name = null, values = null, properties = null) {\n    if (this.isValueEmpty(value)) return null;\n    if (!Helpers.isNumber(value)) {\n      return new ValidatorResult(null, new RequreNumericError(this.text, this.errorOwner));\n    }\n    var result = new ValidatorResult(Helpers.getNumber(value));\n    if (this.minValue !== null && this.minValue > result.value) {\n      result.error = this.createCustomError(name);\n      return result;\n    }\n    if (this.maxValue !== null && this.maxValue < result.value) {\n      result.error = this.createCustomError(name);\n      return result;\n    }\n    return typeof value === \"number\" ? null : result;\n  }\n  getDefaultErrorText(name) {\n    var vName = name ? name : this.getLocalizationString(\"value\");\n    if (this.minValue !== null && this.maxValue !== null) {\n      return this.getLocalizationFormatString(\"numericMinMax\", vName, this.minValue, this.maxValue);\n    } else {\n      if (this.minValue !== null) {\n        return this.getLocalizationFormatString(\"numericMin\", vName, this.minValue);\n      }\n      return this.getLocalizationFormatString(\"numericMax\", vName, this.maxValue);\n    }\n  }\n  /**\n   * A minimum allowed numeric value.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get minValue() {\n    return this.getPropertyValue(\"minValue\");\n  }\n  set minValue(val) {\n    this.setPropertyValue(\"minValue\", val);\n  }\n  /**\n   * A maximum allowed numeric value.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get maxValue() {\n    return this.getPropertyValue(\"maxValue\");\n  }\n  set maxValue(val) {\n    this.setPropertyValue(\"maxValue\", val);\n  }\n}\n/**\n * A class that implements a validator for text values.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nclass TextValidator extends SurveyValidator {\n  constructor() {\n    super();\n  }\n  getType() {\n    return \"textvalidator\";\n  }\n  validate(value, name = null, values = null, properties = null) {\n    if (this.isValueEmpty(value)) return null;\n    if (!this.allowDigits) {\n      var reg = /\\d+$/;\n      if (reg.test(value)) {\n        return new ValidatorResult(null, this.createCustomError(\"textNoDigitsAllow\"));\n      }\n    }\n    if (this.minLength > 0 && value.length < this.minLength) {\n      return new ValidatorResult(null, this.createCustomError(name));\n    }\n    if (this.maxLength > 0 && value.length > this.maxLength) {\n      return new ValidatorResult(null, this.createCustomError(name));\n    }\n    return null;\n  }\n  getDefaultErrorText(name) {\n    if (name === \"textNoDigitsAllow\") return this.getLocalizationString(name);\n    if (this.minLength > 0 && this.maxLength > 0) return this.getLocalizationFormatString(\"textMinMaxLength\", this.minLength, this.maxLength);\n    if (this.minLength > 0) return this.getLocalizationFormatString(\"textMinLength\", this.minLength);\n    return this.getLocalizationFormatString(\"textMaxLength\", this.maxLength);\n  }\n  /**\n   * The minimum length of a text value measured in characters.\n   *\n   * Default value: 0\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get minLength() {\n    return this.getPropertyValue(\"minLength\");\n  }\n  set minLength(val) {\n    this.setPropertyValue(\"minLength\", val);\n  }\n  /**\n   * The maximum length of a text value measured in characters.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get maxLength() {\n    return this.getPropertyValue(\"maxLength\");\n  }\n  set maxLength(val) {\n    this.setPropertyValue(\"maxLength\", val);\n  }\n  /**\n   * Specifies whether a text value can include numerical digits.\n   *\n   * Default value: `true`\n   */\n  get allowDigits() {\n    return this.getPropertyValue(\"allowDigits\");\n  }\n  set allowDigits(val) {\n    this.setPropertyValue(\"allowDigits\", val);\n  }\n}\n/**\n * A class that implements answer count validation in the question types that can have multiple values (for instance, [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model)).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nclass AnswerCountValidator extends SurveyValidator {\n  constructor(minCount = null, maxCount = null) {\n    super();\n    this.minCount = minCount;\n    this.maxCount = maxCount;\n  }\n  getType() {\n    return \"answercountvalidator\";\n  }\n  validate(value, name = null, values = null, properties = null) {\n    if (value == null || value.constructor != Array) return null;\n    var count = value.length;\n    if (count == 0) return null;\n    if (this.minCount && count < this.minCount) {\n      return new ValidatorResult(null, this.createCustomError(this.getLocalizationFormatString(\"minSelectError\", this.minCount)));\n    }\n    if (this.maxCount && count > this.maxCount) {\n      return new ValidatorResult(null, this.createCustomError(this.getLocalizationFormatString(\"maxSelectError\", this.maxCount)));\n    }\n    return null;\n  }\n  getDefaultErrorText(name) {\n    return name;\n  }\n  /**\n   * A minimum number of selected answers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get minCount() {\n    return this.getPropertyValue(\"minCount\");\n  }\n  set minCount(val) {\n    this.setPropertyValue(\"minCount\", val);\n  }\n  /**\n   * A maximum number of selected answers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get maxCount() {\n    return this.getPropertyValue(\"maxCount\");\n  }\n  set maxCount(val) {\n    this.setPropertyValue(\"maxCount\", val);\n  }\n}\n/**\n * A class that implements validation using regular expressions.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nclass RegexValidator extends SurveyValidator {\n  constructor(regex = null) {\n    super();\n    this.regex = regex;\n  }\n  getType() {\n    return \"regexvalidator\";\n  }\n  validate(value, name = null, values = null, properties = null) {\n    if (!this.regex || this.isValueEmpty(value)) return null;\n    var re = this.createRegExp();\n    if (Array.isArray(value)) {\n      for (var i = 0; i < value.length; i++) {\n        var res = this.hasError(re, value[i], name);\n        if (res) return res;\n      }\n    }\n    return this.hasError(re, value, name);\n  }\n  hasError(re, value, name) {\n    if (re.test(value)) return null;\n    return new ValidatorResult(value, this.createCustomError(name));\n  }\n  /**\n   * A regular expression used to validate values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get regex() {\n    return this.getPropertyValue(\"regex\");\n  }\n  set regex(val) {\n    this.setPropertyValue(\"regex\", val);\n  }\n  /**\n   * Specifies whether uppercase and lowercase letters must be treated as distinct or equivalent when validating values.\n   *\n   * Default value: `false` (uppercase and lowercase letters are treated as distinct)\n   */\n  get caseInsensitive() {\n    return this.getPropertyValue(\"caseInsensitive\");\n  }\n  set caseInsensitive(val) {\n    this.setPropertyValue(\"caseInsensitive\", val);\n  }\n  get insensitive() {\n    return this.caseInsensitive;\n  }\n  set insensitive(val) {\n    this.caseInsensitive = val;\n  }\n  createRegExp() {\n    return new RegExp(this.regex, this.caseInsensitive ? \"i\" : \"\");\n  }\n}\n/**\n * A class that implements a validator for e-mail addresses.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nclass EmailValidator extends SurveyValidator {\n  constructor() {\n    super();\n    this.re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()=[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()=[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  }\n  getType() {\n    return \"emailvalidator\";\n  }\n  validate(value, name = null, values = null, properties = null) {\n    if (!value) return null;\n    if (this.re.test(value)) return null;\n    return new ValidatorResult(value, this.createCustomError(name));\n  }\n  getDefaultErrorText(name) {\n    return this.getLocalizationString(\"invalidEmail\");\n  }\n}\n/**\n * A class that implements validation using [expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n */\nclass ExpressionValidator extends SurveyValidator {\n  constructor(expression = null) {\n    super();\n    this.conditionRunner = null;\n    this.isRunningValue = false;\n    this.expression = expression;\n  }\n  getType() {\n    return \"expressionvalidator\";\n  }\n  get isValidateAllValues() {\n    return true;\n  }\n  get isAsync() {\n    if (!this.ensureConditionRunner(false)) return false;\n    return this.conditionRunner.isAsync;\n  }\n  get isRunning() {\n    return this.isRunningValue;\n  }\n  validate(value, name = null, values = null, properties = null) {\n    if (!this.expression) return null;\n    if (!!this.conditionRunner) {\n      this.conditionRunner.onRunComplete = null;\n    }\n    this.ensureConditionRunner(true);\n    this.conditionRunner.onRunComplete = res => {\n      this.isRunningValue = false;\n      if (!!this.onAsyncCompleted) {\n        this.onAsyncCompleted(this.generateError(res, value, name));\n      }\n    };\n    this.isRunningValue = true;\n    var res = this.conditionRunner.run(values, properties);\n    if (this.conditionRunner.isAsync) return null;\n    this.isRunningValue = false;\n    return this.generateError(res, value, name);\n  }\n  generateError(res, value, name) {\n    if (!res) {\n      return new ValidatorResult(value, this.createCustomError(name));\n    }\n    return null;\n  }\n  getDefaultErrorText(name) {\n    return this.getLocalizationFormatString(\"invalidExpression\", this.expression);\n  }\n  ensureConditionRunner(reNew) {\n    if (!this.expression) return false;\n    if (reNew || !this.conditionRunner) {\n      this.conditionRunner = new ConditionRunner(this.expression);\n    } else {\n      this.conditionRunner.expression = this.expression;\n    }\n    return true;\n  }\n  /**\n   * A Boolean [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions). If it evaluates to `false`, validation fails.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/ (linkStyle))\n   */\n  get expression() {\n    return this.getPropertyValue(\"expression\");\n  }\n  set expression(val) {\n    this.setPropertyValue(\"expression\", val);\n  }\n}\nSerializer.addClass(\"surveyvalidator\", [{\n  name: \"text\",\n  serializationProperty: \"locText\"\n}]);\nSerializer.addClass(\"numericvalidator\", [\"minValue:number\", \"maxValue:number\"], function () {\n  return new NumericValidator();\n}, \"surveyvalidator\");\nSerializer.addClass(\"textvalidator\", [{\n  name: \"minLength:number\",\n  default: 0\n}, {\n  name: \"maxLength:number\",\n  default: 0\n}, {\n  name: \"allowDigits:boolean\",\n  default: true\n}], function () {\n  return new TextValidator();\n}, \"surveyvalidator\");\nSerializer.addClass(\"answercountvalidator\", [\"minCount:number\", \"maxCount:number\"], function () {\n  return new AnswerCountValidator();\n}, \"surveyvalidator\");\nSerializer.addClass(\"regexvalidator\", [\"regex\", {\n  name: \"caseInsensitive:boolean\",\n  alternativeName: \"insensitive\"\n}], function () {\n  return new RegexValidator();\n}, \"surveyvalidator\");\nSerializer.addClass(\"emailvalidator\", [], function () {\n  return new EmailValidator();\n}, \"surveyvalidator\");\nSerializer.addClass(\"expressionvalidator\", [\"expression:condition\"], function () {\n  return new ExpressionValidator();\n}, \"surveyvalidator\");\nclass QuestionCustomWidget {\n  constructor(name, widgetJson) {\n    this.name = name;\n    this.widgetJson = widgetJson;\n    this.htmlTemplate = widgetJson.htmlTemplate ? widgetJson.htmlTemplate : \"\";\n  }\n  afterRender(question, el) {\n    if (!this.widgetJson.afterRender) return;\n    question.localeChangedCallback = () => {\n      if (this.widgetJson.willUnmount) {\n        this.widgetJson.willUnmount(question, el);\n      }\n      this.widgetJson.afterRender(question, el);\n    };\n    this.widgetJson.afterRender(question, el);\n  }\n  willUnmount(question, el) {\n    if (this.widgetJson.willUnmount) this.widgetJson.willUnmount(question, el);\n  }\n  getDisplayValue(question, value = undefined) {\n    if (this.widgetJson.getDisplayValue) return this.widgetJson.getDisplayValue(question, value);\n    return null;\n  }\n  validate(question) {\n    if (this.widgetJson.validate) return this.widgetJson.validate(question);\n    return undefined;\n  }\n  isFit(question) {\n    if (this.isLibraryLoaded() && this.widgetJson.isFit) return this.widgetJson.isFit(question);\n    return false;\n  }\n  get canShowInToolbox() {\n    if (this.widgetJson.showInToolbox === false) return false;\n    if (CustomWidgetCollection.Instance.getActivatedBy(this.name) != \"customtype\") return false;\n    return !this.widgetJson.widgetIsLoaded || this.widgetJson.widgetIsLoaded();\n  }\n  get showInToolbox() {\n    return this.widgetJson.showInToolbox !== false;\n  }\n  set showInToolbox(val) {\n    this.widgetJson.showInToolbox = val;\n  }\n  init() {\n    if (this.widgetJson.init) {\n      this.widgetJson.init();\n    }\n  }\n  activatedByChanged(activatedBy) {\n    if (this.isLibraryLoaded() && this.widgetJson.activatedByChanged) {\n      this.widgetJson.activatedByChanged(activatedBy);\n    }\n  }\n  isLibraryLoaded() {\n    if (this.widgetJson.widgetIsLoaded) return this.widgetJson.widgetIsLoaded() == true;\n    return true;\n  }\n  get isDefaultRender() {\n    return this.widgetJson.isDefaultRender;\n  }\n  get pdfQuestionType() {\n    return this.widgetJson.pdfQuestionType;\n  }\n  get pdfRender() {\n    return this.widgetJson.pdfRender;\n  }\n}\nclass CustomWidgetCollection {\n  constructor() {\n    this.widgetsValues = [];\n    this.widgetsActivatedBy = {};\n    this.onCustomWidgetAdded = new Event();\n  }\n  get widgets() {\n    return this.widgetsValues;\n  }\n  add(widgetJson, activatedBy = \"property\") {\n    this.addCustomWidget(widgetJson, activatedBy);\n  }\n  addCustomWidget(widgetJson, activatedBy = \"property\") {\n    var name = widgetJson.name;\n    if (!name) {\n      name = \"widget_\" + this.widgets.length + 1;\n    }\n    var customWidget = new QuestionCustomWidget(name, widgetJson);\n    this.widgetsValues.push(customWidget);\n    customWidget.init();\n    this.widgetsActivatedBy[name] = activatedBy;\n    customWidget.activatedByChanged(activatedBy);\n    this.onCustomWidgetAdded.fire(customWidget, null);\n    return customWidget;\n  }\n  /**\n   * Returns the way the custom wiget is activated. It can be activated by a property (\"property\"), question type (\"type\") or by new/custom question type (\"customtype\").\n   * @param widgetName the custom widget name\n   * @see setActivatedBy\n   */\n  getActivatedBy(widgetName) {\n    var res = this.widgetsActivatedBy[widgetName];\n    return res ? res : \"property\";\n  }\n  /**\n   * Sets the way the custom wiget is activated. The activation types are: property (\"property\"), question type (\"type\") or new/custom question type (\"customtype\"). A custom wiget may support all or only some of this activation types.\n   * @param widgetName\n   * @param activatedBy there are three possible variants: \"property\", \"type\" and \"customtype\"\n   */\n  setActivatedBy(widgetName, activatedBy) {\n    if (!widgetName || !activatedBy) return;\n    var widget = this.getCustomWidgetByName(widgetName);\n    if (!widget) return;\n    this.widgetsActivatedBy[widgetName] = activatedBy;\n    widget.activatedByChanged(activatedBy);\n  }\n  clear() {\n    this.widgetsValues = [];\n  }\n  getCustomWidgetByName(name) {\n    for (var i = 0; i < this.widgets.length; i++) {\n      if (this.widgets[i].name == name) return this.widgets[i];\n    }\n    return null;\n  }\n  getCustomWidget(question) {\n    for (var i = 0; i < this.widgetsValues.length; i++) {\n      if (this.widgetsValues[i].isFit(question)) return this.widgetsValues[i];\n    }\n    return null;\n  }\n}\nCustomWidgetCollection.Instance = new CustomWidgetCollection();\nclass RendererFactory {\n  constructor() {\n    this.renderersHash = {};\n    this.defaultHash = {};\n  }\n  unregisterRenderer(questionType, rendererAs) {\n    delete this.renderersHash[questionType][rendererAs];\n    if (this.defaultHash[questionType] === rendererAs) {\n      delete this.defaultHash[questionType];\n    }\n  }\n  registerRenderer(questionType, renderAs, renderer, useAsDefault = false) {\n    if (!this.renderersHash[questionType]) {\n      this.renderersHash[questionType] = {};\n    }\n    this.renderersHash[questionType][renderAs] = renderer;\n    if (useAsDefault) {\n      this.defaultHash[questionType] = renderAs;\n    }\n  }\n  getRenderer(questionType, renderAs) {\n    const qHash = this.renderersHash[questionType];\n    if (!!qHash) {\n      if (!!renderAs && qHash[renderAs]) return qHash[renderAs];\n      const dVal = this.defaultHash[questionType];\n      if (!!dVal && qHash[dVal]) return qHash[dVal];\n    }\n    return \"default\";\n  }\n  getRendererByQuestion(question) {\n    return this.getRenderer(question.getType(), question.renderAs);\n  }\n  clear() {\n    this.renderersHash = {};\n  }\n}\nRendererFactory.Instance = new RendererFactory();\nclass TextAreaModel {\n  updateElement() {\n    if (this.element && this.autoGrow) {\n      setTimeout(() => increaseHeightByContent(this.element), 1);\n    }\n  }\n  constructor(options) {\n    this.options = options;\n    this.onPropertyChangedCallback = () => {\n      if (this.element) {\n        this.element.value = this.getTextValue();\n        this.updateElement();\n      }\n    };\n    this.question.registerFunctionOnPropertiesValueChanged(this.options.propertyNames, this.onPropertyChangedCallback, \"__textarea\");\n  }\n  setElement(element) {\n    if (!!element) {\n      this.element = element;\n      this.updateElement();\n    }\n  }\n  resetElement() {\n    this.element = undefined;\n  }\n  getTextValue() {\n    if (!!this.options.getTextValue) return this.options.getTextValue() || \"\";\n    return \"\";\n  }\n  onTextAreaChange(event) {\n    if (!!this.options.onTextAreaChange) this.options.onTextAreaChange(event);\n  }\n  onTextAreaInput(event) {\n    if (!!this.options.onTextAreaInput) this.options.onTextAreaInput(event);\n    if (this.element && this.autoGrow) {\n      increaseHeightByContent(this.element);\n    }\n  }\n  onTextAreaKeyDown(event) {\n    if (!!this.options.onTextAreaKeyDown) this.options.onTextAreaKeyDown(event);\n  }\n  onTextAreaBlur(event) {\n    this.onTextAreaChange(event);\n    if (!!this.options.onTextAreaBlur) this.options.onTextAreaBlur(event);\n  }\n  onTextAreaFocus(event) {\n    var _a;\n    if (!!this.options.onTextAreaFocus) this.options.onTextAreaFocus(event);\n    if (this.isReadOnlyAttr) {\n      (_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.select();\n    }\n  }\n  get question() {\n    return this.options.question;\n  }\n  get id() {\n    return this.options.id();\n  }\n  get placeholder() {\n    return this.options.placeholder();\n  }\n  get className() {\n    return this.options.className();\n  }\n  get maxLength() {\n    if (this.options.maxLength) return this.options.maxLength();\n  }\n  get autoGrow() {\n    if (this.options.autoGrow) return this.options.autoGrow();\n  }\n  get rows() {\n    if (this.options.rows) return this.options.rows();\n  }\n  get cols() {\n    if (this.options.cols) return this.options.cols();\n  }\n  get isDisabledAttr() {\n    return this.options.isDisabledAttr();\n  }\n  get isReadOnlyAttr() {\n    if (this.options.isReadOnlyAttr) return this.options.isReadOnlyAttr();\n  }\n  get ariaRequired() {\n    if (this.options.ariaRequired) return this.options.ariaRequired();\n  }\n  get ariaLabel() {\n    if (this.options.ariaLabel) return this.options.ariaLabel();\n  }\n  get ariaInvalid() {\n    if (this.options.ariaInvalid) return this.options.ariaInvalid();\n  }\n  get ariaLabelledBy() {\n    if (this.options.ariaLabelledBy) return this.options.ariaLabelledBy();\n  }\n  get ariaDescribedBy() {\n    if (this.options.ariaDescribedBy) return this.options.ariaDescribedBy();\n  }\n  get ariaErrormessage() {\n    if (this.options.ariaErrormessage) return this.options.ariaErrormessage();\n  }\n  dispose() {\n    if (this.question) {\n      this.question.unRegisterFunctionOnPropertiesValueChanged(this.options.propertyNames, \"__textarea\");\n    }\n    this.resetElement();\n  }\n}\nclass TriggerExpressionInfo {\n  constructor(name, canRun, doComplete) {\n    this.name = name;\n    this.canRun = canRun;\n    this.doComplete = doComplete;\n    this.getSecondRunner = () => undefined;\n  }\n}\n/**\n * A base class for all questions.\n */\nclass Question extends SurveyElement {\n  static getQuestionId() {\n    return \"sq_\" + Question.questionCounter++;\n  }\n  isReadOnlyRenderDiv() {\n    return this.isReadOnly && settings.readOnly.commentRenderMode === \"div\";\n  }\n  allowMobileInDesignMode() {\n    return false;\n  }\n  updateIsMobileFromSurvey() {\n    this.setIsMobile(this.survey._isMobile);\n  }\n  setIsMobile(val) {\n    const newVal = val && (this.allowMobileInDesignMode() || !this.isDesignMode);\n    this.isMobile = newVal;\n  }\n  getIsMobile() {\n    return this._isMobile;\n  }\n  get isMobile() {\n    return this.getIsMobile();\n  }\n  set isMobile(val) {\n    this._isMobile = val;\n  }\n  themeChanged(theme) {}\n  get _isMobile() {\n    return this.getPropertyValue(\"_isMobile\", false);\n  }\n  set _isMobile(val) {\n    this.setPropertyValue(\"_isMobile\", val);\n  }\n  get forceIsInputReadOnly() {\n    return this.getPropertyValue(\"forceIsInputReadOnly\");\n  }\n  set forceIsInputReadOnly(val) {\n    this.setPropertyValue(\"forceIsInputReadOnly\", val);\n  }\n  get ariaExpanded() {\n    if (this.isNewA11yStructure) {\n      return null;\n    }\n    return this.getPropertyValue(\"ariaExpanded\");\n  }\n  set ariaExpanded(val) {\n    this.setPropertyValue(\"ariaExpanded\", val);\n  }\n  constructor(name) {\n    super(name);\n    this.customWidgetData = {\n      isNeedRender: true\n    };\n    this.hasCssErrorCallback = () => false;\n    this.isReadyValue = true;\n    this.dependedQuestions = [];\n    /**\n     * An event that is raised when the question's ready state has changed (expressions are evaluated, choices are loaded from a web resource specified by the `choicesByUrl` property, etc.).\n     *\n     * Parameters:\n     *\n     * - `sender`: `SurveyModel`\\\n     * A survey instance that contains the question whose ready state has changed.\n     * - `options.isReady`: `boolean`\\\n     * Indicates whether the question is ready.\n     * - `options.oldIsReady`: `boolean`\\\n     * Indicates the previous ready state.\n     */\n    this.onReadyChanged = this.addEvent();\n    this.triggersInfo = [];\n    this.isRunningValidatorsValue = false;\n    this.isValueChangedInSurvey = false;\n    this.allowNotifyValueChanged = true;\n    //EO new a11y\n    this._syncPropertiesChanging = false;\n    this.setPropertyValueDirectly(\"id\", Question.getQuestionId());\n    this.onCreating();\n    this.createNewArray(\"validators\", validator => {\n      validator.errorOwner = this;\n    });\n    this.addExpressionProperty(\"visibleIf\", (obj, res) => {\n      this.visible = res === true;\n    });\n    this.addExpressionProperty(\"enableIf\", (obj, res) => {\n      this.readOnly = res === false;\n    });\n    this.addExpressionProperty(\"requiredIf\", (obj, res) => {\n      this.isRequired = res === true;\n    });\n    this.createLocalizableString(\"commentText\", this, true, true);\n    this.createLocalizableString(\"requiredErrorText\", this);\n    this.createLocalizableString(\"commentPlaceholder\", this);\n    this.createLocalizableString(\"defaultDisplayValue\", this);\n    this.addTriggerInfo(\"resetValueIf\", () => !this.isEmpty(), () => {\n      this.startSetValueOnExpression();\n      this.updateValueWithDefaultsOrClear();\n      this.finishSetValueOnExpression();\n    });\n    const setValueIfInfo = this.addTriggerInfo(\"setValueIf\", () => true, () => this.runSetValueExpression());\n    setValueIfInfo.getSecondRunner = () => this.getSetValueExpressionRunner();\n    this.registerPropertyChangedHandlers([\"width\"], () => {\n      this.updateQuestionCss();\n      if (!!this.parent) {\n        this.parent.elementWidthChanged(this);\n      }\n    });\n    this.registerPropertyChangedHandlers([\"isRequired\"], () => {\n      if (!this.isRequired && this.errors.length > 0) {\n        this.validate();\n      }\n      this.locTitle.strChanged();\n      this.clearCssClasses();\n    });\n    this.registerPropertyChangedHandlers([\"indent\", \"rightIndent\"], () => {\n      this.resetIndents();\n    });\n    this.registerPropertyChangedHandlers([\"showCommentArea\", \"showOtherItem\"], () => {\n      this.initCommentFromSurvey();\n    });\n    this.registerPropertyChangedHandlers([\"commentPlaceholder\"], () => {\n      this.resetRenderedCommentPlaceholder();\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"no\", \"readOnly\", \"hasVisibleErrors\", \"containsErrors\"], () => {\n      this.updateQuestionCss();\n    });\n    this.registerPropertyChangedHandlers([\"_isMobile\"], () => {\n      this.onMobileChanged();\n    });\n    this.registerPropertyChangedHandlers([\"colSpan\"], () => {\n      var _a;\n      (_a = this.parent) === null || _a === void 0 ? void 0 : _a.updateColumns();\n    });\n  }\n  getDefaultTitle() {\n    return this.name;\n  }\n  createLocTitleProperty() {\n    const locTitleValue = super.createLocTitleProperty();\n    locTitleValue.storeDefaultText = true;\n    locTitleValue.onGetTextCallback = (text, nonProcessedText) => {\n      if (!text && !nonProcessedText) {\n        text = this.getDefaultTitle();\n      }\n      if (!this.survey) return text;\n      return this.survey.getUpdatedQuestionTitle(this, text);\n    };\n    this.locProcessedTitle = new LocalizableString(this, true);\n    this.locProcessedTitle.sharedData = locTitleValue;\n    return locTitleValue;\n  }\n  get locRenderedTitle() {\n    if (this.isSingleInputActive && !!this.singleInputLocTitle) return this.singleInputLocTitle;\n    return this.locTitle;\n  }\n  get commentTextAreaModel() {\n    if (!this.commentTextAreaModelValue) {\n      this.commentTextAreaModelValue = new TextAreaModel(this.getCommentTextAreaOptions());\n    }\n    return this.commentTextAreaModelValue;\n  }\n  getCommentTextAreaOptions() {\n    const options = {\n      question: this,\n      id: () => this.commentId,\n      propertyNames: [\"comment\"],\n      className: () => this.cssClasses.comment,\n      placeholder: () => this.renderedCommentPlaceholder,\n      isDisabledAttr: () => this.isInputReadOnly || false,\n      rows: () => this.commentAreaRows,\n      autoGrow: () => this.autoGrowComment,\n      maxLength: () => this.getOthersMaxLength(),\n      ariaRequired: () => this.a11y_input_ariaRequired,\n      ariaLabel: () => this.a11y_input_ariaLabel,\n      getTextValue: () => {\n        return this.comment;\n      },\n      onTextAreaChange: e => {\n        this.onCommentChange(e);\n      },\n      onTextAreaInput: e => {\n        this.onCommentInput(e);\n      }\n    };\n    return options;\n  }\n  getSurvey(live = false) {\n    if (live) {\n      return !!this.parent ? this.parent.getSurvey(live) : null;\n    }\n    if (!!this.onGetSurvey) return this.onGetSurvey();\n    return super.getSurvey();\n  }\n  getValueName() {\n    if (!!this.valueName) return this.valueName.toString();\n    return this.name;\n  }\n  /**\n   * Specifies an object property that should store the question value.\n   *\n   * Refer to the [Merge Question Values](https://surveyjs.io/form-library/documentation/design-survey-merge-question-values) help topic for more information.\n   */\n  get valueName() {\n    return this.getPropertyValue(\"valueName\", \"\");\n  }\n  set valueName(val) {\n    var oldValueName = this.getValueName();\n    this.setPropertyValue(\"valueName\", val);\n    this.onValueNameChanged(oldValueName);\n  }\n  onValueNameChanged(oldValue) {\n    if (!this.survey) return;\n    this.survey.questionRenamed(this, this.name, !!oldValue ? oldValue : this.name);\n    this.initDataFromSurvey();\n  }\n  onNameChanged(oldValue) {\n    this.locTitle.strChanged();\n    if (!this.survey) return;\n    this.survey.questionRenamed(this, oldValue, this.valueName ? this.valueName : oldValue);\n  }\n  get isReady() {\n    return this.isReadyValue;\n  }\n  onAsyncRunningChanged() {\n    this.updateIsReady();\n  }\n  ensureQuestionIsReady() {\n    this.displayValue;\n  }\n  waitForQuestionIsReady(callback) {\n    return new Promise(resolve => {\n      this.ensureQuestionIsReady();\n      if (this.isReady) {\n        resolve();\n        if (!!callback) callback();\n      } else {\n        const readyCallback = (_, options) => {\n          if (options.isReady) {\n            this.onReadyChanged.remove(readyCallback);\n            resolve();\n            if (!!callback) callback();\n          }\n        };\n        this.onReadyChanged.add(readyCallback);\n      }\n    });\n  }\n  updateIsReady() {\n    let res = this.getIsQuestionReady();\n    if (res) {\n      const questions = this.getIsReadyDependsOn();\n      for (let i = 0; i < questions.length; i++) {\n        if (!questions[i].getIsQuestionReady()) {\n          res = false;\n          break;\n        }\n      }\n    }\n    this.setIsReady(res);\n  }\n  getIsQuestionReady() {\n    return !this.isAsyncExpressionRunning && this.getAreNestedQuestionsReady();\n  }\n  getAreNestedQuestionsReady() {\n    const questions = this.getIsReadyNestedQuestions();\n    if (!Array.isArray(questions)) return true;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isReady) return false;\n    }\n    return true;\n  }\n  getIsReadyNestedQuestions() {\n    return this.getNestedQuestions();\n  }\n  setIsReady(val) {\n    const oldIsReady = this.isReadyValue;\n    this.isReadyValue = val;\n    if (oldIsReady != val) {\n      this.getIsReadyDependends().forEach(q => q.updateIsReady());\n      this.onReadyChanged.fire(this, {\n        question: this,\n        isReady: val,\n        oldIsReady: oldIsReady\n      });\n    }\n  }\n  getIsReadyDependsOn() {\n    return this.getIsReadyDependendCore(true);\n  }\n  getIsReadyDependends() {\n    return this.getIsReadyDependendCore(false);\n  }\n  getDependedQuestionsByValueName(isDependOn) {\n    return this.survey.questionsByValueName(this.getValueName());\n  }\n  getIsReadyDependendCore(isDependOn) {\n    if (!this.survey) return [];\n    const questions = this.getDependedQuestionsByValueName(isDependOn);\n    const res = new Array();\n    questions.forEach(q => {\n      if (q !== this) res.push(q);\n    });\n    if (!isDependOn) {\n      if (this.parentQuestion) {\n        res.push(this.parentQuestion);\n      }\n      if (this.dependedQuestions.length > 0) {\n        this.dependedQuestions.forEach(q => res.push(q));\n      }\n    }\n    return res;\n  }\n  choicesLoaded() {}\n  /**\n   * Returns a page to which the question belongs and allows you to move this question to a different page.\n   */\n  get page() {\n    if (!!this.parentQuestion) return this.parentQuestion.page;\n    return this.getPage(this.parent);\n  }\n  set page(val) {\n    this.setPage(this.parent, val);\n  }\n  getPanel() {\n    return null;\n  }\n  delete(doDispose = true) {\n    this.removeFromParent();\n    if (doDispose) {\n      this.dispose();\n    } else {\n      this.resetDependedQuestions();\n    }\n  }\n  removeFromParent() {\n    if (!!this.parent) {\n      this.removeSelfFromList(this.parent.elements);\n    }\n  }\n  addDependedQuestion(question) {\n    if (!question || this.dependedQuestions.indexOf(question) > -1) return;\n    this.dependedQuestions.push(question);\n  }\n  removeDependedQuestion(question) {\n    if (!question) return;\n    var index = this.dependedQuestions.indexOf(question);\n    if (index > -1) {\n      this.dependedQuestions.splice(index, 1);\n    }\n  }\n  updateDependedQuestions() {\n    for (var i = 0; i < this.dependedQuestions.length; i++) {\n      this.dependedQuestions[i].updateDependedQuestion();\n    }\n  }\n  updateDependedQuestion() {}\n  resetDependedQuestion() {}\n  get isFlowLayout() {\n    return this.getLayoutType() === \"flow\";\n  }\n  getLayoutType() {\n    if (!!this.parent) return this.parent.getChildrenLayoutType();\n    return \"row\";\n  }\n  isLayoutTypeSupported(layoutType) {\n    return layoutType !== \"flow\";\n  }\n  /**\n   * Gets or sets question visibility.\n   *\n   * If you want to display or hide a question based on a condition, specify the [`visibleIf`](https://surveyjs.io/form-library/documentation/question#visibleIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isVisible\n   * @see visibleIf\n   */\n  get visible() {\n    return this.getPropertyValue(\"visible\", true);\n  }\n  set visible(val) {\n    if (val == this.visible) return;\n    this.setPropertyValue(\"visible\", val);\n    this.onVisibleChangedCore();\n    this.notifySurveyVisibilityChanged();\n  }\n  onVisibleChanged() {\n    const prevVal = this.getPropertyValue(\"isVisible\");\n    this.onVisibleChangedCore();\n    const newVal = this.getPropertyValue(\"isVisible\");\n    if (prevVal !== undefined && prevVal !== newVal) {\n      this.notifySurveyVisibilityChanged();\n    }\n  }\n  onVisibleChangedCore() {\n    this.updateIsVisibleProp();\n    if (!this.isVisible && this.errors && this.errors.length > 0) {\n      this.errors = [];\n    }\n  }\n  notifyStateChanged(prevState) {\n    super.notifyStateChanged(prevState);\n    if (this.isCollapsed) {\n      this.onHidingContent();\n    }\n  }\n  updateElementVisibility() {\n    this.updateIsVisibleProp();\n  }\n  updateIsVisibleProp() {\n    const prev = this.getPropertyValue(\"isVisible\");\n    const val = this.isVisible;\n    if (prev !== val) {\n      this.setPropertyValue(\"isVisible\", val);\n      if (!val) {\n        this.onHidingContent();\n      }\n    }\n    if (val !== this.visible && this.areInvisibleElementsShowing) {\n      this.updateQuestionCss(true);\n    }\n  }\n  /**\n   * Specifies whether to use display names for question values in placeholders.\n   *\n   * Default value: `true`\n   *\n   * This property applies to questions whose values are defined as objects with the `value` and `text` properties (for example, [choice items](https://surveyjs.io/form-library/documentation/questionradiogroupmodel#choices) in Radiogroup, Checkbox, and Dropdown questions).\n   *\n   * You can use question values as placeholders in the following places:\n   *\n   * - Survey element titles and descriptions\n   * - The [`html`](https://surveyjs.io/form-library/documentation/questionhtmlmodel#html) property of the [HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel) question\n   *\n   * To use a question value as a placeholder, specify the question `name` in curly brackets: `{questionName}`. Refer to the following help topic for more information: [Dynamic Texts - Question Values](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#question-values).\n   */\n  get useDisplayValuesInDynamicTexts() {\n    return this.getPropertyValue(\"useDisplayValuesInDynamicTexts\");\n  }\n  set useDisplayValuesInDynamicTexts(val) {\n    this.setPropertyValue(\"useDisplayValuesInDynamicTexts\", val);\n  }\n  getUseDisplayValuesInDynamicTexts() {\n    return this.useDisplayValuesInDynamicTexts;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this question becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/implement-conditional-logic-to-change-question-visibility/ (linkStyle))\n   * @see visible\n   * @see isVisible\n   */\n  get visibleIf() {\n    return this.getPropertyValue(\"visibleIf\", \"\");\n  }\n  set visibleIf(val) {\n    this.setPropertyValue(\"visibleIf\", val);\n  }\n  /**\n   * Returns `true` if the question is visible or the survey is currently in design mode.\n   *\n   * If you want to display or hide a question based on a condition, specify the [`visibleIf`](https://surveyjs.io/form-library/documentation/question#visibleIf) property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see visible\n   * @see isParentVisible\n   */\n  get isVisible() {\n    if (this.survey && this.survey.areEmptyElementsHidden && this.isEmpty()) return false;\n    if (this.areInvisibleElementsShowing) return true;\n    return this.isVisibleCore();\n  }\n  get isVisibleInSurvey() {\n    return this.isVisible && this.isParentVisible;\n  }\n  isVisibleCore() {\n    return this.visible;\n  }\n  /**\n   * Returns the visible index of the question in the survey. It can be from 0 to all visible questions count - 1\n   * The visibleIndex is -1 if the title is 'hidden' or showNumber is false\n   * @see titleLocation\n   * @see showNumber\n   */\n  get visibleIndex() {\n    return this.getPropertyValue(\"visibleIndex\", -1);\n  }\n  onHidingContent() {}\n  /**\n   * Specifies whether to show a number for this question. Setting this property to `false` hides the question number from the title and excludes the question from numbering.\n   *\n   * Default value: `false` (inherited from the `SurveyModel`'s [`showQuestionNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showQuestionNumbers) property)\n   * @see no\n   */\n  get showNumber() {\n    return this.getPropertyValue(\"showNumber\");\n  }\n  set showNumber(val) {\n    this.setPropertyValue(\"showNumber\", val);\n    this.notifySurveyVisibilityChanged();\n  }\n  /**\n   * @deprecated Use the [`showNumber`](https://surveyjs.io/form-library/documentation/api-reference/question#showNumber) property instead.\n   */\n  get hideNumber() {\n    return !this.showNumber;\n  }\n  set hideNumber(val) {\n    this.showNumber = !val;\n  }\n  /**\n   * Returns `true` if the question can display its title to the left of the input field.\n   * @see titleLocation\n   * @see getTitleLocation\n   * @see hasTitle\n   */\n  get isAllowTitleLeft() {\n    return true;\n  }\n  /**\n   * Returns the question type.\n   * Possible values:\n   * - [*\"boolean\"*](https://surveyjs.io/Documentation/Library?id=questionbooleanmodel)\n   * - [*\"checkbox\"*](https://surveyjs.io/Documentation/Library?id=questioncheckboxmodel)\n   * - [*\"comment\"*](https://surveyjs.io/Documentation/Library?id=questioncommentmodel)\n   * - [*\"dropdown\"*](https://surveyjs.io/Documentation/Library?id=questiondropdownmodel)\n   * - [*\"tagbox\"*](https://surveyjs.io/form-library/documentation/questiontagboxmodel)\n   * - [*\"expression\"*](https://surveyjs.io/Documentation/Library?id=questionexpressionmodel)\n   * - [*\"file\"*](https://surveyjs.io/Documentation/Library?id=questionfilemodel)\n   * - [*\"html\"*](https://surveyjs.io/Documentation/Library?id=questionhtmlmodel)\n   * - [*\"image\"*](https://surveyjs.io/Documentation/Library?id=questionimagemodel)\n   * - [*\"imagepicker\"*](https://surveyjs.io/Documentation/Library?id=questionimagepickermodel)\n   * - [*\"matrix\"*](https://surveyjs.io/Documentation/Library?id=questionmatrixmodel)\n   * - [*\"matrixdropdown\"*](https://surveyjs.io/Documentation/Library?id=questionmatrixdropdownmodel)\n   * - [*\"matrixdynamic\"*](https://surveyjs.io/Documentation/Library?id=questionmatrixdynamicmodel)\n   * - [*\"multipletext\"*](https://surveyjs.io/Documentation/Library?id=questionmultipletextmodel)\n   * - [*\"panel\"*](https://surveyjs.io/Documentation/Library?id=panelmodel)\n   * - [*\"paneldynamic\"*](https://surveyjs.io/Documentation/Library?id=questionpaneldynamicmodel)\n   * - [*\"radiogroup\"*](https://surveyjs.io/Documentation/Library?id=questionradiogroupmodel)\n   * - [*\"rating\"*](https://surveyjs.io/Documentation/Library?id=questionratingmodel)\n   * - [*\"ranking\"*](https://surveyjs.io/Documentation/Library?id=questionrankingmodel)\n   * - [*\"signaturepad\"*](https://surveyjs.io/Documentation/Library?id=questionsignaturepadmodel)\n   * - [*\"text\"*](https://surveyjs.io/Documentation/Library?id=questiontextmodel)\n   */\n  getType() {\n    return \"question\";\n  }\n  get isQuestion() {\n    return true;\n  }\n  moveTo(container, insertBefore = null) {\n    return this.moveToBase(this.parent, container, insertBefore);\n  }\n  getProgressInfo() {\n    if (!this.hasInput) return super.getProgressInfo();\n    return {\n      questionCount: 1,\n      answeredQuestionCount: !this.isEmpty() ? 1 : 0,\n      requiredQuestionCount: this.isRequired ? 1 : 0,\n      requiredAnsweredQuestionCount: !this.isEmpty() && this.isRequired ? 1 : 0\n    };\n  }\n  ensureSetValueExpressionRunner() {\n    if (!this.setValueExpressionRunner) {\n      this.setValueExpressionRunner = this.createExpressionRunner(this.setValueExpression);\n      this.setValueExpressionRunner.onRunComplete = res => {\n        this.runExpressionSetValue(res);\n      };\n    } else {\n      this.setValueExpressionRunner.expression = this.setValueExpression;\n    }\n  }\n  runSetValueExpression() {\n    if (!this.setValueExpression) {\n      this.clearValue();\n    } else {\n      this.ensureSetValueExpressionRunner();\n      this.setValueExpressionRunner.run(this.getDataFilteredValues(), this.getDataFilteredProperties());\n    }\n  }\n  getSetValueExpressionRunner() {\n    this.ensureSetValueExpressionRunner();\n    return this.setValueExpressionRunner;\n  }\n  addTriggerInfo(name, canRun, doComplete) {\n    const info = new TriggerExpressionInfo(name, canRun, doComplete);\n    this.triggersInfo.push(info);\n    return info;\n  }\n  runTriggerInfo(info, keys) {\n    const expression = this[info.name];\n    if (!expression && !info.getSecondRunner() || info.isRunning || !info.canRun()) {\n      return;\n    }\n    if (!info.runner) {\n      info.runner = this.createExpressionRunner(expression);\n      info.runner.onRunComplete = res => {\n        if (res === true) {\n          info.doComplete();\n        }\n        info.isRunning = false;\n      };\n    } else {\n      info.runner.expression = expression;\n    }\n    if (!this.canExecuteTriggerByKeys(keys, info.runner, info.getSecondRunner())) return;\n    info.isRunning = true;\n    if (!expression && info.getSecondRunner()) {\n      info.doComplete();\n      info.isRunning = false;\n    } else {\n      info.runner.run(this.getDataFilteredValues(), this.getDataFilteredProperties());\n    }\n  }\n  canExecuteTriggerByKeys(keys, runner, secondRunner) {\n    if (!runner && !!secondRunner) {\n      runner = secondRunner;\n      secondRunner = undefined;\n    }\n    const run1 = this.canExecuteTriggerByKeysCore(keys, runner);\n    if (run1 === \"var\") return true;\n    if (!secondRunner) return run1 === \"func\" || run1 === \"const\";\n    const run2 = this.canExecuteTriggerByKeysCore(keys, secondRunner);\n    return run2 !== \"\";\n  }\n  canExecuteTriggerByKeysCore(keys, runner) {\n    if (!runner.expression) return \"\";\n    const vars = runner.getVariables();\n    if (!Array.isArray(vars) || vars.length === 0) {\n      if (runner.hasFunction()) return \"func\";\n      return \"const\";\n    }\n    return new ProcessValue().isAnyKeyChanged(keys, vars) ? \"var\" : \"\";\n  }\n  runTriggers(name, value, keys) {\n    if (this.isSettingQuestionValue || this.parentQuestion && this.parentQuestion.getValueName() === name) return;\n    if (!keys) {\n      keys = {};\n      keys[name] = value;\n    }\n    this.triggersInfo.forEach(info => {\n      this.runTriggerInfo(info, keys);\n    });\n  }\n  runConditions() {\n    if (this.data && !this.isLoadingFromJson) {\n      if (!this.isDesignMode) {\n        this.runCondition(this.getDataFilteredValues(), this.getDataFilteredProperties());\n      }\n      this.locStrsChanged();\n    }\n  }\n  setSurveyImpl(value, isLight) {\n    super.setSurveyImpl(value);\n    if (!this.survey) return;\n    this.survey.questionCreated(this);\n    if (isLight !== true) {\n      this.runConditions();\n    }\n    if (!this.visible) {\n      this.updateIsVisibleProp();\n    }\n    this.updateIsMobileFromSurvey();\n  }\n  /**\n   * Returns a survey element (panel or page) that contains the question and allows you to move this question to a different survey element.\n   */\n  get parent() {\n    return this.getPropertyValue(\"parent\", null);\n  }\n  set parent(val) {\n    if (this.parent === val) return;\n    this.removeFromParent();\n    this.setPropertyValue(\"parent\", val);\n    if (!!val) {\n      this.updateQuestionCss();\n    }\n    this.onParentChanged();\n  }\n  onParentChanged() {}\n  calculateSingleInputQuestion() {\n    if (!this.isSingleInputActive) {\n      return undefined;\n    }\n    const questions = this.getSingleInputQuestions();\n    if (Array.isArray(questions) && questions.length > 0) {\n      const q = questions[0];\n      this.onBeforeSetSingleInputQuestion(q);\n      return q;\n    }\n    return undefined;\n  }\n  get singleInputQuestion() {\n    const survey = this.survey;\n    if (!survey || !survey.isSingleVisibleInput) return undefined;\n    return this.getPropertyValue(\"singleInputQuestion\", undefined, () => this.calculateSingleInputQuestion());\n  }\n  get currentSingleInputQuestion() {\n    let res = this.singleInputQuestion;\n    while (!!res && !!res.singleInputQuestion && res.singleInputQuestion !== res) {\n      res = res.singleInputQuestion;\n    }\n    return res;\n  }\n  get currentSingleInputParentQuestion() {\n    const q = this.currentSingleInputQuestion;\n    if (!q) return this;\n    if (q.singleInputQuestion === q) return q;\n    return q.parentQuestion || this;\n  }\n  get singleInputSummary() {\n    return this.getPropertyValue(\"singleInputSummary\", undefined, () => {\n      if (!this.supportNestedSingleInput()) return undefined;\n      const q = this.singleInputQuestion;\n      if (!q || q !== this) return undefined;\n      const res = this.createSingleInputSummary();\n      if (!!res) {\n        this.calcSingleInputActions();\n        this.resetPropertyValue(\"singleInputLocTitle\");\n      }\n      return res;\n    });\n  }\n  createSingleInputSummary() {\n    return undefined;\n  }\n  get rootParentQuestion() {\n    let res = this;\n    while (!!res.parentQuestion) {\n      res = res.parentQuestion;\n    }\n    return res;\n  }\n  getParentQuestions() {\n    const res = new Array();\n    let q = this;\n    while (!!q.parentQuestion) {\n      res.push(q.parentQuestion);\n      q = q.parentQuestion;\n    }\n    return res;\n  }\n  resetSingleInput() {\n    this.resetSingleInputCore();\n  }\n  resetSingleInputCore() {\n    const prev = this.singleInputQuestion;\n    this.resetPropertyValue(\"singleInputQuestion\");\n    if (!!prev) {\n      this.onSingleInputChanged();\n    }\n  }\n  onSingleInputChanged(resetSummary = true) {\n    var _a, _b;\n    if (resetSummary) {\n      this.resetSingleInputSummary();\n    }\n    (_a = this.singleInputLocTitle) === null || _a === void 0 ? void 0 : _a.strChanged();\n    this.resetPropertyValue(\"singleInputLocTitle\");\n    this.calcSingleInputActions();\n    (_b = this.survey) === null || _b === void 0 ? void 0 : _b.updateNavigationElements();\n  }\n  resetSingleInputSummary() {\n    var _a;\n    (_a = this.singleInputSummary) === null || _a === void 0 ? void 0 : _a.dispose();\n    this.resetPropertyValue(\"singleInputSummary\");\n  }\n  validateSingleInput(fireCallback = true, rec = null) {\n    const q = this.currentSingleInputQuestion;\n    if (!q) return true;\n    rec = rec || {\n      fireCallback: fireCallback,\n      focusOnFirstError: fireCallback,\n      firstErrorQuestion: null,\n      result: false\n    };\n    const res = q.validate(fireCallback, rec);\n    if (!res && rec.focusOnFirstError && !!rec.firstErrorQuestion) {\n      rec.firstErrorQuestion.focus(true);\n    }\n    return res;\n  }\n  getSingleInputElementPos() {\n    if (this.singleInputQuestion === this) return 0;\n    const pQ = this.currentSingleInputParentQuestion;\n    if (pQ !== this) {\n      let res = pQ.getSingleInputElementPos();\n      if (res === 2) return 2;\n    }\n    const q = this.singleInputQuestion;\n    const questions = this.getSingleInputQuestions();\n    if (questions.length < 2) return 0;\n    let index = questions.indexOf(q);\n    return index === 0 ? -1 : index >= questions.length - 1 ? 1 : 2;\n  }\n  get isSingleInputActive() {\n    const sv = this.survey;\n    if (!sv || !sv.isSingleVisibleInput) return false;\n    const ssQ = sv.currentSingleQuestion;\n    return !!ssQ && ssQ === this.rootParentQuestion;\n  }\n  singleInputOnAddItem(isOnDataChanging) {\n    if (this.isSingleInputActive) {\n      if (isOnDataChanging && this.singleInputSummary) {\n        this.resetSingleInputSummary();\n      } else {\n        this.setSingleQuestionOnChange(Number.MAX_VALUE);\n      }\n    }\n  }\n  singleInputOnRemoveItem(index) {\n    if (this.isSingleInputActive) {\n      if (!this.singleInputSummary) {\n        this.setSingleQuestionOnChange(index);\n      } else {\n        this.onSingleInputChanged();\n      }\n    }\n  }\n  getSingleQuestionOnChange(index) {\n    return null;\n  }\n  setSingleQuestionOnChange(index) {\n    const q = this.getSingleQuestionOnChange(index);\n    if (!!q) {\n      this.setSingleInputQuestion(q);\n    } else {\n      this.resetSingleInput();\n    }\n  }\n  onSetAsSingleInput() {\n    this.isSingleInputSummaryShown = false;\n    const needReset = !this.wasRendered || this.singleInputSummary;\n    this.onFirstRendering();\n    if (needReset) {\n      this.resetSingleInputSummary();\n      this.resetPropertyValue(\"singleInputQuestion\");\n      this.resetPropertyValue(\"singleInputLocTitle\");\n    }\n  }\n  nextSingleInput() {\n    return this.nextPrevSingleInput(1);\n  }\n  prevSingleInput() {\n    return this.nextPrevSingleInput(-1);\n  }\n  getSingleInputAddText() {\n    const q = this.currentSingleInputQuestion;\n    return !!q && !!q.singleInputSummary ? q.getSingleInputAddTextCore() : undefined;\n  }\n  singleInputAddItem(checkErrors) {\n    const rec = {\n      fireCallback: true,\n      focusOnFirstError: true\n    };\n    if (checkErrors && !this.validateSingleInput(true, rec)) {\n      if (rec.firstErrorQuestion) {\n        rec.firstErrorQuestion.focus(true);\n      }\n    } else {\n      this.currentSingleInputQuestion.singleInputAddItemCore();\n    }\n  }\n  singleInputRemoveItem() {\n    const q = this.singleInputQuestion;\n    if (q && q !== this.singleInputParentQuestion) {\n      this.singleInputRemoveItemCore(q);\n    }\n  }\n  get singleInputLocTitle() {\n    return this.getPropertyValue(\"singleInputLocTitle\", undefined, () => {\n      return this.getSingleQuestionLocTitle();\n    });\n  }\n  get singleInputActions() {\n    return this.getPropertyValue(\"singleInputActions\", undefined, () => {\n      return this.createSingleInputActions();\n    });\n  }\n  get singleInputHasActions() {\n    return this.getPropertyValue(\"singleInputHasActions\", undefined, () => {\n      return this.createSingleInputActions();\n    });\n  }\n  get singleInputHideHeader() {\n    var _a;\n    const childQ = (_a = this.singleInputQuestion) === null || _a === void 0 ? void 0 : _a.singleInputQuestion;\n    return !!childQ && this.singleInputQuestion !== this;\n  }\n  set sinleInputHasActions(val) {\n    this.setPropertyValue(\"singleInputHasActions\", val);\n  }\n  get singleInputParentQuestion() {\n    var _a;\n    return ((_a = this.singleInputQuestion) === null || _a === void 0 ? void 0 : _a.parentQuestion) || this;\n  }\n  createSingleInputActions() {\n    var _a;\n    if (((_a = this.survey) === null || _a === void 0 ? void 0 : _a.currentSingleQuestion) !== this) return undefined;\n    const singleInputActions = new ActionContainer();\n    singleInputActions.actions = this.getSingleQuestionActions();\n    return singleInputActions;\n  }\n  calcSingleInputActions() {\n    if (!!this.parentQuestion) {\n      this.parentQuestion.calcSingleInputActions();\n    } else {\n      const actions = this.getSingleQuestionActions();\n      if (this.singleInputActions) {\n        this.singleInputActions.actions = actions;\n      }\n      this.sinleInputHasActions = actions.length > 0 ? true : undefined;\n    }\n  }\n  getSingleQuestionActions() {\n    const res = new Array();\n    const p = this.currentSingleInputParentQuestion;\n    if (!p || p === this) return res;\n    const pSQs = p.getSingleInputQuestions();\n    const qs = new Array();\n    let summaryQ = undefined;\n    if (pSQs.length > 1 && pSQs[0] === p) {\n      summaryQ = p;\n      qs.push(p);\n    }\n    let pQ = p.parentQuestion;\n    while (!!pQ) {\n      qs.push(pQ);\n      pQ = pQ.parentQuestion;\n    }\n    for (let i = qs.length - 1; i >= 0; i--) {\n      const q = qs[i];\n      if (q !== summaryQ) {\n        //const title = q == summaryQ ? q.locTitle : q.singleInputLocTitle;\n        const title = q.singleInputLocTitle;\n        const action = new Action({\n          id: \"single-action\" + q.id,\n          locTitle: title,\n          css: this.cssClasses.breadcrumbsItem,\n          innerCss: this.cssClasses.breadcrumbsItemButton,\n          action: () => {\n            q.singleInputMoveToFirst();\n            /*\n            if (q == summaryQ) {\n              q.setSingleInputQuestion(q);\n            } else {\n              q.singleInputMoveToFirst();\n            }\n            */\n          }\n        });\n        action.cssClasses = {};\n        res.push(action);\n      }\n    }\n    return res;\n  }\n  singleInputMoveToFirst() {\n    const q = this.singleInputQuestion;\n    if (!!q && q !== this) {\n      q.singleInputMoveToFirst();\n    }\n    this.singleInputMoveToFirstCore();\n  }\n  singleInputMoveToFirstCore() {}\n  getSingleQuestionLocTitle() {\n    return !this.singleInputSummary ? this.getSingleQuestionLocTitleCore() : undefined;\n  }\n  getSingleQuestionLocTitleCore() {\n    return undefined;\n  }\n  supportNestedSingleInput() {\n    var _a;\n    return (_a = this.survey) === null || _a === void 0 ? void 0 : _a.supportsNestedSingleInput(this);\n  }\n  getSingleInputQuestions() {\n    if (!this.supportNestedSingleInput()) return [];\n    const question = this.getPropertyValue(\"singleInputQuestion\");\n    if (question === this) return [this];\n    const res = this.getSingleInputQuestionsCore(question, !question || !this.isSingleInputSummaryShown);\n    res.forEach(q => {\n      if (q !== this) this.onSingleInputQuestionAdded(q);\n    });\n    return res;\n  }\n  getSingleInputQuestionsCore(question, checkDynamic) {\n    return this.getNestedQuestions(true, false);\n  }\n  onSingleInputQuestionAdded(question) {}\n  fillSingleInputQuestionsInContainer(res, innerQuestion) {}\n  getSingleInputQuestionsForDynamic(question, arr) {\n    const res = new Array();\n    if (!!question && question !== this && arr.indexOf(question) < 0) {\n      this.fillSingleInputQuestionsInContainer(res, question);\n    }\n    arr.forEach(q => res.push(q));\n    if (this.isSingleInputSummaryShown && res.length > 0) {\n      res.unshift(this);\n    }\n    res.push(this);\n    return res;\n  }\n  getSingleInputAddTextCore() {\n    return undefined;\n  }\n  singleInputAddItemCore() {}\n  singleInputRemoveItemCore(question) {}\n  setSingleInputQuestionCore(question) {\n    this.onBeforeSetSingleInputQuestion(question);\n    this.setPropertyValue(\"singleInputQuestion\", question);\n  }\n  onBeforeSetSingleInputQuestion(question) {\n    question.onFirstRendering();\n    if (question === this) {\n      this.isSingleInputSummaryShown = true;\n    }\n  }\n  setSingleInputQuestion(question, onPrev) {\n    if (this.singleInputQuestion !== question) {\n      this.setSingleInputQuestionCore(question);\n      this.onSingleInputChanged(!onPrev || question !== this);\n    }\n  }\n  nextPrevSingleInput(skip) {\n    let pQ = this.currentSingleInputParentQuestion;\n    while (!!pQ && pQ !== this) {\n      const res = pQ.nextPrevSingleInput(skip);\n      if (res) return true;\n      pQ = pQ.parentQuestion;\n    }\n    const q = this.singleInputQuestion;\n    if (!q) return false;\n    const questions = this.getSingleInputQuestions();\n    let index = questions.indexOf(q);\n    if (index < 0) {\n      if (questions.length === 0) return false;\n      index = 0;\n      skip = 0;\n    }\n    index += skip;\n    if (index < 0 || index >= questions.length) return false;\n    this.setSingleInputQuestion(questions[index], skip < 0);\n    return true;\n  }\n  /**\n   * Returns `false` if the `titleLocation` property is set to `\"hidden\"` or if the question cannot have a title (for example, an [HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel) question).\n   *\n   * If the `title` property is `undefined` or set to an empty string, the `hasTitle` property returns `true`, because the question uses its `name` as a title in this case.\n   * @see title\n   * @see titleLocation\n   */\n  get hasTitle() {\n    return this.getTitleLocation() !== \"hidden\";\n  }\n  /**\n   * Sets question title location relative to the input field. Overrides the `questionTitleLocation` property specified for the question's container (survey, page, or panel).\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionTitleLocation` property specified for the question's container.\n   * - `\"top\"` - Displays the title above the input field.\n   * - `\"bottom\"` - Displays the title below the input field.\n   * - `\"left\"` - Displays the title to the left of the input field.\n   * - `\"hidden\"` - Hides the question title.\n   *\n   * > Certain question types (Matrix, Multiple Text) do not support the `\"left\"` value. For them, the `\"top\"` value is used.\n   * @see SurveyModel.questionTitleLocation\n   * @see getTitleLocation\n   * @see isAllowTitleLeft\n   */\n  get titleLocation() {\n    return this.getPropertyValue(\"titleLocation\");\n  }\n  set titleLocation(value) {\n    var isVisibilityChanged = this.titleLocation == \"hidden\" || value == \"hidden\";\n    this.setPropertyValue(\"titleLocation\", value.toLowerCase());\n    this.updateQuestionCss();\n    if (isVisibilityChanged) {\n      this.notifySurveyVisibilityChanged();\n    }\n  }\n  get showTitle() {\n    return this.getTitleLocation() !== \"hidden\";\n  }\n  set showTitle(newValue) {\n    this.titleLocation = newValue ? \"default\" : \"hidden\";\n  }\n  getTitleOwner() {\n    return this;\n  }\n  getIsTitleRenderedAsString() {\n    return this.titleLocation === \"hidden\";\n  }\n  notifySurveyOnChildrenVisibilityChanged() {\n    return false;\n  }\n  notifySurveyVisibilityChanged() {\n    if (!this.survey || this.isLoadingFromJson) return;\n    this.survey.questionVisibilityChanged(this, this.isVisible, !this.parentQuestion || this.parentQuestion.notifySurveyOnChildrenVisibilityChanged());\n    const isClearOnHidden = this.isClearValueOnHidden;\n    if (!this.visible) {\n      this.clearValueOnHidding(isClearOnHidden);\n    }\n    if (isClearOnHidden && this.isVisibleInSurvey) {\n      this.updateValueWithDefaults();\n    }\n  }\n  clearValueOnHidding(isClearOnHidden) {\n    if (isClearOnHidden) {\n      this.clearValueIfInvisible();\n    }\n  }\n  get titleWidth() {\n    if (this.parent && this.getTitleLocation() === \"left\") {\n      const columns = this.parent.getColumsForElement(this);\n      const columnCount = columns.length;\n      if (columnCount !== 0 && !!columns[0].questionTitleWidth) return columns[0].questionTitleWidth;\n      const questionWidth = this.getQuestionParentTitleWidth();\n      const percentWidth = this.getPercentQuestionTitleWidth(questionWidth);\n      if (!percentWidth && !!this.parent) {\n        let width = questionWidth;\n        if (width && !isNaN(width)) width = width + \"px\";\n        return width;\n      }\n      return percentWidth / (columnCount || 1) + \"%\";\n    }\n    return undefined;\n  }\n  getQuestionParentTitleWidth() {\n    if (!this.parent) return undefined;\n    const res = this.parent.getQuestionTitleWidth();\n    if (!res && !!this.parentQuestion) return this.parentQuestion.getQuestionParentTitleWidth();\n    return res;\n  }\n  getPercentQuestionTitleWidth(width) {\n    if (!!width && width[width.length - 1] === \"%\") {\n      return parseInt(width);\n    }\n    return undefined;\n  }\n  /**\n   * Returns title location calculated based on the question's `titleLocation` property and the `questionTitleLocation` property of the question's containers (survey, page, or panel).\n   * @see titleLocation\n   * @see SurveyModel.questionTitleLocation\n   */\n  getTitleLocation() {\n    if (this.isFlowLayout) return \"hidden\";\n    var location = this.getTitleLocationCore();\n    if (location === \"left\" && !this.isAllowTitleLeft) location = \"top\";\n    return location;\n  }\n  getTitleLocationCore() {\n    if (this.titleLocation !== \"default\") return this.titleLocation;\n    if (!!this.parent) return this.parent.getQuestionTitleLocation();\n    if (!!this.survey) return this.survey.questionTitleLocation;\n    return \"top\";\n  }\n  get hasTitleOnLeft() {\n    return this.hasTitle && this.getTitleLocation() === \"left\";\n  }\n  get hasTitleOnTop() {\n    return this.hasTitle && this.getTitleLocation() === \"top\";\n  }\n  get hasTitleOnBottom() {\n    return this.hasTitle && this.getTitleLocation() === \"bottom\";\n  }\n  get hasTitleOnLeftTop() {\n    if (!this.hasTitle) return false;\n    const location = this.getTitleLocation();\n    return location === \"left\" || location === \"top\";\n  }\n  /**\n   * Specifies the error message position. Overrides the `questionErrorLocation` property specified for the question's container ([survey](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionErrorLocation), [page](https://surveyjs.io/form-library/documentation/api-reference/page-model#questionErrorLocation), or [panel](https://surveyjs.io/form-library/documentation/api-reference/panel-model#questionErrorLocation)).\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionErrorLocation` property specified for the question's container.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   */\n  get errorLocation() {\n    return this.getPropertyValue(\"errorLocation\");\n  }\n  set errorLocation(val) {\n    this.setPropertyValue(\"errorLocation\", val);\n  }\n  getErrorLocation() {\n    if (this.errorLocation !== \"default\") return this.errorLocation;\n    if (this.parentQuestion) return this.parentQuestion.getChildErrorLocation(this);\n    if (this.parent) return this.parent.getQuestionErrorLocation();\n    return this.survey ? this.survey.questionErrorLocation : \"top\";\n  }\n  getChildErrorLocation(child) {\n    return this.getErrorLocation();\n  }\n  /**\n   * Returns `false` if the question has no input fields ([HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel), and similar question types).\n   * @see hasSingleInput\n   */\n  get hasInput() {\n    return true;\n  }\n  /**\n   * Returns `false` if the question has no input fields ([HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel)) or has multiple input fields ([Matrix](https://surveyjs.io/form-library/documentation/questionmatrixmodel), [Multiple Text](https://surveyjs.io/form-library/documentation/questionmultipletextmodel)).\n   * @see hasInput\n   */\n  get hasSingleInput() {\n    return this.hasInput;\n  }\n  get inputId() {\n    return this.id + \"i\";\n  }\n  getDefaultTitleValue() {\n    return this.name;\n  }\n  getDefaultTitleTagName() {\n    return settings.titleTags.question;\n  }\n  /**\n   * Specifies where to display a question description.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the Survey's [`questionDescriptionLocation`](https://surveyjs.io/form-library/documentation/surveymodel#questionDescriptionLocation) property.\n   * - `\"underTitle\"` - Displays the description under the question title.\n   * - `\"underInput\"` - Displays the description under the interactive area.\n   * @see description\n   * @see hasDescription\n   */\n  get descriptionLocation() {\n    return this.getPropertyValue(\"descriptionLocation\");\n  }\n  set descriptionLocation(val) {\n    this.setPropertyValue(\"descriptionLocation\", val);\n    this.updateQuestionCss();\n  }\n  get hasDescriptionUnderTitle() {\n    return this.getDescriptionLocation() == \"underTitle\" && this.hasDescription;\n  }\n  get hasDescriptionUnderInput() {\n    return this.getDescriptionLocation() == \"underInput\" && this.hasDescription;\n  }\n  getDescriptionLocation() {\n    if (this.descriptionLocation !== \"default\") return this.descriptionLocation;\n    return !!this.survey ? this.survey.questionDescriptionLocation : \"underTitle\";\n  }\n  needClickTitleFunction() {\n    return super.needClickTitleFunction() || this.hasInput;\n  }\n  processTitleClick() {\n    super.processTitleClick();\n    if (this.isCollapsed) return;\n    setTimeout(() => {\n      this.focus();\n    }, 1);\n    return true;\n  }\n  /**\n   * Specifies a custom error message for a required form field.\n   * @see isRequired\n   */\n  get requiredErrorText() {\n    return this.getLocalizableStringText(\"requiredErrorText\");\n  }\n  set requiredErrorText(val) {\n    this.setLocalizableStringText(\"requiredErrorText\", val);\n  }\n  get locRequiredErrorText() {\n    return this.getLocalizableString(\"requiredErrorText\");\n  }\n  /**\n   * Specifies a caption displayed above the comment area. Applies when the `showCommentArea` property is `true`.\n   * @see showCommentArea\n   * @see comment\n   */\n  get commentText() {\n    return this.getLocalizableStringText(\"commentText\");\n  }\n  set commentText(val) {\n    this.setLocalizableStringText(\"commentText\", val);\n  }\n  get locCommentText() {\n    return this.getLocalizableString(\"commentText\");\n  }\n  /**\n   * A placeholder for the comment area. Applies when the `showCommentArea` property is `true`.\n   * @see showCommentArea\n   * @see comment\n   * @see commentText\n   */\n  get commentPlaceholder() {\n    return this.getLocalizableStringText(\"commentPlaceholder\");\n  }\n  set commentPlaceholder(val) {\n    this.setLocalizableStringText(\"commentPlaceholder\", val);\n  }\n  get locCommentPlaceholder() {\n    return this.getLocalizableString(\"commentPlaceholder\");\n  }\n  get commentPlaceHolder() {\n    return this.commentPlaceholder;\n  }\n  set commentPlaceHolder(newValue) {\n    this.commentPlaceholder = newValue;\n  }\n  get renderedCommentPlaceholder() {\n    var _a;\n    return (_a = this.getPropertyValue(\"renderedCommentPlaceholder\")) !== null && _a !== void 0 ? _a : !this.isReadOnly ? this.commentPlaceHolder : undefined;\n  }\n  resetRenderedCommentPlaceholder() {\n    this.resetPropertyValue(\"renderedCommentPlaceholder\");\n  }\n  /**\n   * A value to show in HTML questions and in the dynamic titles and descriptions of survey elements when the question value is [empty](#isValueEmpty).\n   *\n   * Default value: `\"\"`\n   *\n   * [Dynamic Texts](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#dynamic-texts (linkStyle))\n   */\n  get defaultDisplayValue() {\n    return this.getLocalizableStringText(\"defaultDisplayValue\");\n  }\n  set defaultDisplayValue(val) {\n    this.setLocalizableStringText(\"defaultDisplayValue\", val);\n  }\n  get locDefaultDisplayValue() {\n    return this.getLocalizableString(\"defaultDisplayValue\");\n  }\n  getAllErrors() {\n    return this.errors.slice();\n  }\n  getErrorByType(errorType) {\n    for (let i = 0; i < this.errors.length; i++) {\n      if (this.errors[i].getErrorType() === errorType) return this.errors[i];\n    }\n    return null;\n  }\n  get customWidget() {\n    if (!this.isCustomWidgetRequested && !this.customWidgetValue) {\n      this.isCustomWidgetRequested = true;\n      this.updateCustomWidget();\n    }\n    return this.customWidgetValue;\n  }\n  updateCustomWidget() {\n    this.customWidgetValue = CustomWidgetCollection.Instance.getCustomWidget(this);\n  }\n  localeChanged() {\n    super.localeChanged();\n    this.resetRenderedCommentPlaceholder();\n    if (!!this.localeChangedCallback) {\n      this.localeChangedCallback();\n    }\n  }\n  get isCompositeQuestion() {\n    return false;\n  }\n  get isContainer() {\n    return false;\n  }\n  updateCommentElements() {}\n  onCommentInput(event) {\n    if (this.isInputTextUpdate) {\n      if (event.target) {\n        this.comment = event.target.value;\n      }\n    } else {\n      this.updateCommentElements();\n    }\n  }\n  onCommentChange(event) {\n    this.comment = event.target.value;\n    if (this.comment !== event.target.value) {\n      event.target.value = this.comment;\n    }\n  }\n  afterRenderQuestionElement(el) {\n    if (!this.survey || !this.hasSingleInput) return;\n    this.survey.afterRenderQuestionInput(this, el);\n  }\n  afterRender(el) {\n    this.afterRenderCore(el);\n    if (!this.survey) return;\n    this.survey.afterRenderQuestion(this, el);\n    if (!!this.afterRenderQuestionCallback) {\n      this.afterRenderQuestionCallback(this, el);\n    }\n    if (this.supportComment() || this.supportOther()) {\n      this.commentElements = [];\n      this.getCommentElementsId().forEach(id => {\n        const commentEl = el === null || el === void 0 ? void 0 : el.querySelector(`#${id}`);\n        if (commentEl) this.commentElements.push(commentEl);\n      });\n      this.updateCommentElements();\n    }\n    this.checkForResponsiveness(el);\n  }\n  afterRenderCore(element) {\n    super.afterRenderCore(element);\n  }\n  getCommentElementsId() {\n    return [this.commentId];\n  }\n  beforeDestroyQuestionElement(el) {\n    this.commentElements = undefined;\n  }\n  get processedTitle() {\n    var res = this.locProcessedTitle.textOrHtml;\n    return res ? res : this.name;\n  }\n  get fullTitle() {\n    return this.locTitle.renderedHtml;\n  }\n  get titlePattern() {\n    return !!this.survey ? this.survey.questionTitlePattern : \"numTitleRequire\";\n  }\n  get isRequireTextOnStart() {\n    return this.isRequired && this.titlePattern == \"requireNumTitle\";\n  }\n  get isRequireTextBeforeTitle() {\n    return this.isRequired && this.titlePattern == \"numRequireTitle\" && this.requiredMark !== \"\";\n  }\n  get isRequireTextAfterTitle() {\n    return this.isRequired && this.titlePattern == \"numTitleRequire\" && this.requiredMark !== \"\";\n  }\n  /**\n   * Disable this property if you want to render the current question on the same line or row with the previous question or panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/arrange-multiple-questions-in-single-line/ (linkStyle))\n   */\n  get startWithNewLine() {\n    return this.getPropertyValue(\"startWithNewLine\");\n  }\n  set startWithNewLine(val) {\n    if (this.startWithNewLine == val) return;\n    this.setPropertyValue(\"startWithNewLine\", val);\n  }\n  calcCssClasses(css) {\n    const classes = {\n      error: {}\n    };\n    this.copyCssClasses(classes, css.question);\n    this.copyCssClasses(classes.error, css.error);\n    this.updateCssClasses(classes, css);\n    return classes;\n  }\n  onCalcCssClasses(classes) {\n    super.onCalcCssClasses(classes);\n    if (this.survey) {\n      this.survey.updateQuestionCssClasses(this, classes);\n    }\n    if (this.onUpdateCssClassesCallback) {\n      this.onUpdateCssClassesCallback(classes);\n    }\n  }\n  get cssRoot() {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssRoot\", \"\");\n  }\n  setCssRoot(val) {\n    this.setPropertyValue(\"cssRoot\", val);\n  }\n  getCssRoot(cssClasses) {\n    const hasError = this.hasCssError();\n    return new CssClassBuilder().append(super.getCssRoot(cssClasses)).append(this.isFlowLayout && !this.isDesignMode ? cssClasses.flowRoot : cssClasses.mainRoot).append(cssClasses.titleLeftRoot, !this.isFlowLayout && this.hasTitleOnLeft).append(cssClasses.titleTopRoot, !this.isFlowLayout && this.hasTitleOnTop).append(cssClasses.titleBottomRoot, !this.isFlowLayout && this.hasTitleOnBottom).append(cssClasses.descriptionUnderInputRoot, !this.isFlowLayout && this.hasDescriptionUnderInput).append(cssClasses.hasError, hasError).append(cssClasses.hasErrorTop, hasError && this.getErrorLocation() == \"top\").append(cssClasses.hasErrorBottom, hasError && this.getErrorLocation() == \"bottom\").append(cssClasses.small, !this.width).append(cssClasses.answered, this.isAnswered).append(cssClasses.noPointerEventsMode, this.isReadOnlyAttr).toString();\n  }\n  get cssHeader() {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssHeader\", \"\");\n  }\n  setCssHeader(val) {\n    this.setPropertyValue(\"cssHeader\", val);\n  }\n  getCssHeader(cssClasses) {\n    return new CssClassBuilder().append(cssClasses.header).append(cssClasses.headerTop, this.hasTitleOnTop).append(cssClasses.headerLeft, this.hasTitleOnLeft).append(cssClasses.headerBottom, this.hasTitleOnBottom).toString();\n  }\n  supportContainerQueries() {\n    return false;\n  }\n  get cssContent() {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssContent\", \"\");\n  }\n  setCssContent(val) {\n    this.setPropertyValue(\"cssContent\", val);\n  }\n  getCssContent(cssClasses) {\n    return new CssClassBuilder().append(cssClasses.content).append(cssClasses.contentSupportContainerQueries, this.supportContainerQueries()).append(cssClasses.contentLeft, this.hasTitleOnLeft).toString();\n  }\n  get cssTitle() {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssTitle\", \"\");\n  }\n  setCssTitle(val) {\n    this.setPropertyValue(\"cssTitle\", val);\n  }\n  getCssTitle(cssClasses) {\n    return new CssClassBuilder().append(super.getCssTitle(cssClasses)).append(cssClasses.singleInputTitle, !!this.singleInputQuestion).append(cssClasses.titleOnAnswer, !this.containsErrors && this.isAnswered).append(cssClasses.titleEmpty, !this.title.trim()).toString();\n  }\n  get cssDescription() {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssDescription\", \"\");\n  }\n  setCssDescription(val) {\n    this.setPropertyValue(\"cssDescription\", val);\n  }\n  getCssDescription(cssClasses) {\n    return new CssClassBuilder().append(cssClasses.description).append(cssClasses.descriptionUnderInput, this.getDescriptionLocation() == \"underInput\").toString();\n  }\n  get showErrorsAboveQuestion() {\n    return this.getErrorLocation() === \"top\";\n  }\n  get showErrorsBelowQuestion() {\n    return this.getErrorLocation() === \"bottom\";\n  }\n  get cssError() {\n    this.ensureElementCss();\n    return this.getPropertyValue(\"cssError\", \"\");\n  }\n  setCssError(val) {\n    this.setPropertyValue(\"cssError\", val);\n  }\n  getCssError(cssClasses) {\n    return new CssClassBuilder().append(cssClasses.error.root).append(cssClasses.errorsContainer).append(cssClasses.errorsContainerTop, this.showErrorsAboveQuestion).append(cssClasses.errorsContainerBottom, this.showErrorsBelowQuestion).toString();\n  }\n  hasCssError() {\n    return this.errors.length > 0 || this.hasCssErrorCallback();\n  }\n  get isSingleInputQuestionMode() {\n    var _a;\n    return !!this.parentQuestion && ((_a = this.survey) === null || _a === void 0 ? void 0 : _a.isSingleVisibleInput);\n  }\n  getIsNested() {\n    if (!!this.isSingleInputQuestionMode) return false;\n    return super.getIsNested();\n  }\n  getHasFrameV2() {\n    if (this.isSingleInputQuestionMode) return true;\n    return super.getHasFrameV2();\n  }\n  getRootCss() {\n    return new CssClassBuilder().append(this.cssRoot, !this.singleInputQuestion).append(this.cssClasses.mobile, this.isMobile).append(this.cssClasses.readOnly, this.isReadOnlyStyle).append(this.cssClasses.disabled, this.isDisabledStyle).append(this.cssClasses.preview, this.isPreviewStyle).append(this.cssClasses.invisible, !this.isDesignMode && this.areInvisibleElementsShowing && !this.visible).toString();\n  }\n  getQuestionRootCss() {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.rootMobile, this.isMobile).toString();\n  }\n  updateElementCss(reNew) {\n    if (this.wasRendered) {\n      super.updateElementCss(reNew);\n      if (reNew) {\n        this.updateQuestionCss(true);\n      }\n    } else {\n      this.clearCssClasses();\n    }\n    this.resetIndents();\n  }\n  updateQuestionCss(reNew) {\n    if (this.isLoadingFromJson || !this.survey) return;\n    if (this.wasRendered) {\n      this.updateElementCssCore(this.cssClasses);\n    } else {\n      this.isRequireUpdateElements = true;\n    }\n  }\n  ensureElementCss() {\n    if (!this.cssClassesValue) {\n      this.updateQuestionCss(true);\n    }\n  }\n  updateElementCssCore(cssClasses) {\n    this.setCssRoot(this.getCssRoot(cssClasses));\n    this.setCssHeader(this.getCssHeader(cssClasses));\n    this.setCssContent(this.getCssContent(cssClasses));\n    this.setCssTitle(this.getCssTitle(cssClasses));\n    this.setCssDescription(this.getCssDescription(cssClasses));\n    this.setCssError(this.getCssError(cssClasses));\n  }\n  updateCssClasses(res, css) {\n    if (!css.question) return;\n    const objCss = css[this.getCssType()];\n    const titleBuilder = new CssClassBuilder().append(res.title).append(css.question.titleRequired, this.isRequired);\n    res.title = titleBuilder.toString();\n    const rootBuilder = new CssClassBuilder().append(res.root).append(objCss, this.isRequired && !!css.question.required);\n    if (objCss === undefined || objCss === null) {\n      res.root = rootBuilder.toString();\n    } else if (typeof objCss === \"string\" || objCss instanceof String) {\n      res.root = rootBuilder.append(objCss.toString()).toString();\n    } else {\n      res.root = rootBuilder.toString();\n      for (const key in objCss) {\n        res[key] = objCss[key];\n      }\n    }\n  }\n  getCssType() {\n    return this.getType();\n  }\n  get renderCssRoot() {\n    return this.cssClasses.root || undefined;\n  }\n  calcPaddingLeft() {\n    return this.getIndentSize(this.indent);\n  }\n  calcPaddingRight() {\n    return this.getIndentSize(this.rightIndent);\n  }\n  getIndentSize(indent) {\n    if (indent < 1 || !this.getSurvey() || !this.cssClasses || !this.cssClasses.indent) return \"\";\n    return indent * this.cssClasses.indent + \"px\";\n  }\n  /**\n   * Moves focus to the input field of this question.\n   * @param onError Pass `true` if you want to focus an input field with the first validation error. Default value: `false` (focuses the first input field). Applies to question types with multiple input fields.\n   */\n  focus(onError = false, scrollIfVisible) {\n    if (this.isDesignMode || !this.isVisible || !this.survey) return;\n    let page = this.page;\n    const shouldChangePage = !!page && this.survey.activePage !== page;\n    const isSingleInput = this.survey.isSingleVisibleInput;\n    if (shouldChangePage && !isSingleInput) {\n      this.survey.focusQuestionByInstance(this, onError);\n    } else {\n      if (isSingleInput) {\n        this.survey.currentSingleQuestion = this.rootParentQuestion;\n        const parents = this.getParentQuestions();\n        for (let i = parents.length - 1; i >= 1; i--) {\n          if (i === parents.length - 1) {\n            parents[i].setSingleInputQuestion(parents[i - 1]);\n          }\n        }\n        if (parents.length > 0) {\n          parents[0].setSingleInputQuestion(this);\n        }\n        this.focusInputElement(onError);\n      } else {\n        this.expandAllParents();\n        const scrollOptions = this.survey[\"isSmoothScrollEnabled\"] ? {\n          behavior: \"smooth\"\n        } : undefined;\n        this.survey.scrollElementToTop(this, this, null, this.id, scrollIfVisible, scrollOptions, undefined, () => {\n          this.focusInputElement(onError);\n        });\n      }\n    }\n  }\n  focusInputElement(onError) {\n    var _a;\n    const id = !onError ? this.getFirstInputElementId() : this.getFirstErrorInputElementId();\n    const surveyRoot = (_a = this.survey) === null || _a === void 0 ? void 0 : _a.rootElement;\n    if (SurveyElement.FocusElement(id, false, surveyRoot)) {\n      this.fireCallback(this.focusCallback);\n    }\n  }\n  get isValidateVisitedEmptyFields() {\n    return this.supportEmptyValidation() && !!this.survey && this.survey.getValidateVisitedEmptyFields() && this.isEmpty();\n  }\n  supportEmptyValidation() {\n    return false;\n  }\n  onBlur(event) {\n    this.onBlurCore(event);\n  }\n  onFocus(event) {\n    this.onFocusCore(event);\n  }\n  onBlurCore(event) {\n    if (this.isFocusEmpty && this.isEmpty()) {\n      this.validate(true);\n    }\n  }\n  onFocusCore(event) {\n    this.isFocusEmpty = this.isValidateVisitedEmptyFields;\n  }\n  expandAllParents() {\n    this.expandAllParentsCore(this);\n  }\n  expandAllParentsCore(element) {\n    if (!element) return;\n    if (element.isCollapsed) {\n      element.expand();\n    }\n    this.expandAllParentsCore(element.parent);\n    this.expandAllParentsCore(element.parentQuestion);\n  }\n  focusIn() {\n    if (!this.survey || this.isDisposed || this.isContainer) return;\n    this.survey.whenQuestionFocusIn(this);\n  }\n  fireCallback(callback) {\n    if (callback) callback();\n  }\n  getOthersMaxLength() {\n    if (!this.survey) return null;\n    return this.survey.maxCommentLength > 0 ? this.survey.maxCommentLength : null;\n  }\n  onCreating() {}\n  getFirstQuestionToFocus(withError) {\n    return this.hasInput && (!withError || this.currentErrorCount > 0) ? this : null;\n  }\n  getFirstInputElementId() {\n    return this.inputId;\n  }\n  getFirstErrorInputElementId() {\n    return this.getFirstInputElementId();\n  }\n  getProcessedTextValue(textValue) {\n    var name = textValue.name.toLocaleLowerCase();\n    textValue.isExists = Object.keys(Question.TextPreprocessorValuesMap).indexOf(name) !== -1 || this[textValue.name] !== undefined;\n    textValue.value = this[Question.TextPreprocessorValuesMap[name] || textValue.name];\n  }\n  supportComment() {\n    const prop = this.getPropertyByName(\"showCommentArea\");\n    return !prop || prop.visible;\n  }\n  supportOther() {\n    return false;\n  }\n  /**\n   * Makes the question required. If a respondent skips a required question, the survey displays a validation error.\n   * @see requiredIf\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  get isRequired() {\n    return this.getPropertyValue(\"isRequired\");\n  }\n  set isRequired(val) {\n    this.setPropertyValue(\"isRequired\", val);\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, this question becomes required.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isRequired\n   */\n  get requiredIf() {\n    return this.getPropertyValue(\"requiredIf\", \"\");\n  }\n  set requiredIf(val) {\n    this.setPropertyValue(\"requiredIf\", val);\n  }\n  /**\n   * Specifies whether to display a comment area.\n   * @see comment\n   * @see commentText\n   * @see showOtherItem\n   */\n  get showCommentArea() {\n    return this.getPropertyValue(\"showCommentArea\", false);\n  }\n  set showCommentArea(val) {\n    if (!this.supportComment()) return;\n    this.setPropertyValue(\"showCommentArea\", val);\n  }\n  get hasComment() {\n    return this.showCommentArea;\n  }\n  set hasComment(val) {\n    this.showCommentArea = val;\n  }\n  /**\n   * A value to assign to the `id` attribute of the rendered HTML element. A default `id` is generated automatically.\n   */\n  get id() {\n    return this.getPropertyValue(\"id\");\n  }\n  set id(val) {\n    this.setPropertyValue(\"id\", val);\n  }\n  get ariaTitleId() {\n    return this.id + \"_ariaTitle\";\n  }\n  get ariaDescriptionId() {\n    return this.id + \"_ariaDescription\";\n  }\n  get commentId() {\n    return this.id + \"_comment\";\n  }\n  get requireUpdateCommentValue() {\n    return this.hasComment;\n  }\n  get isReadOnly() {\n    const isParentReadOnly = !!this.parent && this.parent.isReadOnly;\n    const isPareQuestionReadOnly = !!this.parentQuestion && this.parentQuestion.isReadOnly;\n    const isSurveyReadOnly = !!this.survey && this.survey.isDisplayMode;\n    const callbackVal = !!this.readOnlyCallback && this.readOnlyCallback();\n    return this.readOnly || isParentReadOnly || isSurveyReadOnly || isPareQuestionReadOnly || callbackVal;\n  }\n  get isInputReadOnly() {\n    if (this.forceIsInputReadOnly !== undefined) {\n      return this.forceIsInputReadOnly;\n    }\n    return this.isReadOnly || this.isDesignMode;\n  }\n  get renderedInputReadOnly() {\n    return this.isInputReadOnly ? \"\" : undefined;\n  }\n  get renderedInputDisabled() {\n    return this.isInputReadOnly ? \"\" : undefined;\n  }\n  get isReadOnlyAttr() {\n    return this.isReadOnly;\n  }\n  get isDisabledAttr() {\n    return this.isDesignMode || !!this.readOnlyCallback && this.readOnlyCallback();\n  }\n  onReadOnlyChanged() {\n    this.setPropertyValue(\"isInputReadOnly\", this.isInputReadOnly);\n    super.onReadOnlyChanged();\n    if (this.isReadOnly) {\n      this.clearErrors();\n    }\n    this.updateQuestionCss();\n    this.resetRenderedCommentPlaceholder();\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this question becomes read-only.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-conditionally-make-input-field-read-only/ (linkStyle))\n   * @see readOnly\n   * @see isReadOnly\n   */\n  get enableIf() {\n    return this.getPropertyValue(\"enableIf\", \"\");\n  }\n  set enableIf(val) {\n    this.setPropertyValue(\"enableIf\", val);\n  }\n  surveyChoiceItemVisibilityChange() {}\n  runCondition(values, properties) {\n    if (this.isDesignMode) return;\n    if (!properties) properties = {};\n    properties[\"question\"] = this;\n    this.runConditionCore(values, properties);\n    if (!this.isValueChangedDirectly && (!this.isClearValueOnHidden || this.isVisibleInSurvey)) {\n      this.defaultValueRunner = this.getDefaultRunner(this.defaultValueRunner, this.defaultValueExpression);\n      this.runDefaultValueExpression(this.defaultValueRunner, values, properties);\n    }\n  }\n  get isInDesignMode() {\n    return !this.isContentElement && this.isDesignMode;\n  }\n  /**\n   * A question number or letter (depends on the `questionStartIndex` property of the question container (panel, page, or survey)).\n   *\n   * When the question number, title, or the entire question is invisible, this property returns an empty string.\n   * @see SurveyModel.questionStartIndex\n   * @see showNumber\n   * @see titleLocation\n   * @see visibleIf\n   */\n  get no() {\n    return this.getPropertyValue(\"no\");\n  }\n  calcNo() {\n    if (!this.hasTitle || !this.showNumber) return \"\";\n    let parentIndex;\n    if (!!this.parent) {\n      parentIndex = this.parent.visibleIndex;\n    }\n    let no = Helpers.getNumberByIndex(this.visibleIndex, this.getStartIndex(), parentIndex);\n    if (!!this.parent) {\n      no = this.parent.addNoFromChild(no);\n    }\n    if (!!this.survey) {\n      no = this.survey.getUpdatedQuestionNo(this, no);\n    }\n    return no;\n  }\n  getStartIndex() {\n    if (!!this.parent) return this.parent.getQuestionStartIndex();\n    if (!!this.survey) return this.survey.questionStartIndex;\n    return \"\";\n  }\n  onSurveyLoad() {\n    this.isCustomWidgetRequested = false;\n    this.fireCallback(this.surveyLoadCallback);\n    this.updateValueWithDefaults();\n    if (this.isEmpty()) {\n      this.initDataFromSurvey();\n    }\n  }\n  onSetData() {\n    super.onSetData();\n    if (!this.isDesignMode && !!this.survey && !this.isLoadingFromJson) {\n      this.initDataFromSurvey();\n      this.onSurveyValueChanged(this.value);\n      this.updateValueWithDefaults();\n      this.updateIsAnswered();\n    }\n  }\n  initDataFromSurvey() {\n    if (!!this.data) {\n      const val = this.data.getValue(this.getValueName());\n      if (!Helpers.isValueEmpty(val) || !this.isLoadingFromJson) {\n        this.updateValueFromSurvey(val);\n      }\n      this.initCommentFromSurvey();\n    }\n  }\n  initCommentFromSurvey() {\n    if (!!this.data && this.requireUpdateCommentValue) {\n      this.updateCommentFromSurvey(this.data.getComment(this.getValueName()));\n    } else {\n      this.updateCommentFromSurvey(\"\");\n    }\n  }\n  runExpression(expression) {\n    if (!this.survey || !expression) return undefined;\n    return this.survey.runExpression(expression);\n  }\n  get commentAreaRows() {\n    return this.survey && this.survey.commentAreaRows;\n  }\n  get autoGrowComment() {\n    return this.survey && this.survey.autoGrowComment;\n  }\n  get allowResizeComment() {\n    return this.survey && this.survey.allowResizeComment;\n  }\n  get questionValue() {\n    return this.getPropertyValueWithoutDefault(\"value\");\n  }\n  set questionValue(val) {\n    this.setPropertyValue(\"value\", val);\n  }\n  get questionComment() {\n    return this.getPropertyValueWithoutDefault(\"comment\");\n  }\n  set questionComment(val) {\n    this.setPropertyValue(\"comment\", val);\n    this.fireCallback(this.commentChangedCallback);\n  }\n  get isValueArray() {\n    return false;\n  }\n  /**\n   * Gets or sets the question value.\n   *\n   * The following table illustrates how the value type depends on the question type:\n   *\n   * | Question type | Value type(s) |\n   * | ------------- | ------------- |\n   * | Checkboxes | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Dropdown | `string` \\| `number` |\n   * | Dynamic Matrix | `Array<object>` |\n   * | Dynamic Panel | `Array<object>` |\n   * | Expression | `string` \\| `number` \\| `boolean` |\n   * | File Upload | `File` \\| `Array<File>` |\n   * | HTML | (no value) |\n   * | Image | (no value) |\n   * | Image Picker | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Long Text | `string` |\n   * | Multi-Select Dropdown | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Multi-Select Matrix | `object` |\n   * | Multiple Textboxes | `Array<string>` |\n   * | Panel | (no value) |\n   * | Radio Button Group | `string` \\| `number` |\n   * | Ranking | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Rating Scale | `number` \\| `string` |\n   * | Slider | <code>Array&lt;string &#124; number&gt;</code> |\n   * | Signature | `string` (base64-encoded image) |\n   * | Single-Line Input | `string` \\| `number` \\| `Date` |\n   * | Single-Select Matrix | `object` |\n   * | Yes/No (Boolean) | `boolean` \\| `string` |\n   */\n  get value() {\n    return this.getValueCore();\n  }\n  set value(newValue) {\n    this.setNewValue(newValue);\n  }\n  get hasFilteredValue() {\n    return false;\n  }\n  getFilteredValue() {\n    return this.value;\n  }\n  getFilteredName() {\n    return this.getValueName();\n  }\n  get valueForSurvey() {\n    return this.valueForSurveyCore(this.value);\n  }\n  valueForSurveyCore(val) {\n    if (!!this.valueToDataCallback) {\n      return this.valueToDataCallback(val);\n    }\n    return val;\n  }\n  valueFromDataCore(val) {\n    if (!!this.valueFromDataCallback) {\n      return this.valueFromDataCallback(val);\n    }\n    return val;\n  }\n  /**\n   * Sets the question's `value` and `comment` properties to `undefined`.\n   * @see value\n   * @see comment\n   */\n  clearValue(keepComment) {\n    if (this.value !== undefined) {\n      this.value = undefined;\n    }\n    if (!!this.comment && keepComment !== true) {\n      this.comment = undefined;\n    }\n    this.setValueChangedDirectly(false);\n  }\n  clearValueOnly() {\n    this.clearValue(true);\n  }\n  unbindValue() {\n    this.clearValue();\n  }\n  createValueCopy() {\n    return this.getUnbindValue(this.value);\n  }\n  initDataUI() {}\n  getUnbindValue(value) {\n    if (this.isValueSurveyElement(value)) return value;\n    return Helpers.getUnbindValue(value);\n  }\n  isValueSurveyElement(val) {\n    if (!val) return false;\n    if (Array.isArray(val)) return val.length > 0 ? this.isValueSurveyElement(val[0]) : false;\n    return val.isSurveyObj === true;\n  }\n  canClearValueAsInvisible(reason) {\n    if (reason === \"onHiddenContainer\" && !this.isParentVisible) return true;\n    if (this.isVisibleInSurvey) return false;\n    if (!!this.page && this.page.isStartPage) return false;\n    if (!this.survey) return true;\n    return !this.survey.hasVisibleQuestionByValueName(this.getValueName());\n  }\n  /**\n   * Returns `true` if a parent element (page or panel) is visible.\n   */\n  get isParentVisible() {\n    if (this.parentQuestion && !this.parentQuestion.isVisible) return false;\n    var parent = this.parent;\n    while (parent) {\n      if (!parent.isVisible) return false;\n      parent = parent.parent;\n    }\n    return true;\n  }\n  clearValueIfInvisible(reason = \"onHidden\") {\n    const clearIf = this.getClearIfInvisible();\n    if (clearIf === \"none\") return;\n    if (reason === \"onHidden\" && clearIf === \"onComplete\") return;\n    if (reason === \"onHiddenContainer\" && clearIf !== reason) return;\n    this.clearValueIfInvisibleCore(reason);\n  }\n  clearValueIfInvisibleCore(reason) {\n    if (this.canClearValueAsInvisible(reason)) {\n      this.clearValue();\n    }\n  }\n  /**\n   * Specifies when to clear the question value if the question becomes invisible.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the Survey's [`clearInvisibleValues`](https://surveyjs.io/form-library/documentation/surveymodel#clearInvisibleValues) property.\n   * - `\"onHidden\"` - Clears the value when the question becomes invisible. If a question is invisible on startup and has an initial value, this value will be cleared when the survey is complete.\n   * - `\"onHiddenContainer\"` - Clears the value when the question or its container (page or panel) becomes invisible. If a question is invisible on startup and has an initial value, this value will be cleared when the survey is complete.\n   * - `\"onComplete\"` - Clears the value when the survey is complete.\n   * - `\"none\"` - Never clears the value of an invisible question.\n   * @see SurveyModel.clearInvisibleValues\n   * @see visible\n   * @see SurveyModel.onComplete\n   */\n  get clearIfInvisible() {\n    return this.getPropertyValue(\"clearIfInvisible\");\n  }\n  set clearIfInvisible(val) {\n    this.setPropertyValue(\"clearIfInvisible\", val);\n  }\n  getClearIfInvisible() {\n    const res = this.clearIfInvisible;\n    if (!!this.survey) return this.survey.getQuestionClearIfInvisible(res);\n    return res !== \"default\" ? res : \"onComplete\";\n  }\n  get displayValue() {\n    if (this.isLoadingFromJson) return \"\";\n    return this.getDisplayValue(true);\n  }\n  /**\n   * Returns a display text that corresponds to the question value. For example, if you call this method for a Dropdown question, it returns an item text instead of an item value.\n   * @param keysAsText Applies when the question value is an object (in Matrix, Multiple Text, and similar questions). Pass `true` if not only values in the object should be display texts, but also keys. Default value: `false`.\n   * @param value Specify this parameter to get a display text for a specific value, not for the current question value. If the question value is an object, this parameter should be a similar object.\n   */\n  getDisplayValue(keysAsText, value = undefined) {\n    var res = this.calcDisplayValue(keysAsText, value);\n    if (this.survey) {\n      res = this.survey.getQuestionDisplayValue(this, res);\n    }\n    return !!this.displayValueCallback ? this.displayValueCallback(res) : res;\n  }\n  calcDisplayValue(keysAsText, value = undefined) {\n    if (this.customWidget) {\n      var res = this.customWidget.getDisplayValue(this, value);\n      if (res) return res;\n    }\n    value = value == undefined ? this.createValueCopy() : value;\n    if (this.isValueEmpty(value) && !this.locDefaultDisplayValue.isEmpty) {\n      value = this.defaultDisplayValue;\n    }\n    if (this.isValueEmpty(value, !this.allowSpaceAsAnswer)) return this.getDisplayValueEmpty();\n    return this.getDisplayValueCore(keysAsText, value);\n  }\n  getDisplayValueCore(keyAsText, value) {\n    return value;\n  }\n  getDisplayValueEmpty() {\n    return \"\";\n  }\n  /**\n   * A default value for the question. Ignored for question types that cannot have a [value](https://surveyjs.io/form-library/documentation/question#value) (for example, HTML).\n   *\n   * The default value is used as a question value in the following cases:\n   *\n   * - While the survey is being loaded from JSON.\n   * - The question is just added to the survey and does not yet have an answer.\n   * - The respondent left the answer empty.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/specify-default-question-value-dynamically (linkStyle))\n   * @see defaultValueExpression\n   */\n  get defaultValue() {\n    return this.getPropertyValue(\"defaultValue\");\n  }\n  set defaultValue(val) {\n    if (this.isValueExpression(val)) {\n      this.defaultValueExpression = val.substring(1);\n      return;\n    }\n    this.setPropertyValue(\"defaultValue\", this.convertDefaultValue(val));\n    this.updateValueWithDefaults();\n  }\n  /**\n   * An expression used to calculate the [`defaultValue`](https://surveyjs.io/form-library/documentation/question#defaultValue).\n   *\n   * This expression applies until the question [`value`](https://surveyjs.io/form-library/documentation/question#value) is specified by an end user or programmatically.\n   *\n   * An expression can reference other questions as follows:\n   *\n   * - `{other_question_name}`\n   * - `{panel.other_question_name}` (to access questions inside the same dynamic panel)\n   * - `{row.other_question_name}` (to access questions inside the same dynamic matrix or multi-column dropdown)\n   *\n   * An expression can also include built-in and custom functions for advanced calculations. For example, if the `defaultValue` should be today's date, set the `defaultValueExpression` to `\"today()\"`, and the corresponding built-in function will be executed each time the survey is loaded. Refer to the following help topic for more information: [Built-In Functions](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#built-in-functions).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/specify-default-question-value-dynamically (linkStyle))\n   * @see defaultValue\n   * @see setValueExpression\n   */\n  get defaultValueExpression() {\n    return this.getPropertyValue(\"defaultValueExpression\");\n  }\n  set defaultValueExpression(val) {\n    this.setPropertyValue(\"defaultValueExpression\", val);\n    this.defaultValueRunner = undefined;\n    this.updateValueWithDefaults();\n  }\n  /**\n   * A Boolean [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions). If it evaluates to `true`, the question value is reset to [default](#defaultValue).\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   * @see setValueIf\n   */\n  get resetValueIf() {\n    return this.getPropertyValue(\"resetValueIf\");\n  }\n  set resetValueIf(val) {\n    this.setPropertyValue(\"resetValueIf\", val);\n  }\n  /**\n   * A Boolean [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions). If it evaluates to `true`, the question value is set to a value calculated using the [`setValueExpression`](#setValueExpression).\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   * @see resetValueIf\n   */\n  get setValueIf() {\n    return this.getPropertyValue(\"setValueIf\");\n  }\n  set setValueIf(val) {\n    this.setPropertyValue(\"setValueIf\", val);\n  }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) that calculates the question value.\n   *\n   * The `setValueExpression` is re-evaluated whenever a referenced question's value changes. If you also specify the [`setValueIf`](#setValueIf) expression, re-evaluation occurs only when it returns `true`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   * @see defaultValueExpression\n   * @see resetValueIf\n   */\n  get setValueExpression() {\n    return this.getPropertyValue(\"setValueExpression\");\n  }\n  set setValueExpression(val) {\n    this.setPropertyValue(\"setValueExpression\", val);\n  }\n  get resizeStyle() {\n    return this.allowResizeComment ? \"both\" : \"none\";\n  }\n  /**\n   * Returns the question value as an object in which the question name, title, value, and other parameters are stored as individual properties.\n   *\n   * If the question can have more than one value (Matrix, Multiple Text), the object enables the `isNode` flag and stores information about these values in the `data` property. Refer to the following help topic for more information: [Access Full Survey Results](https://surveyjs.io/form-library/documentation/handle-survey-results-access#access-full-survey-results).\n   *\n   * Pass an object with the `includeEmpty` property set to `false` if you want to skip empty answers.\n   */\n  getPlainData(options) {\n    if (!options) {\n      options = {\n        includeEmpty: true,\n        includeQuestionTypes: false\n      };\n    }\n    if (options.includeEmpty || !this.isEmpty()) {\n      var questionPlainData = {\n        name: this.name,\n        title: this.locTitle.renderedHtml,\n        value: this.value,\n        displayValue: this.displayValue,\n        isNode: false,\n        getString: val => typeof val === \"object\" ? JSON.stringify(val) : val\n      };\n      if (options.includeQuestionTypes === true) {\n        questionPlainData.questionType = this.getType();\n      }\n      (options.calculations || []).forEach(calculation => {\n        questionPlainData[calculation.propertyName] = this.getPlainDataCalculatedValue(calculation.propertyName);\n      });\n      if (this.hasComment) {\n        questionPlainData.isNode = true;\n        questionPlainData.data = [{\n          name: 0,\n          isComment: true,\n          title: \"Comment\",\n          value: settings.commentSuffix,\n          displayValue: this.comment,\n          getString: val => typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: false\n        }];\n      }\n      return questionPlainData;\n    }\n    return undefined;\n  }\n  getPlainDataCalculatedValue(propName) {\n    return this[propName];\n  }\n  /**\n   * A correct answer to this question. Specify this property if you want to [create a quiz](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see SurveyModel.getCorrectAnswerCount\n   * @see SurveyModel.getIncorrectAnswerCount\n   */\n  get correctAnswer() {\n    return this.getPropertyValue(\"correctAnswer\");\n  }\n  set correctAnswer(val) {\n    this.setPropertyValue(\"correctAnswer\", this.convertDefaultValue(val));\n  }\n  convertDefaultValue(val) {\n    return val;\n  }\n  /**\n   * The number of quiz questions. A question counts if it is visible, has an input field, and specifies `correctAnswer`.\n   * @see [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz)\n   * @see correctAnswer\n   * @see SurveyModel.getQuizQuestions\n   */\n  get quizQuestionCount() {\n    if (this.isVisible && this.hasInput && !this.isValueEmpty(this.correctAnswer)) return this.getQuizQuestionCount();\n    return 0;\n  }\n  get correctAnswerCount() {\n    if (!this.isEmpty() && !this.isValueEmpty(this.correctAnswer)) return this.getCorrectAnswerCount();\n    return 0;\n  }\n  getQuizQuestionCount() {\n    return 1;\n  }\n  getCorrectAnswerCount() {\n    return this.checkIfAnswerCorrect() ? 1 : 0;\n  }\n  checkIfAnswerCorrect() {\n    const isEqual = Helpers.isTwoValueEquals(this.value, this.correctAnswer, this.getAnswerCorrectIgnoreOrder(), settings.comparator.caseSensitive, true);\n    const correct = isEqual ? 1 : 0;\n    const incorrect = this.quizQuestionCount - correct;\n    const options = {\n      result: isEqual,\n      correctAnswers: correct,\n      correctAnswerCount: correct,\n      incorrectAnswers: incorrect,\n      incorrectAnswerCount: incorrect\n    };\n    if (!!this.survey) {\n      this.survey.onCorrectQuestionAnswer(this, options);\n    }\n    return options.result;\n  }\n  getAnswerCorrectIgnoreOrder() {\n    return false;\n  }\n  /**\n  * Returns `true` if a question answer matches the [`correctAnswer`](#correctAnswer) property value.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/create-a-scored-quiz (linkStyle))\n  * @see SurveyModel.getQuizQuestions\n  */\n  isAnswerCorrect() {\n    return this.correctAnswerCount == this.quizQuestionCount;\n  }\n  updateValueWithDefaults() {\n    if (this.isLoadingFromJson || !this.isDesignMode && this.isDefaultValueEmpty()) return;\n    if (!this.isDesignMode && !this.isEmpty()) return;\n    if (this.isEmpty() && this.isDefaultValueEmpty()) return;\n    if (this.isClearValueOnHidden && !this.isVisible) return;\n    if (this.isDesignMode && this.isContentElement && this.isDefaultValueEmpty()) return;\n    this.setDefaultValue();\n  }\n  get isValueDefault() {\n    return !this.isEmpty() && (this.isTwoValueEquals(this.defaultValue, this.value) || !this.isValueChangedDirectly && !!this.defaultValueExpression);\n  }\n  get isClearValueOnHidden() {\n    const clearIf = this.getClearIfInvisible();\n    if (clearIf === \"none\" || clearIf === \"onComplete\") return false;\n    return clearIf === \"onHidden\" || clearIf === \"onHiddenContainer\";\n  }\n  getQuestionFromArray(name, index) {\n    return null;\n  }\n  getDefaultValue() {\n    return this.defaultValue;\n  }\n  isDefaultValueEmpty() {\n    return !this.defaultValueExpression && this.isValueEmpty(this.defaultValue, !this.allowSpaceAsAnswer);\n  }\n  getDefaultRunner(runner, expression) {\n    if (!runner && !!expression) {\n      runner = this.createExpressionRunner(expression);\n    }\n    if (!!runner) {\n      runner.expression = expression;\n    }\n    return runner;\n  }\n  setDefaultValue() {\n    this.setDefaultValueCore(val => {\n      if (!this.isTwoValueEquals(this.value, val)) {\n        this.value = val;\n      }\n    });\n  }\n  setDefaultValueCore(func) {\n    this.defaultValueRunner = this.getDefaultRunner(this.defaultValueRunner, this.defaultValueExpression);\n    this.setValueAndRunExpression(this.defaultValueRunner, this.getUnbindValue(this.defaultValue), val => func(val));\n  }\n  updateValueWithDefaultsOrClear() {\n    if (this.isDesignMode || this.isLoadingFromJson) return;\n    if (this.isDefaultValueEmpty()) {\n      this.clearValue();\n    } else {\n      this.setDefaultValue();\n    }\n  }\n  isValueExpression(val) {\n    return !!val && typeof val == \"string\" && val.length > 0 && val[0] == \"=\";\n  }\n  setValueAndRunExpression(runner, defaultValue, setFunc, values = null, properties = null) {\n    const func = val => {\n      this.runExpressionSetValueCore(val, setFunc);\n    };\n    if (!this.runDefaultValueExpression(runner, values, properties, func)) {\n      func(defaultValue);\n    }\n  }\n  convertFuncValuetoQuestionValue(val) {\n    return Helpers.convertValToQuestionVal(val);\n  }\n  runExpressionSetValueCore(val, setFunc) {\n    setFunc(this.convertFuncValuetoQuestionValue(val));\n  }\n  runExpressionSetValue(val) {\n    this.runExpressionSetValueCore(val, val => {\n      if (!this.isTwoValueEquals(this.value, val)) {\n        this.startSetValueOnExpression();\n        this.value = val;\n        this.finishSetValueOnExpression();\n      }\n    });\n  }\n  startSetValueOnExpression() {\n    var _a;\n    (_a = this.survey) === null || _a === void 0 ? void 0 : _a.startSetValueOnExpression();\n  }\n  finishSetValueOnExpression() {\n    var _a;\n    (_a = this.survey) === null || _a === void 0 ? void 0 : _a.finishSetValueOnExpression();\n  }\n  runDefaultValueExpression(runner, values = null, properties = null, setFunc) {\n    if (!runner || !this.data) return false;\n    if (!setFunc) {\n      setFunc = val => {\n        this.runExpressionSetValue(val);\n      };\n    }\n    if (!values) values = this.defaultValueExpression ? this.data.getFilteredValues() : {};\n    if (!properties) {\n      properties = this.defaultValueExpression ? this.data.getFilteredProperties() : {};\n      properties[\"question\"] = this;\n    }\n    if (!!runner && runner.canRun) {\n      runner.onRunComplete = res => {\n        if (res == undefined) res = this.defaultValue;\n        this.isChangingViaDefaultValue = true;\n        setFunc(res);\n        this.isChangingViaDefaultValue = false;\n      };\n      runner.run(values, properties);\n    }\n    return true;\n  }\n  /**\n   * A comment to the selected question value. Enable the `showCommentArea` property to allow users to leave comments.\n   * @see showCommentArea\n   * @see commentText\n   */\n  get comment() {\n    return this.getQuestionComment();\n  }\n  set comment(newValue) {\n    if (!!newValue) {\n      const trimmedValue = newValue.toString().trim();\n      if (trimmedValue !== newValue) {\n        newValue = trimmedValue;\n        if (newValue === this.comment) {\n          this.setPropertyValueDirectly(\"comment\", newValue);\n        }\n      }\n    }\n    if (this.comment == newValue) return;\n    this.setQuestionComment(newValue);\n    this.updateCommentElements();\n  }\n  getCommentAreaCss(isOther = false) {\n    return new CssClassBuilder().append(\"form-group\", isOther).append(this.cssClasses.formGroup, !isOther).append(this.cssClasses.commentArea).toString();\n  }\n  getQuestionComment() {\n    return this.questionComment;\n  }\n  setQuestionComment(newValue) {\n    this.setNewComment(newValue);\n  }\n  /**\n   * Returns `true` if the question value is an empty string, array, or object or if it equals `undefined` or `null`.\n   */\n  isEmpty() {\n    return this.isValueEmpty(this.value, !this.allowSpaceAsAnswer);\n  }\n  get isAnswered() {\n    return this.getPropertyValue(\"isAnswered\") || false;\n  }\n  set isAnswered(val) {\n    this.setPropertyValue(\"isAnswered\", val);\n  }\n  updateIsAnswered() {\n    const oldVal = this.isAnswered;\n    this.setPropertyValue(\"isAnswered\", this.getIsAnswered());\n    if (oldVal !== this.isAnswered) {\n      this.updateQuestionCss();\n    }\n  }\n  getIsAnswered() {\n    return !this.isEmpty();\n  }\n  /**\n   * Question validators.\n   *\n   * [Data Validation](https://surveyjs.io/form-library/documentation/data-validation (linkStyle))\n   */\n  get validators() {\n    return this.getPropertyValue(\"validators\");\n  }\n  set validators(val) {\n    this.setPropertyValue(\"validators\", val);\n  }\n  getValidators() {\n    return this.validators;\n  }\n  getSupportedValidators() {\n    var res = [];\n    var className = this.getType();\n    while (!!className) {\n      var classValidators = settings.supportedValidators[className];\n      if (!!classValidators) {\n        for (var i = classValidators.length - 1; i >= 0; i--) {\n          res.splice(0, 0, classValidators[i]);\n        }\n      }\n      var classInfo = Serializer.findClass(className);\n      className = classInfo.parentName;\n    }\n    return res;\n  }\n  addConditionObjectsByContext(objects, context) {\n    objects.push({\n      name: this.getFilteredName(),\n      text: this.processedTitle,\n      question: this\n    });\n  }\n  /**\n   * Returns an array of questions nested within the current question. Use this method to obtain questions within [Multiple Text](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model), [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model), and [Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model)-like questions.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible nested questions.\n   * @returns An array of nested questions.\n   */\n  getNestedQuestions(visibleOnly = false, includeNested = true, includeItSelf = false) {\n    const res = [];\n    this.collectNestedQuestions(res, visibleOnly, includeNested, includeItSelf);\n    if (!includeItSelf && res.length === 1 && res[0] === this) return [];\n    return res;\n  }\n  collectNestedQuestions(questions, visibleOnly = false, includeNested = true, includeItSelf = false) {\n    if (visibleOnly && !this.isVisible) return;\n    this.collectNestedQuestionsCore(questions, visibleOnly, includeNested, includeItSelf);\n  }\n  collectNestedQuestionsCore(questions, visibleOnly, includeNested, includeItSelf) {\n    questions.push(this);\n  }\n  addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf) {\n    if (includeNested) {\n      this.collectNestedQuestions(questions, visibleOnly, includeNested, includeItSelf);\n    } else {\n      if (!visibleOnly || this.isVisible) {\n        questions.push(this);\n      }\n    }\n  }\n  getConditionJson(operator = null, path = null) {\n    const json = new JsonObject().toJsonObject(this);\n    json[\"type\"] = this.getType();\n    return json;\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    const errors = this.checkForErrors(!!rec && rec.isOnValueChanged === true, fireCallback);\n    if (fireCallback) {\n      this.errors = errors;\n      if (this.errors !== errors) {\n        this.errors.forEach(er => er.locText.strChanged());\n      }\n    }\n    this.updateContainsErrors();\n    if (this.isCollapsed && rec && fireCallback && errors.length > 0) {\n      this.expand();\n    }\n    return errors.length > 0;\n  }\n  /**\n   * Validates this question and returns `false` if the validation fails.\n   * @param fireCallback *(Optional)* Pass `false` if you do not want to show validation errors in the UI.\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  validate(fireCallback = true, rec = null) {\n    if (!!rec && rec.isOnValueChanged) {\n      if (!!this.parent) {\n        this.parent.validateContainerOnly();\n      }\n    }\n    return !this.hasErrors(fireCallback, rec);\n  }\n  get currentErrorCount() {\n    return this.errors.length;\n  }\n  /**\n   * Returns a character or text string that indicates a required question.\n   * @see SurveyModel.requiredMark\n   * @see isRequired\n   */\n  get requiredMark() {\n    return this.survey != null && this.isRequired ? this.survey.requiredMark : \"\";\n  }\n  /**\n   * @deprecated Use the [`requiredMark`](https://surveyjs.io/form-library/documentation/api-reference/question#requiredMark) property instead.\n   */\n  get requiredText() {\n    return this.requiredMark;\n  }\n  addError(error) {\n    if (!error) return;\n    let newError = null;\n    if (typeof error === \"string\" || error instanceof String) {\n      newError = this.addCustomError(error);\n    } else {\n      newError = error;\n    }\n    this.errors.push(newError);\n  }\n  addCustomError(error) {\n    return new CustomError(error, this.survey);\n  }\n  removeError(error) {\n    if (!error) return false;\n    const errors = this.errors;\n    const index = errors.indexOf(error);\n    if (index !== -1) errors.splice(index, 1);\n    return index !== -1;\n  }\n  checkForErrors(isOnValueChanged, fireCallback) {\n    var qErrors = new Array();\n    if (this.isVisible && this.canCollectErrors()) {\n      this.collectErrors(qErrors, isOnValueChanged, fireCallback);\n    }\n    if (!!this.survey) {\n      if (this.validateValueCallback && qErrors.length === 0) {\n        const error = this.validateValueCallback();\n        if (error) {\n          qErrors.push(error);\n        }\n      }\n      this.survey.validateQuestion(this, qErrors, fireCallback);\n    }\n    return qErrors;\n  }\n  canCollectErrors() {\n    return !this.isReadOnly || settings.readOnly.enableValidation;\n  }\n  collectErrors(qErrors, isOnValueChanged, fireCallback) {\n    this.onCheckForErrors(qErrors, isOnValueChanged, fireCallback);\n    if (qErrors.length > 0 || !this.canRunValidators(isOnValueChanged)) return;\n    var errors = this.runValidators();\n    if (errors.length > 0) {\n      //validators may change the question value.\n      qErrors.length = 0;\n      for (var i = 0; i < errors.length; i++) {\n        qErrors.push(errors[i]);\n      }\n    }\n  }\n  canRunValidators(isOnValueChanged) {\n    return true;\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    if ((!isOnValueChanged || this.isOldAnswered) && this.hasRequiredError()) {\n      const err = new AnswerRequiredError(this.requiredErrorText, this);\n      err.onUpdateErrorTextCallback = err => {\n        err.text = this.requiredErrorText;\n      };\n      errors.push(err);\n    }\n    if (!this.isEmpty() && this.customWidget) {\n      const text = this.customWidget.validate(this);\n      if (!!text) {\n        errors.push(this.addCustomError(text));\n      }\n    }\n  }\n  hasRequiredError() {\n    return this.isRequired && this.isEmpty();\n  }\n  get isRunningValidators() {\n    return this.getIsRunningValidators();\n  }\n  getIsRunningValidators() {\n    return this.isRunningValidatorsValue;\n  }\n  runValidators() {\n    if (!!this.validatorRunner) {\n      this.validatorRunner.onAsyncCompleted = null;\n    }\n    this.validatorRunner = new ValidatorRunner();\n    this.isRunningValidatorsValue = true;\n    this.validatorRunner.onAsyncCompleted = errors => {\n      this.doOnAsyncCompleted(errors);\n    };\n    return this.validatorRunner.run(this);\n  }\n  doOnAsyncCompleted(errors) {\n    for (var i = 0; i < errors.length; i++) {\n      this.errors.push(errors[i]);\n    }\n    this.isRunningValidatorsValue = false;\n    this.raiseOnCompletedAsyncValidators();\n  }\n  raiseOnCompletedAsyncValidators() {\n    if (!!this.onCompletedAsyncValidators && !this.isRunningValidators) {\n      this.onCompletedAsyncValidators(this.getAllErrors().length > 0);\n      this.onCompletedAsyncValidators = null;\n    }\n  }\n  setNewValue(newValue) {\n    if (this.isNewValueEqualsToValue(newValue)) return;\n    if (!this.checkIsValueCorrect(newValue)) return;\n    this.isOldAnswered = this.isAnswered;\n    this.isSettingQuestionValue = true;\n    this.setNewValueInData(newValue);\n    this.allowNotifyValueChanged && this.onValueChanged();\n    this.isSettingQuestionValue = false;\n    if (this.isAnswered !== this.isOldAnswered) {\n      this.updateQuestionCss();\n    }\n    this.isOldAnswered = undefined;\n    if (this.parent) {\n      this.parent.onQuestionValueChanged(this);\n    }\n  }\n  checkIsValueCorrect(val) {\n    const res = this.isValueEmpty(val, !this.allowSpaceAsAnswer) || this.isNewValueCorrect(val);\n    if (!res) {\n      ConsoleWarnings.inCorrectQuestionValue(this.name, val);\n    }\n    return res;\n  }\n  isNewValueCorrect(val) {\n    return true;\n  }\n  isNewValueEqualsToValue(newValue) {\n    const val = this.value;\n    if (!this.isTwoValueEquals(newValue, val, false, false)) return false;\n    const isObj = newValue === val && !!val && (Array.isArray(val) || typeof val === \"object\");\n    return !isObj;\n  }\n  isTextValue() {\n    return false;\n  }\n  getIsInputTextUpdate() {\n    return !!this.survey ? this.survey.isUpdateValueTextOnTyping : false;\n  }\n  get requireStrictCompare() {\n    return false;\n  }\n  getExpressionValue(val) {\n    return val;\n  }\n  getDataLocNotification() {\n    return this.isInputTextUpdate ? \"text\" : false;\n  }\n  get isInputTextUpdate() {\n    return this.getIsInputTextUpdate() && this.isTextValue();\n  }\n  setNewValueInData(newValue) {\n    newValue = this.valueToData(newValue);\n    if (!this.isValueChangedInSurvey) {\n      this.setValueCore(newValue);\n    }\n  }\n  getValueCore() {\n    return this.questionValue;\n  }\n  setValueCore(newValue) {\n    this.setQuestionValue(newValue);\n    if (this.data != null && this.canSetValueToSurvey()) {\n      newValue = this.valueForSurvey;\n      this.data.setValue(this.getValueName(), newValue, this.getDataLocNotification(), this.allowNotifyValueChanged, this.name);\n    }\n    this.isMouseDown = false;\n  }\n  canSetValueToSurvey() {\n    return true;\n  }\n  valueFromData(val) {\n    return val;\n  }\n  valueToData(val) {\n    return val;\n  }\n  convertToCorrectValue(val) {\n    return val;\n  }\n  onValueChanged() {}\n  onMouseDown() {\n    this.isMouseDown = true;\n  }\n  setNewComment(newValue) {\n    if (this.questionComment === newValue) return;\n    this.questionComment = newValue;\n    this.setCommentIntoData(newValue);\n  }\n  setCommentIntoData(newValue) {\n    if (this.data != null) {\n      this.data.setComment(this.getValueName(), newValue, this.getIsInputTextUpdate() ? \"text\" : false);\n    }\n  }\n  getValidName(name) {\n    return makeNameValid(name);\n  }\n  //IQuestion\n  updateValueFromSurvey(newValue, clearData = false) {\n    newValue = this.getUnbindValue(newValue);\n    newValue = this.valueFromDataCore(newValue);\n    if (!this.checkIsValueCorrect(newValue)) return;\n    const isEmpty = this.isValueEmpty(newValue);\n    if (!isEmpty && this.defaultValueExpression) {\n      this.setDefaultValueCore(val => {\n        this.updateValueFromSurveyCore(newValue, this.isTwoValueEquals(newValue, val));\n      });\n    } else {\n      this.updateValueFromSurveyCore(newValue, this.data !== this.getSurvey());\n      if (clearData && isEmpty) {\n        this.isValueChangedDirectly = false;\n      }\n    }\n    this.updateDependedQuestions();\n    this.updateIsAnswered();\n  }\n  updateValueFromSurveyCore(newValue, viaDefaultVal) {\n    this.isChangingViaDefaultValue = viaDefaultVal;\n    newValue = this.valueFromData(newValue);\n    const isEqual = this.isTwoValueEquals(this.questionValue, this.convertToCorrectValue(newValue));\n    this.setQuestionValue(newValue);\n    if (!isEqual) {\n      this.resetSingleInput();\n    }\n    this.isChangingViaDefaultValue = false;\n  }\n  updateCommentFromSurvey(newValue) {\n    this.questionComment = newValue;\n  }\n  onChangeQuestionValue(newValue) {}\n  setValueChangedDirectly(val) {\n    this.isValueChangedDirectly = val;\n    if (!!this.setValueChangedDirectlyCallback) {\n      this.setValueChangedDirectlyCallback(val);\n    }\n  }\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    newValue = this.convertToCorrectValue(newValue);\n    const isEqual = this.isTwoValueEquals(this.questionValue, newValue);\n    if (!isEqual && !this.isChangingViaDefaultValue && !this.isParentChangingViaDefaultValue) {\n      this.setValueChangedDirectly(true);\n    }\n    this.questionValue = newValue;\n    if (!isEqual) {\n      this.onChangeQuestionValue(newValue);\n    }\n    !isEqual && this.allowNotifyValueChanged && this.fireCallback(this.valueChangedCallback);\n    if (updateIsAnswered) this.updateIsAnswered();\n  }\n  get isParentChangingViaDefaultValue() {\n    var _a;\n    return ((_a = this.data) === null || _a === void 0 ? void 0 : _a.isChangingViaDefaultValue) === true;\n  }\n  onSurveyValueChanged(newValue) {}\n  setVisibleIndex(val) {\n    if (val > -1 && (!this.isVisible || !this.hasTitle && !settings.numbering.includeQuestionsWithHiddenTitle || !this.showNumber && !settings.numbering.includeQuestionsWithHiddenNumber)) {\n      val = -1;\n    }\n    this.setPropertyValue(\"visibleIndex\", val);\n    this.setPropertyValue(\"no\", this.calcNo());\n    return val < 0 ? 0 : 1;\n  }\n  removeElement(element) {\n    return false;\n  }\n  // Obsolete\n  supportGoNextPageAutomatic() {\n    return this.supportAutoAdvance();\n  }\n  supportAutoAdvance() {\n    return false;\n  }\n  supportGoNextPageError() {\n    return true;\n  }\n  /**\n   * Removes values that cannot be assigned to this question, for example, choices unlisted in the `choices` array.\n   *\n   * Call this method after you assign new question values in code to ensure that they are acceptable.\n   *\n   * > This method does not remove values that fail validation. Call the `validate()` method to validate newly assigned values.\n   *\n   * @see validate\n   */\n  clearIncorrectValues() {}\n  clearOnDeletingContainer() {}\n  /**\n   * Empties the `errors` array.\n   * @see errors\n   */\n  clearErrors() {\n    this.errors = [];\n  }\n  clearUnusedValues() {}\n  onAnyValueChanged(name, questionName) {}\n  checkBindings(valueName, value) {\n    if (this.bindings.isEmpty() || !this.data) return;\n    var props = this.bindings.getPropertiesByValueName(valueName);\n    for (var i = 0; i < props.length; i++) {\n      const propName = props[i];\n      if (this.isValueEmpty(value) && Helpers.isNumber(this[propName])) {\n        value = 0;\n      }\n      this.updateBindingProp(propName, value);\n    }\n  }\n  updateBindingProp(propName, value) {\n    this[propName] = value;\n  }\n  getComponentName() {\n    return RendererFactory.Instance.getRendererByQuestion(this);\n  }\n  isDefaultRendering() {\n    return !!this.customWidget || this.getComponentName() === \"default\";\n  }\n  get renderAs() {\n    return this.getPropertyValue(\"renderAs\");\n  }\n  set renderAs(val) {\n    this.setPropertyValue(\"renderAs\", val);\n  }\n  get inMatrixMode() {\n    return this.getPropertyValue(\"inMatrixMode\", false);\n  }\n  set inMatrixMode(val) {\n    this.setPropertyValue(\"inMatrixMode\", val);\n  }\n  //ISurveyErrorOwner\n  getErrorCustomText(text, error) {\n    if (!!this.survey) return this.survey.getSurveyErrorCustomText(this, text, error);\n    return text;\n  }\n  //IValidatorOwner\n  getValidatorTitle() {\n    return null;\n  }\n  get validatedValue() {\n    return this.value;\n  }\n  set validatedValue(val) {\n    this.value = val;\n  }\n  getAllValues() {\n    return !!this.data ? this.data.getAllValues() : null;\n  }\n  processPopupVisiblilityChanged(popupModel, visible) {\n    this.survey.processPopupVisiblityChanged(this, popupModel, visible);\n  }\n  processOpenDropdownMenu(options) {\n    this.survey.processOpenDropdownMenu(this, options);\n  }\n  onTextKeyDownHandler(event) {\n    if (event.keyCode === 13) {\n      this.survey.questionEditFinishCallback(this, event);\n    }\n  }\n  transformToMobileView() {}\n  transformToDesktopView() {}\n  needResponsiveWidth() {\n    return false;\n  }\n  //responsiveness methods\n  supportResponsiveness() {\n    return false;\n  }\n  needResponsiveness() {\n    return this.supportResponsiveness() && !this.isDesignMode;\n  }\n  checkForResponsiveness(el) {\n    if (this.needResponsiveness()) {\n      if (this.isCollapsed) {\n        const onStateChanged = () => {\n          if (this.isExpanded) {\n            this.initResponsiveness(el);\n            this.unregisterPropertyChangedHandlers([\"state\"], \"for-responsiveness\");\n          }\n        };\n        this.registerPropertyChangedHandlers([\"state\"], onStateChanged, \"for-responsiveness\");\n      } else {\n        this.initResponsiveness(el);\n      }\n    }\n  }\n  getObservedElementSelector() {\n    return \".sd-scrollable-container\";\n  }\n  onMobileChanged() {\n    this.onMobileChangedCallback && this.onMobileChangedCallback();\n  }\n  triggerResponsiveness(hard = true) {\n    if (this.triggerResponsivenessCallback) {\n      this.triggerResponsivenessCallback(hard);\n    }\n  }\n  initResponsiveness(el) {\n    if (!DomDocumentHelper.isAvailable()) {\n      return;\n    }\n    this.destroyResizeObserver();\n    if (!!el && this.isDefaultRendering()) {\n      const scrollableSelector = this.getObservedElementSelector();\n      if (!scrollableSelector) return;\n      const defaultRootEl = el.querySelector(scrollableSelector);\n      if (!defaultRootEl) return;\n      let isProcessed = false;\n      let requiredWidth = undefined;\n      this.triggerResponsivenessCallback = hard => {\n        if (hard) {\n          requiredWidth = undefined;\n          this.renderAs = \"default\";\n          isProcessed = false;\n        }\n        const callback = () => {\n          const rootEl = el.querySelector(scrollableSelector);\n          if (this.isDefaultRendering()) {\n            requiredWidth = rootEl.scrollWidth;\n          }\n          if (isProcessed || !isContainerVisible(rootEl)) {\n            isProcessed = false;\n          } else {\n            const availableWidth = getElementWidth(rootEl);\n            isProcessed = this.processResponsiveness(requiredWidth, availableWidth);\n          }\n        };\n        if (hard) {\n          setTimeout(callback, 1);\n        } else {\n          callback();\n        }\n      };\n      this.resizeObserver = new ResizeObserver(entries => {\n        DomWindowHelper.requestAnimationFrame(() => {\n          this.triggerResponsiveness(false);\n        });\n      });\n      this.onMobileChangedCallback = () => {\n        setTimeout(() => {\n          const rootEl = el.querySelector(scrollableSelector);\n          this.processResponsiveness(requiredWidth, getElementWidth(rootEl));\n        }, 0);\n      };\n      this.resizeObserver.observe(el);\n    }\n  }\n  getCompactRenderAs() {\n    return \"default\";\n  }\n  getDesktopRenderAs() {\n    return \"default\";\n  }\n  onBeforeSetCompactRenderer() {}\n  onBeforeSetDesktopRenderer() {}\n  processResponsiveness(requiredWidth, availableWidth) {\n    availableWidth = Math.round(availableWidth);\n    if (Math.abs(requiredWidth - availableWidth) > 2) {\n      const oldRenderAs = this.renderAs;\n      if (requiredWidth > availableWidth) {\n        this.onBeforeSetCompactRenderer();\n        this.renderAs = this.getCompactRenderAs();\n      } else {\n        this.onBeforeSetDesktopRenderer();\n        this.renderAs = this.getDesktopRenderAs();\n      }\n      return oldRenderAs !== this.renderAs;\n    }\n    return false;\n  }\n  destroyResizeObserver() {\n    if (!!this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = undefined;\n      this.onMobileChangedCallback = undefined;\n      this.triggerResponsivenessCallback = undefined;\n      this.renderAs = this.getDesktopRenderAs();\n    }\n  }\n  dispose() {\n    super.dispose();\n    this.resetDependedQuestions();\n    this.destroyResizeObserver();\n  }\n  resetDependedQuestions() {\n    for (var i = 0; i < this.dependedQuestions.length; i++) {\n      this.dependedQuestions[i].resetDependedQuestion();\n    }\n  }\n  //a11y\n  get isNewA11yStructure() {\n    return false;\n  }\n  get ariaLabel() {\n    if (this.isNewA11yStructure || this.hasTitle && !this.parentQuestion) return null;\n    return this.locTitle.renderedHtml;\n  }\n  get ariaRole() {\n    if (this.isNewA11yStructure) return null;\n    return \"textbox\";\n  }\n  get ariaRequired() {\n    if (this.isNewA11yStructure) return null;\n    return this.isRequired ? \"true\" : \"false\";\n  }\n  get ariaInvalid() {\n    if (this.isNewA11yStructure) return null;\n    return this.hasCssError() ? \"true\" : \"false\";\n  }\n  get ariaLabelledBy() {\n    if (this.isNewA11yStructure || !this.hasTitle || this.parentQuestion) return null;\n    return this.ariaTitleId;\n  }\n  get ariaDescribedBy() {\n    if (this.isNewA11yStructure) return null;\n    if (this.hasTitle && this.hasDescription) {\n      return this.ariaDescriptionId;\n    } else {\n      return null;\n    }\n  }\n  getContentAriaHidden() {\n    return null;\n  }\n  get contentAriaHidden() {\n    return this.getContentAriaHidden();\n  }\n  get ariaErrormessage() {\n    if (this.isNewA11yStructure) return null;\n    return this.hasCssError() ? this.id + \"_errors\" : null;\n  }\n  //EO a11y\n  //new a11y\n  get a11y_input_ariaRole() {\n    return null;\n  }\n  get a11y_input_ariaRequired() {\n    return this.isRequired ? \"true\" : \"false\";\n  }\n  get a11y_input_ariaInvalid() {\n    return this.hasCssError() ? \"true\" : \"false\";\n  }\n  get a11y_input_ariaLabel() {\n    if (this.hasTitle && !this.parentQuestion) {\n      return null;\n    } else {\n      return this.locTitle.renderedHtml;\n    }\n  }\n  get a11y_input_ariaLabelledBy() {\n    if (this.hasTitle && !this.parentQuestion) {\n      return this.ariaTitleId;\n    } else {\n      return null;\n    }\n  }\n  get a11y_input_ariaDescribedBy() {\n    if (this.hasTitle && !this.parentQuestion && this.hasDescription && this.descriptionLocation !== \"hidden\") {\n      return this.ariaDescriptionId;\n    } else {\n      return null;\n    }\n  }\n  get a11y_input_ariaErrormessage() {\n    return this.hasCssError() ? this.id + \"_errors\" : null;\n  }\n  get a11y_input_ariaExpanded() {\n    return this.getPropertyValue(\"ariaExpanded\");\n  }\n  registerSychProperties(names, func) {\n    this.registerFunctionOnPropertiesValueChanged(names, () => {\n      if (!this._syncPropertiesChanging) {\n        this._syncPropertiesChanging = true;\n        func();\n        this._syncPropertiesChanging = false;\n      }\n    });\n  }\n}\nQuestion.TextPreprocessorValuesMap = {\n  title: \"processedTitle\",\n  require: \"requiredMark\"\n};\nQuestion.questionCounter = 100;\nfunction makeNameValid(str) {\n  if (!str) return str;\n  str = str.trim().replace(/[\\{\\}]+/g, \"\");\n  while (!!str && str[0] === settings.expressionDisableConversionChar) {\n    str = str.substring(1);\n  }\n  return str;\n}\nSerializer.addClass(\"question\", [{\n  name: \"!name\",\n  onSettingValue: (obj, val) => {\n    return makeNameValid(val);\n  }\n}, {\n  name: \"state\",\n  default: \"default\",\n  choices: [\"default\", \"collapsed\", \"expanded\"]\n}, {\n  name: \"visible:switch\",\n  default: true,\n  overridingProperty: \"visibleIf\"\n}, {\n  name: \"useDisplayValuesInDynamicTexts:boolean\",\n  alternativeName: \"useDisplayValuesInTitle\",\n  default: true,\n  layout: \"row\"\n}, \"visibleIf:condition\", {\n  name: \"width\"\n}, {\n  name: \"minWidth\",\n  defaultFunc: () => settings.minWidth\n}, {\n  name: \"maxWidth\",\n  defaultFunc: () => settings.maxWidth\n}, {\n  name: \"colSpan:number\",\n  visible: false,\n  onSerializeValue: obj => {\n    return obj.getPropertyValue(\"colSpan\");\n  }\n}, {\n  name: \"effectiveColSpan:number\",\n  minValue: 1,\n  isSerializable: false,\n  visibleIf: function (obj) {\n    return !!obj && !!obj.survey && obj.survey.gridLayoutEnabled;\n  }\n}, {\n  name: \"startWithNewLine:boolean\",\n  default: true,\n  layout: \"row\"\n}, {\n  name: \"indent:number\",\n  default: 0,\n  choices: [0, 1, 2, 3],\n  layout: \"row\"\n}, {\n  name: \"page\",\n  isSerializable: false,\n  visibleIf: function (obj) {\n    var survey = obj ? obj.survey : null;\n    return !survey || !survey.pages || survey.pages.length > 1;\n  },\n  choices: function (obj) {\n    var survey = obj ? obj.survey : null;\n    return survey ? survey.pages.map(p => {\n      return {\n        value: p.name,\n        text: p.title\n      };\n    }) : [];\n  }\n}, {\n  name: \"title:text\",\n  serializationProperty: \"locTitle\",\n  layout: \"row\",\n  dependsOn: \"name\",\n  onPropertyEditorUpdate: function (obj, editor) {\n    if (!!obj && !!editor) {\n      editor.placeholder = obj.locTitle.getPlaceholder();\n    }\n  }\n}, {\n  name: \"titleLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\", \"left\", \"hidden\"],\n  layout: \"row\"\n}, {\n  name: \"showTitle:boolean\",\n  isSerializable: false,\n  dependsOn: \"titleLocation\"\n}, {\n  name: \"description:text\",\n  serializationProperty: \"locDescription\",\n  layout: \"row\"\n}, {\n  name: \"descriptionLocation\",\n  default: \"default\",\n  choices: [\"default\", \"underInput\", \"underTitle\"]\n}, {\n  name: \"showNumber:boolean\",\n  dependsOn: \"titleLocation\",\n  default: true,\n  visibleIf: function (obj) {\n    if (!obj) {\n      return true;\n    }\n    if (obj.titleLocation === \"hidden\") {\n      return false;\n    }\n    var parent = obj ? obj.parent : null;\n    var numberingAllowedByParent = !parent || parent.showQuestionNumbers !== \"off\";\n    if (!numberingAllowedByParent) {\n      return false;\n    }\n    var survey = obj ? obj.survey : null;\n    return !survey || survey.showQuestionNumbers !== \"off\" || !!parent && parent.showQuestionNumbers === \"onpanel\";\n  }\n}, {\n  name: \"hideNumber:boolean\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"valueName\",\n  onSettingValue: (obj, val) => {\n    return makeNameValid(val);\n  }\n}, \"enableIf:condition\", \"resetValueIf:condition\", \"setValueIf:condition\", \"setValueExpression:expression\", \"defaultValue:value\", {\n  name: \"defaultValueExpression:expression\",\n  category: \"logic\"\n}, \"correctAnswer:value\", {\n  name: \"clearIfInvisible\",\n  default: \"default\",\n  choices: [\"default\", \"none\", \"onComplete\", \"onHidden\", \"onHiddenContainer\"]\n}, {\n  name: \"isRequired:switch\",\n  overridingProperty: \"requiredIf\"\n}, \"requiredIf:condition\", {\n  name: \"requiredErrorText:text\",\n  serializationProperty: \"locRequiredErrorText\"\n}, {\n  name: \"errorLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\"]\n}, {\n  name: \"readOnly:switch\",\n  overridingProperty: \"enableIf\"\n}, {\n  name: \"validators:validators\",\n  baseClassName: \"surveyvalidator\",\n  classNamePart: \"validator\"\n}, {\n  name: \"bindings:bindings\",\n  serializationProperty: \"bindings\",\n  isSerializableFunc: obj => !obj.isBindingEmpty(),\n  visibleIf: function (obj) {\n    return obj.bindings.getNames().length > 0;\n  }\n}, {\n  name: \"renderAs\",\n  default: \"default\",\n  visible: false\n}, {\n  name: \"showCommentArea\",\n  visible: false,\n  default: false,\n  alternativeName: \"hasComment\",\n  category: \"general\"\n}, {\n  name: \"commentText\",\n  dependsOn: \"showCommentArea\",\n  visibleIf: function (obj) {\n    return obj.showCommentArea;\n  },\n  serializationProperty: \"locCommentText\"\n}, {\n  name: \"commentPlaceholder\",\n  alternativeName: \"commentPlaceHolder\",\n  serializationProperty: \"locCommentPlaceholder\",\n  dependsOn: \"showCommentArea\",\n  visibleIf: function (obj) {\n    return obj.hasComment;\n  }\n}, {\n  name: \"defaultDisplayValue\",\n  serializationProperty: \"locDefaultDisplayValue\"\n}]);\nSerializer.addAlterNativeClassName(\"question\", \"questionbase\");\n\n/**\n * Array of ItemValue is used in checkbox, dropdown and radiogroup choices, matrix columns and rows.\n * It has two main properties: value and text. If text is empty, value is used for displaying.\n * The text property is localizable and support markdown.\n */\nclass ItemValue extends BaseAction {\n  getMarkdownHtml(text, name, item) {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item || this) : undefined;\n  }\n  getRenderer(name) {\n    return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    return this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n  static get Separator() {\n    return settings.itemValueSeparator;\n  }\n  static set Separator(val) {\n    settings.itemValueSeparator = val;\n  }\n  /**\n   * Resets the input array and fills it with values from the values array\n   */\n  static setData(items, values, type) {\n    items.length = 0;\n    for (let i = 0; i < values.length; i++) {\n      const value = values[i];\n      const itemType = !!value && typeof value.getType === \"function\" ? value.getType() : type !== null && type !== void 0 ? type : \"itemvalue\";\n      const item = Serializer.createClass(itemType);\n      item.setData(value);\n      if (!!value.originalItem) {\n        item.originalItem = value.originalItem;\n      }\n      if (!!value.data) {\n        item.data = value.data;\n      }\n      items.push(item);\n    }\n  }\n  static getData(items) {\n    var result = [];\n    for (var i = 0; i < items.length; i++) {\n      result.push(items[i].getData());\n    }\n    return result;\n  }\n  static getItemByValue(items, val) {\n    if (!Array.isArray(items)) return null;\n    const valIsEmpty = Helpers.isValueEmpty(val);\n    for (var i = 0; i < items.length; i++) {\n      if (valIsEmpty && Helpers.isValueEmpty(items[i].value)) return items[i];\n      if (Helpers.isTwoValueEquals(items[i].value, val, false, true, false)) return items[i];\n    }\n    return null;\n  }\n  static getTextOrHtmlByValue(items, val) {\n    var item = ItemValue.getItemByValue(items, val);\n    return item !== null ? item.textOrHtml : \"\";\n  }\n  static locStrsChanged(items) {\n    for (var i = 0; i < items.length; i++) {\n      items[i].locStrsChanged();\n    }\n  }\n  static runConditionsForItems(items, filteredItems, runner, values, properties, useItemExpression = true, onItemCallBack) {\n    return ItemValue.runConditionsForItemsCore(items, filteredItems, runner, values, properties, true, useItemExpression, onItemCallBack);\n  }\n  static runEnabledConditionsForItems(items, runner, values, properties, onItemCallBack) {\n    return ItemValue.runConditionsForItemsCore(items, null, runner, values, properties, false, true, onItemCallBack);\n  }\n  static runConditionsForItemsCore(items, filteredItems, runner, values, properties, isVisible, useItemExpression = true, onItemCallBack) {\n    if (!values) {\n      values = {};\n    }\n    var itemValue = values[\"item\"];\n    var choiceValue = values[\"choice\"];\n    var hasChanded = false;\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      values[\"item\"] = item.value;\n      values[\"choice\"] = item.value;\n      var itemRunner = useItemExpression && !!item.getConditionRunner ? item.getConditionRunner(isVisible) : false;\n      if (!itemRunner) {\n        itemRunner = runner;\n      }\n      var newValue = true;\n      if (itemRunner) {\n        newValue = itemRunner.run(values, properties);\n      }\n      if (!!onItemCallBack) {\n        newValue = onItemCallBack(item, newValue);\n      }\n      if (!!filteredItems && newValue) {\n        filteredItems.push(item);\n      }\n      var oldValue = isVisible ? item.isVisible : item.isEnabled;\n      if (newValue != oldValue) {\n        hasChanded = true;\n        if (isVisible) {\n          if (!!item.setIsVisible) item.setIsVisible(newValue);\n        } else {\n          if (!!item.setIsEnabled) item.setIsEnabled(newValue);\n        }\n      }\n    }\n    if (itemValue) {\n      values[\"item\"] = itemValue;\n    } else {\n      delete values[\"item\"];\n    }\n    if (choiceValue) {\n      values[\"choice\"] = choiceValue;\n    } else {\n      delete values[\"choice\"];\n    }\n    return hasChanded;\n  }\n  constructor(value, text, typeName) {\n    super();\n    this.typeName = typeName;\n    this.ownerPropertyName = \"\";\n    if (text) this.locText.text = text;\n    if (!!value && typeof value === \"object\") {\n      this.setData(value, true);\n    } else {\n      this.setValue(value, true);\n    }\n    if (this.getType() != this.getBaseType()) {\n      CustomPropertiesCollection.createProperties(this);\n    }\n    this.onCreating();\n  }\n  onCreating() {}\n  getType() {\n    return this.typeName || this.getBaseType();\n  }\n  getBaseType() {\n    return \"itemvalue\";\n  }\n  getSurvey(live = false) {\n    return !!this.locOwner && !!this.locOwner[\"getSurvey\"] ? this.locOwner.getSurvey() : null;\n  }\n  getLocale() {\n    return !!this.locOwner && this.locOwner.getLocale ? this.locOwner.getLocale() : \"\";\n  }\n  getLocalizableString(name) {\n    if (name === \"text\") return this.locText;\n    return super.getLocalizableString(name);\n  }\n  get isInternal() {\n    return this.isGhost === true;\n  }\n  createLocText() {\n    const res = new LocalizableString(this, true, \"text\");\n    res.onStrChanged = (oldValue, newValue) => {\n      this.propertyValueChanged(\"text\", oldValue, newValue);\n    };\n    res.onGetTextCallback = txt => {\n      return this.onGetText(txt);\n    };\n    return res;\n  }\n  onGetText(text) {\n    return text || this.getValueText();\n  }\n  getValueText() {\n    const val = this.value;\n    return !Helpers.isValueEmpty(val) ? val.toString() : null;\n  }\n  get locText() {\n    if (!this.locTextValue) {\n      this.locTextValue = this.createLocText();\n    }\n    return this.locTextValue;\n  }\n  setLocText(locText) {\n    this.locTextValue = locText;\n  }\n  get locOwner() {\n    return this._locOwner;\n  }\n  set locOwner(value) {\n    this._locOwner = value;\n  }\n  get value() {\n    return this.getPropertyValue(\"value\");\n  }\n  set value(newValue) {\n    this.setValue(newValue, false);\n  }\n  setValue(newValue, newItem) {\n    let text = undefined;\n    newValue = this.getCorrectValue(newValue);\n    if (!Helpers.isValueEmpty(newValue)) {\n      var str = newValue.toString();\n      var index = str.indexOf(settings.itemValueSeparator);\n      if (index > -1) {\n        newValue = str.slice(0, index);\n        text = str.slice(index + 1);\n      }\n    }\n    if (newItem) {\n      this.setPropertyValueDirectly(\"value\", newValue);\n    } else {\n      this.setPropertyValue(\"value\", newValue);\n    }\n    if (!!text) {\n      this.text = text;\n    }\n    this.id = this.value;\n  }\n  getCorrectValue(value) {\n    return value;\n  }\n  get hasText() {\n    return this.pureText ? true : false;\n  }\n  get pureText() {\n    var _a;\n    return ((_a = this.locTextValue) === null || _a === void 0 ? void 0 : _a.pureText) || \"\";\n  }\n  set pureText(val) {\n    this.text = val;\n  }\n  get text() {\n    return this.calculatedText; //TODO: it will be correct to use this.locText.text, however it would require a lot of rewriting in Creator\n  }\n  set text(newText) {\n    this.locText.text = newText;\n  }\n  get textOrHtml() {\n    if (this.locTextValue) return this.locText.textOrHtml;\n    return this.getValueText();\n  }\n  get calculatedText() {\n    if (this.locTextValue) return this.locText.calculatedText;\n    return this.getValueText();\n  }\n  get shortcutText() {\n    return this.text;\n  }\n  canSerializeValue() {\n    const val = this.value;\n    if (val === undefined || val === null) return false;\n    return !Array.isArray(val) && typeof val !== \"object\";\n  }\n  getData() {\n    var json = this.toJSON();\n    if (!!json[\"value\"] && !!json[\"value\"][\"pos\"]) {\n      delete json[\"value\"][\"pos\"];\n    }\n    if (Helpers.isValueEmpty(json.value)) return json;\n    const canSerializeVal = this.canSerializeValue();\n    const canSerializeAsContant = !canSerializeVal || !settings.serialization.itemValueSerializeAsObject && !settings.serialization.itemValueSerializeDisplayText;\n    if (canSerializeAsContant && Object.keys(json).length == 1) return this.value;\n    if (settings.serialization.itemValueSerializeDisplayText && json.text === undefined && canSerializeVal) {\n      json.text = this.value.toString();\n    }\n    return json;\n  }\n  toJSON() {\n    var res = {};\n    var properties = Serializer.getProperties(this.getType());\n    if (!properties || properties.length == 0) {\n      properties = Serializer.getProperties(this.getBaseType());\n    }\n    var jsoObj = new JsonObject();\n    for (var i = 0; i < properties.length; i++) {\n      const prop = properties[i];\n      if (prop.name === \"text\" && (!this.locTextValue || !this.locTextValue.hasNonDefaultText() && Helpers.isTwoValueEquals(this.value, this.locTextValue.getLocaleText(\"\"), false, true, false))) continue;\n      jsoObj.valueToJson(this, res, prop);\n    }\n    return res;\n  }\n  setData(value, isNewItem) {\n    var _a;\n    if (Helpers.isValueEmpty(value)) return;\n    if (typeof value.value === \"undefined\" && typeof value.text !== \"undefined\" && Object.keys(value).length === 1) {\n      value.value = value.text;\n    }\n    if (typeof value.value !== \"undefined\") {\n      let json;\n      if (typeof value.toJSON === \"function\") {\n        json = value.toJSON();\n      } else {\n        json = value;\n      }\n      new JsonObject().toObject(json, this);\n    } else {\n      this.setValue(value, isNewItem);\n    }\n    if (!isNewItem) {\n      (_a = this.locTextValue) === null || _a === void 0 ? void 0 : _a.strChanged();\n    }\n  }\n  get visibleIf() {\n    return this.getPropertyValueWithoutDefault(\"visibleIf\") || \"\";\n  }\n  set visibleIf(val) {\n    this.setPropertyValue(\"visibleIf\", val);\n  }\n  get enableIf() {\n    return this.getPropertyValueWithoutDefault(\"enableIf\") || \"\";\n  }\n  set enableIf(val) {\n    this.setPropertyValue(\"enableIf\", val);\n  }\n  get isVisible() {\n    const res = this.getPropertyValueWithoutDefault(\"isVisible\");\n    return res !== undefined ? res : true;\n  }\n  setIsVisible(val) {\n    this.setPropertyValue(\"isVisible\", val);\n  }\n  get isEnabled() {\n    const res = this.getPropertyValueWithoutDefault(\"isEnabled\");\n    return res !== undefined ? res : true;\n  }\n  setIsEnabled(val) {\n    this.setPropertyValue(\"isEnabled\", val);\n  }\n  addUsedLocales(locales) {\n    if (this.locTextValue) {\n      this.AddLocStringToUsedLocales(this.locTextValue, locales);\n    }\n  }\n  locStrsChanged() {\n    var _a;\n    super.locStrsChanged();\n    (_a = this.locTextValue) === null || _a === void 0 ? void 0 : _a.strChanged();\n  }\n  onPropertyValueChanged(name, oldValue, newValue) {\n    var _a;\n    if (name === \"value\" && !this.hasText) {\n      (_a = this.locTextValue) === null || _a === void 0 ? void 0 : _a.strChanged();\n    }\n    var funcName = \"itemValuePropertyChanged\";\n    if (!this.locOwner || !this.locOwner[funcName]) return;\n    this.locOwner[funcName](this, name, oldValue, newValue);\n  }\n  getConditionRunner(isVisible) {\n    if (isVisible) return this.getVisibleConditionRunner();\n    return this.getEnableConditionRunner();\n  }\n  getVisibleConditionRunner() {\n    if (!this.visibleIf) return null;\n    if (!this.visibleConditionRunner) this.visibleConditionRunner = new ConditionRunner(this.visibleIf);\n    this.visibleConditionRunner.expression = this.visibleIf;\n    return this.visibleConditionRunner;\n  }\n  getEnableConditionRunner() {\n    if (!this.enableIf) return null;\n    if (!this.enableConditionRunner) this.enableConditionRunner = new ConditionRunner(this.enableIf);\n    this.enableConditionRunner.expression = this.enableIf;\n    return this.enableConditionRunner;\n  }\n  get selected() {\n    const locOwner = this._locOwner;\n    if (locOwner instanceof Question && locOwner.isItemSelected && this.selectedValue === undefined) {\n      this.selectedValue = new ComputedUpdater(() => locOwner.isItemSelected(this));\n    }\n    return this.selectedValue;\n  }\n  getComponent() {\n    if (this._locOwner instanceof Question) {\n      return this.componentValue || this._locOwner.itemComponent;\n    }\n    return this.componentValue;\n  }\n  setComponent(val) {\n    this.componentValue = val;\n  }\n  setRootElement(val) {\n    this._htmlElement = val;\n  }\n  getRootElement() {\n    return this._htmlElement;\n  }\n  getEnabled() {\n    return this.isEnabled;\n  }\n  setEnabled(val) {\n    this.setIsEnabled(val);\n  }\n  getVisible() {\n    const isVisible = this.isVisible === undefined ? true : this.isVisible;\n    const visible = this._visible === undefined ? true : this._visible;\n    return isVisible && visible;\n  }\n  setVisible(val) {\n    if (this.visible !== val) {\n      this._visible = val;\n    }\n  }\n  get _visible() {\n    return this.getPropertyValue(\"visible\", true);\n  }\n  set _visible(val) {\n    this.setPropertyValue(\"visible\", val);\n  }\n  getLocTitle() {\n    return this.locText;\n  }\n  getTitle() {\n    return this.text;\n  }\n  setLocTitle(val) {}\n  setTitle(val) {}\n  get icon() {\n    return this.getPropertyValue(\"icon\", \"\");\n  }\n  set icon(val) {\n    this.setPropertyValue(\"icon\", val);\n  }\n}\n__decorate([property()], ItemValue.prototype, \"selectedValue\", void 0);\nBase.createItemValue = function (source, type) {\n  var item = null;\n  if (!!type) {\n    item = JsonObject.metaData.createClass(type, {});\n  } else if (typeof source.getType === \"function\") {\n    item = new ItemValue(null, undefined, source.getType());\n  } else {\n    item = new ItemValue(null);\n  }\n  item.setData(source);\n  return item;\n};\nBase.itemValueLocStrChanged = function (arr) {\n  ItemValue.locStrsChanged(arr);\n};\nJsonObjectProperty.getItemValuesDefaultValue = (val, type) => {\n  const res = new Array();\n  ItemValue.setData(res, Array.isArray(val) ? val : [], type);\n  return res;\n};\nSerializer.addClass(\"itemvalue\", [{\n  name: \"!value\",\n  isUnique: true\n}, {\n  name: \"text\",\n  serializationProperty: \"locText\"\n}, {\n  name: \"visibleIf:condition\",\n  locationInTable: \"detail\"\n}, {\n  name: \"enableIf:condition\",\n  locationInTable: \"detail\",\n  visibleIf: obj => {\n    return !obj || obj.ownerPropertyName !== \"rateValues\";\n  }\n}], value => new ItemValue(value));\n\n/**\n * The calculated value is a way to define the variable in Survey Creator.\n * It has two main properties: name and expression. Based on expression the value read-only property is automatically calculated.\n * The name property should be unique though all calculated values.\n * It uses survey.getVariable/seruvey.setVariable functions to get/set its value. The class do not store its value internally.\n * You may set includeIntoResult property to true to store this calculated value into survey result.\n */\nclass CalculatedValue extends Base {\n  constructor(name = null, expression = null) {\n    super();\n    this.expressionIsRunning = false;\n    this.isCalculated = false;\n    if (!!name) {\n      this.name = name;\n    }\n    if (!!expression) {\n      this.expression = expression;\n    }\n  }\n  setOwner(data) {\n    this.data = data;\n    this.rerunExpression();\n  }\n  getType() {\n    return \"calculatedvalue\";\n  }\n  getSurvey(live = false) {\n    return !!this.data && !!this.data[\"getSurvey\"] ? this.data.getSurvey() : null;\n  }\n  get owner() {\n    return this.data;\n  }\n  /**\n   * The calculated value name. It should be non empty and unique.\n   */\n  get name() {\n    return this.getPropertyValue(\"name\") || \"\";\n  }\n  set name(val) {\n    this.setPropertyValue(\"name\", val);\n  }\n  /**\n   * Set this property to true to include the non-empty calculated value into survey result, survey.data property.\n   */\n  get includeIntoResult() {\n    return this.getPropertyValue(\"includeIntoResult\");\n  }\n  set includeIntoResult(val) {\n    this.setPropertyValue(\"includeIntoResult\", val);\n  }\n  /**\n   * The Expression that used to calculate the value. You may use standard operators like +, -, * and /, squares (). Here is the example of accessing the question value {questionname}.\n   * Example: \"({quantity} * {price}) * (100 - {discount}) / 100\"\n   */\n  get expression() {\n    return this.getPropertyValue(\"expression\") || \"\";\n  }\n  set expression(val) {\n    this.setPropertyValue(\"expression\", val);\n    this.rerunExpression();\n  }\n  locCalculation() {\n    this.expressionIsRunning = true;\n  }\n  unlocCalculation() {\n    this.expressionIsRunning = false;\n  }\n  resetCalculation() {\n    this.isCalculated = false;\n  }\n  doCalculation(calculatedValues, values, properties) {\n    if (this.isCalculated) return;\n    this.runExpressionCore(calculatedValues, values, properties);\n    this.isCalculated = true;\n  }\n  runExpression(values, properties) {\n    this.runExpressionCore(null, values, properties);\n  }\n  get value() {\n    if (!this.data) return undefined;\n    return this.data.getVariable(this.name);\n  }\n  setValue(val) {\n    if (!this.data) return;\n    this.data.setVariable(this.name, val);\n  }\n  get canRunExpression() {\n    return !!this.data && !this.isLoadingFromJson && !!this.expression && !this.expressionIsRunning && !!this.name;\n  }\n  rerunExpression() {\n    if (!this.canRunExpression) return;\n    this.runExpression(this.data.getFilteredValues(), this.data.getFilteredProperties());\n  }\n  runExpressionCore(calculatedValues, values, properties) {\n    if (!this.canRunExpression) return;\n    this.ensureExpression(values);\n    this.locCalculation();\n    if (!!calculatedValues) {\n      this.runDependentExpressions(calculatedValues, values, properties);\n    }\n    this.expressionRunner.run(values, properties);\n  }\n  runDependentExpressions(calculatedValues, values, properties) {\n    var variables = this.expressionRunner.getVariables();\n    if (!variables) return;\n    for (var i = 0; i < calculatedValues.length; i++) {\n      var calcItem = calculatedValues[i];\n      if (calcItem === this || variables.indexOf(calcItem.name) < 0) continue;\n      calcItem.doCalculation(calculatedValues, values, properties);\n      values[calcItem.name] = calcItem.value;\n    }\n  }\n  ensureExpression(values) {\n    if (!!this.expressionRunner) return;\n    this.expressionRunner = new ExpressionRunner(this.expression);\n    this.expressionRunner.onRunComplete = newValue => {\n      if (!Helpers.isTwoValueEquals(newValue, this.value, false, true, false)) {\n        this.setValue(newValue);\n      }\n      this.unlocCalculation();\n    };\n  }\n}\nSerializer.addClass(\"calculatedvalue\", [{\n  name: \"!name\",\n  isUnique: true\n}, \"expression:expression\", \"includeIntoResult:boolean\"], function () {\n  return new CalculatedValue();\n}, \"base\");\n\n/**\n * Base class for HtmlConditionItem and UrlConditionItem classes.\n */\nclass ExpressionItem extends Base {\n  constructor(expression = null) {\n    super();\n    this.expression = expression;\n  }\n  getType() {\n    return \"expressionitem\";\n  }\n  runCondition(values, properties) {\n    if (!this.expression) return false;\n    return new ConditionRunner(this.expression).run(values, properties);\n  }\n  /**\n   * The expression property. If this expression returns true, then survey will use html property to show on complete page.\n   */\n  get expression() {\n    return this.getPropertyValue(\"expression\", \"\");\n  }\n  set expression(val) {\n    this.setPropertyValue(\"expression\", val);\n  }\n  get locHtml() {\n    return this.getLocalizableString(\"html\");\n  }\n  getLocale() {\n    return !!this.locOwner ? this.locOwner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text, name, item) {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name) {\n    return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    return this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n  getSurvey(isLive = false) {\n    return this.locOwner;\n  }\n}\n/**\n * A class that contains expression and html propeties. It uses in survey.completedHtmlOnCondition array.\n * If the expression returns true then html of this item uses instead of survey.completedHtml property\n * @see SurveyModel.completedHtmlOnCondition\n * @see SurveyModel.completedHtml\n */\nclass HtmlConditionItem extends ExpressionItem {\n  constructor(expression = null, html = null) {\n    super(expression);\n    this.createLocalizableString(\"html\", this);\n    this.html = html;\n  }\n  getType() {\n    return \"htmlconditionitem\";\n  }\n  /**\n   * The html that shows on completed ('Thank you') page. The expression should return true\n   * @see expression\n   */\n  get html() {\n    return this.getLocalizableStringText(\"html\");\n  }\n  set html(value) {\n    this.setLocalizableStringText(\"html\", value);\n  }\n  get locHtml() {\n    return this.getLocalizableString(\"html\");\n  }\n}\n/**\n * A class that contains expression and url propeties. It uses in survey.navigateToUrlOnCondition array.\n * If the expression returns true then url of this item uses instead of survey.navigateToUrl property\n * @see SurveyModel.navigateToUrl\n */\nclass UrlConditionItem extends ExpressionItem {\n  constructor(expression = null, url = null) {\n    super(expression);\n    this.createLocalizableString(\"url\", this);\n    this.url = url;\n  }\n  getType() {\n    return \"urlconditionitem\";\n  }\n  /**\n   * The url that survey navigates to on completing the survey. The expression should return true\n   * @see expression\n   */\n  get url() {\n    return this.getLocalizableStringText(\"url\");\n  }\n  set url(value) {\n    this.setLocalizableStringText(\"url\", value);\n  }\n  get locUrl() {\n    return this.getLocalizableString(\"url\");\n  }\n}\nSerializer.addClass(\"expressionitem\", [\"expression:condition\"], function () {\n  return new ExpressionItem();\n}, \"base\");\nSerializer.addClass(\"htmlconditionitem\", [{\n  name: \"html:html\",\n  serializationProperty: \"locHtml\"\n}], function () {\n  return new HtmlConditionItem();\n}, \"expressionitem\");\nSerializer.addClass(\"urlconditionitem\", [{\n  name: \"url:string\",\n  serializationProperty: \"locUrl\"\n}], function () {\n  return new UrlConditionItem();\n}, \"expressionitem\");\nclass XmlParser {\n  constructor() {\n    this.parser = new DOMParser();\n  }\n  assignValue(target, name, value) {\n    if (Array.isArray(target[name])) {\n      target[name].push(value);\n    } else if (target[name] !== undefined) {\n      target[name] = [target[name]].concat(value);\n    } else if (typeof value === \"object\" && Object.keys(value).length === 1 && Object.keys(value)[0] === name) {\n      target[name] = value[name];\n    } else {\n      target[name] = value;\n    }\n  }\n  xml2Json(xmlNode, result) {\n    if (xmlNode.children && xmlNode.children.length > 0) {\n      for (let i = 0; i < xmlNode.children.length; i++) {\n        let childNode = xmlNode.children[i];\n        let childObject = {};\n        this.xml2Json(childNode, childObject);\n        this.assignValue(result, childNode.nodeName, childObject);\n      }\n    } else {\n      this.assignValue(result, xmlNode.nodeName, xmlNode.textContent);\n    }\n  }\n  parseXmlString(xmlString) {\n    let xmlRoot = this.parser.parseFromString(xmlString, \"text/xml\");\n    let json = {};\n    this.xml2Json(xmlRoot, json);\n    return json;\n  }\n}\n/**\n * Configures access to a RESTful service that returns choices for [Checkbox](https://surveyjs.io/Examples/Library?id=questiontype-checkbox), [Dropdown](https://surveyjs.io/Examples/Library?id=questiontype-dropdown), [Radiogroup](https://surveyjs.io/Examples/Library?id=questiontype-radiogroup), and other multiple-choice question types.\n *\n * Use the following properties to configure this object:\n *\n * ```js\n * {\n *   url: \"http://...\", // A RESTful service's URL.\n *   valueName: \"value\", // Specifies which field contains choice values.\n *   titleName: \"title\", // Specifies which field contains display texts for choice values.\n *   imageLinkName: \"imageUrl\", // Specifies which field contains image URLs. Used in Image Picker questions.\n *   // Path to the array of choices. Specify `path` only if the array of choices is nested within the object returned by the service.\n *   // The following path separators are allowed: semicolon `;`, comma `,`.\n *   path: \"myNestedArray\"\n * }\n * ```\n *\n * Typically, you should assign this object to a question's [`choicesByUrl`](https://surveyjs.io/Documentation/Library?id=QuestionSelectBase#choicesByUrl) property. You can also specify additional application-wide settings using the [`settings.web`](https://surveyjs.io/form-library/documentation/api-reference/settings#web) object.\n */\nclass ChoicesRestful extends Base {\n  static get EncodeParameters() {\n    return settings.web.encodeUrlParams;\n  }\n  static set EncodeParameters(val) {\n    settings.web.encodeUrlParams = val;\n  }\n  static clearCache() {\n    ChoicesRestful.itemsResult = {};\n    ChoicesRestful.sendingSameRequests = {};\n  }\n  static addSameRequest(obj) {\n    if (!obj.isUsingCache) return false;\n    var hash = obj.objHash;\n    var res = ChoicesRestful.sendingSameRequests[hash];\n    if (!res) {\n      ChoicesRestful.sendingSameRequests[obj.objHash] = [];\n      return false;\n    }\n    res.push(obj);\n    obj.isRunningValue = true;\n    return true;\n  }\n  static unregisterSameRequests(obj, items) {\n    if (!obj.isUsingCache) return;\n    var res = ChoicesRestful.sendingSameRequests[obj.objHash];\n    delete ChoicesRestful.sendingSameRequests[obj.objHash];\n    if (!res) return;\n    for (var i = 0; i < res.length; i++) {\n      res[i].isRunningValue = false;\n      if (!!res[i].getResultCallback) {\n        res[i].getResultCallback(items);\n      }\n    }\n  }\n  static get onBeforeSendRequest() {\n    return settings.web.onBeforeRequestChoices;\n  }\n  static set onBeforeSendRequest(val) {\n    settings.web.onBeforeRequestChoices = val;\n  }\n  static getCachedItemsResult(obj) {\n    var hash = obj.objHash;\n    var res = ChoicesRestful.itemsResult[hash];\n    if (!res) return false;\n    if (obj.getResultCallback) {\n      obj.getResultCallback(res);\n    }\n    return true;\n  }\n  constructor() {\n    super();\n    this.lastObjHash = \"\";\n    this.isRunningValue = false;\n    this.processedUrl = \"\";\n    this.processedPath = \"\";\n    this.isUsingCacheFromUrl = undefined;\n    this.error = null;\n    this.createItemValue = value => {\n      return new ItemValue(value);\n    };\n    this.registerPropertyChangedHandlers([\"url\"], () => {\n      if (this.owner) this.owner.setPropertyValue(\"isUsingRestful\", !!this.url);\n    });\n  }\n  getSurvey(live = false) {\n    return !!this.owner ? this.owner.survey : null;\n  }\n  run(textProcessor = null) {\n    if (!this.url || !this.getResultCallback) return;\n    this.processedText(textProcessor);\n    if (!this.processedUrl) {\n      this.doEmptyResultCallback({});\n      this.lastObjHash = this.objHash;\n      return;\n    }\n    if (this.lastObjHash === this.objHash) return;\n    this.lastObjHash = this.objHash;\n    this.error = null;\n    if (this.useChangedItemsResults()) return;\n    if (ChoicesRestful.addSameRequest(this)) return;\n    this.sendRequest();\n  }\n  get isUsingCache() {\n    if (this.isUsingCacheFromUrl === true) return true;\n    if (this.isUsingCacheFromUrl === false) return false;\n    return settings.web.cacheLoadedChoices;\n  }\n  get isRunning() {\n    return this.getIsRunning();\n  }\n  getIsRunning() {\n    return this.isRunningValue;\n  }\n  get isWaitingForParameters() {\n    return this.url && !this.processedUrl;\n  }\n  useChangedItemsResults() {\n    return ChoicesRestful.getCachedItemsResult(this);\n  }\n  doEmptyResultCallback(serverResult) {\n    var items = [];\n    if (this.updateResultCallback) {\n      items = this.updateResultCallback(items, serverResult);\n    }\n    this.getResultCallback(items);\n  }\n  processedText(textProcessor) {\n    var urlText = this.url;\n    if (!!urlText) {\n      urlText = urlText.replace(ChoicesRestful.cacheText, \"\").replace(ChoicesRestful.noCacheText, \"\");\n    }\n    if (textProcessor) {\n      var pUrl = textProcessor.processTextEx({\n        text: urlText,\n        runAtDesign: true\n      });\n      var pPath = textProcessor.processTextEx({\n        text: this.path,\n        runAtDesign: true\n      });\n      if (!pUrl.hasAllValuesOnLastRun || !pPath.hasAllValuesOnLastRun) {\n        this.processedUrl = \"\";\n        this.processedPath = \"\";\n      } else {\n        this.processedUrl = pUrl.text;\n        this.processedPath = pPath.text;\n      }\n    } else {\n      this.processedUrl = urlText;\n      this.processedPath = this.path;\n    }\n    if (this.onProcessedUrlCallback) {\n      this.onProcessedUrlCallback(this.processedUrl, this.processedPath);\n    }\n  }\n  parseResponse(response) {\n    let parsedResponse;\n    if (!!response && typeof response.indexOf === \"function\" && response.indexOf(\"<\") === 0) {\n      var parser = new XmlParser();\n      parsedResponse = parser.parseXmlString(response);\n    } else {\n      try {\n        parsedResponse = JSON.parse(response);\n      } catch (_a) {\n        parsedResponse = (response || \"\").split(\"\\n\").map(s => s.trim(\" \")).filter(s => !!s);\n      }\n    }\n    return parsedResponse;\n  }\n  sendRequest() {\n    if (typeof XMLHttpRequest !== \"undefined\") {\n      this.sendXmlHttpRequest();\n    } else if (typeof fetch !== \"undefined\") {\n      this.sendFetchRequest();\n    } else {\n      this.error = new WebRequestError(\"The browser does not support XMLHttpRequest or fetch API\", \"\", this.owner);\n      this.doEmptyResultCallback(\"\");\n    }\n  }\n  sendXmlHttpRequest() {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", this.processedUrl);\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    var self = this;\n    var loadingObjHash = this.objHash;\n    xhr.onload = function () {\n      self.beforeLoadRequest();\n      if (xhr.status === 200) {\n        self.onLoad(self.parseResponse(xhr.response), loadingObjHash);\n      } else {\n        self.onError(xhr.statusText, xhr.responseText);\n      }\n    };\n    var options = {\n      url: this.processedUrl,\n      request: xhr\n    };\n    if (!!settings.web.onBeforeRequestChoices) {\n      settings.web.onBeforeRequestChoices(this, options);\n    }\n    this.beforeSendRequest();\n    options.request.send();\n  }\n  sendFetchRequest() {\n    const self = this;\n    const loadingObjHash = this.objHash;\n    let url = this.processedUrl;\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    const options = {\n      url,\n      fetchOptions\n    };\n    if (settings.web.onBeforeRequestChoices) {\n      settings.web.onBeforeRequestChoices(this, options);\n    }\n    this.beforeSendRequest();\n    fetch(options.url, options.fetchOptions).then(response => {\n      self.beforeLoadRequest();\n      if (response.status === 200) {\n        return response.text().then(text => {\n          self.onLoad(self.parseResponse(text), loadingObjHash);\n        });\n      } else {\n        return response.text().then(errorText => {\n          self.onError(response.statusText, errorText);\n        });\n      }\n    }).catch(error => {\n      self.onError(error.message, \"\");\n    });\n  }\n  getType() {\n    return \"choicesByUrl\";\n  }\n  get isEmpty() {\n    return !this.url && !this.path;\n  }\n  getCustomPropertiesNames() {\n    var properties = this.getCustomProperties();\n    var res = new Array();\n    for (var i = 0; i < properties.length; i++) {\n      res.push(this.getCustomPropertyName(properties[i].name));\n    }\n    return res;\n  }\n  getCustomPropertyName(propertyName) {\n    return propertyName + \"Name\";\n  }\n  getCustomProperties() {\n    var properties = Serializer.getProperties(this.itemValueType);\n    var res = [];\n    for (var i = 0; i < properties.length; i++) {\n      if (properties[i].name === \"value\" || properties[i].name === \"text\" || properties[i].name === \"visibleIf\" || properties[i].name === \"enableIf\") continue;\n      res.push(properties[i]);\n    }\n    return res;\n  }\n  getAllPropertiesNames() {\n    const res = new Array();\n    Serializer.getPropertiesByObj(this).forEach(prop => res.push(prop.name));\n    this.getCustomPropertiesNames().forEach(prop => res.push(prop));\n    return res;\n  }\n  setData(json) {\n    if (!json) json = {};\n    this.getAllPropertiesNames().forEach(name => {\n      this[name] = json[name];\n    });\n    if (json.attachOriginalItems) {\n      this.attachData = json.attachOriginalItems;\n    }\n  }\n  getData() {\n    const res = {};\n    let hasValue = false;\n    this.getAllPropertiesNames().forEach(name => {\n      const val = this[name];\n      if (!this.isValueEmpty(val) && val !== this.getDefaultPropertyValue(name)) {\n        res[name] = val;\n        hasValue = true;\n      }\n    });\n    return hasValue ? res : null;\n  }\n  /**\n   * A RESTful service's URL.\n   *\n   * This property supports [dynamic URLs](https://surveyjs.io/Documentation/Library?id=design-survey-conditional-logic#dynamic-texts). For example, the URL below depends on the `region` question's value. When the value changes, the survey automatically loads a new dataset that corresponds to the selected region.\n   *\n   * ```js\n   * url: \"https://surveyjs.io/api/CountriesExample?region={region}\"\n   * ```\n   *\n   * [View Demo](https://surveyjs.io/Examples/Library/?id=questiontype-dropdownrestfull (linkStyle))\n   * @see path\n   * @see valueName\n   * @see titleName\n   */\n  get url() {\n    return this.getPropertyValue(\"url\") || \"\";\n  }\n  set url(val) {\n    this.setPropertyValue(\"url\", val);\n    this.isUsingCacheFromUrl = undefined;\n    if (!val) return;\n    if (val.indexOf(ChoicesRestful.cacheText) > -1) {\n      this.isUsingCacheFromUrl = true;\n    } else {\n      if (val.indexOf(ChoicesRestful.noCacheText) > -1) {\n        this.isUsingCacheFromUrl = false;\n      }\n    }\n  }\n  /**\n   * Path to the array of choices. The following path separators are allowed: semicolon `;`, comma `,`.\n   *\n   * Specify this property only if the array of choices is nested within the object returned by the service. For example, the service returns the following object:\n   *\n   * ```js\n   * {\n   *   countries: [ ... ],\n   *   capitals: [ ... ]\n   * }\n   * ```\n   *\n   * To populate choices with values from the `countries` array, set the `path` property to `\"countries\"`. To use the `capitals` array, set this property to `\"capitals\"`.\n   * @see url\n   * @see valueName\n   * @see titleName\n   */\n  get path() {\n    return this.getPropertyValue(\"path\") || \"\";\n  }\n  set path(val) {\n    this.setPropertyValue(\"path\", val);\n  }\n  /**\n   * Specifies which property in the obtained data object contains choice values.\n   *\n   * [View Demo](https://surveyjs.io/Examples/Library/?id=questiontype-dropdownrestfull (linkStyle))\n   *\n   * @see url\n   * @see path\n   * @see titleName\n   */\n  get valueName() {\n    return this.getPropertyValue(\"valueName\") || \"\";\n  }\n  set valueName(val) {\n    this.setPropertyValue(\"valueName\", val);\n  }\n  /**\n   * Specifies which property in the obtained data object contains display texts for choices.\n   *\n   * @see url\n   * @see path\n   * @see valueName\n   */\n  get titleName() {\n    return this.getPropertyValue(\"titleName\") || \"\";\n  }\n  set titleName(val) {\n    this.setPropertyValue(\"titleName\", val);\n  }\n  /**\n   * Specifies which property in the obtained data object contains image URLs. Used only in [Image Picker](https://surveyjs.io/Examples/Library?id=questiontype-imagepicker) questions.\n   *\n   * @see url\n   * @see path\n   * @see valueName\n   */\n  get imageLinkName() {\n    return this.getPropertyValue(\"imageLinkName\") || \"\";\n  }\n  set imageLinkName(val) {\n    this.setPropertyValue(\"imageLinkName\", val);\n  }\n  /**\n   * Specifies whether the service is allowed to return an empty response or an empty array in a response.\n   *\n   * Default value: `false`\n   */\n  get allowEmptyResponse() {\n    return this.getPropertyValue(\"allowEmptyResponse\");\n  }\n  set allowEmptyResponse(val) {\n    this.setPropertyValue(\"allowEmptyResponse\", val);\n  }\n  get attachOriginalItems() {\n    return this.attachData;\n  }\n  set attachOriginalItems(val) {\n    this.attachData = val;\n  }\n  /**\n   * Specifies whether to attach original data objects to choice items.\n   *\n   * Default value: `false`\n   *\n   * If you enable this property, original data objects will be stored in the `data` property of choice items. For instance, the following code shows how to access a data object of a selected choice item in a Dropdown question:\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   *\n   * const surveyJson = {\n   *   \"elements\": [{\n   *     \"type\": \"dropdown\",\n   *     \"name\": \"country\",\n   *     \"title\": \"Select a country\",\n   *     \"choicesByUrl\": {\n   *       \"url\": \"https://surveyjs.io/api/CountriesExample\",\n   *       \"valueName\": \"name\",\n   *       \"attachData\": true\n   *     }\n   *   }]\n   * }\n   *\n   * const survey = new Model(surveyJson);\n   *\n   * function retrieveItemData(survey, qName) {\n   *   const q = survey.getQuestionByName(qName);\n   *   if (q && q.selectedItem) {\n   *     return q.selectedItem.data;\n   *   }\n   *   return null;\n   * }\n   * ```\n   */\n  get attachData() {\n    return this.getPropertyValue(\"attachData\");\n  }\n  set attachData(val) {\n    this.setPropertyValue(\"attachData\", val);\n  }\n  get itemValueType() {\n    if (!this.owner) return \"itemvalue\";\n    var prop = Serializer.findProperty(this.owner.getType(), \"choices\");\n    if (!prop) return \"itemvalue\";\n    if (prop.type == \"itemvalue[]\") return \"itemvalue\";\n    return prop.type;\n  }\n  clear() {\n    this.setData(undefined);\n  }\n  beforeSendRequest() {\n    this.isRunningValue = true;\n    if (!!this.beforeSendRequestCallback) {\n      this.beforeSendRequestCallback();\n    }\n  }\n  beforeLoadRequest() {\n    this.isRunningValue = false;\n  }\n  onLoad(result, loadingObjHash = null) {\n    if (!loadingObjHash) {\n      loadingObjHash = this.objHash;\n    }\n    var items = new Array();\n    var updatedResult = this.getResultAfterPath(result);\n    if (updatedResult && updatedResult[\"length\"]) {\n      for (var i = 0; i < updatedResult.length; i++) {\n        var itemValue = updatedResult[i];\n        if (!itemValue) continue;\n        var value = !!this.getItemValueCallback ? this.getItemValueCallback(itemValue) : this.getValue(itemValue);\n        var item = this.createItemValue(value);\n        this.setTitle(item, itemValue);\n        this.setCustomProperties(item, itemValue);\n        if (this.attachData) {\n          item.originalItem = itemValue;\n          item.data = itemValue;\n        }\n        var imageLink = this.getImageLink(itemValue);\n        if (!!imageLink) {\n          item.imageLink = imageLink;\n        }\n        items.push(item);\n      }\n    } else {\n      if (!this.allowEmptyResponse) {\n        this.error = new WebRequestEmptyError(null, this.owner);\n      }\n    }\n    if (this.updateResultCallback) {\n      items = this.updateResultCallback(items, result);\n    }\n    if (this.isUsingCache) {\n      ChoicesRestful.itemsResult[loadingObjHash] = items;\n    }\n    this.callResultCallback(items, loadingObjHash);\n    ChoicesRestful.unregisterSameRequests(this, items);\n  }\n  callResultCallback(items, loadingObjHash) {\n    if (loadingObjHash != this.objHash) return;\n    this.getResultCallback(items);\n  }\n  setCustomProperties(item, itemValue) {\n    var properties = this.getCustomProperties();\n    for (var i = 0; i < properties.length; i++) {\n      var prop = properties[i];\n      var val = this.getValueCore(itemValue, this.getPropertyBinding(prop.name));\n      if (!this.isValueEmpty(val)) {\n        item[prop.name] = val;\n      }\n    }\n  }\n  getPropertyBinding(propertyName) {\n    if (this[this.getCustomPropertyName(propertyName)]) return this[this.getCustomPropertyName(propertyName)];\n    if (this[propertyName]) return this[propertyName];\n    return propertyName;\n  }\n  onError(status, response) {\n    this.error = new WebRequestError(status, response, this.owner);\n    this.doEmptyResultCallback(response);\n    ChoicesRestful.unregisterSameRequests(this, []);\n  }\n  getResultAfterPath(result) {\n    if (!result) return result;\n    if (!this.processedPath) return result;\n    var pathes = this.getPathes();\n    for (var i = 0; i < pathes.length; i++) {\n      result = result[pathes[i]];\n      if (!result) return null;\n    }\n    return result;\n  }\n  getPathes() {\n    var pathes = [];\n    if (this.processedPath.indexOf(\";\") > -1) {\n      pathes = this.path.split(\";\");\n    } else if (this.processedPath.indexOf(\",\") > -1) {\n      pathes = this.processedPath.split(\",\");\n    } else {\n      pathes = this.processedPath.split(\".\");\n    }\n    if (pathes.length == 0) pathes.push(this.processedPath);\n    return pathes;\n  }\n  getValue(item) {\n    if (!item) return null;\n    if (this.valueName) return this.getValueCore(item, this.valueName);\n    if (!(item instanceof Object)) return item;\n    var len = Object.keys(item).length;\n    if (len < 1) return null;\n    return item[Object.keys(item)[0]];\n  }\n  setTitle(item, itemValue) {\n    var title = this.titleName ? this.titleName : \"title\";\n    var val = this.getValueCore(itemValue, title);\n    if (!val) return;\n    if (typeof val === \"string\") {\n      item.text = val;\n    } else {\n      item.locText.setJson(val);\n    }\n  }\n  getImageLink(item) {\n    var imageLink = this.imageLinkName ? this.imageLinkName : \"imageLink\";\n    return this.getValueCore(item, imageLink);\n  }\n  getValueCore(item, property) {\n    if (!item) return null;\n    if (property.indexOf(\".\") < 0) return item[property];\n    var properties = property.split(\".\");\n    for (var i = 0; i < properties.length; i++) {\n      item = item[properties[i]];\n      if (!item) return null;\n    }\n    return item;\n  }\n  get objHash() {\n    return this.processedUrl + \";\" + this.processedPath + \";\" + this.valueName + \";\" + this.titleName + \";\" + this.imageLinkName;\n  }\n}\nChoicesRestful.cacheText = \"{CACHE}\";\nChoicesRestful.noCacheText = \"{NOCACHE}\";\nChoicesRestful.itemsResult = {};\nChoicesRestful.sendingSameRequests = {};\n/**\n * @deprecated Use `ChoicesRestful` instead.\n */\nclass ChoicesRestfull extends ChoicesRestful {\n  static get EncodeParameters() {\n    return ChoicesRestful.EncodeParameters;\n  }\n  static set EncodeParameters(val) {\n    ChoicesRestful.EncodeParameters = val;\n  }\n  static clearCache() {\n    ChoicesRestful.clearCache();\n  }\n  static get onBeforeSendRequest() {\n    return settings.web.onBeforeRequestChoices;\n  }\n  static set onBeforeSendRequest(val) {\n    settings.web.onBeforeRequestChoices = val;\n  }\n}\nSerializer.addClass(\"choicesByUrl\", [\"url\", \"path\", \"valueName\", \"titleName\", {\n  name: \"imageLinkName\",\n  visibleIf: function (obj) {\n    return !!obj && !!obj.owner && obj.owner.getType() == \"imagepicker\";\n  }\n}, {\n  name: \"allowEmptyResponse:boolean\"\n}, {\n  name: \"attachData:boolean\",\n  alternativeName: \"attachOriginalItems\",\n  visible: false\n}], function () {\n  return new ChoicesRestful();\n});\n\n/**\n * A base class for all matrix question types.\n */\nclass QuestionMatrixBaseModel extends Question {\n  createColumnValues() {\n    return this.createItemValues(\"columns\");\n  }\n  constructor(name) {\n    super(name);\n    this.generatedVisibleRows = null;\n    this.generatedTotalRow = null;\n    this.filteredRows = null;\n    this.columns = this.createColumnValues();\n    this.rows = this.createItemValues(\"rows\");\n  }\n  getType() {\n    return \"matrixbase\";\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.updateVisibilityBasedOnRows();\n  }\n  get isCompositeQuestion() {\n    return true;\n  }\n  /**\n   * Specifies whether to display the table header that contains column captions.\n   *\n   * Default value: `true`\n   */\n  get showHeader() {\n    return this.getPropertyValue(\"showHeader\");\n  }\n  set showHeader(val) {\n    this.setPropertyValue(\"showHeader\", val);\n  }\n  /**\n   * An array of matrix columns.\n   *\n   * For a Single-Select Matrix, the `columns` array can contain configuration objects with the `text` (display value) and `value` (value to be saved in survey results) properties. Alternatively, the array can contain primitive values that will be used as both the display values and values to be saved in survey results.\n   *\n   * [Single-Select Matrix Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   *\n   * For a Multi-Select Matrix or Dynamic Matrix, the `columns` array should contain configuration objects with properties described in the [`MatrixDropdownColumn`](https://surveyjs.io/form-library/documentation/api-reference/multi-select-matrix-column-values) API Reference section.\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/ (linkStyle))\n   */\n  get columns() {\n    return this.getPropertyValue(\"columns\");\n  }\n  set columns(newValue) {\n    this.setPropertyValue(\"columns\", newValue);\n  }\n  get visibleColumns() {\n    const res = [];\n    this.columns.forEach(col => {\n      if (this.isColumnVisible(col)) {\n        res.push(col);\n      }\n    });\n    return res;\n  }\n  isColumnVisible(column) {\n    return column.isVisible;\n  }\n  /**\n   * An array of matrix rows.\n   *\n   * This array can contain primitive values or objects with the `text` (display value) and `value` (value to be saved in survey results) properties.\n   *\n   * [Single-Select Matrix Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   */\n  get rows() {\n    return this.getPropertyValue(\"rows\");\n  }\n  set rows(newValue) {\n    var newRows = this.processRowsOnSet(newValue);\n    this.setPropertyValue(\"rows\", newRows);\n  }\n  processRowsOnSet(newRows) {\n    return newRows;\n  }\n  getVisibleRows() {\n    return [];\n  }\n  /**\n   * Returns an array of visible matrix rows.\n   * @see rowsVisibleIf\n   */\n  get visibleRows() {\n    return this.getVisibleRows();\n  }\n  /**\n   * A Boolean expression that is evaluated against each matrix row. If the expression evaluates to `false`, the row becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current row in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/change-visibility-of-rows-in-matrix-table/ (linkStyle))\n   * @see visibleRows\n   * @see columnsVisibleIf\n   */\n  get rowsVisibleIf() {\n    return this.getPropertyValue(\"rowsVisibleIf\", \"\");\n  }\n  set rowsVisibleIf(val) {\n    this.setPropertyValue(\"rowsVisibleIf\", val);\n    if (!this.isLoadingFromJsonValue) {\n      this.runCondition(this.getDataFilteredValues(), this.getDataFilteredProperties());\n    }\n  }\n  /**\n   * A Boolean expression that is evaluated against each matrix column. If the expression evaluates to `false`, the column becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current column in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/change-visibility-of-rows-in-matrix-table/ (linkStyle))\n   * @see rowsVisibleIf\n   */\n  get columnsVisibleIf() {\n    return this.getPropertyValue(\"columnsVisibleIf\", \"\");\n  }\n  set columnsVisibleIf(val) {\n    this.setPropertyValue(\"columnsVisibleIf\", val);\n    if (!this.isLoadingFromJson) {\n      this.runCondition(this.getDataFilteredValues(), this.getDataFilteredProperties());\n    }\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    this.runItemsCondition(values, properties);\n  }\n  onColumnsChanged() {}\n  onRowsChanged() {\n    this.updateVisibilityBasedOnRows();\n    this.fireCallback(this.visibleRowsChangedCallback);\n  }\n  updateVisibilityBasedOnRows() {\n    if (this.hideIfRowsEmpty) {\n      this.onVisibleChanged();\n    }\n  }\n  isVisibleCore() {\n    var _a;\n    const res = super.isVisibleCore();\n    if (!res || !this.hideIfRowsEmpty) return res;\n    return ((_a = this.visibleRows) === null || _a === void 0 ? void 0 : _a.length) > 0;\n  }\n  shouldRunColumnExpression() {\n    return !this.survey || !this.survey.areInvisibleElementsShowing;\n  }\n  hasRowsAsItems() {\n    return true;\n  }\n  runItemsCondition(values, properties) {\n    let hasChanges = this.hasRowsAsItems() && this.runConditionsForRows(values, properties);\n    const hasColumnsChanged = this.runConditionsForColumns(values, properties);\n    hasChanges = hasColumnsChanged || hasChanges;\n    if (hasChanges) {\n      if (this.isClearValueOnHidden && hasColumnsChanged) {\n        this.clearInvisibleColumnValues();\n      }\n      this.clearGeneratedRows();\n      if (hasColumnsChanged) {\n        this.onColumnsChanged();\n      }\n      this.onRowsChanged();\n    }\n  }\n  isRowsFiltered() {\n    return !!this.filteredRows;\n  }\n  clearGeneratedRows() {\n    this.generatedVisibleRows = null;\n  }\n  createRowsVisibleIfRunner() {\n    return null;\n  }\n  runConditionsForRows(values, properties) {\n    const showInvisibile = !!this.survey && this.survey.areInvisibleElementsShowing;\n    const runner = !showInvisibile ? this.createRowsVisibleIfRunner() : null;\n    this.filteredRows = [];\n    const hasChanged = ItemValue.runConditionsForItems(this.rows, this.filteredRows, runner, values, properties, !showInvisibile);\n    ItemValue.runEnabledConditionsForItems(this.rows, undefined, values, properties);\n    if (this.filteredRows.length === this.rows.length) {\n      this.filteredRows = null;\n    }\n    return hasChanged;\n  }\n  runConditionsForColumns(values, properties) {\n    const useColumnsExpression = !!this.survey && !this.survey.areInvisibleElementsShowing;\n    const runner = useColumnsExpression && !!this.columnsVisibleIf ? new ConditionRunner(this.columnsVisibleIf) : null;\n    return ItemValue.runConditionsForItems(this.columns, undefined, runner, values, properties, this.shouldRunColumnExpression());\n  }\n  clearInvisibleColumnValues() {}\n  clearInvisibleValuesInRows() {}\n  needResponsiveWidth() {\n    //TODO: make it mor intelligent\n    return true;\n  }\n  get columnsAutoWidth() {\n    return !this.isMobile && !this.columns.some(col => !!col.width);\n  }\n  getTableCss() {\n    var _a;\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.columnsAutoWidth, this.columnsAutoWidth).append(this.cssClasses.noHeader, !this.showHeader).append(this.cssClasses.hasFooter, !!((_a = this.renderedTable) === null || _a === void 0 ? void 0 : _a.showAddRowOnBottom)).append(this.cssClasses.rootAlternateRows, this.alternateRows).append(this.cssClasses.rootVerticalAlignTop, this.verticalAlign === \"top\").append(this.cssClasses.rootVerticalAlignMiddle, this.verticalAlign === \"middle\").toString();\n  }\n  /**\n   * Minimum column width in CSS values.\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   *\n   * [Dynamic Matrix Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see width\n   */\n  get columnMinWidth() {\n    return this.getPropertyValue(\"columnMinWidth\") || \"\";\n  }\n  set columnMinWidth(val) {\n    this.setPropertyValue(\"columnMinWidth\", val);\n  }\n  /**\n   * A width for the column that displays row titles (first column). Accepts CSS values.\n   */\n  get rowTitleWidth() {\n    return this.getPropertyValue(\"rowTitleWidth\") || \"\";\n  }\n  set rowTitleWidth(val) {\n    this.setPropertyValue(\"rowTitleWidth\", val);\n  }\n  /**\n   * Specifies how to arrange matrix questions.\n   *\n   * Possible values:\n   *\n   * - `\"table\"` - Displays matrix questions in a table.\n   * - `\"list\"` - Displays matrix questions one under another as a list.\n   * - `\"auto\"` (default) - Uses the `\"table\"` mode if the survey has sufficient width to fit the table or the `\"list\"` mode otherwise.\n   */\n  set displayMode(val) {\n    this.setPropertyValue(\"displayMode\", val);\n  }\n  get displayMode() {\n    return this.getPropertyValue(\"displayMode\");\n  }\n  //a11y\n  getCellAriaLabel(row, column, directRowTitle) {\n    let rowTitle = row.locText && row.locText.renderedHtml ? row.locText.renderedHtml : \"\";\n    if (directRowTitle) rowTitle = directRowTitle;\n    const columnTitle = column.locTitle && column.locTitle.renderedHtml ? column.locTitle.renderedHtml : \"\";\n    const rowString = (this.getLocalizationString(\"matrix_row\") || \"row\").toLocaleLowerCase();\n    const columnString = (this.getLocalizationString(\"matrix_column\") || \"column\").toLocaleLowerCase();\n    return `${rowString} ${rowTitle}, ${columnString} ${columnTitle}`;\n  }\n  get isNewA11yStructure() {\n    return true;\n  }\n  // EO a11y\n  getIsMobile() {\n    if (this.displayMode == \"auto\") return super.getIsMobile();\n    return this.displayMode === \"list\";\n  }\n}\n__decorate([property()], QuestionMatrixBaseModel.prototype, \"verticalAlign\", void 0);\n__decorate([property()], QuestionMatrixBaseModel.prototype, \"alternateRows\", void 0);\nSerializer.addClass(\"matrixbase\", [{\n  name: \"showCommentArea:switch\",\n  layout: \"row\",\n  visible: true,\n  category: \"general\"\n}, \"columnsVisibleIf:condition\", \"rowsVisibleIf:condition\", \"columnMinWidth\", {\n  name: \"showHeader:boolean\",\n  default: true\n}, {\n  name: \"verticalAlign\",\n  choices: [\"top\", \"middle\"],\n  default: \"middle\"\n}, {\n  name: \"alternateRows:boolean\",\n  default: false\n}, {\n  name: \"displayMode\",\n  default: \"auto\",\n  choices: [\"auto\", \"table\", \"list\"],\n  visible: false\n}], undefined, \"question\");\nclass TextPreProcessorItem {}\nclass TextPreProcessorValue {\n  constructor(name, returnDisplayValue) {\n    this.name = name;\n    this.returnDisplayValue = returnDisplayValue;\n    this.isExists = false;\n    this.canProcess = true;\n  }\n}\nclass TextPreProcessor {\n  constructor() {\n    this._unObservableValues = [undefined];\n  }\n  get hasAllValuesOnLastRunValue() {\n    return this._unObservableValues[0];\n  }\n  set hasAllValuesOnLastRunValue(val) {\n    this._unObservableValues[0] = val;\n  }\n  process(text, returnDisplayValue, doEncoding, replaceUndefinedValues) {\n    this.hasAllValuesOnLastRunValue = true;\n    if (!text) return text;\n    if (!this.onProcess) return text;\n    const items = this.getItems(text);\n    for (let i = items.length - 1; i >= 0; i--) {\n      const item = items[i];\n      const name = this.getName(text.substring(item.start + 1, item.end));\n      if (!!name) {\n        const textValue = new TextPreProcessorValue(name, returnDisplayValue === true);\n        this.onProcess(textValue);\n        if (!textValue.isExists) {\n          if (textValue.canProcess) {\n            this.hasAllValuesOnLastRunValue = false;\n          }\n        }\n        if (textValue.isExists || replaceUndefinedValues) {\n          if (Helpers.isValueEmpty(textValue.value)) {\n            this.hasAllValuesOnLastRunValue = false;\n          }\n          var replacedValue = !Helpers.isValueEmpty(textValue.value) ? textValue.value : \"\";\n          if (doEncoding) {\n            replacedValue = encodeURIComponent(replacedValue);\n          }\n          text = text.substring(0, item.start) + replacedValue + text.substring(item.end + 1);\n        }\n      }\n    }\n    return text;\n  }\n  processValue(name, returnDisplayValue) {\n    var textValue = new TextPreProcessorValue(name, returnDisplayValue);\n    if (!!this.onProcess) {\n      this.onProcess(textValue);\n    }\n    return textValue;\n  }\n  get hasAllValuesOnLastRun() {\n    return !!this.hasAllValuesOnLastRunValue;\n  }\n  processText(text, returnDisplayValue) {\n    return this.process(text, returnDisplayValue);\n  }\n  processTextEx(params) {\n    const res = {\n      hasAllValuesOnLastRun: true,\n      text: params.text\n    };\n    res.text = this.process(params.text, params.returnDisplayValue, params.doEncoding, params.replaceUndefinedValues);\n    res.hasAllValuesOnLastRun = this.hasAllValuesOnLastRun;\n    return res;\n  }\n  getItems(text) {\n    var items = [];\n    var length = text.length;\n    var start = -1;\n    var ch = \"\";\n    for (var i = 0; i < length; i++) {\n      ch = text[i];\n      if (ch == \"{\") start = i;\n      if (ch == \"}\") {\n        if (start > -1) {\n          var item = new TextPreProcessorItem();\n          item.start = start;\n          item.end = i;\n          if (this.isValidItemName(text.substring(start + 1, i - 1))) {\n            items.push(item);\n          }\n        }\n        start = -1;\n      }\n    }\n    return items;\n  }\n  isValidItemName(name) {\n    return !!name && name.indexOf(\":\") < 0;\n  }\n  getName(name) {\n    if (!name) return;\n    return name.trim();\n  }\n}\nclass QuestionTextProcessor {\n  constructor(variableName) {\n    this.variableName = variableName;\n    this.textPreProcessor = new TextPreProcessor();\n    this.textPreProcessor.onProcess = textValue => {\n      this.getProcessedTextValue(textValue);\n    };\n  }\n  processValue(name, returnDisplayValue) {\n    return this.textPreProcessor.processValue(name, returnDisplayValue);\n  }\n  get survey() {\n    return null;\n  }\n  get panel() {\n    return null;\n  }\n  getValues() {\n    return !!this.panel ? this.panel.getValue() : null;\n  }\n  getQuestionByName(name) {\n    return !!this.panel ? this.panel.getQuestionByValueName(name) : null;\n  }\n  getParentTextProcessor() {\n    return null;\n  }\n  onCustomProcessText(textValue) {\n    return false;\n  }\n  getQuestionDisplayText(question) {\n    return question.displayValue;\n  }\n  //ITextProcessor\n  getProcessedTextValue(textValue) {\n    if (!textValue) return;\n    if (this.onCustomProcessText(textValue)) return;\n    var firstName = new ProcessValue().getFirstName(textValue.name);\n    textValue.isExists = firstName == this.variableName;\n    textValue.canProcess = textValue.isExists;\n    if (!textValue.canProcess) return;\n    //name should start with the variable name\n    textValue.name = textValue.name.replace(this.variableName + \".\", \"\");\n    var firstName = new ProcessValue().getFirstName(textValue.name);\n    var question = this.getQuestionByName(firstName);\n    var values = {};\n    if (question) {\n      values[firstName] = textValue.returnDisplayValue ? this.getQuestionDisplayText(question) : question.value;\n    } else {\n      const allValues = this.getValues();\n      if (allValues) {\n        values[firstName] = allValues[firstName];\n      }\n    }\n    textValue.value = new ProcessValue().getValue(textValue.name, values);\n  }\n  processText(text, returnDisplayValue) {\n    const params = {\n      text: text,\n      returnDisplayValue: returnDisplayValue\n    };\n    return this.processTextEx(params).text;\n  }\n  processTextEx(params) {\n    var _a;\n    const res = {\n      hasAllValuesOnLastRun: true,\n      text: params.text\n    };\n    if (!params.runAtDesign && ((_a = this.survey) === null || _a === void 0 ? void 0 : _a.isDesignMode)) return res;\n    const processors = new Array();\n    this.addTextPreProcessor(processors, this.textPreProcessor);\n    this.addTextPreProcessor(processors, this.getParentTextProcessor());\n    this.addTextPreProcessor(processors, this.survey);\n    for (let i = 0; i < processors.length; i++) {\n      const processor = processors[i];\n      params.text = res.text;\n      params.doEncoding = params.doEncoding || false;\n      const processorRes = processor.processTextEx(params);\n      res.text = processorRes.text;\n      res.hasAllValuesOnLastRun = res.hasAllValuesOnLastRun && processorRes.hasAllValuesOnLastRun;\n    }\n    return res;\n  }\n  addTextPreProcessor(list, textProcessor) {\n    if (!textProcessor || list.indexOf(textProcessor) > -1) return;\n    list.push(textProcessor);\n  }\n}\nclass ComponentQuestionJSON {\n  constructor(name, json) {\n    this.name = name;\n    this.json = json;\n    var self = this;\n    Serializer.addClass(name, [], function (json) {\n      return ComponentCollection.Instance.createQuestion(!!json ? json.name : \"\", self);\n    }, \"question\");\n    this.onInit();\n  }\n  onInit() {\n    if (!this.json.onInit) return;\n    this.json.onInit();\n  }\n  onCreated(question) {\n    if (!this.json.onCreated) return;\n    this.json.onCreated(question);\n  }\n  onLoaded(question) {\n    if (!this.json.onLoaded) return;\n    this.json.onLoaded(question);\n  }\n  onAfterRender(question, htmlElement) {\n    if (!this.json.onAfterRender) return;\n    this.json.onAfterRender(question, htmlElement);\n  }\n  onAfterRenderContentElement(question, element, htmlElement) {\n    if (!this.json.onAfterRenderContentElement) return;\n    this.json.onAfterRenderContentElement(question, element, htmlElement);\n  }\n  onUpdateQuestionCssClasses(question, element, css) {\n    if (!this.json.onUpdateQuestionCssClasses) return;\n    this.json.onUpdateQuestionCssClasses(question, element, css);\n  }\n  onSetQuestionValue(question, newValue) {\n    if (this.json.onSetQuestionValue) {\n      this.json.onSetQuestionValue(question, newValue);\n    }\n    if (this.json.onValueSet) {\n      this.json.onValueSet(question, newValue);\n    }\n  }\n  onPropertyChanged(question, propertyName, newValue) {\n    if (!this.json.onPropertyChanged) return;\n    this.json.onPropertyChanged(question, propertyName, newValue);\n  }\n  onValueChanged(question, name, newValue) {\n    if (!this.json.onValueChanged) return;\n    this.json.onValueChanged(question, name, newValue);\n  }\n  onValueChanging(question, name, newValue) {\n    if (!this.json.onValueChanging) return newValue;\n    return this.json.onValueChanging(question, name, newValue);\n  }\n  onGetErrorText(question) {\n    if (!this.json.getErrorText) return undefined;\n    return this.json.getErrorText(question);\n  }\n  onItemValuePropertyChanged(question, item, propertyName, name, newValue) {\n    if (!this.json.onItemValuePropertyChanged) return;\n    this.json.onItemValuePropertyChanged(question, {\n      obj: item,\n      propertyName: propertyName,\n      name: name,\n      newValue: newValue\n    });\n  }\n  getDisplayValue(keyAsText, value, question) {\n    if (!this.json.getDisplayValue) return question.getDisplayValue(keyAsText, value);\n    return this.json.getDisplayValue(question);\n  }\n  get defaultQuestionTitle() {\n    return this.json.defaultQuestionTitle;\n  }\n  setValueToQuestion(val) {\n    const converter = this.json.valueToQuestion || this.json.setValue;\n    return !!converter ? converter(val) : val;\n  }\n  getValueFromQuestion(val) {\n    const converter = this.json.valueFromQuestion || this.json.getValue;\n    return !!converter ? converter(val) : val;\n  }\n  get isComposite() {\n    return !!this.json.elementsJSON || !!this.json.createElements;\n  }\n  getDynamicProperties() {\n    if (!Array.isArray(this.dynamicProperties)) {\n      this.dynamicProperties = this.calcDynamicProperties();\n    }\n    return this.dynamicProperties;\n  }\n  calcDynamicProperties() {\n    const baseProps = this.json.inheritBaseProps;\n    if (!baseProps || !this.json.questionJSON) return [];\n    const type = this.json.questionJSON.type;\n    if (!type) return [];\n    if (Array.isArray(baseProps)) {\n      const props = [];\n      baseProps.forEach(name => {\n        const prop = Serializer.findProperty(type, name);\n        if (prop) {\n          props.push(prop);\n        }\n      });\n      return props;\n    }\n    const invalidNames = [];\n    for (let key in this.json.questionJSON) {\n      invalidNames.push(key);\n    }\n    return Serializer.getDynamicPropertiesByTypes(this.name, type, invalidNames);\n  }\n}\nclass ComponentCollection {\n  constructor() {\n    this.customQuestionValues = [];\n  }\n  add(json) {\n    if (!json) return;\n    let name = json.name;\n    if (!name) {\n      throw \"Attribute name is missed\";\n    }\n    name = name.toLowerCase();\n    if (!!this.getCustomQuestionByName(name)) {\n      throw \"There is already registered custom question with name '\" + name + \"'\";\n    }\n    if (!!Serializer.findClass(name)) {\n      throw \"There is already class with name '\" + name + \"'\";\n    }\n    var customQuestion = new ComponentQuestionJSON(name, json);\n    if (!!this.onAddingJson) this.onAddingJson(name, customQuestion.isComposite);\n    this.customQuestionValues.push(customQuestion);\n  }\n  remove(componentName) {\n    if (!componentName) return false;\n    const index = this.getCustomQuestionIndex(componentName.toLowerCase());\n    if (index < 0) return false;\n    this.removeByIndex(index);\n    return true;\n  }\n  get items() {\n    return this.customQuestionValues;\n  }\n  getCustomQuestionByName(name) {\n    const index = this.getCustomQuestionIndex(name);\n    return index >= 0 ? this.customQuestionValues[index] : undefined;\n  }\n  getCustomQuestionIndex(name) {\n    for (var i = 0; i < this.customQuestionValues.length; i++) {\n      if (this.customQuestionValues[i].name === name) return i;\n    }\n    return -1;\n  }\n  removeByIndex(index) {\n    Serializer.removeClass(this.customQuestionValues[index].name);\n    this.customQuestionValues.splice(index, 1);\n  }\n  clear(includeInternal) {\n    for (let i = this.customQuestionValues.length - 1; i >= 0; i--) {\n      if (includeInternal || !this.customQuestionValues[i].json.internal) {\n        this.removeByIndex(i);\n      }\n    }\n  }\n  createQuestion(name, questionJSON) {\n    if (!!questionJSON.isComposite) return this.createCompositeModel(name, questionJSON);\n    return this.createCustomModel(name, questionJSON);\n  }\n  createCompositeModel(name, questionJSON) {\n    if (!!this.onCreateComposite) return this.onCreateComposite(name, questionJSON);\n    return new QuestionCompositeModel(name, questionJSON);\n  }\n  createCustomModel(name, questionJSON) {\n    if (!!this.onCreateCustom) return this.onCreateCustom(name, questionJSON);\n    return new QuestionCustomModel(name, questionJSON);\n  }\n}\nComponentCollection.Instance = new ComponentCollection();\nclass QuestionCustomModelBase extends Question {\n  constructor(name, customQuestion) {\n    super(name);\n    this.customQuestion = customQuestion;\n    CustomPropertiesCollection.createProperties(this);\n    SurveyElement.CreateDisabledDesignElements = true;\n    this.locQuestionTitle = this.createLocalizableString(\"questionTitle\", this);\n    this.locQuestionTitle.setJson(this.customQuestion.defaultQuestionTitle);\n    this.createWrapper();\n    SurveyElement.CreateDisabledDesignElements = false;\n    if (!!this.customQuestion) {\n      this.customQuestion.onCreated(this);\n    }\n  }\n  getType() {\n    return !!this.customQuestion ? this.customQuestion.name : \"custom\";\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    if (!!this.getElement()) {\n      this.getElement().locStrsChanged();\n    }\n  }\n  localeChanged() {\n    super.locStrsChanged();\n    if (!!this.getElement()) {\n      this.getElement().localeChanged();\n    }\n  }\n  getDefaultTitle() {\n    if (!this.locQuestionTitle.isEmpty) {\n      return this.getProcessedText(this.locQuestionTitle.textOrHtml);\n    }\n    return super.getDefaultTitle();\n  }\n  addUsedLocales(locales) {\n    super.addUsedLocales(locales);\n    if (!!this.getElement()) {\n      this.getElement().addUsedLocales(locales);\n    }\n  }\n  needResponsiveWidth() {\n    const el = this.getElement();\n    return !!el ? el.needResponsiveWidth() : false;\n  }\n  createWrapper() {}\n  onPropertyValueChanged(name, oldValue, newValue) {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (!!this.customQuestion && !this.isLoadingFromJson) {\n      this.customQuestion.onPropertyChanged(this, name, newValue);\n    }\n  }\n  itemValuePropertyChanged(item, name, oldValue, newValue) {\n    super.itemValuePropertyChanged(item, name, oldValue, newValue);\n    if (!!this.customQuestion && !this.isLoadingFromJson) {\n      this.customQuestion.onItemValuePropertyChanged(this, item, item.ownerPropertyName, name, newValue);\n    }\n  }\n  onFirstRenderingCore() {\n    super.onFirstRenderingCore();\n    const el = this.getElement();\n    if (!!el) {\n      el.onFirstRendering();\n    }\n  }\n  onHidingContent() {\n    super.onHidingContent();\n    const el = this.getElement();\n    if (!!el) {\n      el.onHidingContent();\n    }\n  }\n  getProgressInfo() {\n    let res = super.getProgressInfo();\n    if (!!this.getElement()) {\n      res = this.getElement().getProgressInfo();\n    }\n    if (this.isRequired && res.requiredQuestionCount == 0) {\n      res.requiredQuestionCount = 1;\n      if (!this.isEmpty()) {\n        res.answeredQuestionCount = 1;\n      }\n    }\n    return res;\n  }\n  initElement(el) {\n    if (!el) return;\n    el.setSurveyImpl(this);\n    el.disableDesignActions = true;\n  }\n  setSurveyImpl(value, isLight) {\n    this.isSettingValOnLoading = true;\n    super.setSurveyImpl(value, isLight);\n    this.initElement(this.getElement());\n    this.isSettingValOnLoading = false;\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    if (!!this.getElement()) {\n      this.getElement().onSurveyLoad();\n      this.customQuestion.onLoaded(this);\n    }\n  }\n  afterRenderQuestionElement(el) {\n    //Do nothing\n  }\n  afterRenderCore(el) {\n    super.afterRenderCore(el);\n    if (!!this.customQuestion) {\n      this.customQuestion.onAfterRender(this, el);\n    }\n  }\n  onUpdateQuestionCssClasses(element, css) {\n    if (!!this.customQuestion) {\n      this.customQuestion.onUpdateQuestionCssClasses(this, element, css);\n    }\n  }\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.updateElementCss();\n    if (!!this.customQuestion) {\n      this.customQuestion.onSetQuestionValue(this, newValue);\n    }\n  }\n  setNewValue(newValue) {\n    super.setNewValue(newValue);\n    this.updateElementCss();\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (!!this.customQuestion) {\n      const text = this.customQuestion.onGetErrorText(this);\n      if (!!text) {\n        errors.push(new CustomError(text, this));\n      }\n    }\n  }\n  //ISurveyImpl\n  getSurveyData() {\n    return this;\n  }\n  getTextProcessor() {\n    return this.textProcessor;\n  }\n  //ISurveyData\n  getValue(name) {\n    return this.value;\n  }\n  setValue(name, newValue, locNotification, allowNotifyValueChanged) {\n    if (!this.data) return;\n    if (!!this.customQuestion) {\n      this.customQuestion.onValueChanged(this, name, newValue);\n    }\n    var newName = this.convertDataName(name);\n    let valueForSurvey = this.convertDataValue(name, newValue);\n    if (this.valueToDataCallback) {\n      valueForSurvey = this.valueToDataCallback(valueForSurvey);\n    }\n    this.data.setValue(newName, valueForSurvey, locNotification, allowNotifyValueChanged);\n    this.updateIsAnswered();\n    this.updateElementCss();\n  }\n  getQuestionByName(name) {\n    return undefined;\n  }\n  isValueChanging(name, newValue) {\n    if (!!this.customQuestion) {\n      const qValue = newValue;\n      newValue = this.customQuestion.onValueChanging(this, name, newValue);\n      if (!Helpers.isTwoValueEquals(newValue, qValue)) {\n        const q = this.getQuestionByName(name);\n        if (!!q) {\n          q.value = newValue;\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  convertDataName(name) {\n    return this.getValueName();\n  }\n  convertDataValue(name, newValue) {\n    return newValue;\n  }\n  getVariable(name) {\n    return !!this.data ? this.data.getVariable(name) : null;\n  }\n  setVariable(name, newValue) {\n    if (!this.data) return;\n    this.data.setVariable(name, newValue);\n  }\n  getComment(name) {\n    return !!this.data ? this.data.getComment(this.getValueName()) : \"\";\n  }\n  setComment(name, newValue, locNotification) {\n    if (!this.data) return;\n    this.data.setComment(this.getValueName(), newValue, locNotification);\n  }\n  getAllValues() {\n    return !!this.data ? this.data.getAllValues() : {};\n  }\n  getFilteredValues() {\n    return !!this.data ? this.data.getFilteredValues() : {};\n  }\n  getFilteredProperties() {\n    return !!this.data ? this.data.getFilteredProperties() : {};\n  }\n  findQuestionByName(name) {\n    return !!this.data ? this.data.findQuestionByName(name) : null;\n  }\n  getEditingSurveyElement() {\n    return undefined;\n  }\n  //IPanel\n  addElement(element, index) {}\n  removeElement(element) {\n    return false;\n  }\n  getQuestionTitleLocation() {\n    return \"left\";\n  }\n  getQuestionTitleWidth() {\n    return undefined;\n  }\n  getColumsForElement(el) {\n    return [];\n  }\n  updateColumns() {}\n  getQuestionStartIndex() {\n    return this.getStartIndex();\n  }\n  getChildrenLayoutType() {\n    return \"row\";\n  }\n  elementWidthChanged(el) {}\n  get elements() {\n    return [];\n  }\n  indexOf(el) {\n    return -1;\n  }\n  ensureRowsVisibility() {\n    // do nothing\n  }\n  validateContainerOnly() {\n    // do nothing\n  }\n  onQuestionValueChanged(el) {\n    // do nothing\n  }\n  getQuestionErrorLocation() {\n    return this.getErrorLocation();\n  }\n  getContentAriaHidden() {\n    return this.isDesignMode || super.getContentAriaHidden();\n  }\n  getContentDisplayValueCore(keyAsText, value, question) {\n    if (!question) return super.getDisplayValueCore(keyAsText, value);\n    return this.customQuestion.getDisplayValue(keyAsText, value, question);\n  }\n}\nclass QuestionCustomModel extends QuestionCustomModelBase {\n  getTemplate() {\n    return \"custom\";\n  }\n  getDynamicProperties() {\n    return this.customQuestion.getDynamicProperties() || [];\n  }\n  getDynamicType() {\n    return this.questionWrapper ? this.questionWrapper.getType() : \"question\";\n  }\n  getOriginalObj() {\n    return this.questionWrapper;\n  }\n  createWrapper() {\n    this.questionWrapper = this.createQuestion();\n    this.createDynamicProperties(this.questionWrapper);\n    if (this.getDynamicProperties().length > 0) {\n      this.questionWrapper.onPropertyValueChangedCallback = (name, oldValue, newValue, sender, arrayChanges) => {\n        const prop = this.getDynamicProperty(name);\n        if (prop) {\n          this.propertyValueChanged(name, oldValue, newValue, arrayChanges);\n        }\n      };\n    }\n  }\n  getDynamicProperty(name) {\n    const props = this.getDynamicProperties();\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].name === name) return props[i];\n    }\n    return null;\n  }\n  getElement() {\n    return this.contentQuestion;\n  }\n  onAnyValueChanged(name, questionName) {\n    super.onAnyValueChanged(name, questionName);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.onAnyValueChanged(name, questionName);\n    }\n  }\n  getQuestionByName(name) {\n    return this.contentQuestion;\n  }\n  getDefaultTitle() {\n    if (this.hasJSONTitle && this.contentQuestion) {\n      return this.getProcessedText(this.contentQuestion.title);\n    }\n    return super.getDefaultTitle();\n  }\n  setValue(name, newValue, locNotification, allowNotifyValueChanged) {\n    if (this.isValueChanging(name, newValue)) return;\n    super.setValue(name, newValue, locNotification, allowNotifyValueChanged);\n  }\n  updateCommentFromSurvey(newValue) {\n    super.updateCommentFromSurvey(newValue);\n    const q = this.contentQuestion;\n    if (!!q) {\n      q.updateCommentFromSurvey(newValue);\n    }\n  }\n  get requireUpdateCommentValue() {\n    var _a;\n    return (_a = this.contentQuestion) === null || _a === void 0 ? void 0 : _a.requireUpdateCommentValue;\n  }\n  onSetData() {\n    super.onSetData();\n    if (!!this.survey && !this.isEmpty()) {\n      this.setValue(this.name, this.value, false, this.allowNotifyValueChanged);\n    }\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    if (!this.contentQuestion) return false;\n    var res = this.contentQuestion.hasErrors(fireCallback, rec);\n    this.errors = [];\n    for (var i = 0; i < this.contentQuestion.errors.length; i++) {\n      this.errors.push(this.contentQuestion.errors[i]);\n    }\n    if (!res) {\n      res = super.hasErrors(fireCallback, rec);\n    }\n    this.updateElementCss();\n    return res;\n  }\n  focus(onError = false) {\n    if (!!this.contentQuestion) {\n      this.contentQuestion.focus(onError);\n    } else {\n      super.focus(onError);\n    }\n  }\n  afterRenderCore(el) {\n    super.afterRenderCore(el);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.afterRender(el);\n    }\n  }\n  get contentQuestion() {\n    return this.questionWrapper;\n  }\n  createQuestion() {\n    var json = this.customQuestion.json;\n    var res = null;\n    if (!!json.questionJSON) {\n      this.hasJSONTitle = !!json.questionJSON.title;\n      let qType = json.questionJSON.type;\n      if (!qType || !Serializer.findClass(qType)) throw \"type attribute in questionJSON is empty or incorrect\";\n      res = Serializer.createClass(qType);\n      res.fromJSON(json.questionJSON);\n      res = this.checkCreatedQuestion(res);\n    } else {\n      if (!!json.createQuestion) {\n        res = this.checkCreatedQuestion(json.createQuestion());\n      }\n    }\n    this.initElement(res);\n    if (!!res) {\n      res.isContentElement = true;\n      if (!res.name) {\n        res.name = \"question\";\n      }\n      res.onUpdateCssClassesCallback = css => {\n        this.onUpdateQuestionCssClasses(res, css);\n      };\n      res.hasCssErrorCallback = () => this.errors.length > 0;\n      res.setValueChangedDirectlyCallback = val => {\n        this.setValueChangedDirectly(val);\n      };\n    }\n    return res;\n  }\n  checkCreatedQuestion(res) {\n    if (!res) return res;\n    if (!res.isQuestion) {\n      if (Array.isArray(res.questions) && res.questions.length > 0) {\n        res = res.questions[0];\n      } else {\n        res = Serializer.createClass(\"text\");\n      }\n      ConsoleWarnings.error(\"Could not create component: '\" + this.getType() + \"'. questionJSON should be a question.\");\n    }\n    return res;\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    if (!this.contentQuestion) return;\n    if (this.isEmpty() && !this.contentQuestion.isEmpty()) {\n      this.value = this.getContentQuestionValue();\n    }\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.runCondition(values, properties);\n    }\n  }\n  convertDataName(name) {\n    const q = this.contentQuestion;\n    if (!q || name === this.getValueName()) return super.convertDataName(name);\n    var newName = name.replace(q.getValueName(), this.getValueName());\n    return newName.indexOf(this.getValueName()) == 0 ? newName : super.convertDataName(name);\n  }\n  convertDataValue(name, newValue) {\n    return this.convertDataName(name) == super.convertDataName(name) ? this.getContentQuestionValue() : newValue;\n  }\n  getContentQuestionValue() {\n    if (!this.contentQuestion) return undefined;\n    let val = this.contentQuestion.value;\n    if (!!this.customQuestion) val = this.customQuestion.getValueFromQuestion(val);\n    return val;\n  }\n  setContentQuestionValue(val) {\n    if (!this.contentQuestion) return;\n    if (!!this.customQuestion) val = this.customQuestion.setValueToQuestion(val);\n    this.contentQuestion.value = val;\n  }\n  canSetValueToSurvey() {\n    return false;\n  }\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    if (!this.isLoadingFromJson && !!this.contentQuestion && !this.isTwoValueEquals(this.getContentQuestionValue(), newValue)) {\n      this.setContentQuestionValue(this.getUnbindValue(newValue));\n    }\n  }\n  onSurveyValueChanged(newValue) {\n    super.onSurveyValueChanged(newValue);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.onSurveyValueChanged(newValue);\n    }\n  }\n  getValueCore() {\n    if (!!this.contentQuestion) return this.getContentQuestionValue();\n    return super.getValueCore();\n  }\n  setValueChangedDirectly(val) {\n    if (this.isSettingValueChanged) return;\n    this.isSettingValueChanged = true;\n    super.setValueChangedDirectly(val);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.setValueChangedDirectly(val);\n    }\n    this.isSettingValueChanged = false;\n  }\n  createDynamicProperties(el) {\n    if (!el) return;\n    const props = this.getDynamicProperties();\n    if (Array.isArray(props)) {\n      Serializer.addDynamicPropertiesIntoObj(this, el, props);\n    }\n  }\n  initElement(el) {\n    super.initElement(el);\n    if (!!el) {\n      el.parent = this;\n      el.afterRenderQuestionCallback = (question, element) => {\n        if (!!this.customQuestion) {\n          this.customQuestion.onAfterRenderContentElement(this, question, element);\n        }\n      };\n    }\n  }\n  updateElementCss(reNew) {\n    if (!!this.contentQuestion) {\n      this.questionWrapper.updateElementCss(reNew);\n    }\n    super.updateElementCss(reNew);\n  }\n  setIsMobile(val) {\n    super.setIsMobile(val);\n    if (!!this.contentQuestion) {\n      this.contentQuestion.setIsMobile(val);\n    }\n  }\n  updateElementCssCore(cssClasses) {\n    if (!!this.contentQuestion) {\n      cssClasses = this.contentQuestion.cssClasses;\n    }\n    super.updateElementCssCore(cssClasses);\n  }\n  getDisplayValueCore(keyAsText, value) {\n    return super.getContentDisplayValueCore(keyAsText, value, this.contentQuestion);\n  }\n}\nclass QuestionCompositeTextProcessor extends QuestionTextProcessor {\n  constructor(composite, variableName) {\n    super(variableName);\n    this.composite = composite;\n    this.variableName = variableName;\n  }\n  get survey() {\n    return this.composite.survey;\n  }\n  get panel() {\n    return this.composite.contentPanel;\n  }\n}\nclass QuestionCompositeModel extends QuestionCustomModelBase {\n  constructor(name, customQuestion) {\n    super(name, customQuestion);\n    this.customQuestion = customQuestion;\n    this.settingNewValue = false;\n    this.textProcessing = new QuestionCompositeTextProcessor(this, QuestionCompositeModel.ItemVariableName);\n  }\n  createWrapper() {\n    this.panelWrapper = this.createPanel();\n  }\n  getTemplate() {\n    return \"composite\";\n  }\n  getElement() {\n    return this.contentPanel;\n  }\n  getCssRoot(cssClasses) {\n    return new CssClassBuilder().append(super.getCssRoot(cssClasses)).append(cssClasses.composite).toString();\n  }\n  get contentPanel() {\n    return this.panelWrapper;\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    var res = super.hasErrors(fireCallback, rec);\n    if (!this.contentPanel) return res;\n    return this.contentPanel.hasErrors(fireCallback, false, rec) || res;\n  }\n  updateElementCss(reNew) {\n    super.updateElementCss(reNew);\n    if (this.contentPanel) {\n      this.contentPanel.updateElementCss(reNew);\n    }\n  }\n  dispose() {\n    this.unConnectEditingObj();\n    super.dispose();\n  }\n  updateEditingObj() {\n    var _a;\n    const obj = (_a = this.data) === null || _a === void 0 ? void 0 : _a.getEditingSurveyElement();\n    if (!obj) return undefined;\n    let newObj = obj[this.getValueName()];\n    if (!!newObj && !newObj.onPropertyChanged) {\n      newObj = undefined;\n    }\n    if (newObj !== this.editingObjValue) {\n      this.unConnectEditingObj();\n      this.editingObjValue = newObj;\n      if (!!newObj) {\n        this.onEditingObjPropertyChanged = (sender, options) => {\n          this.setNewValueIntoQuestion(options.name, this.editingObjValue[options.name]);\n        };\n        newObj.onPropertyChanged.add(this.onEditingObjPropertyChanged);\n      }\n    }\n    return this.editingObjValue;\n  }\n  unConnectEditingObj() {\n    if (!!this.editingObjValue && !this.editingObjValue.isDisposed) {\n      this.editingObjValue.onPropertyChanged.remove(this.onEditingObjPropertyChanged);\n    }\n  }\n  getEditingSurveyElement() {\n    return this.editingObjValue;\n  }\n  getTextProcessor() {\n    return this.textProcessing;\n  }\n  findQuestionByName(name) {\n    const res = this.getQuestionByName(name);\n    if (!!res) return res;\n    return super.findQuestionByName(name);\n  }\n  clearValueIfInvisibleCore(reason) {\n    super.clearValueIfInvisibleCore(reason);\n    const questions = this.contentPanel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearValueIfInvisible(reason);\n    }\n  }\n  onAnyValueChanged(name, questionName) {\n    super.onAnyValueChanged(name, questionName);\n    var questions = this.contentPanel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].onAnyValueChanged(name, questionName);\n    }\n  }\n  get hasSingleInput() {\n    return false;\n  }\n  get isContainer() {\n    return true;\n  }\n  createPanel() {\n    var res = Serializer.createClass(\"panel\");\n    res.showQuestionNumbers = \"off\";\n    res.renderWidth = \"100%\";\n    var json = this.customQuestion.json;\n    if (!!json.elementsJSON) {\n      res.fromJSON({\n        elements: json.elementsJSON\n      });\n    }\n    if (!!json.createElements) {\n      json.createElements(res, this);\n    }\n    this.initElement(res);\n    res.readOnly = this.isReadOnly;\n    res.questions.forEach(q => {\n      q.setParentQuestion(this);\n      q.onUpdateCssClassesCallback = css => {\n        this.onUpdateQuestionCssClasses(q, css);\n      };\n    });\n    this.setAfterRenderCallbacks(res);\n    return res;\n  }\n  onReadOnlyChanged() {\n    if (!!this.contentPanel) {\n      this.contentPanel.readOnly = this.isReadOnly;\n    }\n    super.onReadOnlyChanged();\n  }\n  updateValueFromSurvey(newValue, clearData = false) {\n    this.updateEditingObj();\n    super.updateValueFromSurvey(newValue, clearData);\n  }\n  onSurveyLoad() {\n    this.isSettingValOnLoading = true;\n    if (!!this.contentPanel) {\n      this.contentPanel.readOnly = this.isReadOnly;\n      this.setIsContentElement(this.contentPanel);\n    }\n    super.onSurveyLoad();\n    if (!!this.contentPanel) {\n      const val = this.getContentPanelValue();\n      if (!Helpers.isValueEmpty(val)) {\n        this.value = val;\n      }\n    }\n    this.isSettingValOnLoading = false;\n  }\n  setIsContentElement(panel) {\n    panel.isContentElement = true;\n    var elements = panel.elements;\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (el.isPanel) {\n        this.setIsContentElement(el);\n      } else {\n        el.isContentElement = true;\n      }\n    }\n  }\n  setVisibleIndex(val) {\n    var res = super.setVisibleIndex(val);\n    if (this.isVisible && !!this.contentPanel) {\n      res += this.contentPanel.setVisibleIndex(val);\n    }\n    return res;\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    if (!!this.contentPanel) {\n      var oldComposite = values[QuestionCompositeModel.ItemVariableName];\n      values[QuestionCompositeModel.ItemVariableName] = this.contentPanel.getValue();\n      this.contentPanel.runCondition(values, properties);\n      delete values[QuestionCompositeModel.ItemVariableName];\n      if (!!oldComposite) {\n        values[QuestionCompositeModel.ItemVariableName] = oldComposite;\n      }\n    }\n  }\n  onSurveyValueChanged(newValue) {\n    super.onSurveyValueChanged(newValue);\n    const val = !!newValue ? newValue : {};\n    if (!!this.contentPanel) {\n      this.contentPanel.questions.forEach(q => {\n        q.onSurveyValueChanged(val[q.getValueName()]);\n      });\n    }\n  }\n  getValue(name) {\n    var val = this.value;\n    return !!val ? val[name] : null;\n  }\n  getQuestionByName(name) {\n    return !!this.contentPanel ? this.contentPanel.getQuestionByName(name) : undefined;\n  }\n  setValue(name, newValue, locNotification, allowNotifyValueChanged) {\n    if (this.settingNewValue) {\n      this.setNewValueIntoQuestion(name, newValue);\n      return;\n    }\n    if (this.isValueChanging(name, newValue)) return;\n    this.settingNewValue = true;\n    if (!this.isEditingSurveyElement && !!this.contentPanel) {\n      let index = 0;\n      const maxTimes = this.contentPanel.questions.length + 1;\n      while (index < maxTimes && this.updateValueCoreWithPanelValue()) index++;\n    }\n    this.setNewValueIntoQuestion(name, newValue);\n    super.setValue(name, newValue, locNotification, allowNotifyValueChanged);\n    this.settingNewValue = false;\n    this.runPanelTriggers(QuestionCompositeModel.ItemVariableName + \".\" + name, newValue);\n  }\n  setComment(name, newValue, locNotification) {\n    let val = this.getUnbindValue(this.value);\n    const commentName = this.getCommentName(name);\n    if (!val && !newValue || !!newValue && !!val && val[commentName] === newValue) return;\n    if (!!newValue) {\n      if (!val) {\n        val = {};\n      }\n      val[commentName] = newValue;\n    } else {\n      delete val[commentName];\n    }\n    const q = this.getQuestionByName(name);\n    if (!!q && q.comment !== newValue) {\n      q.comment = newValue;\n    }\n    if (!this.settingNewValue) {\n      this.value = val;\n    }\n  }\n  getComment(name) {\n    const q = this.getQuestionByName(name);\n    if (!!q) return q.comment;\n    const val = this.value;\n    return !!val && val[this.getCommentName(name)] || \"\";\n  }\n  getCommentName(name) {\n    return name + settings.commentSuffix;\n  }\n  runPanelTriggers(name, value) {\n    if (!!this.contentPanel) {\n      this.contentPanel.questions.forEach(q => {\n        q.runTriggers(name, value);\n      });\n    }\n  }\n  getFilteredValues() {\n    const values = !!this.data ? this.data.getFilteredValues() : {};\n    if (!!this.contentPanel) {\n      values[QuestionCompositeModel.ItemVariableName] = this.contentPanel.getValue();\n    }\n    return values;\n  }\n  updateValueCoreWithPanelValue() {\n    const panelValue = this.getContentPanelValue();\n    if (this.isTwoValueEquals(this.getValueCore(), panelValue)) return false;\n    this.setValueCore(panelValue);\n    return true;\n  }\n  getContentPanelValue(val) {\n    if (!val) val = this.contentPanel.getValue();\n    return this.customQuestion.setValueToQuestion(val);\n  }\n  getValueForContentPanel(val) {\n    return this.customQuestion.getValueFromQuestion(val);\n  }\n  setNewValueIntoQuestion(name, newValue) {\n    var q = this.getQuestionByName(name);\n    if (!!q && !this.isTwoValueEquals(newValue, q.value)) {\n      q.value = newValue;\n    }\n  }\n  addConditionObjectsByContext(objects, context) {\n    if (!this.contentPanel) return;\n    var questions = this.contentPanel.questions;\n    var prefixName = this.name;\n    var prefixText = this.title;\n    for (var i = 0; i < questions.length; i++) {\n      objects.push({\n        name: prefixName + \".\" + questions[i].name,\n        text: prefixText + \".\" + questions[i].title,\n        question: questions[i]\n      });\n    }\n  }\n  collectNestedQuestionsCore(questions, visibleOnly, includeNested, includeItSelf) {\n    if (!this.contentPanel) return;\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    this.contentPanel.questions.forEach(q => q.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n  }\n  convertDataValue(name, newValue) {\n    var val = !!this.contentPanel && !this.isEditingSurveyElement ? this.contentPanel.getValue() : this.getValueForContentPanel(this.value);\n    if (!val) val = {};\n    if (!val.getType) {\n      val = Helpers.getUnbindValue(val);\n    }\n    if (this.isValueEmpty(newValue) && !this.isEditingSurveyElement) {\n      delete val[name];\n    } else {\n      val[name] = newValue;\n    }\n    return this.getContentPanelValue(val);\n  }\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    this.setValuesIntoQuestions(newValue);\n    if (!this.isEditingSurveyElement && !!this.contentPanel) {\n      newValue = this.getContentPanelValue();\n    }\n    super.setQuestionValue(newValue, updateIsAnswered);\n  }\n  setValuesIntoQuestions(newValue) {\n    if (!this.contentPanel || this.settingNewValue) return;\n    newValue = this.getValueForContentPanel(newValue);\n    const oldSettingNewValue = this.settingNewValue;\n    this.settingNewValue = true;\n    const questions = this.contentPanel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      const key = q.getValueName();\n      const commentKey = this.getCommentName(key);\n      const val = !!newValue ? newValue[key] : undefined;\n      const commentVal = !!newValue && newValue[commentKey] || \"\";\n      if (!this.isTwoValueEquals(q.value, val) && (val !== undefined || !q.isEmpty())) {\n        q.value = val;\n      }\n      if (q.comment !== commentVal) {\n        q.comment = commentVal;\n      }\n    }\n    this.settingNewValue = oldSettingNewValue;\n  }\n  getDisplayValueCore(keyAsText, value) {\n    return super.getContentDisplayValueCore(keyAsText, value, this.contentPanel);\n  }\n  setAfterRenderCallbacks(panel) {\n    if (!panel || !this.customQuestion) return;\n    var questions = panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].afterRenderQuestionCallback = (question, element) => {\n        this.customQuestion.onAfterRenderContentElement(this, question, element);\n      };\n    }\n  }\n  get ariaRole() {\n    return \"group\";\n  }\n  setIsMobile(val) {\n    super.setIsMobile(val);\n    if (!!this.contentPanel) {\n      this.contentPanel.questions.forEach(q => {\n        q.setIsMobile(val);\n      });\n    }\n  }\n}\nQuestionCompositeModel.ItemVariableName = \"composite\";\nclass QuestionFactory {\n  static get DefaultChoices() {\n    const choice = getLocaleString(\"choices_Item\");\n    return [choice + \"1\", choice + \"2\", choice + \"3\"];\n  }\n  static get DefaultColums() {\n    var colName = getLocaleString(\"matrix_column\") + \" \";\n    return [colName + \"1\", colName + \"2\", colName + \"3\"];\n  }\n  static get DefaultRows() {\n    var rowName = getLocaleString(\"matrix_row\") + \" \";\n    return [rowName + \"1\", rowName + \"2\"];\n  }\n  static get DefaultMutlipleTextItems() {\n    var itemName = getLocaleString(\"multipletext_itemname\");\n    return [itemName + \"1\", itemName + \"2\"];\n  }\n  registerQuestion(questionType, questionCreator, showInToolbox = true) {\n    ElementFactory.Instance.registerElement(questionType, questionCreator, showInToolbox);\n  }\n  registerCustomQuestion(questionType) {\n    ElementFactory.Instance.registerCustomQuestion(questionType);\n  }\n  unregisterElement(elementType, removeFromSerializer = false) {\n    ElementFactory.Instance.unregisterElement(elementType, removeFromSerializer);\n  }\n  clear() {\n    ElementFactory.Instance.clear();\n  }\n  getAllTypes() {\n    return ElementFactory.Instance.getAllTypes();\n  }\n  createQuestion(questionType, name) {\n    return ElementFactory.Instance.createElement(questionType, name);\n  }\n}\nQuestionFactory.Instance = new QuestionFactory();\nclass ElementFactory {\n  constructor() {\n    this.creatorHash = {};\n    this.registerCustomQuestion = (questionType, showInToolbox = true) => {\n      const creator = name => {\n        const el = Serializer.createClass(questionType);\n        if (!!el) el.name = name;\n        return el;\n      };\n      this.registerElement(questionType, creator, showInToolbox);\n    };\n  }\n  registerElement(elementType, elementCreator, showInToolbox = true) {\n    this.creatorHash[elementType] = {\n      showInToolbox: showInToolbox,\n      creator: elementCreator\n    };\n  }\n  clear() {\n    this.creatorHash = {};\n  }\n  unregisterElement(elementType, removeFromSerializer = false) {\n    delete this.creatorHash[elementType];\n    if (removeFromSerializer) {\n      Serializer.removeClass(elementType);\n    }\n  }\n  getAllToolboxTypes() {\n    return this.getAllTypesCore(true);\n  }\n  getAllTypes() {\n    return this.getAllTypesCore(false);\n  }\n  createElement(elementType, name) {\n    var item = this.creatorHash[elementType];\n    if (!!item && !!item.creator) return item.creator(name);\n    const compJSON = ComponentCollection.Instance.getCustomQuestionByName(elementType);\n    if (!!compJSON) return ComponentCollection.Instance.createQuestion(name, compJSON);\n    return null;\n  }\n  getAllTypesCore(showInToolboxOnly) {\n    var result = new Array();\n    for (var key in this.creatorHash) {\n      if (!showInToolboxOnly || this.creatorHash[key].showInToolbox) {\n        result.push(key);\n      }\n    }\n    return result.sort();\n  }\n}\nElementFactory.Instance = new ElementFactory();\n\n/**\n * A class that describes the Expression question type. It is a read-only question type that calculates a value based on a specified expression.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-expression/ (linkStyle))\n */\nclass QuestionExpressionModel extends Question {\n  constructor(name) {\n    super(name);\n    this.createLocalizableString(\"format\", this);\n    this.registerPropertyChangedHandlers([\"expression\"], () => {\n      if (this.expressionRunner) {\n        this.expressionRunner = this.createRunner();\n      }\n    });\n    this.registerPropertyChangedHandlers([\"format\", \"currency\", \"displayStyle\"], () => {\n      this.updateFormatedValue();\n    });\n  }\n  getType() {\n    return \"expression\";\n  }\n  get hasInput() {\n    return false;\n  }\n  /**\n   * A string that formats a question value. Use `{0}` to reference the question value in the format string.\n   * @see displayStyle\n   */\n  get format() {\n    return this.getLocalizableStringText(\"format\", \"\");\n  }\n  set format(val) {\n    this.setLocalizableStringText(\"format\", val);\n  }\n  get locFormat() {\n    return this.getLocalizableString(\"format\");\n  }\n  /**\n   * An expression used to calculate the question value.\n   *\n   * Refer to the following help topic for more information: [Expressions](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#expressions).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/expression-question-for-dynamic-form-calculations/ (linkStyle))\n   */\n  get expression() {\n    return this.getPropertyValue(\"expression\", \"\");\n  }\n  set expression(val) {\n    this.setPropertyValue(\"expression\", val);\n  }\n  locCalculation() {\n    this.expressionIsRunning = true;\n  }\n  unlocCalculation() {\n    this.expressionIsRunning = false;\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    if (!this.expression || this.expressionIsRunning || !this.runIfReadOnly && this.isReadOnly) return;\n    this.locCalculation();\n    if (!this.expressionRunner) {\n      this.expressionRunner = this.createRunner();\n    }\n    this.expressionRunner.run(values, properties);\n  }\n  canCollectErrors() {\n    return true;\n  }\n  hasRequiredError() {\n    return false;\n  }\n  createRunner() {\n    const res = this.createExpressionRunner(this.expression);\n    res.onRunComplete = newValue => {\n      this.value = this.roundValue(newValue);\n      this.unlocCalculation();\n    };\n    return res;\n  }\n  /**\n   * The maximum number of fraction digits. Applies only if the `displayStyle` property is not `\"none\"`. Accepts values in the range from -1 to 20, where -1 disables the property.\n   *\n   * Default value: -1\n   * @see displayStyle\n   * @see minimumFractionDigits\n   * @see precision\n   */\n  get maximumFractionDigits() {\n    return this.getPropertyValue(\"maximumFractionDigits\");\n  }\n  set maximumFractionDigits(val) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"maximumFractionDigits\", val);\n  }\n  /**\n   * The minimum number of fraction digits. Applies only if the `displayStyle` property is not `\"none\"`. Accepts values in the range from -1 to 20, where -1 disables the property.\n   *\n   * Default value: -1\n   * @see displayStyle\n   * @see maximumFractionDigits\n   */\n  get minimumFractionDigits() {\n    return this.getPropertyValue(\"minimumFractionDigits\");\n  }\n  set minimumFractionDigits(val) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"minimumFractionDigits\", val);\n  }\n  get runIfReadOnly() {\n    return this.runIfReadOnlyValue === true;\n  }\n  set runIfReadOnly(val) {\n    this.runIfReadOnlyValue = val;\n  }\n  get formatedValue() {\n    return this.getPropertyValue(\"formatedValue\", \"\");\n  }\n  updateFormatedValue() {\n    this.setPropertyValue(\"formatedValue\", this.getDisplayValueCore(false, this.value));\n  }\n  onValueChanged() {\n    this.updateFormatedValue();\n  }\n  updateValueFromSurvey(newValue, clearData) {\n    super.updateValueFromSurvey(newValue, clearData);\n    this.updateFormatedValue();\n  }\n  getDisplayValueCore(keysAsText, value) {\n    var val = value === undefined || value === null ? this.defaultValue : value;\n    var res = \"\";\n    if (!this.isValueEmpty(val)) {\n      var str = this.getValueAsStr(val);\n      res = !this.format ? str : this.format[\"format\"](str);\n    }\n    if (!!this.survey) {\n      res = this.survey.getExpressionDisplayValue(this, val, res);\n    }\n    return res;\n  }\n  /**\n   * Specifies a display style for the question value.\n   *\n   * Possible values:\n   *\n   * - `\"decimal\"`\n   * - `\"currency\"`\n   * - `\"percent\"`\n   * - `\"date\"`\n   * - `\"none\"` (default)\n   *\n   * If you use the `\"currency\"` display style, you can also set the `currency` property to specify a currency other than USD.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/expression-question-for-dynamic-form-calculations/ (linkStyle))\n   * @see currency\n   * @see minimumFractionDigits\n   * @see maximumFractionDigits\n   * @see format\n   */\n  get displayStyle() {\n    return this.getPropertyValue(\"displayStyle\");\n  }\n  set displayStyle(val) {\n    this.setPropertyValue(\"displayStyle\", val);\n  }\n  /**\n   * A three-letter currency code. Applies only if the `displayStyle` property is set to `\"currency\"`.\n   *\n   * Default value: \"USD\".\n   * @see displayStyle\n   * @see minimumFractionDigits\n   * @see maximumFractionDigits\n   * @see format\n   */\n  get currency() {\n    return this.getPropertyValue(\"currency\");\n  }\n  set currency(val) {\n    if (getCurrecyCodes().indexOf(val) < 0) return;\n    this.setPropertyValue(\"currency\", val);\n  }\n  /**\n   * Specifies whether to use grouping separators in number representation. Separators depend on the selected [locale](https://surveyjs.io/form-library/documentation/surveymodel#locale).\n   *\n   * Default value: `true`\n   */\n  get useGrouping() {\n    return this.getPropertyValue(\"useGrouping\");\n  }\n  set useGrouping(val) {\n    this.setPropertyValue(\"useGrouping\", val);\n  }\n  /**\n   * Specifies how many decimal digits to keep in the expression value.\n   *\n   * Default value: -1 (unlimited)\n   * @see maximumFractionDigits\n   */\n  get precision() {\n    return this.getPropertyValue(\"precision\");\n  }\n  set precision(val) {\n    this.setPropertyValue(\"precision\", val);\n  }\n  roundValue(val) {\n    if (val === Infinity) return undefined;\n    if (this.precision < 0) return val;\n    if (!Helpers.isNumber(val)) return val;\n    return parseFloat(val.toFixed(this.precision));\n  }\n  getValueAsStr(val) {\n    if (this.displayStyle == \"date\") {\n      const d = createDate(\"question-expression\", val);\n      if (!!d && !!d.toLocaleDateString) return d.toLocaleDateString();\n    }\n    if (this.displayStyle != \"none\" && Helpers.isNumber(val)) {\n      var locale = this.getLocale();\n      if (!locale) locale = \"en\";\n      var options = {\n        style: this.displayStyle,\n        currency: this.currency,\n        useGrouping: this.useGrouping\n      };\n      if (this.maximumFractionDigits > -1) {\n        options[\"maximumFractionDigits\"] = this.maximumFractionDigits;\n      }\n      if (this.minimumFractionDigits > -1) {\n        options[\"minimumFractionDigits\"] = this.minimumFractionDigits;\n      }\n      return val.toLocaleString(locale, options);\n    }\n    return val.toString();\n  }\n}\nfunction getCurrecyCodes() {\n  return [\"AED\", \"AFN\", \"ALL\", \"AMD\", \"ANG\", \"AOA\", \"ARS\", \"AUD\", \"AWG\", \"AZN\", \"BAM\", \"BBD\", \"BDT\", \"BGN\", \"BHD\", \"BIF\", \"BMD\", \"BND\", \"BOB\", \"BOV\", \"BRL\", \"BSD\", \"BTN\", \"BWP\", \"BYN\", \"BZD\", \"CAD\", \"CDF\", \"CHE\", \"CHF\", \"CHW\", \"CLF\", \"CLP\", \"CNY\", \"COP\", \"COU\", \"CRC\", \"CUC\", \"CUP\", \"CVE\", \"CZK\", \"DJF\", \"DKK\", \"DOP\", \"DZD\", \"EGP\", \"ERN\", \"ETB\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GEL\", \"GHS\", \"GIP\", \"GMD\", \"GNF\", \"GTQ\", \"GYD\", \"HKD\", \"HNL\", \"HRK\", \"HTG\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"IQD\", \"IRR\", \"ISK\", \"JMD\", \"JOD\", \"JPY\", \"KES\", \"KGS\", \"KHR\", \"KMF\", \"KPW\", \"KRW\", \"KWD\", \"KYD\", \"KZT\", \"LAK\", \"LBP\", \"LKR\", \"LRD\", \"LSL\", \"LYD\", \"MAD\", \"MDL\", \"MGA\", \"MKD\", \"MMK\", \"MNT\", \"MOP\", \"MRO\", \"MUR\", \"MVR\", \"MWK\", \"MXN\", \"MXV\", \"MYR\", \"MZN\", \"NAD\", \"NGN\", \"NIO\", \"NOK\", \"NPR\", \"NZD\", \"OMR\", \"PAB\", \"PEN\", \"PGK\", \"PHP\", \"PKR\", \"PLN\", \"PYG\", \"QAR\", \"RON\", \"RSD\", \"RUB\", \"RWF\", \"SAR\", \"SBD\", \"SCR\", \"SDG\", \"SEK\", \"SGD\", \"SHP\", \"SLL\", \"SOS\", \"SRD\", \"SSP\", \"STD\", \"SVC\", \"SYP\", \"SZL\", \"THB\", \"TJS\", \"TMT\", \"TND\", \"TOP\", \"TRY\", \"TTD\", \"TWD\", \"TZS\", \"UAH\", \"UGX\", \"USD\", \"USN\", \"UYI\", \"UYU\", \"UZS\", \"VEF\", \"VND\", \"VUV\", \"WST\", \"XAF\", \"XAG\", \"XAU\", \"XBA\", \"XBB\", \"XBC\", \"XBD\", \"XCD\", \"XDR\", \"XOF\", \"XPD\", \"XPF\", \"XPT\", \"XSU\", \"XTS\", \"XUA\", \"XXX\", \"YER\", \"ZAR\", \"ZMW\", \"ZWL\"];\n}\nfunction getCorrectMinMax$2(min, max, isMax) {\n  let val = isMax ? max : min;\n  if (min == -1 || max == -1) return val;\n  if (min > max) return isMax ? min : max;\n  return val;\n}\nSerializer.addClass(\"expression\", [\"expression:expression\", {\n  name: \"format\",\n  serializationProperty: \"locFormat\"\n}, {\n  name: \"displayStyle\",\n  default: \"none\",\n  choices: [\"none\", \"decimal\", \"currency\", \"percent\", \"date\"]\n}, {\n  name: \"currency\",\n  choices: () => {\n    return getCurrecyCodes();\n  },\n  default: \"USD\",\n  visibleIf: obj => {\n    return obj.displayStyle === \"currency\";\n  }\n}, {\n  name: \"maximumFractionDigits:number\",\n  onSettingValue: (obj, val) => {\n    return getCorrectMinMax$2(obj.minimumFractionDigits, val, true);\n  },\n  default: -1\n}, {\n  name: \"minimumFractionDigits:number\",\n  onSettingValue: (obj, val) => {\n    return getCorrectMinMax$2(val, obj.maximumFractionDigits, false);\n  },\n  default: -1\n}, {\n  name: \"useGrouping:boolean\",\n  default: true\n}, {\n  name: \"precision:number\",\n  default: -1,\n  category: \"data\"\n}, {\n  name: \"enableIf\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"isRequired\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"readOnly\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"requiredErrorText\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"resetValueIf\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"setValueIf\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"setValueExpression\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"defaultValueExpression\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"defaultValue\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"correctAnswer\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"requiredIf\",\n  visible: false,\n  isSerializable: false\n}], function () {\n  return new QuestionExpressionModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"expression\", name => {\n  return new QuestionExpressionModel(name);\n});\nfunction onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data) {\n  cellQuestion.storeOthersAsComment = !!question ? question.storeOthersAsComment : false;\n  if ((!cellQuestion.choices || cellQuestion.choices.length == 0) && cellQuestion.choicesByUrl.isEmpty) {\n    cellQuestion.choices = question.choices;\n  }\n  if (!cellQuestion.choicesByUrl.isEmpty) {\n    cellQuestion.choicesByUrl.run(data.getTextProcessor());\n  }\n}\nfunction onUpdateSelectDropdownCellQuestion(cellQuestion, column, question, data) {\n  onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n  if (!!cellQuestion.locPlaceholder && cellQuestion.locPlaceholder.isEmpty && !question.locPlaceholder.isEmpty) {\n    cellQuestion.optionsCaption = question.optionsCaption;\n  }\n}\nvar matrixDropdownColumnTypes = {\n  dropdown: {\n    onCellQuestionUpdate: (cellQuestion, column, question, data) => {\n      onUpdateSelectDropdownCellQuestion(cellQuestion, column, question, data);\n    }\n  },\n  checkbox: {\n    onCellQuestionUpdate: (cellQuestion, column, question, data) => {\n      onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n      cellQuestion.colCount = column.colCount > -1 ? column.colCount : question.columnColCount;\n    }\n  },\n  radiogroup: {\n    onCellQuestionUpdate: (cellQuestion, column, question, data) => {\n      onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n      cellQuestion.colCount = column.colCount > -1 ? column.colCount : question.columnColCount;\n    }\n  },\n  tagbox: {\n    onCellQuestionUpdate: (cellQuestion, column, question, data) => {\n      onUpdateSelectBaseCellQuestion(cellQuestion, column, question, data);\n    }\n  },\n  text: {},\n  comment: {},\n  boolean: {\n    onCellQuestionUpdate: (cellQuestion, column, question, data) => {\n      cellQuestion.renderAs = column.renderAs;\n    }\n  },\n  expression: {},\n  rating: {}\n};\n/**\n * An auxiliary class that describes a column in a [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) or [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model).\n *\n * You can get an object of this class from the [`columns`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#columns) array or by calling the [`getColumnByName()`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#getColumnByName) method on a matrix instance.\n */\nclass MatrixDropdownColumn extends Base {\n  static getColumnTypes() {\n    var res = [];\n    for (var key in matrixDropdownColumnTypes) {\n      res.push(key);\n    }\n    return res;\n  }\n  constructor(name, title, colOwner) {\n    super();\n    this.indexValue = -1;\n    this._hasVisibleCell = true;\n    this.isColumnsVisibleIf = true;\n    this.previousChoicesId = undefined;\n    this.colOwnerValue = colOwner;\n    this.createLocalizableString(\"totalFormat\", this);\n    this.createLocalizableString(\"cellHint\", this);\n    this.registerPropertyChangedHandlers([\"showInMultipleColumns\"], () => {\n      this.doShowInMultipleColumnsChanged();\n    });\n    this.registerPropertyChangedHandlers([\"visible\"], () => {\n      this.doColumnVisibilityChanged();\n    });\n    this.updateTemplateQuestion(undefined, name, title);\n  }\n  getOriginalObj() {\n    return this.templateQuestion;\n  }\n  getClassNameProperty() {\n    return \"cellType\";\n  }\n  getSurvey(live = false) {\n    return !!this.colOwner ? this.colOwner.survey : null;\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.templateQuestion.autoOtherMode = this.isShowInMultipleColumns;\n    this.templateQuestion.endLoadingFromJson();\n    this.templateQuestion.onGetSurvey = () => {\n      return this.getSurvey();\n    };\n  }\n  getDynamicPropertyName() {\n    return \"cellType\";\n  }\n  getDynamicType() {\n    if (this.cellType === \"default\") return \"question\";\n    return this.calcCellQuestionType(null);\n  }\n  get colOwner() {\n    return this.colOwnerValue;\n  }\n  set colOwner(value) {\n    this.colOwnerValue = value;\n    if (!!value) {\n      this.updateTemplateQuestion();\n      this.setParentQuestionToTemplate(this.templateQuestion);\n    }\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.locTitle.strChanged();\n  }\n  addUsedLocales(locales) {\n    super.addUsedLocales(locales);\n    this.templateQuestion.addUsedLocales(locales);\n  }\n  get index() {\n    return this.indexValue;\n  }\n  setIndex(val) {\n    this.indexValue = val;\n  }\n  getType() {\n    return \"matrixdropdowncolumn\";\n  }\n  /**\n   * Specifies the type of column cells.\n   *\n   * Possible values:\n   *\n   * - [`\"dropdown\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model)\n   * - [`\"checkbox\"`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model)\n   * - [`\"radiogroup\"`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model)\n   * - [`\"tagbox\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model)\n   * - [`\"text\"`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model)\n   * - [`\"comment\"`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model)\n   * - [`\"boolean\"`](https://surveyjs.io/form-library/documentation/api-reference/boolean-question-model)\n   * - [`\"expression\"`](https://surveyjs.io/form-library/documentation/api-reference/expression-model)\n   * - [`\"rating\"`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model)\n   * - `\"default\"` (default) - Inherits the input type from the [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#cellType) property specified for the parent matrix.\n   *\n   * The input types are based upon standalone question types. Depending on the selected input type, the matrix column can have additional configuration properties inherited from the corresponding question type. For instance, Dropdown, Checkboxes, Radio Button Group, and Tag Box columns can specify the [`choices`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model#choices) array, similar to the question types upon which they are based. Refer to the API Reference of these question types for a full list of available properties.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   */\n  get cellType() {\n    return this.getPropertyValue(\"cellType\");\n  }\n  set cellType(val) {\n    val = val.toLocaleLowerCase();\n    this.updateTemplateQuestion(val);\n    this.setPropertyValue(\"cellType\", val);\n    if (!!this.colOwner) {\n      this.colOwner.onColumnCellTypeChanged(this);\n    }\n  }\n  get templateQuestion() {\n    return this.templateQuestionValue;\n  }\n  get value() {\n    return this.templateQuestion.name;\n  }\n  //For filtering columns\n  get isVisible() {\n    return true;\n  }\n  get isColumnVisible() {\n    if (this.isDesignMode) return true;\n    return this.visible && this.hasVisibleCell;\n  }\n  /**\n   * Gets or sets column visibility.\n   *\n   * If you want to display or hide a column based on a condition, specify the [`visibleIf`](#visibleIf) property.\n   * @see isRequired\n   * @see readOnly\n   */\n  get visible() {\n    return this.templateQuestion.visible;\n  }\n  set visible(val) {\n    this.templateQuestion.visible = val;\n  }\n  get hasVisibleCell() {\n    return this._hasVisibleCell;\n  }\n  set hasVisibleCell(newVal) {\n    this._hasVisibleCell = newVal;\n  }\n  getVisibleMultipleChoices() {\n    const choices = this.templateQuestion.visibleChoices;\n    if (!Array.isArray(choices)) return [];\n    if (!Array.isArray(this._visiblechoices)) return choices;\n    const res = new Array();\n    for (let i = 0; i < choices.length; i++) {\n      const item = choices[i];\n      if (this._visiblechoices.indexOf(item.value) > -1) res.push(item);\n    }\n    return res;\n  }\n  get getVisibleChoicesInCell() {\n    if (Array.isArray(this._visiblechoices)) return this._visiblechoices;\n    const res = this.templateQuestion.visibleChoices;\n    return Array.isArray(res) ? res : [];\n  }\n  setVisibleChoicesInCell(val) {\n    this._visiblechoices = val;\n  }\n  get isFilteredMultipleColumns() {\n    if (!this.showInMultipleColumns) return false;\n    const choices = this.templateQuestion.choices;\n    if (!Array.isArray(choices)) return false;\n    for (let i = 0; i < choices.length; i++) {\n      if (choices[i].visibleIf) return true;\n    }\n    return false;\n  }\n  /**\n   * A column ID that is not visible to respondents.\n   *\n   * > Column IDs must be unique.\n   * @see title\n   */\n  get name() {\n    return this.templateQuestion.name;\n  }\n  set name(val) {\n    this.templateQuestion.name = val;\n  }\n  /**\n   * A user-friendly column caption to display. If `title` is undefined, [`name`](#name) is displayed instead.\n   */\n  get title() {\n    return this.templateQuestion.title;\n  }\n  set title(val) {\n    this.templateQuestion.title = val;\n  }\n  get locTitle() {\n    return this.templateQuestion.locTitle;\n  }\n  get fullTitle() {\n    return this.locTitle.textOrHtml;\n  }\n  /**\n   * A value to show in HTML questions and in the dynamic titles and descriptions of survey elements when the cell value is empty.\n   *\n   * Default value: `\"\"`\n   *\n   * [Dynamic Texts](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#dynamic-texts (linkStyle))\n   */\n  get defaultDisplayValue() {\n    return this.templateQuestion.defaultDisplayValue;\n  }\n  set defaultDisplayValue(val) {\n    this.templateQuestion.defaultDisplayValue = val;\n  }\n  get locDefaultDisplayValue() {\n    return this.templateQuestion.locDefaultDisplayValue;\n  }\n  /**\n   * Marks the column as required. If a respondent skips any cell in a required column, the matrix displays a [validation error](#requiredErrorText).\n   *\n   * If you want to mark the column as required based on a condition, specify the [`requiredIf`](#requiredIf) property.\n   * @see visible\n   * @see readOnly\n   */\n  get isRequired() {\n    return this.getPropertyValue(\"isRequired\");\n  }\n  set isRequired(val) {\n    this.setPropertyValue(\"isRequired\", val);\n    this.templateQuestion.isRequired = val;\n  }\n  get isRenderedRequired() {\n    return this.getPropertyValue(\"isRenderedRequired\", this.isRequired);\n  }\n  set isRenderedRequired(val) {\n    this.setPropertyValue(\"isRenderedRequired\", val);\n  }\n  updateIsRenderedRequired(val) {\n    this.isRenderedRequired = val || this.isRequired;\n  }\n  get requiredMark() {\n    return this.isRenderedRequired && this.getSurvey() ? this.getSurvey().requiredMark : this.templateQuestion.requiredMark;\n  }\n  /**\n   * Specifies a custom error message for a required column.\n   * @see isRequired\n   */\n  get requiredErrorText() {\n    return this.templateQuestion.requiredErrorText;\n  }\n  set requiredErrorText(val) {\n    this.templateQuestion.requiredErrorText = val;\n  }\n  get locRequiredErrorText() {\n    return this.templateQuestion.locRequiredErrorText;\n  }\n  /**\n   * Makes the column read-only.\n   *\n   * If you want to switch the column to the read-only state based on a condition, specify the [`enableIf`](#enableIf) property.\n   * @see visible\n   * @see isRequired\n   */\n  get readOnly() {\n    return this.templateQuestion.readOnly;\n  }\n  set readOnly(val) {\n    this.templateQuestion.readOnly = val;\n  }\n  get hasOther() {\n    return this.templateQuestion.hasOther;\n  }\n  set hasOther(val) {\n    this.templateQuestion.hasOther = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this column becomes hidden.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visible\n   */\n  get visibleIf() {\n    return this.templateQuestion.visibleIf;\n  }\n  set visibleIf(val) {\n    this.templateQuestion.visibleIf = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this column becomes read-only.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   * @see readOnly\n   */\n  get enableIf() {\n    return this.templateQuestion.enableIf;\n  }\n  set enableIf(val) {\n    this.templateQuestion.enableIf = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, this column becomes required.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isRequired\n   */\n  get requiredIf() {\n    return this.templateQuestion.requiredIf;\n  }\n  set requiredIf(val) {\n    this.templateQuestion.requiredIf = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, all cells in this column are set to a value calculated using the [`defaultValueExpression`](#defaultValueExpression).\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see setValueIf\n   */\n  get resetValueIf() {\n    return this.templateQuestion.resetValueIf;\n  }\n  set resetValueIf(val) {\n    this.templateQuestion.resetValueIf = val;\n  }\n  /**\n   * An expression used to calculate the column's default value. This expression applies to all cells of this column until the cell value is specified by an end user or programmatically.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see setValueExpression\n   */\n  get defaultValueExpression() {\n    return this.templateQuestion.defaultValueExpression;\n  }\n  set defaultValueExpression(val) {\n    this.templateQuestion.defaultValueExpression = val;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, all cells in this column are set to a value calculated using the [`setValueExpression`](#setValueExpression).\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see resetValueIf\n   */\n  get setValueIf() {\n    return this.templateQuestion.setValueIf;\n  }\n  set setValueIf(val) {\n    this.templateQuestion.setValueIf = val;\n  }\n  /**\n   * An expression that calculates a value for all cells in this column.\n   *\n   * The `setValueExpression` is re-evaluated whenever a referenced question's value changes. If you also specify the [`setValueIf`](#setValueIf) expression, re-evaluation occurs only when it returns `true`.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   * @see defaultValueExpression\n   * @see resetValueIf\n   */\n  get setValueExpression() {\n    return this.templateQuestion.setValueExpression;\n  }\n  set setValueExpression(val) {\n    this.templateQuestion.setValueExpression = val;\n  }\n  /**\n   * Specifies whether a respondent is required to provide a unique response for each question within this column.\n   *\n   * Default value: `false`\n   */\n  get isUnique() {\n    return this.getPropertyValue(\"isUnique\");\n  }\n  set isUnique(val) {\n    this.setPropertyValue(\"isUnique\", val);\n  }\n  /**\n   * Specifies whether to create an individual column for each choice option. Applies only to columns of `\"checkbox\"` or `\"radiogroup\"` [`cellType`](#cellType).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/columnize-choice-options-of-matrix-cell/ (linkStyle))\n   */\n  get showInMultipleColumns() {\n    return this.getPropertyValue(\"showInMultipleColumns\");\n  }\n  set showInMultipleColumns(val) {\n    this.setPropertyValue(\"showInMultipleColumns\", val);\n  }\n  get isSupportMultipleColumns() {\n    return [\"checkbox\", \"radiogroup\"].indexOf(this.cellType) > -1;\n  }\n  get isShowInMultipleColumns() {\n    return this.showInMultipleColumns && this.isSupportMultipleColumns;\n  }\n  /**\n   * Column validators.\n   *\n   * [Data Validation](https://surveyjs.io/form-library/documentation/data-validation (linkStyle))\n   * @see isRequired\n   */\n  get validators() {\n    return this.templateQuestion.validators;\n  }\n  set validators(val) {\n    this.templateQuestion.validators = val;\n  }\n  /**\n   * An aggregation method used to calculate the column total.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default) - Disables total calculations.\n   * - `\"sum\"`\n   * - `\"count\"`\n   * - `\"min\"`\n   * - `\"max\"`\n   * - `\"avg\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalFormat\n   * @see totalDisplayStyle\n   */\n  get totalType() {\n    return this.getPropertyValue(\"totalType\");\n  }\n  set totalType(val) {\n    this.setPropertyValue(\"totalType\", val);\n  }\n  /**\n   * An expression used to calculate total values. Overrides the [`totalType`](#totalType) property.\n   *\n   * [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions (linkStyle))\n   */\n  get totalExpression() {\n    return this.getPropertyValue(\"totalExpression\");\n  }\n  set totalExpression(val) {\n    this.setPropertyValue(\"totalExpression\", val);\n  }\n  get hasTotal() {\n    return this.totalType != \"none\" || !!this.totalExpression;\n  }\n  /**\n   * A string pattern used to display column totals. To reference a total value within this pattern, use the `{0}` placeholder.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalType\n   * @see totalDisplayStyle\n   */\n  get totalFormat() {\n    return this.getLocalizableStringText(\"totalFormat\", \"\");\n  }\n  set totalFormat(val) {\n    this.setLocalizableStringText(\"totalFormat\", val);\n  }\n  get locTotalFormat() {\n    return this.getLocalizableString(\"totalFormat\");\n  }\n  get cellHint() {\n    return this.getLocalizableStringText(\"cellHint\", \"\");\n  }\n  set cellHint(val) {\n    this.setLocalizableStringText(\"cellHint\", val);\n  }\n  get locCellHint() {\n    return this.getLocalizableString(\"cellHint\");\n  }\n  get renderAs() {\n    return this.getPropertyValue(\"renderAs\");\n  }\n  set renderAs(val) {\n    this.setPropertyValue(\"renderAs\", val);\n    if (!!this.templateQuestion) {\n      this.templateQuestion.renderAs = val;\n    }\n  }\n  get totalMaximumFractionDigits() {\n    return this.getPropertyValue(\"totalMaximumFractionDigits\");\n  }\n  set totalMaximumFractionDigits(val) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"totalMaximumFractionDigits\", val);\n  }\n  get totalMinimumFractionDigits() {\n    return this.getPropertyValue(\"totalMinimumFractionDigits\");\n  }\n  set totalMinimumFractionDigits(val) {\n    if (val < -1 || val > 20) return;\n    this.setPropertyValue(\"totalMinimumFractionDigits\", val);\n  }\n  /**\n   * A format for calculated total values.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default)\n   * - `\"decimal\"`\n   * - `\"currency\"`\n   * - `\"percent\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalType\n   * @see totalFormat\n   * @see totalCurrency\n   */\n  get totalDisplayStyle() {\n    return this.getPropertyValue(\"totalDisplayStyle\");\n  }\n  set totalDisplayStyle(val) {\n    this.setPropertyValue(\"totalDisplayStyle\", val);\n  }\n  /**\n   * An alignment for calculated total values.\n   *\n   * Possible values:\n   *\n   * - `\"left\"`\n   * - `\"center\"`\n   * - `\"right\"`\n   * - `\"auto\"` (default) - Applies one of the values above based on the column's [cell type](#cellType).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/aggregate-data-within-form/ (linkStyle))\n   * @see totalType\n   * @see totalFormat\n   * @see totalCurrency\n   * @see totalDisplayStyle\n   */\n  get totalAlignment() {\n    return this.getPropertyValue(\"totalAlignment\");\n  }\n  set totalAlignment(val) {\n    this.setPropertyValue(\"totalAlignment\", val);\n  }\n  /**\n   * Specifies a currency used to display calculated total values. Applies only if [`totalDisplayStyle`](#totalDisplayStyle) is set to `\"currency\"`.\n   * @see totalType\n   */\n  get totalCurrency() {\n    return this.getPropertyValue(\"totalCurrency\");\n  }\n  set totalCurrency(val) {\n    if (getCurrecyCodes().indexOf(val) < 0) return;\n    this.setPropertyValue(\"totalCurrency\", val);\n  }\n  /**\n   * Gets or sets minimum column width in CSS values. By default, the matrix calculates column widths to optimally fit the content of all columns.\n   * @see width\n   */\n  get minWidth() {\n    return this.getPropertyValue(\"minWidth\", \"\");\n  }\n  set minWidth(val) {\n    this.setPropertyValue(\"minWidth\", val);\n  }\n  /**\n   * Gets or sets column width in CSS values. By default, the matrix calculates column widths to optimally fit the content of all columns.\n   * @see minWidth\n  */\n  get width() {\n    return this.templateQuestion.width;\n  }\n  set width(val) {\n    this.templateQuestion.width = val;\n  }\n  /**\n   * Gets or sets the number of columns used to arrange choice options. Applies only to columns of `\"checkbox\"` or `\"radiogroup\"` [`cellType`](#cellType).\n   *\n   * Default value: -1 (inherits the actual value from the parent matrix's [`columnColCount`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#columnColCount) property)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   */\n  get colCount() {\n    return this.getPropertyValue(\"colCount\");\n  }\n  set colCount(val) {\n    if (val < -1 || val > 4) return;\n    this.setPropertyValue(\"colCount\", val);\n  }\n  getLocale() {\n    return this.colOwner ? this.colOwner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text, name, item) {\n    return this.colOwner ? this.colOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name) {\n    return !!this.colOwner ? this.colOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return !!this.colOwner ? this.colOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    return this.colOwner ? this.colOwner.getProcessedText(text) : text;\n  }\n  createCellQuestion(row) {\n    var qType = this.calcCellQuestionType(row);\n    var cellQuestion = this.createNewQuestion(qType);\n    this.callOnCellQuestionUpdate(cellQuestion, row);\n    return cellQuestion;\n  }\n  startLoadingFromJson(json) {\n    super.startLoadingFromJson(json);\n    if (!!json && !json.cellType && !!json.choices) {\n      json.cellType = this.colOwner.getCellType();\n    }\n  }\n  updateCellQuestion(cellQuestion, data, onUpdateJson = null) {\n    this.setQuestionProperties(cellQuestion, onUpdateJson);\n  }\n  callOnCellQuestionUpdate(cellQuestion, data) {\n    var qType = cellQuestion.getType();\n    var qDefinition = matrixDropdownColumnTypes[qType];\n    if (qDefinition && qDefinition[\"onCellQuestionUpdate\"]) {\n      qDefinition[\"onCellQuestionUpdate\"](cellQuestion, this, this.colOwner, data);\n    }\n  }\n  defaultCellTypeChanged() {\n    this.updateTemplateQuestion();\n  }\n  calcCellQuestionType(row) {\n    let cellType = this.getDefaultCellQuestionType();\n    if (!!row && !!this.colOwner) {\n      cellType = this.colOwner.getCustomCellType(this, row, cellType);\n    }\n    return cellType;\n  }\n  getDefaultCellQuestionType(cellType) {\n    if (!cellType) cellType = this.cellType;\n    if (cellType !== \"default\") return cellType;\n    if (this.colOwner) return this.colOwner.getCellType();\n    return settings.matrix.defaultCellType;\n  }\n  updateTemplateQuestion(newCellType, name, title) {\n    const curCellType = this.getDefaultCellQuestionType(newCellType);\n    const prevCellType = this.templateQuestion ? this.templateQuestion.getType() : \"\";\n    if (curCellType === prevCellType) return;\n    if (this.templateQuestion) {\n      this.removeProperties(prevCellType);\n    }\n    this.templateQuestionValue = this.createNewQuestion(curCellType);\n    this.templateQuestion.locOwner = this;\n    this.addProperties(curCellType);\n    if (!!name) {\n      this.name = name;\n    }\n    if (!!title) {\n      this.title = title;\n    } else {\n      this.templateQuestion.locTitle.strChanged();\n    }\n    if (settings.serialization.matrixDropdownColumnSerializeTitle) {\n      this.templateQuestion.locTitle.serializeCallBackText = true;\n    }\n    this.templateQuestion.onPropertyChanged.add((sender, options) => {\n      this.propertyValueChanged(options.name, options.oldValue, options.newValue, options.arrayChanges, options.target);\n    });\n    this.templateQuestion.onNestedPropertyChanged.add((sender, options) => {\n      if (this.colOwner && !this.isLoadingFromJson) {\n        this.colOwner.onColumnNestedPropertyChanged(this, options.name, options.nestedName, options.newValue);\n      }\n    });\n    this.templateQuestion.onItemValuePropertyChanged.add((sender, options) => {\n      this.doItemValuePropertyChanged(options.propertyName, options.obj, options.name, options.newValue, options.oldValue);\n    });\n    this.templateQuestion.isContentElement = true;\n    if (!this.isLoadingFromJson) {\n      this.templateQuestion.onGetSurvey = () => {\n        return this.getSurvey();\n      };\n    }\n    this.templateQuestion.locTitle.strChanged();\n  }\n  createNewQuestion(cellType) {\n    var question = Serializer.createClass(cellType);\n    if (!question) {\n      question = Serializer.createClass(\"text\");\n    }\n    question.loadingOwner = this;\n    question.isEditableTemplateElement = true;\n    question.autoOtherMode = this.isShowInMultipleColumns;\n    this.setQuestionProperties(question);\n    this.setParentQuestionToTemplate(question);\n    return question;\n  }\n  setParentQuestionToTemplate(question) {\n    if (!!this.colOwner && this.colOwner.isQuestion) {\n      question.setParentQuestion(this.colOwner);\n    }\n  }\n  setQuestionProperties(question, onUpdateJson = null) {\n    if (this.templateQuestion) {\n      var json = new JsonObject().toJsonObject(this.templateQuestion, true);\n      if (onUpdateJson) {\n        onUpdateJson(json);\n      }\n      json.type = question.getType();\n      if (this.cellType === \"default\" && !!this.colOwner && this.colOwner.hasChoices()) {\n        delete json[\"choices\"];\n      }\n      delete json[\"itemComponent\"];\n      if (this.jsonObj && json.type === \"rating\" && this.isLoadingFromJson) {\n        Object.keys(this.jsonObj).forEach(prop => {\n          json[prop] = this.jsonObj[prop];\n        });\n      }\n      if (json[\"choicesOrder\"] === \"random\") {\n        json[\"choicesOrder\"] = \"none\";\n        const visChoices = this.templateQuestion[\"visibleChoices\"];\n        if (Array.isArray(visChoices)) {\n          json[\"choices\"] = visChoices;\n        }\n      }\n      new JsonObject().toObject(json, question);\n      question.isContentElement = this.templateQuestion.isContentElement;\n      this.previousChoicesId = undefined;\n      question.loadedChoicesFromServerCallback = () => {\n        if (!this.isShowInMultipleColumns) return;\n        if (!!this.previousChoicesId && this.previousChoicesId !== question.id) return;\n        this.previousChoicesId = question.id;\n        const choices = question.visibleChoices;\n        this.templateQuestion.choices = choices;\n        this.propertyValueChanged(\"choices\", choices, choices);\n      };\n    }\n  }\n  propertyValueChanged(name, oldValue, newValue, arrayChanges, target) {\n    super.propertyValueChanged(name, oldValue, newValue, arrayChanges, target);\n    if (name === \"isRequired\") {\n      this.updateIsRenderedRequired(newValue);\n    }\n    if (!this.colOwner || this.isLoadingFromJson) return;\n    if (this.isShowInMultipleColumns) {\n      if (name === \"choicesOrder\") return;\n      if ([\"visibleChoices\", \"choices\"].indexOf(name) > -1) {\n        this.colOwner.onShowInMultipleColumnsChanged(this);\n      }\n    }\n    if (!Serializer.hasOriginalProperty(this, name)) return;\n    this.colOwner.onColumnPropertyChanged(this, name, newValue);\n  }\n  doItemValuePropertyChanged(propertyName, obj, name, newValue, oldValue) {\n    if (!Serializer.hasOriginalProperty(obj, name)) return;\n    if (this.colOwner != null && !this.isLoadingFromJson) {\n      this.colOwner.onColumnItemValuePropertyChanged(this, propertyName, obj, name, newValue, oldValue);\n    }\n  }\n  doShowInMultipleColumnsChanged() {\n    if (this.colOwner != null) {\n      this.colOwner.onShowInMultipleColumnsChanged(this);\n    }\n    if (this.templateQuestion) {\n      this.templateQuestion.autoOtherMode = this.isShowInMultipleColumns;\n    }\n  }\n  doColumnVisibilityChanged() {\n    if (this.colOwner != null && !this.isDesignMode) {\n      this.colOwner.onColumnVisibilityChanged(this);\n    }\n  }\n  getProperties(curCellType) {\n    return Serializer.getDynamicPropertiesByObj(this, curCellType);\n  }\n  removeProperties(curCellType) {\n    var properties = this.getProperties(curCellType);\n    for (var i = 0; i < properties.length; i++) {\n      var prop = properties[i];\n      delete this[prop.name];\n      if (prop.serializationProperty) {\n        delete this[prop.serializationProperty];\n      }\n    }\n  }\n  addProperties(curCellType) {\n    const props = this.getProperties(curCellType);\n    Serializer.addDynamicPropertiesIntoObj(this, this.templateQuestion, props);\n  }\n}\nSerializer.addClass(\"matrixdropdowncolumn\", [{\n  name: \"!name\",\n  isUnique: true\n}, {\n  name: \"title\",\n  serializationProperty: \"locTitle\",\n  dependsOn: \"name\",\n  onPropertyEditorUpdate: function (obj, editor) {\n    if (!!obj && !!editor) {\n      editor.placeholder = obj.locTitle.getPlaceholder();\n    }\n  }\n}, {\n  name: \"cellHint\",\n  serializationProperty: \"locCellHint\",\n  visible: false\n}, {\n  name: \"cellType\",\n  default: \"default\",\n  choices: () => {\n    var res = MatrixDropdownColumn.getColumnTypes();\n    res.splice(0, 0, \"default\");\n    return res;\n  }\n}, {\n  name: \"colCount\",\n  default: -1,\n  choices: [-1, 0, 1, 2, 3, 4]\n}, {\n  name: \"isRequired:boolean\",\n  defaultFunc: obj => {\n    const q = obj === null || obj === void 0 ? void 0 : obj.templateQuestion;\n    if (!!q) {\n      return Serializer.findProperty(q.getType(), \"isRequired\").getDefaultValue(q) || false;\n    }\n    return false;\n  }\n}, \"isUnique:boolean\", {\n  name: \"requiredErrorText:text\",\n  serializationProperty: \"locRequiredErrorText\"\n}, \"readOnly:boolean\", {\n  name: \"minWidth\",\n  onPropertyEditorUpdate: function (obj, editor) {\n    if (!!obj && !!editor) {\n      editor.value = obj.minWidth;\n    }\n  }\n}, \"width\", {\n  name: \"visible:switch\",\n  default: true,\n  overridingProperty: \"visibleIf\"\n}, \"visibleIf:condition\", \"enableIf:condition\", \"requiredIf:condition\", \"resetValueIf:condition\", \"setValueIf:condition\", \"setValueExpression:expression\", {\n  name: \"showInMultipleColumns:boolean\",\n  dependsOn: \"cellType\",\n  visibleIf: obj => {\n    return obj.isSupportMultipleColumns;\n  }\n}, {\n  name: \"validators:validators\",\n  baseClassName: \"surveyvalidator\",\n  classNamePart: \"validator\"\n}, {\n  name: \"totalType\",\n  visibleIf: obj => !obj.isShowInMultipleColumns,\n  default: \"none\",\n  choices: [\"none\", \"sum\", \"count\", \"min\", \"max\", \"avg\"]\n}, {\n  name: \"totalExpression:expression\",\n  visibleIf: obj => !obj.isShowInMultipleColumns\n}, {\n  name: \"totalFormat\",\n  serializationProperty: \"locTotalFormat\",\n  visibleIf: obj => obj.hasTotal\n}, {\n  name: \"totalDisplayStyle\",\n  visibleIf: obj => obj.hasTotal,\n  default: \"none\",\n  choices: [\"none\", \"decimal\", \"currency\", \"percent\"]\n}, {\n  name: \"totalAlignment\",\n  visibleIf: obj => obj.hasTotal,\n  default: \"auto\",\n  choices: [\"auto\", \"left\", \"center\", \"right\"]\n}, {\n  name: \"totalCurrency\",\n  visibleIf: obj => obj.hasTotal,\n  choices: () => {\n    return getCurrecyCodes();\n  },\n  default: \"USD\"\n}, {\n  name: \"totalMaximumFractionDigits:number\",\n  default: -1,\n  visibleIf: obj => obj.hasTotal\n}, {\n  name: \"totalMinimumFractionDigits:number\",\n  default: -1,\n  visibleIf: obj => obj.hasTotal\n}, {\n  name: \"renderAs\",\n  default: \"default\",\n  visible: false\n}, {\n  name: \"defaultDisplayValue\",\n  serializationProperty: \"locDefaultDisplayValue\"\n}], function () {\n  return new MatrixDropdownColumn(\"\");\n});\nfunction getId(id, isError, isDetail) {\n  return id + (isError ? \"-error\" : \"\") + (isDetail ? \"-detail\" : \"\");\n}\nclass QuestionMatrixDropdownRenderedCell {\n  constructor() {\n    this.minWidth = \"\";\n    this.width = \"\";\n    this.colSpans = 1;\n    this.isActionsCell = false;\n    this.isErrorsCell = false;\n    this.isDragHandlerCell = false;\n    this.isDetailRowCell = false;\n    this.classNameValue = \"\";\n    this.idValue = QuestionMatrixDropdownRenderedCell.counter++;\n  }\n  get requiredMark() {\n    return this.column && this.column.isRenderedRequired ? this.column.requiredMark : undefined;\n  }\n  get hasQuestion() {\n    return !!this.question && !this.isErrorsCell;\n  }\n  get hasTitle() {\n    return !!this.locTitle;\n  }\n  get hasPanel() {\n    return !!this.panel;\n  }\n  get id() {\n    let id = this.question ? this.question.id : this.idValue.toString();\n    if (this.isChoice) {\n      id += \"-\" + (Number.isInteger(this.choiceIndex) ? \"index\" + this.choiceIndex.toString() : this.item.id);\n    }\n    return getId(id, this.isErrorsCell, this.isDetailRowCell);\n  }\n  get item() {\n    return this.itemValue;\n  }\n  set item(val) {\n    this.itemValue = val;\n    if (!!val) {\n      val.hideCaption = true;\n    }\n  }\n  get isChoice() {\n    return !!this.item;\n  }\n  get isItemChoice() {\n    return this.isChoice && !this.isOtherChoice;\n  }\n  get choiceValue() {\n    return this.isChoice ? this.item.value : null;\n  }\n  get isCheckbox() {\n    return this.isItemChoice && this.question.isDescendantOf(\"checkbox\");\n  }\n  get isRadio() {\n    return this.isItemChoice && this.question.isDescendantOf(\"radiogroup\");\n  }\n  get isFirstChoice() {\n    return this.choiceIndex === 0;\n  }\n  set className(val) {\n    this.classNameValue = val;\n  }\n  get className() {\n    const builder = new CssClassBuilder().append(this.classNameValue);\n    if (this.hasQuestion) {\n      builder.append(this.question.cssClasses.hasError, this.question.errors.length > 0).append(this.question.cssClasses.answered, this.question.isAnswered);\n    }\n    return builder.toString();\n  }\n  get cellQuestionWrapperClassName() {\n    return this.cell.getQuestionWrapperClassName(this.matrix.cssClasses.cellQuestionWrapper);\n  }\n  get isVisible() {\n    var _a;\n    return !this.hasQuestion && !this.isErrorsCell || !((_a = this.matrix) === null || _a === void 0 ? void 0 : _a.isMobile) || this.question.isVisible;\n  }\n  get showResponsiveTitle() {\n    var _a;\n    return this.hasQuestion && ((_a = this.matrix) === null || _a === void 0 ? void 0 : _a.isMobile);\n  }\n  get responsiveTitleCss() {\n    return new CssClassBuilder().append(this.matrix.cssClasses.cellResponsiveTitle).toString();\n  }\n  get responsiveLocTitle() {\n    return this.cell.column.locTitle;\n  }\n  get headers() {\n    if (this.cell && this.cell.column) {\n      if (this.matrix.IsMultiplyColumn(this.cell.column)) {\n        if (!!this.item) {\n          return this.item.locText.renderedHtml;\n        } else {\n          return \"\";\n        }\n      }\n      let cellHint = this.cell.column.cellHint;\n      if (!!cellHint) {\n        if (cellHint.trim() === \"\") return \"\";\n        return this.cell.column.locCellHint.renderedHtml;\n      }\n      if (this.hasQuestion && this.question.isVisible && this.question.title) return this.question.title;\n      return this.cell.column.title;\n    }\n    if (this.hasQuestion && this.question.isVisible) {\n      return this.question.locTitle.renderedHtml;\n    }\n    if (this.hasTitle) {\n      return this.locTitle.renderedHtml || \"\";\n    }\n    return \"\";\n  }\n  getTitle() {\n    return this.matrix && this.matrix.showHeader ? this.headers : \"\";\n  }\n  calculateFinalClassName(matrixCssClasses) {\n    const questionCss = this.cell.question.cssClasses;\n    // 'text-align': $data.isChoice ? 'center':\n    const builder = new CssClassBuilder().append(questionCss.itemValue, !!questionCss).append(questionCss.asCell, !!questionCss);\n    return builder.append(matrixCssClasses.cell, builder.isEmpty() && !!matrixCssClasses).append(matrixCssClasses.choiceCell, this.isChoice).toString();\n  }\n  focusIn() {\n    if (this.question) {\n      this.question.focusIn();\n    }\n  }\n}\nQuestionMatrixDropdownRenderedCell.counter = 1;\nclass QuestionMatrixDropdownRenderedRow extends Base {\n  constructor(cssClasses, isDetailRow = false) {\n    super();\n    this.cssClasses = cssClasses;\n    this.isDetailRow = isDetailRow;\n    this.hasEndActions = false;\n    this.isErrorsRow = false;\n    this.cells = [];\n    this.idValue = QuestionMatrixDropdownRenderedRow.counter++;\n  }\n  get id() {\n    var _a;\n    return getId(((_a = this.row) === null || _a === void 0 ? void 0 : _a.id) || this.idValue.toString(), this.isErrorsRow, this.isDetailRow);\n  }\n  get dropTargetId() {\n    var _a;\n    return (_a = this.row) === null || _a === void 0 ? void 0 : _a.id;\n  }\n  get attributes() {\n    if (!this.row) return {};\n    return {\n      \"data-sv-drop-target-matrix-row\": this.row.id\n    };\n  }\n  get className() {\n    var _a, _b;\n    return new CssClassBuilder().append(this.cssClasses.row).append(this.cssClasses.detailRow, this.isDetailRow).append(this.cssClasses.rowHasPanel, (_a = this.row) === null || _a === void 0 ? void 0 : _a.hasPanel).append(this.cssClasses.expandedRow, ((_b = this.row) === null || _b === void 0 ? void 0 : _b.isDetailPanelShowing) && !this.isDetailRow).append(this.cssClasses.rowHasEndActions, this.hasEndActions).append(this.cssClasses.ghostRow, this.isGhostRow).append(this.cssClasses.rowAdditional, this.isAdditionalClasses).toString();\n  }\n  setRootElement(val) {\n    this.rootElement = val;\n  }\n  getRootElement() {\n    return this.rootElement;\n  }\n  focusCell(cellIndex) {\n    if (this.rootElement) {\n      const inputElementSelector = `:scope td:nth-of-type(${cellIndex + 1}) input, :scope td:nth-of-type(${cellIndex + 1}) button`;\n      const inputElement = this.rootElement.querySelectorAll(inputElementSelector)[0];\n      if (inputElement) {\n        inputElement.focus();\n      }\n    }\n  }\n}\nQuestionMatrixDropdownRenderedRow.counter = 1;\n__decorate([property({\n  defaultValue: false\n})], QuestionMatrixDropdownRenderedRow.prototype, \"isGhostRow\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionMatrixDropdownRenderedRow.prototype, \"isAdditionalClasses\", void 0);\n__decorate([property({\n  defaultValue: true\n})], QuestionMatrixDropdownRenderedRow.prototype, \"visible\", void 0);\nclass QuestionMatrixDropdownRenderedErrorRow extends QuestionMatrixDropdownRenderedRow {\n  constructor(cssClasses) {\n    super(cssClasses);\n    this.isErrorsRow = true;\n  }\n  get attributes() {\n    return {};\n  }\n  get className() {\n    return new CssClassBuilder().append(this.cssClasses.row).append(this.cssClasses.errorRow).toString();\n  }\n  onAfterCreated() {\n    const callback = () => {\n      this.visible = this.cells.some(cell => cell.question && cell.question.hasVisibleErrors);\n    };\n    this.cells.forEach(cell => {\n      if (cell.question) {\n        cell.question.registerFunctionOnPropertyValueChanged(\"hasVisibleErrors\", callback);\n      }\n    });\n    callback();\n  }\n}\nclass QuestionMatrixDropdownRenderedEmptyRow extends QuestionMatrixDropdownRenderedRow {\n  constructor(cssClasses, customId) {\n    super(cssClasses);\n    this.customId = customId;\n    this.isErrorsRow = false;\n  }\n  get attributes() {\n    return {};\n  }\n  get dropTargetId() {\n    return this.customId;\n  }\n  get className() {\n    return new CssClassBuilder().append(this.cssClasses.row).append(this.cssClasses.rowEmpty).toString();\n  }\n}\nclass QuestionMatrixDropdownRenderedTable extends Base {\n  getIsAnimationAllowed() {\n    return super.getIsAnimationAllowed() && this.matrix.animationAllowed;\n  }\n  getRenderedRowsAnimationOptions() {\n    const onBeforeRunAnimation = el => {\n      el.querySelectorAll(\":scope > td > *\").forEach(el => {\n        prepareElementForVerticalAnimation(el);\n      });\n    };\n    const onAfterRunAnimation = el => {\n      el.querySelectorAll(\":scope > td > *\").forEach(el => {\n        cleanHtmlElementAfterAnimation(el);\n      });\n    };\n    return {\n      isAnimationEnabled: () => {\n        return this.animationAllowed;\n      },\n      getRerenderEvent: () => this.onElementRerendered,\n      getAnimatedElement(el) {\n        return el.getRootElement();\n      },\n      getLeaveOptions: () => {\n        return {\n          cssClass: this.cssClasses.rowLeave,\n          onBeforeRunAnimation,\n          onAfterRunAnimation\n        };\n      },\n      getEnterOptions: (_, info) => {\n        return {\n          cssClass: this.cssClasses.rowEnter,\n          onBeforeRunAnimation,\n          onAfterRunAnimation\n        };\n      },\n      getKey: item => {\n        return item.id;\n      }\n    };\n  }\n  updateRenderedRows() {\n    this.renderedRows = this.rows;\n  }\n  get renderedRows() {\n    return this._renderedRows;\n  }\n  set renderedRows(val) {\n    this.renderedRowsAnimation.sync(val);\n  }\n  constructor(matrix) {\n    super();\n    this.matrix = matrix;\n    this._renderedRows = [];\n    this.renderedRowsAnimation = new AnimationGroup(this.getRenderedRowsAnimationOptions(), val => {\n      this._renderedRows = val;\n    }, () => this._renderedRows);\n    this.hasActionCellInRowsValues = {};\n    this.build();\n  }\n  get showTable() {\n    return this.getPropertyValue(\"showTable\", true);\n  }\n  get showHeader() {\n    return this.getPropertyValue(\"showHeader\");\n  }\n  get showAddRow() {\n    return this.getPropertyValue(\"showAddRow\", false);\n  }\n  get showAddRowOnTop() {\n    return this.getPropertyValue(\"showAddRowOnTop\", false);\n  }\n  get showAddRowOnBottom() {\n    return this.getPropertyValue(\"showAddRowOnBottom\", false);\n  }\n  get showFooter() {\n    return this.matrix.hasFooter && this.matrix.isColumnLayoutHorizontal;\n  }\n  get hasFooter() {\n    return !!this.footerRow;\n  }\n  get hasRemoveRows() {\n    return this.hasRemoveRowsValue;\n  }\n  isRequireReset() {\n    return this.isRequireResetValue || this.hasRemoveRows != this.matrix.canRemoveRows || !this.matrix.isColumnLayoutHorizontal;\n  }\n  requireReset() {\n    this.isRequireResetValue = true;\n  }\n  get headerRow() {\n    return this.headerRowValue;\n  }\n  get footerRow() {\n    return this.footerRowValue;\n  }\n  get isRowsDragAndDrop() {\n    return this.matrix.isRowsDragAndDrop && this.matrix.isColumnLayoutHorizontal;\n  }\n  get showCellErrorsTop() {\n    //todo\n    return this.matrix.getErrorLocation() === \"top\";\n  }\n  get showCellErrorsBottom() {\n    //todo\n    return this.matrix.getErrorLocation() === \"bottom\";\n  }\n  build() {\n    this.hasRemoveRowsValue = this.matrix.canRemoveRows;\n    //build rows now\n    this.matrix.visibleRows;\n    this.cssClasses = this.matrix.cssClasses;\n    this.buildRowsActions();\n    this.buildHeader();\n    this.buildRows();\n    this.buildFooter();\n    this.updateShowTableAndAddRow();\n  }\n  updateShowTableAndAddRow() {\n    const showTable = this.rows.length > 0 || this.matrix.isDesignMode || !this.matrix.getShowColumnsIfEmpty();\n    this.setPropertyValue(\"showTable\", showTable);\n    const isDesignMode = this.matrix.isDesignMode;\n    const showAddRow = !isDesignMode && this.matrix.canAddRow && showTable;\n    let showAddRowOnTop = showAddRow;\n    let showAddRowOnBottom = showAddRow;\n    if (showAddRowOnTop) {\n      if (this.matrix.getAddRowLocation() === \"default\") {\n        showAddRowOnTop = !this.matrix.isColumnLayoutHorizontal;\n      } else {\n        showAddRowOnTop = this.matrix.getAddRowLocation() !== \"bottom\";\n      }\n    }\n    if (showAddRowOnBottom && this.matrix.getAddRowLocation() !== \"topBottom\") {\n      showAddRowOnBottom = !showAddRowOnTop;\n    }\n    this.setPropertyValue(\"showAddRow\", !isDesignMode && this.matrix.canAddRow);\n    this.setPropertyValue(\"showAddRowOnTop\", showAddRowOnTop);\n    this.setPropertyValue(\"showAddRowOnBottom\", showAddRowOnBottom);\n  }\n  onAddedRow(row, index) {\n    if (this.getRenderedDataRowCount() >= this.matrix.visibleRows.length) return;\n    let rowIndex = this.getRenderedRowIndexByIndex(index);\n    this.rowsActions.splice(index, 0, this.buildRowActions(row));\n    this.addHorizontalRow(this.rows, row, rowIndex);\n    this.updateShowTableAndAddRow();\n  }\n  getRenderedRowIndexByIndex(index) {\n    let res = 0;\n    let dataRowIndex = 0;\n    for (var i = 0; i < this.rows.length; i++) {\n      if (dataRowIndex === index) {\n        if (this.rows[i].isErrorsRow || this.rows[i].isDetailRow) {\n          res++;\n          if (i + 1 < this.rows.length && this.rows[i + 1].isDetailRow) {\n            res++;\n          }\n        }\n        break;\n      }\n      res++;\n      if (!this.rows[i].isErrorsRow && !this.rows[i].isDetailRow) dataRowIndex++;\n    }\n    if (dataRowIndex < index) return this.rows.length;\n    return res;\n  }\n  getRenderedDataRowCount() {\n    var res = 0;\n    for (var i = 0; i < this.rows.length; i++) {\n      if (!this.rows[i].isErrorsRow && !this.rows[i].isDetailRow) res++;\n    }\n    return res;\n  }\n  onRemovedRow(row) {\n    var rowIndex = this.getRenderedRowIndex(row);\n    if (rowIndex < 0) return;\n    this.rowsActions.splice(rowIndex, 1);\n    var removeCount = 1;\n    if (rowIndex < this.rows.length - 1 && this.showCellErrorsBottom && this.rows[rowIndex + 1].isErrorsRow) {\n      removeCount++;\n    }\n    if (rowIndex < this.rows.length - 1 && (this.rows[rowIndex + 1].isDetailRow || this.showCellErrorsBottom && rowIndex + 1 < this.rows.length - 1 && this.rows[rowIndex + 2].isDetailRow)) {\n      removeCount++;\n    }\n    if (rowIndex > 0 && this.showCellErrorsTop && this.rows[rowIndex - 1].isErrorsRow) {\n      rowIndex--;\n      removeCount++;\n    }\n    this.rows.splice(rowIndex, removeCount);\n    this.updateShowTableAndAddRow();\n  }\n  onDetailPanelChangeVisibility(row, isShowing) {\n    const rowIndex = this.getRenderedRowIndex(row);\n    if (rowIndex < 0) return;\n    let currentIndex = rowIndex;\n    if (this.showCellErrorsBottom) currentIndex++;\n    var panelRowIndex = currentIndex < this.rows.length - 1 && this.rows[currentIndex + 1].isDetailRow ? currentIndex + 1 : -1;\n    if (isShowing && panelRowIndex > -1 || !isShowing && panelRowIndex < 0) return;\n    if (isShowing) {\n      var detailRow = this.createDetailPanelRow(row, this.rows[rowIndex]);\n      this.rows.splice(currentIndex + 1, 0, detailRow);\n    } else {\n      this.rows.splice(panelRowIndex, 1);\n    }\n  }\n  focusActionCell(row, actionCellIndex) {\n    let row2Focus = this.rows[this.rows.length - 1];\n    if (this.matrix.isColumnLayoutHorizontal) {\n      const nextRenderedRowIndex = this.getRenderedRowIndex(row);\n      row2Focus = this.rows[nextRenderedRowIndex];\n    }\n    row2Focus === null || row2Focus === void 0 ? void 0 : row2Focus.focusCell(actionCellIndex);\n  }\n  getRenderedRowIndex(row) {\n    for (var i = 0; i < this.rows.length; i++) {\n      if (this.rows[i].row == row) return i;\n    }\n    return -1;\n  }\n  buildRowsActions() {\n    this.rowsActions = [];\n    var rows = this.matrix.visibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      this.rowsActions.push(this.buildRowActions(rows[i]));\n    }\n  }\n  createRenderedRow(cssClasses, isDetailRow = false) {\n    return new QuestionMatrixDropdownRenderedRow(cssClasses, isDetailRow);\n  }\n  createErrorRenderedRow(cssClasses) {\n    return new QuestionMatrixDropdownRenderedErrorRow(cssClasses);\n  }\n  createEmptyRenderedRow(cssClasses) {\n    return new QuestionMatrixDropdownRenderedEmptyRow(cssClasses, this.matrix.id);\n  }\n  buildHeader() {\n    var colHeaders = this.matrix.isColumnLayoutHorizontal && this.matrix.showHeader;\n    var isShown = colHeaders || this.matrix.hasRowText && !this.matrix.isColumnLayoutHorizontal;\n    this.setPropertyValue(\"showHeader\", isShown);\n    if (!isShown) return;\n    this.headerRowValue = this.createRenderedRow(this.cssClasses);\n    if (this.isRowsDragAndDrop) {\n      this.headerRow.cells.push(this.createHeaderCell(null, \"action\", this.cssClasses.actionsCellDrag));\n    }\n    if (this.hasActionCellInRows(\"start\")) {\n      this.headerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n    if (this.matrix.hasRowText && this.matrix.showHeader) {\n      this.headerRow.cells.push(this.createHeaderCell(null));\n    }\n    if (this.matrix.isColumnLayoutHorizontal) {\n      for (var i = 0; i < this.matrix.columns.length; i++) {\n        var column = this.matrix.columns[i];\n        if (!column.isColumnVisible) continue;\n        if (this.matrix.IsMultiplyColumn(column)) {\n          this.createMutlipleColumnsHeader(column);\n        } else {\n          this.headerRow.cells.push(this.createHeaderCell(column));\n        }\n      }\n    } else {\n      var rows = this.matrix.visibleRows;\n      for (var i = 0; i < rows.length; i++) {\n        const cell = this.createTextCell(rows[i].locText);\n        this.setHeaderCellCssClasses(cell);\n        cell.row = rows[i];\n        this.headerRow.cells.push(cell);\n      }\n      if (this.matrix.hasFooter) {\n        const cell = this.createTextCell(this.matrix.getFooterText());\n        this.setHeaderCellCssClasses(cell);\n        this.headerRow.cells.push(cell);\n      }\n    }\n    if (this.hasActionCellInRows(\"end\")) {\n      this.headerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n  }\n  buildFooter() {\n    if (!this.showFooter) return;\n    this.footerRowValue = this.createRenderedRow(this.cssClasses);\n    if (this.isRowsDragAndDrop) {\n      this.footerRow.cells.push(this.createHeaderCell(null));\n    }\n    if (this.hasActionCellInRows(\"start\")) {\n      this.footerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n    if (this.matrix.hasRowText) {\n      const cell = this.createTextCell(this.matrix.getFooterText());\n      cell.className = new CssClassBuilder().append(cell.className).append(this.cssClasses.footerTotalCell).toString();\n      this.footerRow.cells.push(cell);\n    }\n    var cells = this.matrix.visibleTotalRow.cells;\n    for (var i = 0; i < cells.length; i++) {\n      var cell = cells[i];\n      if (!cell.column.isColumnVisible) continue;\n      if (this.matrix.IsMultiplyColumn(cell.column)) {\n        this.createMutlipleColumnsFooter(this.footerRow, cell);\n      } else {\n        var editCell = this.createEditCell(cell);\n        if (cell.column) {\n          this.setCellWidth(cell.column, editCell);\n        }\n        editCell.className = new CssClassBuilder().append(editCell.className).append(this.cssClasses.footerCell).toString();\n        this.footerRow.cells.push(editCell);\n      }\n    }\n    if (this.hasActionCellInRows(\"end\")) {\n      this.footerRow.cells.push(this.createHeaderCell(null, \"action\"));\n    }\n  }\n  buildRows() {\n    this.blockAnimations();\n    var rows = this.matrix.isColumnLayoutHorizontal ? this.buildHorizontalRows() : this.buildVerticalRows();\n    this.rows = rows;\n    this.releaseAnimations();\n  }\n  hasActionCellInRows(location) {\n    if (this.hasActionCellInRowsValues[location] === undefined) {\n      this.hasActionCellInRowsValues[location] = this.hasActionsCellInLocaltion(location);\n    }\n    return this.hasActionCellInRowsValues[location];\n  }\n  hasActionsCellInLocaltion(location) {\n    if (location == \"end\" && this.hasRemoveRows) return true;\n    return this.matrix.visibleRows.some((row, index) => !this.isValueEmpty(this.getRowActions(index, location)));\n  }\n  canRemoveRow(row) {\n    return this.matrix.canRemoveRow(row);\n  }\n  buildHorizontalRows() {\n    var rows = this.matrix.visibleRows;\n    var renderedRows = [];\n    if (rows.length == 0 && this.matrix.allowRowReorder && this.matrix.allowRowDragIn) {\n      const row = this.createEmptyRow();\n      const cell = this.createTextCell(this.matrix.locNoRowsText);\n      cell.colSpans = this.headerRow && this.headerRow.cells.length || 1;\n      row.cells.push(cell);\n      renderedRows.push(row);\n    }\n    for (var i = 0; i < rows.length; i++) {\n      this.addHorizontalRow(renderedRows, rows[i]);\n    }\n    return renderedRows;\n  }\n  addHorizontalRow(renderedRows, row, index = -1) {\n    const renderedRow = this.createHorizontalRow(row);\n    const errorRow = this.createErrorRow(renderedRow);\n    renderedRow.row = row;\n    if (index < 0) {\n      index = renderedRows.length;\n    }\n    if (this.matrix.isMobile) {\n      const cells = [];\n      for (let i = 0; i < renderedRow.cells.length; i++) {\n        if (this.showCellErrorsTop && !errorRow.cells[i].isEmpty) {\n          cells.push(errorRow.cells[i]);\n        }\n        cells.push(renderedRow.cells[i]);\n        if (this.showCellErrorsBottom && !errorRow.cells[i].isEmpty) {\n          cells.push(errorRow.cells[i]);\n        }\n      }\n      renderedRow.cells = cells;\n      renderedRows.splice(index, 0, renderedRow);\n    } else {\n      renderedRows.splice(index, 0, ...(this.showCellErrorsTop ? [errorRow, renderedRow] : [renderedRow, errorRow]));\n      index++;\n    }\n    if (row.isDetailPanelShowing) {\n      renderedRows.splice(index + 1, 0, this.createDetailPanelRow(row, renderedRow));\n    }\n  }\n  getRowDragCell(rowIndex) {\n    const cell = new QuestionMatrixDropdownRenderedCell();\n    const lockedRows = this.matrix.lockedRowCount;\n    cell.isDragHandlerCell = lockedRows < 1 || rowIndex >= lockedRows;\n    cell.isEmpty = !cell.isDragHandlerCell;\n    cell.className = this.getActionsCellClassName(cell);\n    cell.row = this.matrix.visibleRows[rowIndex];\n    return cell;\n  }\n  getActionsCellClassName(cell = null) {\n    const classBuilder = new CssClassBuilder().append(this.cssClasses.actionsCell).append(this.cssClasses.actionsCellDrag, cell === null || cell === void 0 ? void 0 : cell.isDragHandlerCell).append(this.cssClasses.detailRowCell, cell === null || cell === void 0 ? void 0 : cell.isDetailRowCell).append(this.cssClasses.verticalCell, !this.matrix.isColumnLayoutHorizontal);\n    if (cell.isActionsCell) {\n      const actions = cell.item.value.actions;\n      if (this.cssClasses.actionsCellPrefix) {\n        actions.forEach(action => {\n          classBuilder.append(this.cssClasses.actionsCellPrefix + \"--\" + action.id);\n        });\n      }\n    }\n    return classBuilder.toString();\n  }\n  getRowActionsCell(rowIndex, location, isDetailRow = false) {\n    const rowActions = this.getRowActions(rowIndex, location);\n    if (!this.isValueEmpty(rowActions)) {\n      const cell = new QuestionMatrixDropdownRenderedCell();\n      const actionContainer = this.matrix.allowAdaptiveActions ? new AdaptiveActionContainer() : new ActionContainer();\n      if (!!this.matrix.survey && this.matrix.survey.getCss().actionBar) {\n        actionContainer.cssClasses = this.matrix.survey.getCss().actionBar;\n      }\n      actionContainer.setItems(rowActions);\n      const itemValue = new ItemValue(actionContainer);\n      cell.item = itemValue;\n      cell.isActionsCell = true;\n      cell.isDragHandlerCell = false;\n      cell.isDetailRowCell = isDetailRow;\n      cell.className = this.getActionsCellClassName(cell);\n      cell.row = this.matrix.visibleRows[rowIndex];\n      return cell;\n    }\n    return null;\n  }\n  getRowActions(rowIndex, location) {\n    var actions = this.rowsActions[rowIndex];\n    if (!Array.isArray(actions)) return [];\n    return actions.filter(action => {\n      if (!action.location) {\n        action.location = \"start\";\n      }\n      return action.location === location;\n    });\n  }\n  buildRowActions(row) {\n    var actions = [];\n    this.setDefaultRowActions(row, actions);\n    if (!!this.matrix.survey) {\n      actions = this.matrix.survey.getUpdatedMatrixRowActions(this.matrix, row, actions);\n    }\n    return actions;\n  }\n  get showRemoveButtonAsIcon() {\n    return settings.matrix.renderRemoveAsIcon && this.matrix.survey && this.matrix.survey.css.root === \"sd-root-modern\";\n  }\n  setDefaultRowActions(row, actions) {\n    const matrix = this.matrix;\n    if (this.hasRemoveRows && this.canRemoveRow(row)) {\n      if (!this.showRemoveButtonAsIcon) {\n        actions.push(new Action({\n          id: \"remove-row\",\n          location: \"end\",\n          enabled: !this.matrix.isInputReadOnly,\n          component: \"sv-matrix-remove-button\",\n          data: {\n            row: row,\n            question: this.matrix\n          }\n        }));\n      } else {\n        actions.push(new Action({\n          id: \"remove-row\",\n          iconName: \"icon-delete-24x24\",\n          iconSize: \"auto\",\n          component: \"sv-action-bar-item\",\n          innerCss: new CssClassBuilder().append(this.matrix.cssClasses.button).append(this.matrix.cssClasses.buttonRemove).toString(),\n          location: \"end\",\n          showTitle: false,\n          title: matrix.removeRowText,\n          enabled: !matrix.isInputReadOnly,\n          data: {\n            row: row,\n            question: matrix\n          },\n          action: () => {\n            matrix.removeRowUI(row);\n          }\n        }));\n      }\n    }\n    if (row.hasPanel) {\n      if (this.matrix.isMobile) {\n        actions.unshift(new Action({\n          id: \"show-detail-mobile\",\n          title: new ComputedUpdater(() => row.isDetailPanelShowing ? this.matrix.getLocalizationString(\"hideDetails\") : this.matrix.getLocalizationString(\"showDetails\")),\n          showTitle: true,\n          location: \"end\",\n          action: context => {\n            row.showHideDetailPanelClick();\n          }\n        }));\n      } else {\n        actions.push(new Action({\n          id: \"show-detail\",\n          title: new ComputedUpdater(() => row.isDetailPanelShowing ? this.matrix.getLocalizationString(\"hideDetails\") : this.matrix.getLocalizationString(\"showDetails\")),\n          showTitle: false,\n          location: \"start\",\n          component: \"sv-matrix-detail-button\",\n          data: {\n            row: row,\n            question: this.matrix\n          }\n        }));\n      }\n    }\n  }\n  createErrorRow(row) {\n    const res = this.createErrorRenderedRow(this.cssClasses);\n    for (let i = 0; i < row.cells.length; i++) {\n      const cell = row.cells[i];\n      if (!cell.hasQuestion) {\n        res.cells.push(this.createEmptyCell(true));\n      } else if (this.matrix.IsMultiplyColumn(cell.cell.column)) {\n        if (cell.isFirstChoice) {\n          res.cells.push(this.createErrorCell(cell.cell));\n        } else {\n          res.cells.push(this.createEmptyCell(true));\n        }\n      } else {\n        res.cells.push(this.createErrorCell(cell.cell));\n      }\n    }\n    res.onAfterCreated();\n    return res;\n  }\n  createEmptyRow() {\n    const res = this.createEmptyRenderedRow(this.cssClasses);\n    return res;\n  }\n  createHorizontalRow(row) {\n    var res = this.createRenderedRow(this.cssClasses);\n    if (this.isRowsDragAndDrop) {\n      var rowIndex = this.matrix.visibleRows.indexOf(row);\n      res.cells.push(this.getRowDragCell(rowIndex));\n    }\n    this.addRowActionsCell(row, res, \"start\");\n    if (this.matrix.hasRowText) {\n      var renderedCell = this.createTextCell(row.locText);\n      renderedCell.row = row;\n      res.cells.push(renderedCell);\n      this.setCellWidth(null, renderedCell);\n      renderedCell.className = new CssClassBuilder().append(renderedCell.className).append(this.cssClasses.rowTextCell).append(this.cssClasses.columnTitleCell, !this.matrix.isColumnLayoutHorizontal).append(this.cssClasses.detailRowText, row.hasPanel).toString();\n    }\n    for (var i = 0; i < row.cells.length; i++) {\n      let cell = row.cells[i];\n      if (!cell.column.isColumnVisible) continue;\n      if (this.matrix.IsMultiplyColumn(cell.column)) {\n        this.createMutlipleEditCells(res, cell);\n      } else {\n        if (cell.column.isShowInMultipleColumns) {\n          cell.question.visibleChoices.map(c => c.hideCaption = false);\n        }\n        var renderedCell = this.createEditCell(cell);\n        res.cells.push(renderedCell);\n        this.setCellWidth(cell.column, renderedCell);\n      }\n    }\n    this.addRowActionsCell(row, res, \"end\");\n    return res;\n  }\n  addRowActionsCell(row, renderedRow, location) {\n    var rowIndex = this.matrix.visibleRows.indexOf(row);\n    if (this.hasActionCellInRows(location)) {\n      const actions = this.getRowActionsCell(rowIndex, location, renderedRow.isDetailRow);\n      if (!!actions) {\n        renderedRow.cells.push(actions);\n        renderedRow.hasEndActions = true;\n      } else {\n        var cell = new QuestionMatrixDropdownRenderedCell();\n        cell.isEmpty = true;\n        cell.isDetailRowCell = renderedRow.isDetailRow;\n        renderedRow.cells.push(cell);\n      }\n    }\n  }\n  createDetailPanelRow(row, renderedRow) {\n    const panelFullWidth = this.matrix.isDesignMode;\n    var res = this.createRenderedRow(this.cssClasses, true);\n    res.row = row;\n    var buttonCell = new QuestionMatrixDropdownRenderedCell();\n    if (this.matrix.hasRowText) {\n      buttonCell.colSpans = 2;\n    }\n    buttonCell.isEmpty = true;\n    if (!panelFullWidth) res.cells.push(buttonCell);\n    var actionsCell = null;\n    if (this.hasActionCellInRows(\"end\")) {\n      actionsCell = new QuestionMatrixDropdownRenderedCell();\n      actionsCell.isEmpty = true;\n    }\n    var cell = new QuestionMatrixDropdownRenderedCell();\n    cell.panel = row.detailPanel;\n    cell.colSpans = renderedRow.cells.length - (!panelFullWidth ? buttonCell.colSpans : 0) - (!!actionsCell ? actionsCell.colSpans : 0);\n    cell.className = this.cssClasses.detailPanelCell;\n    res.cells.push(cell);\n    if (!!actionsCell) {\n      if (this.matrix.isMobile) {\n        this.addRowActionsCell(row, res, \"end\");\n      } else {\n        res.cells.push(actionsCell);\n      }\n    }\n    if (typeof this.matrix.onCreateDetailPanelRenderedRowCallback === \"function\") {\n      this.matrix.onCreateDetailPanelRenderedRowCallback(res);\n    }\n    return res;\n  }\n  buildVerticalRows() {\n    var columns = this.matrix.columns;\n    var renderedRows = [];\n    for (var i = 0; i < columns.length; i++) {\n      var col = columns[i];\n      if (col.isColumnVisible) {\n        if (this.matrix.IsMultiplyColumn(col)) {\n          this.createMutlipleVerticalRows(renderedRows, col, i);\n        } else {\n          const renderedRow = this.createVerticalRow(col, i);\n          const errorRow = this.createErrorRow(renderedRow);\n          if (this.showCellErrorsTop) {\n            renderedRows.push(errorRow);\n            renderedRows.push(renderedRow);\n          } else {\n            renderedRows.push(renderedRow);\n            renderedRows.push(errorRow);\n          }\n        }\n      }\n    }\n    if (this.hasActionCellInRows(\"end\")) {\n      renderedRows.push(this.createEndVerticalActionRow());\n    }\n    return renderedRows;\n  }\n  createMutlipleVerticalRows(renderedRows, column, index) {\n    var choices = this.getMultipleColumnChoices(column);\n    if (!choices) return;\n    for (var i = 0; i < choices.length; i++) {\n      const renderedRow = this.createVerticalRow(column, index, choices[i], i);\n      const errorRow = this.createErrorRow(renderedRow);\n      if (this.showCellErrorsTop) {\n        renderedRows.push(errorRow);\n        renderedRows.push(renderedRow);\n      } else {\n        renderedRows.push(renderedRow);\n        renderedRows.push(errorRow);\n      }\n    }\n  }\n  createVerticalRow(column, index, choice = null, choiceIndex = -1) {\n    var res = this.createRenderedRow(this.cssClasses);\n    if (this.matrix.showHeader) {\n      var lTitle = !!choice ? choice.locText : column.locTitle;\n      var hCell = this.createTextCell(lTitle);\n      hCell.column = column;\n      hCell.className = new CssClassBuilder().append(hCell.className).append(this.cssClasses.rowTextCell).append(this.cssClasses.columnTitleCell).toString();\n      res.cells.push(hCell);\n    }\n    var rows = this.matrix.visibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      var rChoice = choice;\n      var rChoiceIndex = choiceIndex >= 0 ? choiceIndex : i;\n      var cell = rows[i].cells[index];\n      var visChoices = !!choice ? cell.question.visibleChoices : undefined;\n      if (!!visChoices && rChoiceIndex < visChoices.length) {\n        rChoice = visChoices[rChoiceIndex];\n      }\n      var rCell = this.createEditCell(cell, rChoice);\n      rCell.item = rChoice;\n      rCell.choiceIndex = rChoiceIndex;\n      res.cells.push(rCell);\n    }\n    if (this.matrix.hasTotal) {\n      res.cells.push(this.createEditCell(this.matrix.visibleTotalRow.cells[index]));\n    }\n    return res;\n  }\n  createEndVerticalActionRow() {\n    var res = this.createRenderedRow(this.cssClasses);\n    if (this.matrix.showHeader) {\n      res.cells.push(this.createEmptyCell());\n    }\n    var rows = this.matrix.visibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      res.cells.push(this.getRowActionsCell(i, \"end\"));\n    }\n    if (this.matrix.hasTotal) {\n      res.cells.push(this.createEmptyCell());\n    }\n    return res;\n  }\n  createMutlipleEditCells(rRow, cell, isFooter = false) {\n    var choices = isFooter ? this.getMultipleColumnChoices(cell.column) : cell.question.visibleChoices;\n    if (!choices) return;\n    for (var i = 0; i < choices.length; i++) {\n      var rCell = this.createEditCell(cell, !isFooter ? choices[i] : undefined);\n      if (!isFooter) {\n        //rCell.item = choices[i];\n        this.setItemCellCssClasses(rCell);\n        rCell.choiceIndex = i;\n      }\n      rRow.cells.push(rCell);\n    }\n  }\n  setItemCellCssClasses(cell) {\n    cell.className = new CssClassBuilder().append(this.cssClasses.cell).append(this.cssClasses.itemCell).append(this.cssClasses.radioCell, cell.isRadio).append(this.cssClasses.checkboxCell, cell.isCheckbox).toString();\n  }\n  createEditCell(cell, choiceItem = undefined) {\n    var res = new QuestionMatrixDropdownRenderedCell();\n    res.cell = cell;\n    res.row = cell.row;\n    res.column = cell.column;\n    res.question = cell.question;\n    res.matrix = this.matrix;\n    res.item = choiceItem;\n    res.isOtherChoice = !!choiceItem && !!cell.question && cell.question.otherItem === choiceItem;\n    res.className = res.calculateFinalClassName(this.cssClasses);\n    return res;\n  }\n  createErrorCell(cell, choiceItem = undefined) {\n    var res = new QuestionMatrixDropdownRenderedCell();\n    res.question = cell.question;\n    res.row = cell.row;\n    res.matrix = this.matrix;\n    res.isErrorsCell = true;\n    res.className = new CssClassBuilder().append(this.cssClasses.cell).append(this.cssClasses.errorsCell).append(this.cssClasses.errorsCellTop, this.showCellErrorsTop).append(this.cssClasses.errorsCellBottom, this.showCellErrorsBottom).toString();\n    return res;\n  }\n  createMutlipleColumnsFooter(rRow, cell) {\n    this.createMutlipleEditCells(rRow, cell, true);\n  }\n  createMutlipleColumnsHeader(column) {\n    var choices = this.getMultipleColumnChoices(column);\n    if (!choices) return;\n    for (var i = 0; i < choices.length; i++) {\n      var cell = this.createTextCell(choices[i].locText);\n      this.setHeaderCell(column, cell);\n      this.setHeaderCellCssClasses(cell);\n      this.headerRow.cells.push(cell);\n    }\n  }\n  getMultipleColumnChoices(column) {\n    var choices = column.templateQuestion.choices;\n    if (!!choices && Array.isArray(choices) && choices.length == 0) return [].concat(this.matrix.choices, column.getVisibleMultipleChoices());\n    choices = column.getVisibleMultipleChoices();\n    if (!choices || !Array.isArray(choices)) return null;\n    return choices;\n  }\n  setHeaderCellCssClasses(cell, cellType, classMod) {\n    cell.className = new CssClassBuilder().append(this.cssClasses.headerCell).append(this.cssClasses.columnTitleCell, this.matrix.isColumnLayoutHorizontal).append(this.cssClasses.emptyCell, !!cell.isEmpty).append(this.cssClasses.cell + \"--\" + cellType, !!cellType).append(classMod, !!classMod).toString();\n  }\n  createHeaderCell(column, cellType = null, classMod) {\n    let cell = !!column ? this.createTextCell(column.locTitle) : this.createEmptyCell();\n    cell.column = column;\n    this.setHeaderCell(column, cell);\n    if (!cellType) cellType = !!column && column.cellType !== \"default\" ? column.cellType : this.matrix.cellType;\n    this.setHeaderCellCssClasses(cell, cellType, classMod);\n    return cell;\n  }\n  setHeaderCell(column, cell) {\n    this.setCellWidth(column, cell);\n  }\n  setCellWidth(column, cell) {\n    cell.minWidth = column != null ? this.matrix.getColumnWidth(column) : this.matrix.getRowTitleWidth();\n    cell.width = column != null ? column.width : this.matrix.getRowTitleWidth();\n  }\n  createTextCell(locTitle) {\n    var cell = new QuestionMatrixDropdownRenderedCell();\n    cell.locTitle = locTitle;\n    if (!!this.cssClasses.cell) {\n      cell.className = this.cssClasses.cell;\n    }\n    return cell;\n  }\n  createEmptyCell(isError = false) {\n    const res = this.createTextCell(null);\n    res.isEmpty = true;\n    res.className = new CssClassBuilder().append(this.cssClasses.cell).append(this.cssClasses.emptyCell).append(this.cssClasses.errorsCell, isError).toString();\n    return res;\n  }\n}\n__decorate([propertyArray({\n  onPush: (_, i, target) => {\n    target.updateRenderedRows();\n  },\n  onRemove: (_, i, target) => {\n    target.updateRenderedRows();\n  }\n})], QuestionMatrixDropdownRenderedTable.prototype, \"rows\", void 0);\n__decorate([propertyArray()], QuestionMatrixDropdownRenderedTable.prototype, \"_renderedRows\", void 0);\nclass MatrixDropdownCell {\n  constructor(column, row, data) {\n    this.column = column;\n    this.row = row;\n    this.data = data;\n    this.questionValue = this.createQuestion(column, row, data);\n    this.questionValue.updateCustomWidget();\n    this.updateCellQuestionTitleDueToAccessebility(row);\n  }\n  updateCellQuestionTitleDueToAccessebility(row) {\n    this.questionValue.locTitle.onGetTextCallback = str => {\n      const survey = row === null || row === void 0 ? void 0 : row.getSurvey();\n      if (!survey || survey.isSingleVisibleInput) return this.questionValue.title;\n      const rowTitle = row.getAccessbilityText();\n      if (!rowTitle) return this.questionValue.title;\n      return this.column.colOwner.getCellAriaLabel(row, this.column, rowTitle);\n    };\n  }\n  locStrsChanged() {\n    this.question.locStrsChanged();\n  }\n  createQuestion(column, row, data) {\n    const res = data.createQuestion(this.row, this.column);\n    res.readOnlyCallback = () => !this.row.isRowEnabled();\n    res.validateValueCallback = function () {\n      return data.validateCell(row, column.name, row.value);\n    };\n    CustomPropertiesCollection.getProperties(column.getType()).forEach(property => {\n      let propertyName = property.name;\n      if (column[propertyName] !== undefined) {\n        res[propertyName] = column[propertyName];\n      }\n    });\n    return res;\n  }\n  get question() {\n    return this.questionValue;\n  }\n  get value() {\n    return this.question.value;\n  }\n  set value(value) {\n    this.question.value = value;\n  }\n  getQuestionWrapperClassName(className) {\n    return className;\n  }\n  runCondition(values, properties) {\n    this.question.runCondition(values, properties);\n  }\n}\nclass MatrixDropdownTotalCell extends MatrixDropdownCell {\n  constructor(column, row, data) {\n    super(column, row, data);\n    this.column = column;\n    this.row = row;\n    this.data = data;\n    this.updateCellQuestion();\n  }\n  createQuestion(column, row, data) {\n    var res = Serializer.createClass(\"expression\");\n    res.setSurveyImpl(row);\n    return res;\n  }\n  locStrsChanged() {\n    this.updateCellQuestion();\n    super.locStrsChanged();\n  }\n  updateCellQuestion() {\n    this.question.locCalculation();\n    this.column.updateCellQuestion(this.question, null, function (json) {\n      delete json[\"defaultValue\"];\n    });\n    this.question.expression = this.getTotalExpression();\n    this.question.format = this.column.totalFormat;\n    this.question.currency = this.column.totalCurrency;\n    this.question.displayStyle = this.column.totalDisplayStyle;\n    this.question.maximumFractionDigits = this.column.totalMaximumFractionDigits;\n    this.question.minimumFractionDigits = this.column.totalMinimumFractionDigits;\n    this.question.unlocCalculation();\n    this.question.runIfReadOnly = true;\n  }\n  getQuestionWrapperClassName(className) {\n    let result = super.getQuestionWrapperClassName(className);\n    if (!result) {\n      return result;\n    }\n    if (this.question.expression && this.question.expression != \"''\") {\n      result += \" \" + className + \"--expression\";\n    }\n    let alignment = this.column.totalAlignment;\n    if (alignment === \"auto\") {\n      if (this.column.cellType === \"dropdown\") {\n        alignment = \"left\";\n      }\n    }\n    return result + \" \" + className + \"--\" + alignment;\n  }\n  getTotalExpression() {\n    if (!!this.column.totalExpression) return this.column.totalExpression;\n    if (this.column.totalType == \"none\") return \"''\";\n    var funName = this.column.totalType + \"InArray\";\n    if (!FunctionFactory.Instance.hasFunction(funName)) return \"\";\n    return funName + \"({self}, '\" + this.column.name + \"')\";\n  }\n}\nclass MatrixDropdownRowTextProcessor extends QuestionTextProcessor {\n  constructor(data, row, variableName) {\n    super(variableName);\n    this.data = data;\n    this.row = row;\n    this.variableName = variableName;\n    this.sharedQuestions = {};\n    this.parentTextProcessor = data === null || data === void 0 ? void 0 : data.getParentTextProcessor();\n  }\n  getParentTextProcessor() {\n    return this.parentTextProcessor;\n  }\n  get survey() {\n    return this.row.getSurvey();\n  }\n  getValues() {\n    return this.row.getAllValues();\n  }\n  getQuestionByName(name) {\n    let res = this.row.getQuestionByName(name);\n    if (!!res) return res;\n    const index = this.row.rowIndex - 1;\n    res = index > -1 ? this.data.getSharedQuestionFromArray(name, index) : undefined;\n    const qName = !!res ? res.name : name;\n    this.sharedQuestions[qName] = name;\n    return res;\n  }\n  getQuestionDisplayText(question) {\n    const name = this.sharedQuestions[question.name];\n    if (!name) return super.getQuestionDisplayText(question);\n    const val = this.row.getAllValues()[name];\n    return question.getDisplayValue(true, val);\n  }\n  onCustomProcessText(textValue) {\n    if (textValue.name == MatrixDropdownRowModelBase.IndexVariableName) {\n      textValue.isExists = true;\n      textValue.value = this.row.rowIndex;\n      return true;\n    }\n    if ([MatrixDropdownRowModelBase.RowValueVariableName, MatrixDropdownRowModelBase.RowNameVariableName].indexOf(textValue.name) > -1) {\n      textValue.isExists = true;\n      textValue.value = this.row.rowName;\n      return true;\n    }\n    if (textValue.name == MatrixDropdownRowModelBase.RowTitleVariableName) {\n      textValue.isExists = true;\n      textValue.value = this.row.rowTitle;\n      return true;\n    }\n    return false;\n  }\n}\nclass MatrixDropdownRowModelBase {\n  static getId() {\n    return \"srow_\" + MatrixDropdownRowModelBase.idCounter++;\n  }\n  constructor(data, value) {\n    this.isSettingValue = false;\n    this.detailPanelValue = null;\n    this.visibleValue = true;\n    this.cells = [];\n    this.visibleIndex = -1;\n    this.isCreatingDetailPanel = false;\n    this.data = data;\n    this.subscribeToChanges(value);\n    this.textPreProcessor = new MatrixDropdownRowTextProcessor(data, this, MatrixDropdownRowModelBase.RowVariableName);\n    this.showHideDetailPanelClick = () => {\n      if (this.getSurvey().isDesignMode) return true;\n      this.showHideDetailPanel();\n    };\n    this.idValue = MatrixDropdownRowModelBase.getId();\n  }\n  get id() {\n    return this.idValue;\n  }\n  get rowName() {\n    return null;\n  }\n  get rowTitle() {\n    return this.rowName;\n  }\n  get dataName() {\n    return this.rowName;\n  }\n  get text() {\n    return this.rowName;\n  }\n  isRowEnabled() {\n    return true;\n  }\n  isRowHasEnabledCondition() {\n    return false;\n  }\n  get isVisible() {\n    return this.visible && this.isItemVisible();\n  }\n  get visible() {\n    return this.visibleValue;\n  }\n  set visible(val) {\n    var _a;\n    if (this.visible !== val) {\n      this.visibleValue = val;\n      (_a = this.data) === null || _a === void 0 ? void 0 : _a.onRowVisibilityChanged(this);\n    }\n  }\n  isItemVisible() {\n    return true;\n  }\n  get value() {\n    var result = {};\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      if (!question.isEmpty()) {\n        result[question.getValueName()] = question.value;\n      }\n      if (!!question.comment && !!this.getSurvey() && this.getSurvey().storeOthersAsComment) {\n        result[question.getValueName() + Base.commentSuffix] = question.comment;\n      }\n    }\n    return result;\n  }\n  set value(value) {\n    this.isSettingValue = true;\n    this.subscribeToChanges(value);\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      var val = this.getCellValue(value, question.getValueName());\n      var oldComment = question.comment;\n      var comment = !!value ? value[question.getValueName() + Base.commentSuffix] : \"\";\n      if (comment == undefined) comment = \"\";\n      question.updateValueFromSurvey(val);\n      if (!!comment || this.isTwoValueEquals(oldComment, question.comment)) {\n        question.updateCommentFromSurvey(comment);\n      }\n      question.onSurveyValueChanged(val);\n    }\n    this.isSettingValue = false;\n  }\n  get locText() {\n    return null;\n  }\n  getAccessbilityText() {\n    return this.locText && this.locText.renderedHtml;\n  }\n  get hasPanel() {\n    if (!this.data) return false;\n    return this.data.hasDetailPanel(this);\n  }\n  get detailPanel() {\n    return this.detailPanelValue;\n  }\n  get detailPanelId() {\n    return !!this.detailPanel ? this.detailPanel.id : \"\";\n  }\n  get isDetailPanelShowing() {\n    return !!this.data ? this.data.getIsDetailPanelShowing(this) : false;\n  }\n  setIsDetailPanelShowing(val) {\n    if (!val && this.detailPanel) {\n      this.detailPanel.onHidingContent();\n    }\n    if (!!this.data) {\n      this.data.setIsDetailPanelShowing(this, val);\n    }\n    if (val && this.detailPanel) {\n      this.detailPanel.onFirstRendering();\n    }\n    if (!!this.onDetailPanelShowingChanged) {\n      this.onDetailPanelShowingChanged();\n    }\n  }\n  showHideDetailPanel() {\n    if (this.isDetailPanelShowing) {\n      this.hideDetailPanel();\n    } else {\n      this.showDetailPanel();\n    }\n  }\n  showDetailPanel() {\n    this.ensureDetailPanel();\n    if (!this.detailPanelValue) return;\n    this.setIsDetailPanelShowing(true);\n  }\n  hideDetailPanel(destroyPanel = false) {\n    this.setIsDetailPanelShowing(false);\n    if (destroyPanel) {\n      this.detailPanelValue = null;\n    }\n  }\n  ensureDetailPanel() {\n    if (this.isCreatingDetailPanel) return;\n    if (!!this.detailPanelValue || !this.hasPanel || !this.data) return;\n    this.isCreatingDetailPanel = true;\n    this.detailPanelValue = this.data.createRowDetailPanel(this);\n    var questions = this.detailPanelValue.questions;\n    var value = this.getDataRowValue();\n    if (!Helpers.isValueEmpty(value)) {\n      for (var i = 0; i < questions.length; i++) {\n        const key = questions[i].getValueName();\n        const val = !!this.editingObj ? Serializer.getObjPropertyValue(this.editingObj, key) : value[key];\n        if (!Helpers.isValueEmpty(val)) {\n          questions[i].value = val;\n        }\n      }\n    }\n    this.detailPanelValue.setSurveyImpl(this);\n    this.isCreatingDetailPanel = false;\n  }\n  getAllValues() {\n    const res = this.value;\n    if (this.data) {\n      const rowVal = this.getDataRowValue();\n      if (rowVal) {\n        for (var key in rowVal) {\n          if (res[key] === undefined) {\n            res[key] = rowVal[key];\n          }\n        }\n      }\n    }\n    return res;\n  }\n  getFilteredValues() {\n    const res = this.data ? this.data.getDataFilteredValues() : {};\n    var values = this.validationValues;\n    if (values) {\n      for (var key in values) {\n        res[key] = values[key];\n      }\n    }\n    res.row = this.getAllValues();\n    this.applyRowVariablesToValues(res, this.rowIndex);\n    return res;\n  }\n  getFilteredProperties() {\n    return {\n      survey: this.getSurvey(),\n      row: this\n    };\n  }\n  getDataRowValue() {\n    if (!this.data) return null;\n    return this.data.getRowValue(this.data.getRowIndex(this));\n  }\n  applyRowVariablesToValues(res, rowIndex) {\n    res[MatrixDropdownRowModelBase.IndexVariableName] = rowIndex;\n    res[MatrixDropdownRowModelBase.RowValueVariableName] = this.rowName;\n    res[MatrixDropdownRowModelBase.RowNameVariableName] = this.rowName;\n    res[MatrixDropdownRowModelBase.RowTitleVariableName] = this.rowTitle;\n  }\n  runCondition(values, properties, rowsVisibleIf) {\n    if (!this.data) return;\n    values[MatrixDropdownRowModelBase.OwnerVariableName] = this.data.getFilteredData();\n    const rowIndex = this.rowIndex;\n    this.applyRowVariablesToValues(values, rowIndex);\n    const newProps = Helpers.createCopy(properties);\n    newProps[MatrixDropdownRowModelBase.RowVariableName] = this;\n    const rowValues = rowIndex > 0 ? this.getDataRowValue() : this.value;\n    if (!!rowsVisibleIf) {\n      values[MatrixDropdownRowModelBase.RowVariableName] = rowValues;\n      this.setRowsVisibleIfValues(values);\n      this.visible = new ConditionRunner(rowsVisibleIf).run(values, properties);\n    } else {\n      this.visible = true;\n    }\n    for (var i = 0; i < this.cells.length; i++) {\n      if (i > 0) {\n        mergeValues(this.value, rowValues);\n      }\n      values[MatrixDropdownRowModelBase.RowVariableName] = rowValues;\n      this.cells[i].runCondition(values, newProps);\n    }\n    if (!!this.detailPanel) {\n      this.detailPanel.runCondition(values, newProps);\n    }\n    if (this.isRowHasEnabledCondition()) {\n      this.onQuestionReadOnlyChanged();\n    }\n  }\n  updateElementVisibility() {\n    this.cells.forEach(cell => cell.question.updateElementVisibility());\n    if (!!this.detailPanel) {\n      this.detailPanel.updateElementVisibility();\n    }\n  }\n  setRowsVisibleIfValues(values) {}\n  getNamesWithDefaultValues() {\n    const res = [];\n    this.questions.forEach(q => {\n      if (q.isValueDefault) {\n        res.push(q.getValueName());\n      }\n    });\n    return res;\n  }\n  clearValue(keepComment) {\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearValue(keepComment);\n    }\n  }\n  onAnyValueChanged(name, questionName) {\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].onAnyValueChanged(name, questionName);\n    }\n  }\n  getDataValueCore(valuesHash, key) {\n    var survey = this.getSurvey();\n    if (!!survey) {\n      return survey.getDataValueCore(valuesHash, key);\n    } else {\n      return valuesHash[key];\n    }\n  }\n  getValue(name) {\n    var question = this.getQuestionByName(name);\n    return !!question ? question.value : null;\n  }\n  setValue(name, newColumnValue) {\n    this.setValueCore(name, newColumnValue, false);\n  }\n  getVariable(name) {\n    return undefined;\n  }\n  setVariable(name, newValue) {}\n  getComment(name) {\n    var question = this.getQuestionByName(name);\n    return !!question ? question.comment : \"\";\n  }\n  setComment(name, newValue, locNotification) {\n    this.setValueCore(name, newValue, true);\n  }\n  findQuestionByName(name) {\n    if (!name) return undefined;\n    const prefix = MatrixDropdownRowModelBase.RowVariableName + \".\";\n    if (name.indexOf(prefix) === 0) {\n      return this.getQuestionByName(name.substring(prefix.length));\n    }\n    const survey = this.getSurvey();\n    return !!survey ? survey.getQuestionByName(name) : null;\n  }\n  getEditingSurveyElement() {\n    return undefined;\n  }\n  setValueCore(name, newColumnValue, isComment) {\n    if (this.isSettingValue) return;\n    this.updateQuestionsValue(name, newColumnValue, isComment);\n    if (!isComment) {\n      this.updateSharedQuestionsValue(name, newColumnValue);\n    }\n    var newValue = this.value;\n    var changedName = isComment ? name + Base.commentSuffix : name;\n    var changedValue = newColumnValue;\n    var changedQuestion = this.getQuestionByName(name);\n    var changingValue = this.data.onRowChanging(this, changedName, newValue);\n    if (!!changedQuestion && !this.isTwoValueEquals(changingValue, changedValue)) {\n      this.isSettingValue = true;\n      if (isComment) {\n        changedQuestion.comment = changingValue;\n      } else {\n        changedQuestion.value = changingValue;\n      }\n      this.isSettingValue = false;\n      newValue = this.value;\n    }\n    if (this.data.isValidateOnValueChanging && this.hasQuestonError(changedQuestion)) return;\n    const isDeleting = newColumnValue == null && !changedQuestion || isComment && !newColumnValue && !!changedQuestion;\n    this.data.onRowChanged(this, changedName, newValue, isDeleting);\n    if (changedName) {\n      this.runTriggers(MatrixDropdownTotalRowModel.RowVariableName + \".\" + changedName, newValue);\n    }\n    this.onAnyValueChanged(MatrixDropdownRowModelBase.RowVariableName, \"\");\n  }\n  updateQuestionsValue(name, newColumnValue, isComment) {\n    if (!this.detailPanel) return;\n    var colQuestion = this.getQuestionByColumnName(name);\n    var detailQuestion = this.detailPanel.getQuestionByName(name);\n    if (!colQuestion || !detailQuestion) return;\n    var isColQuestion = this.isTwoValueEquals(newColumnValue, isComment ? colQuestion.comment : colQuestion.value);\n    var question = isColQuestion ? detailQuestion : colQuestion;\n    this.isSettingValue = true;\n    if (!isComment) {\n      question.value = newColumnValue;\n    } else {\n      question.comment = newColumnValue;\n    }\n    this.isSettingValue = false;\n  }\n  updateSharedQuestionsValue(name, value) {\n    const questions = this.getQuestionsByValueName(name);\n    if (questions.length > 1) {\n      for (let i = 0; i < questions.length; i++) {\n        if (!Helpers.isTwoValueEquals(questions[i].value, value)) {\n          this.isSettingValue = true;\n          questions[i].updateValueFromSurvey(value);\n          this.isSettingValue = false;\n        }\n      }\n    }\n  }\n  runTriggers(name, value, keys) {\n    if (!name && !keys) return;\n    this.questions.forEach(q => q.runTriggers(name, value, keys));\n  }\n  hasQuestonError(question) {\n    if (!question) return false;\n    if (question.hasErrors(true, {\n      isOnValueChanged: !this.data.isValidateOnValueChanging\n    })) return true;\n    if (question.isEmpty()) return false;\n    var cell = this.getCellByColumnName(question.name);\n    if (!cell || !cell.column || !cell.column.isUnique) return false;\n    return this.data.checkIfValueInRowDuplicated(this, question);\n  }\n  get isEmpty() {\n    var val = this.value;\n    if (Helpers.isValueEmpty(val)) return true;\n    for (var key in val) {\n      if (val[key] !== undefined && val[key] !== null) return false;\n    }\n    return true;\n  }\n  hasValueAnyQuestion(visibleOnly) {\n    const questions = visibleOnly ? this.visibleQuestions : this.questions;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isEmpty()) return true;\n    }\n    return false;\n  }\n  getQuestionByColumn(column) {\n    var cell = this.getCellByColumn(column);\n    return !!cell ? cell.question : null;\n  }\n  getCellByColumn(column) {\n    for (var i = 0; i < this.cells.length; i++) {\n      if (this.cells[i].column == column) return this.cells[i];\n    }\n    return null;\n  }\n  getCellByColumnName(columnName) {\n    for (var i = 0; i < this.cells.length; i++) {\n      if (this.cells[i].column.name == columnName) return this.cells[i];\n    }\n    return null;\n  }\n  getQuestionByColumnName(columnName) {\n    var cell = this.getCellByColumnName(columnName);\n    return !!cell ? cell.question : null;\n  }\n  get questions() {\n    var res = [];\n    for (var i = 0; i < this.cells.length; i++) {\n      res.push(this.cells[i].question);\n    }\n    var detailQuestions = !!this.detailPanel ? this.detailPanel.questions : [];\n    for (var i = 0; i < detailQuestions.length; i++) {\n      res.push(detailQuestions[i]);\n    }\n    return res;\n  }\n  get visibleQuestions() {\n    const res = [];\n    this.questions.forEach(q => {\n      if (q.isVisible) {\n        res.push(q);\n      }\n    });\n    return res;\n  }\n  getQuestionByName(name) {\n    var res = this.getQuestionByColumnName(name);\n    if (!!res) return res;\n    return !!this.detailPanel ? this.detailPanel.getQuestionByName(name) : null;\n  }\n  getQuestionsByName(name) {\n    let res = [];\n    let q = this.getQuestionByColumnName(name);\n    if (!!q) res.push(q);\n    if (!!this.detailPanel) {\n      q = this.detailPanel.getQuestionByName(name);\n      if (!!q) res.push(q);\n    }\n    return res;\n  }\n  getQuestionsByValueName(name) {\n    let res = [];\n    for (var i = 0; i < this.cells.length; i++) {\n      const cell = this.cells[i];\n      if (cell.question && cell.question.getValueName() === name) {\n        res.push(cell.question);\n      }\n    }\n    if (!!this.detailPanel) {\n      res = res.concat(this.detailPanel.getQuestionsByValueName(name));\n    }\n    return res;\n  }\n  getSharedQuestionByName(columnName) {\n    return !!this.data ? this.data.getSharedQuestionByName(columnName, this) : null;\n  }\n  clearIncorrectValues(val) {\n    for (var key in val) {\n      var question = this.getQuestionByName(key);\n      if (question) {\n        var qVal = question.value;\n        question.clearIncorrectValues();\n        if (!this.isTwoValueEquals(qVal, question.value)) {\n          this.setValue(key, question.value);\n        }\n      } else {\n        if (!this.getSharedQuestionByName(key) && key.indexOf(settings.matrix.totalsSuffix) < 0) {\n          this.setValue(key, null);\n        }\n      }\n    }\n  }\n  getLocale() {\n    return this.data ? this.data.getLocale() : \"\";\n  }\n  getMarkdownHtml(text, name, item) {\n    return this.data ? this.data.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name) {\n    return this.data ? this.data.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return this.data ? this.data.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    return this.data ? this.data.getProcessedText(text) : text;\n  }\n  locStrsChanged() {\n    for (var i = 0; i < this.cells.length; i++) {\n      this.cells[i].locStrsChanged();\n    }\n    if (!!this.detailPanel) {\n      this.detailPanel.locStrsChanged();\n    }\n  }\n  updateCellQuestionOnColumnChanged(column, name, newValue) {\n    var cell = this.getCellByColumn(column);\n    if (!cell) return;\n    this.updateCellOnColumnChanged(cell, name, newValue);\n  }\n  updateCellQuestionOnColumnItemValueChanged(column, propertyName, obj, name, newValue, oldValue) {\n    var cell = this.getCellByColumn(column);\n    if (!cell) return;\n    this.updateCellOnColumnItemValueChanged(cell, propertyName, obj, name, newValue, oldValue);\n  }\n  onQuestionReadOnlyChanged() {\n    const questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      q.setPropertyValue(\"isReadOnly\", q.isReadOnly);\n    }\n    if (!!this.detailPanel) {\n      const parentIsReadOnly = !!this.data && this.data.isMatrixReadOnly();\n      this.detailPanel.readOnly = parentIsReadOnly || !this.isRowEnabled();\n    }\n  }\n  hasErrors(fireCallback, rec, raiseOnCompletedAsyncValidators) {\n    var res = false;\n    var cells = this.cells;\n    if (!cells) return res;\n    this.validationValues = rec.validationValues;\n    const focusOnFirstError = rec === null || rec === void 0 ? void 0 : rec.focusOnFirstError;\n    //firstErrorQuestion: <any>null,\n    for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n      if (!cells[colIndex]) continue;\n      var question = cells[colIndex].question;\n      if (!question || !question.visible) continue;\n      question.onCompletedAsyncValidators = hasErrors => {\n        raiseOnCompletedAsyncValidators();\n      };\n      if (!!rec && rec.isOnValueChanged === true && question.isEmpty()) continue;\n      res = question.hasErrors(fireCallback, rec) || res;\n      if (res && focusOnFirstError && !rec.firstErrorQuestion) {\n        rec.firstErrorQuestion = question;\n      }\n    }\n    if (this.hasPanel) {\n      this.ensureDetailPanel();\n      var panelHasError = this.detailPanel.hasErrors(fireCallback, false, rec);\n      if (!rec.hideErroredPanel && panelHasError && fireCallback) {\n        if (rec.isSingleDetailPanel) {\n          rec.hideErroredPanel = true;\n        }\n        this.showDetailPanel();\n      }\n      res = panelHasError || res;\n    }\n    this.validationValues = undefined;\n    return res;\n  }\n  updateCellOnColumnChanged(cell, name, newValue) {\n    if (name === \"choices\" && Array.isArray(newValue) && newValue.length === 0 && this.data) {\n      newValue = this.data.choices;\n    }\n    cell.question[name] = newValue;\n  }\n  updateCellOnColumnItemValueChanged(cell, propertyName, obj, name, newValue, oldValue) {\n    var items = cell.question[propertyName];\n    if (!Array.isArray(items)) return;\n    var val = name === \"value\" ? oldValue : obj[\"value\"];\n    var item = ItemValue.getItemByValue(items, val);\n    if (!item) return;\n    item[name] = newValue;\n  }\n  buildCells(value) {\n    this.isSettingValue = true;\n    var columns = this.data.columns;\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[i];\n      var cell = this.createCell(column);\n      this.cells.push(cell);\n      var cellValue = this.getCellValue(value, column.name);\n      if (!Helpers.isValueEmpty(cellValue)) {\n        cell.question.value = cellValue;\n        var commentKey = column.name + Base.commentSuffix;\n        if (!!value && !Helpers.isValueEmpty(value[commentKey])) {\n          cell.question.comment = value[commentKey];\n        }\n      }\n    }\n    this.isSettingValue = false;\n  }\n  isTwoValueEquals(val1, val2) {\n    return Helpers.isTwoValueEquals(val1, val2, false, true, false);\n  }\n  getCellValue(value, name) {\n    if (!!this.editingObj) return Serializer.getObjPropertyValue(this.editingObj, name);\n    return !!value ? value[name] : undefined;\n  }\n  createCell(column) {\n    return new MatrixDropdownCell(column, this, this.data);\n  }\n  getSurveyData() {\n    return this;\n  }\n  getSurvey() {\n    return this.data ? this.data.getSurvey() : null;\n  }\n  getTextProcessor() {\n    return this.textPreProcessor;\n  }\n  get rowIndex() {\n    return this.getRowIndex();\n  }\n  getRowIndex() {\n    return !!this.data ? this.data.getRowIndex(this) + 1 : -1;\n  }\n  get editingObj() {\n    return this.editingObjValue;\n  }\n  dispose() {\n    if (!!this.editingObj) {\n      this.editingObj.onPropertyChanged.remove(this.onEditingObjPropertyChanged);\n      this.editingObjValue = null;\n    }\n  }\n  subscribeToChanges(value) {\n    if (!value || !value.getType || !value.onPropertyChanged) return;\n    if (value === this.editingObj) return;\n    this.editingObjValue = value;\n    this.onEditingObjPropertyChanged = (sender, options) => {\n      this.updateOnSetValue(options.name, options.newValue);\n    };\n    this.editingObj.onPropertyChanged.add(this.onEditingObjPropertyChanged);\n  }\n  updateOnSetValue(name, newValue) {\n    this.isSettingValue = true;\n    let questions = this.getQuestionsByName(name);\n    for (let i = 0; i < questions.length; i++) {\n      questions[i].value = newValue;\n    }\n    this.isSettingValue = false;\n  }\n}\nMatrixDropdownRowModelBase.RowVariableName = \"row\";\nMatrixDropdownRowModelBase.OwnerVariableName = \"self\";\nMatrixDropdownRowModelBase.IndexVariableName = \"rowIndex\";\nMatrixDropdownRowModelBase.RowValueVariableName = \"rowValue\";\nMatrixDropdownRowModelBase.RowNameVariableName = \"rowName\";\nMatrixDropdownRowModelBase.RowTitleVariableName = \"rowTitle\";\nMatrixDropdownRowModelBase.idCounter = 1;\nclass MatrixDropdownTotalRowModel extends MatrixDropdownRowModelBase {\n  constructor(data) {\n    super(data, null);\n    this.buildCells(null);\n  }\n  createCell(column) {\n    return new MatrixDropdownTotalCell(column, this, this.data);\n  }\n  setValue(name, newValue) {\n    if (!!this.data && !this.isSettingValue) {\n      this.data.onTotalValueChanged();\n    }\n  }\n  runCondition(values, properties, rowsVisibleIf) {\n    var counter = 0;\n    var prevValue;\n    do {\n      prevValue = Helpers.getUnbindValue(this.value);\n      super.runCondition(values, properties, \"\");\n      counter++;\n    } while (!Helpers.isTwoValueEquals(prevValue, this.value) && counter < 3);\n  }\n  updateCellOnColumnChanged(cell, name, newValue) {\n    cell.updateCellQuestion();\n  }\n}\n/**\n * A base class for the [`QuestionMatrixDropdownModel`](https://surveyjs.io/form-library/documentation/questionmatrixdropdownmodel) and [`QuestionMatrixDynamicModel`](https://surveyjs.io/form-library/documentation/questionmatrixdynamicmodel) classes.\n */\nclass QuestionMatrixDropdownModelBase extends QuestionMatrixBaseModel {\n  static get defaultCellType() {\n    return settings.matrix.defaultCellType;\n  }\n  static set defaultCellType(val) {\n    settings.matrix.defaultCellType = val;\n  }\n  static addDefaultColumns(matrix) {\n    var colNames = QuestionFactory.DefaultColums;\n    for (var i = 0; i < colNames.length; i++) matrix.addColumn(colNames[i]);\n  }\n  createColumnValues() {\n    return this.createNewArray(\"columns\", item => {\n      item.colOwner = this;\n      if (this.onAddColumn) this.onAddColumn(item);\n      if (this.survey) {\n        this.survey.matrixColumnAdded(this, item);\n      }\n    }, item => {\n      item.colOwner = null;\n      if (this.onRemoveColumn) this.onRemoveColumn(item);\n    });\n  }\n  constructor(name) {\n    super(name);\n    this.isRowChanging = false;\n    this.lockResetRenderedTable = false;\n    this.createItemValues(\"choices\");\n    this.createLocalizableString(\"placeholder\", this, false, true);\n    this.createLocalizableString(\"keyDuplicationError\", this, false, true);\n    this.createLocalizableString(\"singleInputTitleTemplate\", this, true, this.getSingleInputTitleTemplate()).onGetTextCallback = text => {\n      return this.processSingleInputTitle(text);\n    };\n    this.detailPanelValue = this.createNewDetailPanel();\n    this.detailPanel.selectedElementInDesign = this;\n    this.detailPanel.renderWidth = \"100%\";\n    this.detailPanel.isInteractiveDesignElement = false;\n    this.detailPanel.showTitle = false;\n    this.registerPropertyChangedHandlers([\"columns\", \"cellType\"], () => {\n      this.updateColumnsAndRows();\n    });\n    this.registerPropertyChangedHandlers([\"placeholder\", \"columnColCount\", \"rowTitleWidth\", \"choices\"], () => {\n      this.clearRowsAndResetRenderedTable();\n    });\n    this.registerPropertyChangedHandlers([\"transposeData\", \"addRowButtonLocation\", \"hideColumnsIfEmpty\", \"showHeader\", \"minRowCount\", \"isReadOnly\", \"rowCount\", \"hasFooter\", \"detailPanelMode\", \"displayMode\"], () => {\n      this.resetRenderedTable();\n    });\n  }\n  getType() {\n    return \"matrixdropdownbase\";\n  }\n  dispose() {\n    super.dispose();\n    this.clearGeneratedRows();\n  }\n  get hasSingleInput() {\n    return false;\n  }\n  get isContainer() {\n    return true;\n  }\n  get isRowsDynamic() {\n    return false;\n  }\n  get isUpdateLocked() {\n    return this.isLoadingFromJson || this.isUpdating;\n  }\n  beginUpdate() {\n    this.isUpdating = true;\n  }\n  endUpdate() {\n    this.isUpdating = false;\n    this.updateColumnsAndRows();\n  }\n  updateColumnsAndRows() {\n    this.updateColumnsIndexes(this.columns);\n    this.updateColumnsCellType();\n    this.generatedTotalRow = null;\n    this.clearRowsAndResetRenderedTable();\n  }\n  itemValuePropertyChanged(item, name, oldValue, newValue) {\n    super.itemValuePropertyChanged(item, name, oldValue, newValue);\n    if (item.ownerPropertyName === \"choices\") {\n      this.clearRowsAndResetRenderedTable();\n    }\n  }\n  /**\n   * Specifies whether to display [`columns`](#columns) as rows and [`rows`](#rows) as columns.\n   *\n   * Default value: `false`\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   *\n   * [Dynamic Matrix Demo](https://surveyjs.io/form-library/examples/transpose-dynamic-rows-to-columns-in-matrix/ (linkStyle))\n   */\n  get transposeData() {\n    return this.getPropertyValue(\"transposeData\");\n  }\n  set transposeData(val) {\n    this.setPropertyValue(\"transposeData\", val);\n  }\n  /**\n   * @deprecated Use the [`transposeData`](#transposeData) property instead.\n   */\n  get columnLayout() {\n    return this.transposeData ? \"vertical\" : \"horizontal\";\n  }\n  set columnLayout(val) {\n    this.transposeData = val === \"vertical\";\n  }\n  get columnsLocation() {\n    return this.columnLayout;\n  }\n  set columnsLocation(val) {\n    this.columnLayout = val;\n  }\n  /**\n   * Specifies the error message position for questions within detail sections.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   * @see cellErrorLocation\n   */\n  get detailErrorLocation() {\n    return this.getPropertyValue(\"detailErrorLocation\");\n  }\n  set detailErrorLocation(value) {\n    this.setPropertyValue(\"detailErrorLocation\", value.toLowerCase());\n  }\n  /**\n   * Specifies the error message position relative to matrix cells.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above matrix cells.\n   * - `\"bottom\"` - Displays error messages below matrix cells.\n   * @see detailErrorLocation\n   */\n  get cellErrorLocation() {\n    return this.getPropertyValue(\"cellErrorLocation\");\n  }\n  set cellErrorLocation(value) {\n    this.setPropertyValue(\"cellErrorLocation\", value.toLowerCase());\n  }\n  getChildErrorLocation(child) {\n    const errLocation = !!child.parent ? this.detailErrorLocation : this.cellErrorLocation;\n    if (errLocation !== \"default\") return errLocation;\n    return super.getChildErrorLocation(child);\n  }\n  /**\n   * Returns `true` if [`columns`](#columns) are placed in the horizontal direction and [`rows`](#columns) in the vertical direction.\n   *\n   * To specify the layout, use the [`transposeData`](#transposeData) property. If you set it to `true`, the survey applies it only when the screen has enough space. Otherwise, the survey falls back to the original layout, but the `transposeData` property remains set to `true`. Unlike `transposeData`, the `isColumnLayoutHorizontal` property always indicates the current layout.\n   * @see transposeData\n   */\n  get isColumnLayoutHorizontal() {\n    return this.isMobile ? true : !this.transposeData;\n  }\n  /**\n   * Enables case-sensitive comparison in columns with the `isUnique` property set to `true`.\n   *\n   * When this property is `true`, `\"ABC\"` and `\"abc\"` are considered different values.\n   *\n   * Default value: `false`\n   * @see keyDuplicationError\n   */\n  get useCaseSensitiveComparison() {\n    return this.useCaseSensitiveComparisonValue !== undefined ? this.useCaseSensitiveComparisonValue : settings.comparator.caseSensitive;\n  }\n  set useCaseSensitiveComparison(val) {\n    this.useCaseSensitiveComparisonValue = val;\n  }\n  /**\n   * @deprecated Use the [`useCaseSensitiveComparison`](#useCaseSensitiveComparison) property instead.\n   */\n  get isUniqueCaseSensitive() {\n    return this.useCaseSensitiveComparison;\n  }\n  set isUniqueCaseSensitive(val) {\n    this.useCaseSensitiveComparison = val;\n  }\n  /**\n   * Specifies the location of detail sections.\n   *\n   * Possible values:\n   *\n   * - `\"underRow\"` - Displays detail sections under their respective rows. Users can expand any number of detail sections.\n   * - `\"underRowSingle\"` - Displays detail sections under their respective rows, but only one detail section can be expanded at a time.\n   * - `\"none\"` (default) - Hides detail sections.\n   *\n   * Use the [`detailElements`](#detailElements) property to specify content of detail sections.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see detailPanel\n   */\n  get detailPanelMode() {\n    return this.getPropertyValue(\"detailPanelMode\");\n  }\n  set detailPanelMode(val) {\n    this.setPropertyValue(\"detailPanelMode\", val);\n  }\n  /**\n   * Contains a [`PanelModel`](https://surveyjs.io/form-library/documentation/panelmodel) instance that represents a detail section template.\n   * @see detailElements\n   * @see detailPanelMode\n   */\n  get detailPanel() {\n    return this.detailPanelValue;\n  }\n  getPanel() {\n    return this.detailPanel;\n  }\n  /**\n   * An array of survey elements (questions and panels) to be displayed in detail sections.\n   *\n   * Detail sections are expandable panels displayed under each matrix row. You can use them to display questions that do not fit into the row.\n   *\n   * Set the [`detailPanelMode`](#detailPanelMode) property to `\"underRow\"` or `\"underRowSingle\"` to display detail sections.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see detailPanel\n   */\n  get detailElements() {\n    return this.detailPanel.elements;\n  }\n  createNewDetailPanel() {\n    return Serializer.createClass(\"panel\");\n  }\n  get hasRowText() {\n    return true;\n  }\n  getFooterText() {\n    return null;\n  }\n  get canAddRow() {\n    return false;\n  }\n  get canRemoveRows() {\n    return false;\n  }\n  canRemoveRow(row) {\n    return true;\n  }\n  onPointerDown(pointerDownEvent, row) {}\n  onRowsChanged() {\n    this.clearVisibleRows();\n    this.resetRenderedTable();\n    super.onRowsChanged();\n    const rows = this.visibleRows;\n    for (let i = 0; i < rows.length; i++) {\n      rows[i].visibleIndex = i;\n    }\n  }\n  onStartRowAddingRemoving() {\n    this.lockResetRenderedTable = true;\n    this.setValueChangedDirectly(true);\n  }\n  onEndRowAdding() {\n    this.lockResetRenderedTable = false;\n    if (!this.renderedTable) return;\n    if (this.renderedTable.isRequireReset()) {\n      this.resetRenderedTable();\n    } else {\n      const index = this.visibleRows.length - 1;\n      this.renderedTable.onAddedRow(this.visibleRows[index], index);\n    }\n  }\n  onEndRowRemoving(row) {\n    this.lockResetRenderedTable = false;\n    if (this.renderedTable.isRequireReset()) {\n      this.resetRenderedTable();\n    } else {\n      if (!!row) {\n        this.renderedTable.onRemovedRow(row);\n      }\n    }\n  }\n  get renderedTableValue() {\n    return this.getPropertyValue(\"renderedTable\", null);\n  }\n  set renderedTableValue(val) {\n    this.setPropertyValue(\"renderedTable\", val);\n  }\n  clearRowsAndResetRenderedTable() {\n    this.clearGeneratedRows();\n    this.resetRenderedTable();\n    this.fireCallback(this.columnsChangedCallback);\n  }\n  //For internal use\n  resetRenderedTable(columnVisibilityChanged) {\n    if (!this.renderedTableValue) return;\n    if (this.lockResetRenderedTable || this.isUpdateLocked) {\n      if (columnVisibilityChanged) {\n        this.renderedTableValue.requireReset();\n      }\n    } else {\n      this.renderedTableValue = null;\n      this.fireCallback(this.onRenderedTableResetCallback);\n    }\n  }\n  clearGeneratedRows() {\n    this.clearVisibleRows();\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      this.generatedVisibleRows[i].dispose();\n    }\n    super.clearGeneratedRows();\n  }\n  get isRendredTableCreated() {\n    return !!this.renderedTableValue;\n  }\n  get renderedTable() {\n    if (!this.renderedTableValue) {\n      this.renderedTableValue = this.createRenderedTable();\n      if (!!this.onRenderedTableCreatedCallback) {\n        this.onRenderedTableCreatedCallback(this.renderedTableValue);\n      }\n    }\n    return this.renderedTableValue;\n  }\n  createRenderedTable() {\n    return new QuestionMatrixDropdownRenderedTable(this);\n  }\n  getRowByQuestion(question) {\n    if (!question) return undefined;\n    return question.data;\n  }\n  onMatrixRowCreated(row) {\n    if (!this.survey) return;\n    var options = {\n      rowValue: row.value,\n      row: row,\n      column: null,\n      columnName: null,\n      cell: null,\n      cellQuestion: null,\n      value: null\n    };\n    for (var i = 0; i < this.columns.length; i++) {\n      options.column = this.columns[i];\n      options.columnName = options.column.name;\n      var cell = row.cells[i];\n      options.cell = cell;\n      options.cellQuestion = cell.question;\n      options.value = cell.value;\n      if (!!this.onCellCreatedCallback) {\n        this.onCellCreatedCallback(options);\n      }\n      this.survey.matrixCellCreated(this, options);\n    }\n  }\n  /**\n   * Specifies the type of matrix cells. You can override this property for individual columns.\n   *\n   * Possible values:\n   *\n   * - [`\"dropdown\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model)\n   * - [`\"checkbox\"`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model)\n   * - [`\"radiogroup\"`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model)\n   * - [`\"tagbox\"`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model)\n   * - [`\"text\"`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model)\n   * - [`\"comment\"`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model)\n   * - [`\"boolean\"`](https://surveyjs.io/form-library/documentation/api-reference/boolean-question-model)\n   * - [`\"expression\"`](https://surveyjs.io/form-library/documentation/api-reference/expression-model)\n   * - [`\"rating\"`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model)\n   *\n   * Default value: `\"dropdown\"` (inherited from [`settings.matrix.defaultCellType`](https://surveyjs.io/form-library/documentation/settings#matrixDefaultCellType))\n   *\n   * [Multi-Select Matrix Demo](https://surveyjs.io/form-library/examples/multi-select-matrix-question/ (linkStyle))\n   *\n   * [Dynamic Matrix Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   */\n  get cellType() {\n    return this.getPropertyValue(\"cellType\", settings.matrix.defaultCellType);\n  }\n  set cellType(val) {\n    val = val.toLowerCase();\n    this.setPropertyValue(\"cellType\", val);\n  }\n  isSelectCellType() {\n    return Serializer.isDescendantOf(this.cellType, \"selectbase\");\n  }\n  updateColumnsCellType() {\n    for (var i = 0; i < this.columns.length; i++) {\n      this.columns[i].defaultCellTypeChanged();\n    }\n  }\n  updateColumnsIndexes(cols) {\n    for (var i = 0; i < cols.length; i++) {\n      cols[i].setIndex(i);\n    }\n  }\n  /**\n   * Specifies the number of columns in Radiogroup and Checkbox cells.\n   *\n   * Default value: 0 (the number of columns is selected automatically based on the available column width)\n   * @see cellType\n   */\n  get columnColCount() {\n    return this.getPropertyValue(\"columnColCount\");\n  }\n  set columnColCount(value) {\n    if (value < 0 || value > 4) return;\n    this.setPropertyValue(\"columnColCount\", value);\n  }\n  get horizontalScroll() {\n    return this.getPropertyValue(\"horizontalScroll\");\n  }\n  set horizontalScroll(val) {\n    this.setPropertyValue(\"horizontalScroll\", val);\n  }\n  get allowAdaptiveActions() {\n    return this.getPropertyValue(\"allowAdaptiveActions\");\n  }\n  set allowAdaptiveActions(val) {\n    this.setPropertyValue(\"allowAdaptiveActions\", val);\n    if (!!this.detailPanel) {\n      this.detailPanel.allowAdaptiveActions = val;\n    }\n  }\n  hasChoices() {\n    return this.choices.length > 0;\n  }\n  onColumnPropertyChanged(column, name, newValue) {\n    this.updateHasFooter();\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      this.generatedVisibleRows[i].updateCellQuestionOnColumnChanged(column, name, newValue);\n    }\n    if (!!this.generatedTotalRow) {\n      this.generatedTotalRow.updateCellQuestionOnColumnChanged(column, name, newValue);\n    }\n    this.onColumnsChanged();\n    if (name == \"isRequired\") {\n      this.resetRenderedTable();\n    }\n  }\n  onColumnNestedPropertyChanged(column, name, nestedName, newValue) {\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      const row = this.generatedVisibleRows[i];\n      const q = row.getQuestionByColumn(column);\n      if (!!q && !!q[name]) {\n        q[name][nestedName] = newValue;\n      }\n    }\n  }\n  onColumnItemValuePropertyChanged(column, propertyName, obj, name, newValue, oldValue) {\n    if (!this.generatedVisibleRows) return;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      this.generatedVisibleRows[i].updateCellQuestionOnColumnItemValueChanged(column, propertyName, obj, name, newValue, oldValue);\n    }\n  }\n  onShowInMultipleColumnsChanged(column) {\n    this.resetTableAndRows();\n  }\n  onColumnVisibilityChanged(column) {\n    this.resetTableAndRows();\n  }\n  onColumnCellTypeChanged(column) {\n    this.updateDefaultRowValue(column);\n    this.resetTableAndRows();\n  }\n  updateDefaultRowValue(column) {\n    let val = this.defaultRowValue;\n    if (!!val) {\n      if (column.cellType === \"file\" && val[column.name]) {\n        delete val[column.name];\n        if (Object.keys(val).length === 0) {\n          val = undefined;\n        }\n        this.defaultRowValue = val;\n      }\n    }\n  }\n  resetTableAndRows() {\n    this.clearGeneratedRows();\n    this.resetRenderedTable();\n  }\n  getRowTitleWidth() {\n    return \"\";\n  }\n  get hasFooter() {\n    return this.getPropertyValue(\"hasFooter\", false);\n  }\n  getAddRowLocation() {\n    return \"default\";\n  }\n  getShowColumnsIfEmpty() {\n    return false;\n  }\n  updateShowTableAndAddRow() {\n    if (!!this.renderedTable) {\n      this.renderedTable.updateShowTableAndAddRow();\n    }\n  }\n  updateHasFooter() {\n    this.setPropertyValue(\"hasFooter\", this.hasTotal);\n  }\n  get hasTotal() {\n    for (var i = 0; i < this.columns.length; i++) {\n      if (this.columns[i].hasTotal) return true;\n    }\n    return false;\n  }\n  getCellType() {\n    return this.cellType;\n  }\n  getCustomCellType(column, row, cellType) {\n    if (!this.survey) return cellType;\n    var options = {\n      rowValue: row.value,\n      row: row,\n      column: column,\n      columnName: column.name,\n      cellType: cellType\n    };\n    this.survey.matrixCellCreating(this, options);\n    return options.cellType;\n  }\n  getConditionJson(operator = null, path = null) {\n    if (!path) return super.getConditionJson(operator);\n    let columnName = \"\";\n    for (let i = path.length - 1; i >= 0; i--) {\n      if (path[i] == \".\") break;\n      columnName = path[i] + columnName;\n    }\n    let question = undefined;\n    let column = this.getColumnByName(columnName);\n    if (!!column) {\n      question = column.createCellQuestion(null);\n    } else {\n      if (this.detailPanelMode !== \"none\") {\n        question = this.detailPanel.getQuestionByName(columnName);\n      }\n    }\n    return !!question ? question.getConditionJson(operator) : null;\n  }\n  clearIncorrectValues() {\n    if (!Array.isArray(this.visibleRows)) return;\n    const rows = this.generatedVisibleRows;\n    for (let i = 0; i < rows.length; i++) {\n      rows[i].clearIncorrectValues(this.getRowValue(i));\n    }\n  }\n  clearErrors() {\n    super.clearErrors();\n    this.runFuncForCellQuestions(q => {\n      q.clearErrors();\n    });\n  }\n  localeChanged() {\n    super.localeChanged();\n    this.runFuncForCellQuestions(q => {\n      q.localeChanged();\n    });\n  }\n  runFuncForCellQuestions(func) {\n    const rows = this.generatedVisibleRows;\n    if (!!rows) {\n      for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        if (row.isVisible) {\n          for (let j = 0; j < row.cells.length; j++) {\n            func(row.cells[j].question);\n          }\n        }\n      }\n    }\n  }\n  runConditionCore(values, properties) {\n    const oldRowVariables = values[MatrixDropdownRowModelBase.RowVariableName];\n    super.runConditionCore(values, properties);\n    var counter = 0;\n    var prevTotalValue;\n    do {\n      prevTotalValue = Helpers.getUnbindValue(this.totalValue);\n      this.runCellsCondition(values, properties);\n      this.runTotalsCondition(values, properties);\n      counter++;\n    } while (!Helpers.isTwoValueEquals(prevTotalValue, this.totalValue) && counter < 3);\n    this.updateVisibilityBasedOnRows();\n    values[MatrixDropdownRowModelBase.RowVariableName] = oldRowVariables;\n  }\n  runTriggers(name, value, keys) {\n    super.runTriggers(name, value, keys);\n    this.runFuncForCellQuestions(q => {\n      q.runTriggers(name, value, keys);\n    });\n  }\n  updateElementVisibility() {\n    super.updateElementVisibility();\n    const rows = this.generatedVisibleRows;\n    if (!!rows) {\n      rows.forEach(row => row.updateElementVisibility());\n    }\n    this.updateShowTableAndAddRow();\n  }\n  shouldRunColumnExpression() {\n    return false;\n  }\n  runCellsCondition(values, properties) {\n    if (this.isDesignMode) return;\n    const rows = this.generatedVisibleRows;\n    if (!!rows) {\n      const newValues = this.getRowConditionValues(values);\n      for (var i = 0; i < rows.length; i++) {\n        rows[i].runCondition(newValues, properties, this.rowsVisibleIf);\n      }\n    }\n    this.checkColumnsVisibility();\n    this.checkColumnsRenderedRequired();\n  }\n  runConditionsForColumns(values, properties) {\n    this.columns.forEach(column => {\n      if (!this.columnsVisibleIf) {\n        column.isColumnsVisibleIf = true;\n      } else {\n        const condition = new ConditionRunner(this.columnsVisibleIf);\n        values[\"item\"] = column.name;\n        column.isColumnsVisibleIf = condition.run(values, properties) === true;\n      }\n    });\n    return false;\n  }\n  checkColumnsVisibility() {\n    if (this.isDesignMode) return;\n    var hasChanged = false;\n    for (var i = 0; i < this.columns.length; i++) {\n      const column = this.columns[i];\n      const isCellsVisibilty = !!column.visibleIf || column.isFilteredMultipleColumns;\n      if (!isCellsVisibilty && !this.columnsVisibleIf && column.isColumnVisible) continue;\n      hasChanged = this.isColumnVisibilityChanged(column, isCellsVisibilty) || hasChanged;\n    }\n    if (hasChanged) {\n      this.resetRenderedTable(true);\n    }\n  }\n  checkColumnsRenderedRequired() {\n    const rows = this.generatedVisibleRows;\n    if (!rows) return;\n    for (var i = 0; i < this.columns.length; i++) {\n      const column = this.columns[i];\n      if (!column.requiredIf || !column.isColumnVisible) continue;\n      let required = rows.length > 0;\n      for (var j = 0; j < rows.length; j++) {\n        if (!rows[j].cells[i].question.isRequired) {\n          required = false;\n          break;\n        }\n      }\n      column.updateIsRenderedRequired(required);\n    }\n  }\n  isColumnVisibilityChanged(column, checkCellsVisiblity) {\n    const curVis = column.isColumnVisible;\n    let hasVisCell = !checkCellsVisiblity;\n    const rows = this.generatedVisibleRows;\n    const checkRows = checkCellsVisiblity && rows;\n    const isMultipleColumnsVisibility = checkRows && column.isFilteredMultipleColumns;\n    const curVisibleChoices = isMultipleColumnsVisibility ? column.getVisibleChoicesInCell : [];\n    const newVisibleChoices = new Array();\n    if (checkRows) {\n      for (let i = 0; i < rows.length; i++) {\n        const cell = rows[i].cells[column.index];\n        const q = cell === null || cell === void 0 ? void 0 : cell.question;\n        if (!!q && q.isVisible) {\n          hasVisCell = true;\n          if (isMultipleColumnsVisibility) {\n            this.updateNewVisibleChoices(q, newVisibleChoices);\n          } else break;\n        }\n      }\n    }\n    column.hasVisibleCell = hasVisCell && column.isColumnsVisibleIf;\n    if (isMultipleColumnsVisibility) {\n      column.setVisibleChoicesInCell(newVisibleChoices);\n      if (!Helpers.isArraysEqual(curVisibleChoices, newVisibleChoices, true, false, false)) return true;\n    }\n    return curVis !== column.isColumnVisible;\n  }\n  updateNewVisibleChoices(q, dest) {\n    const choices = q.visibleChoices;\n    if (!Array.isArray(choices)) return;\n    for (let i = 0; i < choices.length; i++) {\n      const ch = choices[i];\n      if (dest.indexOf(ch.value) < 0) dest.push(ch.value);\n    }\n  }\n  runTotalsCondition(values, properties) {\n    if (!this.generatedTotalRow) return;\n    this.generatedTotalRow.runCondition(this.getRowConditionValues(values), properties);\n  }\n  getRowConditionValues(values) {\n    var newValues = values;\n    if (!newValues) newValues = {};\n    /*\n    var newValues: { [index: string]: any } = {};\n    if (values && values instanceof Object) {\n      newValues = JSON.parse(JSON.stringify(values));\n    }\n    */\n    var totalRow = {};\n    if (!this.isValueEmpty(this.totalValue)) {\n      totalRow = JSON.parse(JSON.stringify(this.totalValue));\n    }\n    newValues[\"row\"] = {};\n    newValues[\"totalRow\"] = totalRow;\n    return newValues;\n  }\n  IsMultiplyColumn(column) {\n    return column.isShowInMultipleColumns && !this.isMobile;\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    var columns = this.columns;\n    for (var i = 0; i < columns.length; i++) {\n      columns[i].locStrsChanged();\n    }\n    var rows = this.generatedVisibleRows;\n    if (!rows) return;\n    for (var i = 0; i < rows.length; i++) {\n      rows[i].locStrsChanged();\n    }\n    if (!!this.generatedTotalRow) {\n      this.generatedTotalRow.locStrsChanged();\n    }\n  }\n  /**\n   * Returns a matrix column with a given `name` or `null` if a column with this is not found.\n   * @param columnName A column name.\n   */\n  getColumnByName(columnName) {\n    for (var i = 0; i < this.columns.length; i++) {\n      if (this.columns[i].name == columnName) return this.columns[i];\n    }\n    return null;\n  }\n  getColumnName(columnName) {\n    return this.getColumnByName(columnName);\n  }\n  getColumnWidth(column) {\n    var _a;\n    return column.minWidth ? column.minWidth : this.columnMinWidth ? this.columnMinWidth : ((_a = settings.matrix.columnWidthsByType[column.cellType]) === null || _a === void 0 ? void 0 : _a.minWidth) || \"\";\n  }\n  /**\n   * Gets or sets choice items for Dropdown, Checkbox, and Radiogroup matrix cells. You can override this property for individual columns.\n   *\n   * This property accepts an array of objects with the following structure:\n   *\n   * ```js\n   * {\n   *   \"value\": any, // A value to be saved in survey results\n   *   \"text\": String, // A display text. This property supports Markdown. When `text` is undefined, `value` is used.\n   *   \"customProperty\": any // Any property that you find useful.\n   * }\n   * ```\n   *\n   * To enable Markdown support for the `text` property, implement Markdown-to-HTML conversion in the [onTextMarkdown](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * If you add custom properties, refer to the following help topic to learn how to serialize them into JSON: [Add Custom Properties to Property Grid](https://surveyjs.io/survey-creator/documentation/property-grid#add-custom-properties-to-the-property-grid).\n   *\n   * If you need to specify only the `value` property, you can set the `choices` property to an array of primitive values, for example, `[ \"item1\", \"item2\", \"item3\" ]`. These values are both saved in survey results and used as display text.\n   * @see cellType\n   */\n  get choices() {\n    return this.getPropertyValue(\"choices\");\n  }\n  set choices(val) {\n    this.setPropertyValue(\"choices\", val);\n  }\n  /**\n   * A placeholder for Dropdown matrix cells.\n   * @see cellType\n   */\n  get placeholder() {\n    return this.getLocalizableStringText(\"placeholder\");\n  }\n  set placeholder(val) {\n    this.setLocalizableStringText(\"placeholder\", val);\n  }\n  get locPlaceholder() {\n    return this.getLocalizableString(\"placeholder\");\n  }\n  get optionsCaption() {\n    return this.placeholder;\n  }\n  set optionsCaption(val) {\n    this.placeholder = val;\n  }\n  /**\n   * An error message displayed when users enter a duplicate value into a column that accepts only unique values (`isUnique` is set to `true` or `keyName` is specified).\n   *\n   * A default value for this property is taken from a [localization dictionary](https://github.com/surveyjs/survey-library/tree/01bd8abd0c574719956d4d579d48c8010cd389d4/packages/survey-core/src/localization). Refer to the following help topic for more information: [Localization & Globalization](https://surveyjs.io/form-library/documentation/localization).\n   * @see useCaseSensitiveComparison\n   */\n  get keyDuplicationError() {\n    return this.getLocalizableStringText(\"keyDuplicationError\");\n  }\n  set keyDuplicationError(val) {\n    this.setLocalizableStringText(\"keyDuplicationError\", val);\n  }\n  get locKeyDuplicationError() {\n    return this.getLocalizableString(\"keyDuplicationError\");\n  }\n  /**\n   * A title template that applies when the survey is in [input-per-page mode](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode).\n   *\n   * Default value: `\"Row {rowIndex}\"` for Dynamic Matrix | `\"{rowTitle}\"` for Multi-Select Matrix\n   *\n   * The template can contain the following placeholders:\n   *\n   * - `{rowIndex}` - A row index within the collection of all rows. Starts with 1.\n   * - `{rowName}` - A row name (the `value` property within objects in the [`rows`](#rows) array). Use this placeholder if you need to distinguish between matrix rows.\n   * - `{rowTitle}` - A row title (the `text` property within objects in the `rows` array).\n   * - `{row.columnname}` - The value of a cell in the same row.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/loop-and-merge/ (linkStyle))\n   */\n  get singleInputTitleTemplate() {\n    return this.getLocalizableStringText(\"singleInputTitleTemplate\");\n  }\n  set singleInputTitleTemplate(val) {\n    this.setLocalizableStringText(\"singleInputTitleTemplate\", val);\n  }\n  get locSingleInputTitleTemplate() {\n    return this.getLocalizableString(\"singleInputTitleTemplate\");\n  }\n  getSingleQuestionLocTitleCore() {\n    return this.locSingleInputTitleTemplate;\n  }\n  getSingleInputTitleTemplate() {\n    return \"\";\n  }\n  processSingleInputTitle(text) {\n    const row = this.getRowByQuestion(this.singleInputQuestion);\n    if (row) {\n      return row.getTextProcessor().processText(text, true);\n    }\n    return \"\";\n  }\n  singleInputMoveToFirstCore() {\n    var _a;\n    const data = (_a = this.singleInputQuestion) === null || _a === void 0 ? void 0 : _a.data;\n    this.singleInputEditRow(data);\n  }\n  singleInputEditRow(row) {\n    if (!row) return;\n    const qs = row.visibleQuestions;\n    if (Array.isArray(qs) && qs.length > 0) {\n      this.setSingleInputQuestion(qs[0]);\n    }\n  }\n  get storeOthersAsComment() {\n    return !!this.survey ? this.survey.storeOthersAsComment : false;\n  }\n  addColumn(name, title) {\n    var column = new MatrixDropdownColumn(name, title, this);\n    this.columns.push(column);\n    return column;\n  }\n  clearVisibleRows() {\n    this.visibleRowsArray = null;\n  }\n  isColumnVisible(column) {\n    return column.isColumnVisible;\n  }\n  getVisibleRows() {\n    if (this.isUpdateLocked) return null;\n    if (this.isGenereatingRows) return [];\n    if (!!this.visibleRowsArray) return this.visibleRowsArray;\n    this.generateVisibleRowsIfNeeded();\n    this.visibleRowsArray = this.getVisibleFromGenerated(this.generatedVisibleRows);\n    return this.visibleRowsArray;\n  }\n  generateVisibleRowsIfNeeded() {\n    if (!this.isUpdateLocked && !this.generatedVisibleRows) {\n      this.isGenereatingRows = true;\n      this.generatedVisibleRows = this.generateRows();\n      this.isGenereatingRows = false;\n      for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n        const row = this.generatedVisibleRows[i];\n        row.visibleIndex = i;\n        this.onMatrixRowCreated(row);\n      }\n      if (this.data) {\n        this.runCellsCondition(this.data.getFilteredValues(), this.data.getFilteredProperties());\n        if (this.isValueChangedWithoutRows) {\n          this.isValueChangedWithoutRows = false;\n          this.runTriggersOnNewRows();\n        }\n      }\n      if (!!this.generatedVisibleRows) {\n        this.updateValueOnRowsGeneration(this.generatedVisibleRows);\n        this.updateIsAnswered();\n      }\n    }\n  }\n  runTriggersOnNewRows() {\n    const val = this.value;\n    this.generatedVisibleRows.forEach(row => {\n      const rowValue = this.getRowValueCore(row, val);\n      if (!Helpers.isValueEmpty(rowValue)) {\n        const triggeredValue = Helpers.createCopyWithPrefix(rowValue, MatrixDropdownRowModelBase.RowVariableName + \".\");\n        row.runTriggers(\"\", undefined, triggeredValue);\n      }\n    });\n  }\n  getVisibleFromGenerated(rows) {\n    const res = [];\n    if (!rows) return res;\n    rows.forEach(row => {\n      if (row.isVisible) res.push(row);\n    });\n    return res.length === rows.length ? rows : res;\n  }\n  updateValueOnRowsGeneration(rows) {\n    var oldValue = this.createNewValue(true);\n    var newValue = this.createNewValue();\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      if (!!row.editingObj) continue;\n      var rowValue = this.getRowValue(i);\n      var rValue = row.value;\n      if (this.isTwoValueEquals(rowValue, rValue)) continue;\n      newValue = this.getNewValueOnRowChanged(row, \"\", rValue, false, newValue).value;\n    }\n    if (this.isTwoValueEquals(oldValue, newValue)) return;\n    this.isRowChanging = true;\n    this.setNewValue(newValue);\n    this.isRowChanging = false;\n  }\n  get totalValue() {\n    if (!this.hasTotal || !this.visibleTotalRow) return {};\n    return this.visibleTotalRow.value;\n  }\n  getVisibleTotalRow() {\n    if (this.isUpdateLocked) return null;\n    if (this.hasTotal) {\n      if (!this.generatedTotalRow) {\n        this.generatedTotalRow = this.generateTotalRow();\n        if (this.data) {\n          var properties = {\n            survey: this.survey\n          };\n          this.runTotalsCondition(this.data.getAllValues(), properties);\n        }\n      }\n    } else {\n      this.generatedTotalRow = null;\n    }\n    return this.generatedTotalRow;\n  }\n  get visibleTotalRow() {\n    return this.getVisibleTotalRow();\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    this.updateColumnsIndexes(this.columns);\n    this.clearGeneratedRows();\n    this.generatedTotalRow = null;\n    this.updateHasFooter();\n  }\n  /**\n   * Returns an object with row values. If a row has no answers, this method returns an empty object.\n   * @param rowIndex A zero-based row index.\n   * @see setRowValue\n   */\n  getRowValue(rowIndex) {\n    if (rowIndex < 0 || !Array.isArray(this.visibleRows)) return null;\n    var rows = this.generatedVisibleRows;\n    if (rowIndex >= rows.length) return null;\n    const val = this.value;\n    const rowVal = this.getRowValueCore(rows[rowIndex], val);\n    if (this.isValueSurveyElement(val)) return rowVal;\n    return Helpers.getUnbindValue(rowVal);\n  }\n  checkIfValueInRowDuplicated(checkedRow, cellQuestion) {\n    if (!this.generatedVisibleRows) return false;\n    return this.isValueInColumnDuplicated(cellQuestion.name, true, checkedRow);\n  }\n  /**\n   * Assigns values to a row.\n   * @param rowIndex A zero-based row index.\n   * @param rowValue An object with the following structure: `{ \"column_name\": columnValue, ... }`\n   * @see getRowValue\n   */\n  setRowValue(rowIndex, rowValue) {\n    if (rowIndex < 0) return null;\n    var visRows = this.visibleRows;\n    if (rowIndex >= visRows.length) return null;\n    visRows[rowIndex].value = rowValue;\n    this.onRowChanged(visRows[rowIndex], \"\", rowValue, false);\n  }\n  generateRows() {\n    return null;\n  }\n  generateTotalRow() {\n    return new MatrixDropdownTotalRowModel(this);\n  }\n  createNewValue(nullOnEmpty = false) {\n    var res = !this.value ? {} : this.createValueCopy();\n    if (nullOnEmpty && this.isMatrixValueEmpty(res)) return null;\n    return res;\n  }\n  getRowValueCore(row, questionValue, create = false) {\n    var result = !!questionValue && !!questionValue[row.rowName] ? questionValue[row.rowName] : null;\n    if (!result && create) {\n      result = {};\n      if (!!questionValue) {\n        questionValue[row.rowName] = result;\n      }\n    }\n    return result;\n  }\n  getRowObj(row) {\n    var obj = this.getRowValueCore(row, this.value);\n    return !!obj && !!obj.getType ? obj : null;\n  }\n  getRowDisplayValue(keysAsText, row, rowValue) {\n    if (!rowValue) return rowValue;\n    if (!!row.editingObj) return rowValue;\n    var keys = Object.keys(rowValue);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var question = row.getQuestionByName(key);\n      if (!question) {\n        question = this.getSharedQuestionByName(key, row);\n      }\n      if (!!question) {\n        var displayvalue = question.getDisplayValue(keysAsText, rowValue[key]);\n        if (keysAsText && !!question.title && question.title !== key) {\n          rowValue[question.title] = displayvalue;\n          delete rowValue[key];\n        } else {\n          rowValue[key] = displayvalue;\n        }\n      }\n    }\n    return rowValue;\n  }\n  getPlainData(options = {\n    includeEmpty: true\n  }) {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      questionPlainData.isNode = true;\n      const prevData = Array.isArray(questionPlainData.data) ? [].concat(questionPlainData.data) : [];\n      questionPlainData.data = this.visibleRows.map(row => {\n        var rowDataItem = {\n          name: row.dataName,\n          title: row.text,\n          value: row.value,\n          displayValue: this.getRowDisplayValue(false, row, row.value),\n          getString: val => typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: true,\n          data: row.cells.map(cell => cell.question.getPlainData(options)).filter(d => !!d)\n        };\n        (options.calculations || []).forEach(calculation => {\n          rowDataItem[calculation.propertyName] = row[calculation.propertyName];\n        });\n        return rowDataItem;\n      });\n      questionPlainData.data = questionPlainData.data.concat(prevData);\n    }\n    return questionPlainData;\n  }\n  addConditionObjectsByContext(objects, context) {\n    let rowElements = [].concat(this.columns);\n    if (this.detailPanelMode !== \"none\") {\n      rowElements = rowElements.concat(this.detailPanel.questions);\n    }\n    const hasColumnContext = !!context && rowElements.indexOf(context) > -1;\n    const hasContext = context === true || hasColumnContext;\n    const rowsIndeces = this.getConditionObjectsRowIndeces();\n    if (hasContext) {\n      rowsIndeces.push(-1);\n    }\n    for (var i = 0; i < rowsIndeces.length; i++) {\n      const index = rowsIndeces[i];\n      const rowName = index > -1 ? this.getConditionObjectRowName(index) : \"row\";\n      if (!rowName) continue;\n      const rowTitle = index > -1 ? this.getConditionObjectRowText(index) : \"row\";\n      const hasQuestionPrefix = index > -1 || context === true;\n      const dot = hasQuestionPrefix && index === -1 ? \".\" : \"\";\n      const prefixName = (hasQuestionPrefix ? this.getValueName() : \"\") + dot + rowName + \".\";\n      const prefixTitle = (hasQuestionPrefix ? this.processedTitle : \"\") + dot + rowTitle + \".\";\n      for (var j = 0; j < rowElements.length; j++) {\n        const rowElement = rowElements[j];\n        if (index === -1 && context === rowElement) continue;\n        const obj = {\n          name: prefixName + rowElement.name,\n          text: prefixTitle + rowElement.fullTitle,\n          question: this\n        };\n        if (index === -1 && context === true) {\n          obj.context = this;\n        } else {\n          if (hasColumnContext && prefixName.startsWith(\"row.\")) {\n            obj.context = context;\n          }\n        }\n        objects.push(obj);\n      }\n    }\n  }\n  onHidingContent() {\n    super.onHidingContent();\n    if (!this.generatedVisibleRows) return;\n    const questions = [];\n    this.collectNestedQuestions(questions, true);\n    questions.forEach(q => q.onHidingContent());\n  }\n  getIsReadyNestedQuestions() {\n    if (!this.generatedVisibleRows) return [];\n    const res = new Array();\n    this.collectNestedQuestonsInRows(this.generatedVisibleRows, res, false, true, false);\n    if (!!this.generatedTotalRow) {\n      this.collectNestedQuestonsInRows([this.generatedTotalRow], res, false, true, false);\n    }\n    return res;\n  }\n  collectNestedQuestionsCore(questions, visibleOnly, includeNested, includeItSelf) {\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    this.collectNestedQuestonsInRows(this.visibleRows, questions, visibleOnly, includeNested, includeItSelf);\n  }\n  collectNestedQuestonsInRows(rows, questions, visibleOnly, includeNested, includeItSelf) {\n    if (!Array.isArray(rows)) return;\n    rows.forEach(row => {\n      row.questions.forEach(q => q.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n    });\n  }\n  getConditionObjectRowName(index) {\n    return \"\";\n  }\n  getConditionObjectRowText(index) {\n    return this.getConditionObjectRowName(index);\n  }\n  getConditionObjectsRowIndeces() {\n    return [];\n  }\n  getProgressInfo() {\n    this.getIsRequireToGenerateRows() && this.generateVisibleRowsIfNeeded();\n    if (!!this.generatedVisibleRows) return SurveyElement.getProgressInfoByElements(this.getCellQuestions(), this.isRequired);\n    const res = Base.createProgressInfo();\n    this.updateProgressInfoByValues(res);\n    if (res.requiredQuestionCount === 0 && this.isRequired) {\n      res.requiredQuestionCount = 1;\n      res.requiredAnsweredQuestionCount = !this.isEmpty() ? 1 : 0;\n    }\n    return res;\n  }\n  getIsRequireToGenerateRows() {\n    return !!this.rowsVisibleIf;\n  }\n  updateProgressInfoByValues(res) {}\n  updateProgressInfoByRow(res, rowValue) {\n    for (var i = 0; i < this.columns.length; i++) {\n      const col = this.columns[i];\n      if (!col.templateQuestion.hasInput) continue;\n      const hasValue = !Helpers.isValueEmpty(rowValue[col.name]);\n      if (!hasValue && !!col.templateQuestion.visibleIf) continue;\n      res.questionCount += 1;\n      res.requiredQuestionCount += col.isRequired;\n      res.answeredQuestionCount += hasValue ? 1 : 0;\n      res.requiredAnsweredQuestionCount += hasValue && col.isRequired ? 1 : 0;\n    }\n  }\n  getCellQuestions() {\n    const res = [];\n    this.runFuncForCellQuestions(q => {\n      res.push(q);\n    });\n    return res;\n  }\n  onBeforeValueChanged(val) {}\n  onSetQuestionValue() {\n    if (this.isRowChanging) return;\n    this.onBeforeValueChanged(this.value);\n    if (!this.generatedVisibleRows || this.generatedVisibleRows.length == 0) return;\n    this.isRowChanging = true;\n    var val = this.createNewValue();\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      var row = this.generatedVisibleRows[i];\n      this.generatedVisibleRows[i].value = this.getRowValueCore(row, val);\n    }\n    this.isRowChanging = false;\n  }\n  setQuestionValue(newValue) {\n    super.setQuestionValue(newValue, false);\n    this.onSetQuestionValue();\n    this.updateIsAnswered();\n  }\n  supportAutoAdvance() {\n    var rows = this.generatedVisibleRows;\n    if (!rows) rows = this.visibleRows;\n    if (!rows) return true;\n    for (var i = 0; i < rows.length; i++) {\n      var cells = this.generatedVisibleRows[i].cells;\n      if (!cells) continue;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        var question = cells[colIndex].question;\n        if (question && (!question.supportAutoAdvance() || !question.value)) return false;\n      }\n    }\n    return true;\n  }\n  getContainsErrors() {\n    return super.getContainsErrors() || this.checkForAnswersOrErrors(question => question.containsErrors, false);\n  }\n  getIsAnswered() {\n    return super.getIsAnswered() && this.checkForAnswersOrErrors(question => question.isAnswered, true);\n  }\n  checkForAnswersOrErrors(predicate, every = false) {\n    var rows = this.generatedVisibleRows;\n    if (!rows) return false;\n    for (var i = 0; i < rows.length; i++) {\n      var cells = rows[i].cells;\n      if (!cells) continue;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        if (!cells[colIndex]) continue;\n        var question = cells[colIndex].question;\n        if (question && question.isVisible) if (predicate(question)) {\n          if (!every) return true;\n        } else {\n          if (every) return false;\n        }\n      }\n    }\n    return every ? true : false;\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    var errosInRows = this.hasErrorInRows(fireCallback, rec);\n    var isDuplicated = this.isValueDuplicated();\n    return super.hasErrors(fireCallback, rec) || errosInRows || isDuplicated;\n  }\n  getIsRunningValidators() {\n    if (super.getIsRunningValidators()) return true;\n    if (!this.generatedVisibleRows) return false;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      var cells = this.generatedVisibleRows[i].cells;\n      if (!cells) continue;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        if (!cells[colIndex]) continue;\n        var question = cells[colIndex].question;\n        if (!!question && question.isRunningValidators) return true;\n      }\n    }\n    return false;\n  }\n  getAllErrors() {\n    var result = super.getAllErrors();\n    var rows = this.generatedVisibleRows;\n    if (rows === null) return result;\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      for (var j = 0; j < row.cells.length; j++) {\n        var errors = row.cells[j].question.getAllErrors();\n        if (errors && errors.length > 0) {\n          result = result.concat(errors);\n        }\n      }\n    }\n    return result;\n  }\n  hasErrorInRows(fireCallback, rec) {\n    let rows = this.generatedVisibleRows;\n    if (!this.generatedVisibleRows) {\n      rows = this.visibleRows;\n    }\n    var res = false;\n    if (!rec) rec = {};\n    if (!rows) return rec;\n    rec.validationValues = this.getDataFilteredValues();\n    rec.isSingleDetailPanel = this.detailPanelMode === \"underRowSingle\";\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].isVisible) {\n        res = rows[i].hasErrors(fireCallback, rec, () => {\n          this.raiseOnCompletedAsyncValidators();\n        }) || res;\n      }\n    }\n    return res;\n  }\n  isValueDuplicated() {\n    if (!this.generatedVisibleRows) return false;\n    var names = this.getUniqueColumnsNames();\n    var res = false;\n    for (var i = 0; i < names.length; i++) {\n      res = this.isValueInColumnDuplicated(names[i], true) || res;\n    }\n    return res;\n  }\n  getUniqueColumnsNames() {\n    var res = new Array();\n    for (var i = 0; i < this.columns.length; i++) {\n      if (this.columns[i].isUnique) {\n        res.push(this.columns[i].name);\n      }\n    }\n    return res;\n  }\n  isValueInColumnDuplicated(columnName, showErrors, row) {\n    const rows = this.getDuplicatedRows(columnName);\n    if (showErrors) {\n      this.showDuplicatedErrorsInRows(rows, columnName);\n    }\n    this.removeDuplicatedErrorsInRows(rows, columnName);\n    return !!row ? rows.indexOf(row) > -1 : rows.length > 0;\n  }\n  getDuplicatedRows(columnName) {\n    const keyValues = {};\n    const res = [];\n    const rows = this.generatedVisibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      let val = undefined;\n      const question = rows[i].getQuestionByName(columnName);\n      if (!!question) {\n        val = question.value;\n      } else {\n        const rowVal = this.getRowValue(i);\n        val = !!rowVal ? rowVal[columnName] : undefined;\n      }\n      if (!this.isValueEmpty(val)) {\n        if (!this.useCaseSensitiveComparison && typeof val === \"string\") {\n          val = val.toLocaleLowerCase();\n        }\n        if (!keyValues[val]) {\n          keyValues[val] = [];\n        }\n        keyValues[val].push(rows[i]);\n      }\n    }\n    for (let key in keyValues) {\n      if (keyValues[key].length > 1) {\n        keyValues[key].forEach(row => res.push(row));\n      }\n    }\n    return res;\n  }\n  showDuplicatedErrorsInRows(duplicatedRows, columnName) {\n    duplicatedRows.forEach(row => {\n      let question = row.getQuestionByName(columnName);\n      const inDetailPanel = this.detailPanel.getQuestionByName(columnName);\n      if (!question && inDetailPanel) {\n        row.showDetailPanel();\n        if (row.detailPanel) {\n          question = row.detailPanel.getQuestionByName(columnName);\n        }\n      }\n      if (question) {\n        if (inDetailPanel) {\n          row.showDetailPanel();\n        }\n        this.addDuplicationError(question);\n      }\n    });\n  }\n  removeDuplicatedErrorsInRows(duplicatedRows, columnName) {\n    this.generatedVisibleRows.forEach(row => {\n      if (duplicatedRows.indexOf(row) < 0) {\n        const question = row.getQuestionByName(columnName);\n        if (question) {\n          this.removeDuplicationError(row, question);\n        }\n      }\n    });\n  }\n  getDuplicationError(question) {\n    const errors = question.errors;\n    for (let i = 0; i < errors.length; i++) {\n      if (errors[i].getErrorType() === \"keyduplicationerror\") return errors[i];\n    }\n    return null;\n  }\n  addDuplicationError(question) {\n    if (!this.getDuplicationError(question)) {\n      question.addError(new KeyDuplicationError(this.keyDuplicationError, this));\n    }\n  }\n  removeDuplicationError(row, question) {\n    if (question.removeError(this.getDuplicationError(question)) && question.errors.length === 0 && !!row.editingObj) {\n      row.editingObj[question.getValueName()] = question.value;\n    }\n  }\n  getFirstQuestionToFocus(withError) {\n    return this.getFirstCellQuestion(withError);\n  }\n  getFirstInputElementId() {\n    var question = this.getFirstCellQuestion(false);\n    return question ? question.inputId : super.getFirstInputElementId();\n  }\n  getFirstErrorInputElementId() {\n    var question = this.getFirstCellQuestion(true);\n    return question ? question.inputId : super.getFirstErrorInputElementId();\n  }\n  getFirstCellQuestion(onError) {\n    if (!this.generatedVisibleRows) return null;\n    for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n      var cells = this.generatedVisibleRows[i].cells;\n      for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n        if (!onError) return cells[colIndex].question;\n        if (cells[colIndex].question.currentErrorCount > 0) return cells[colIndex].question;\n      }\n    }\n    return null;\n  }\n  onReadOnlyChanged() {\n    super.onReadOnlyChanged();\n    if (!this.generateRows) return;\n    for (var i = 0; i < this.visibleRows.length; i++) {\n      this.visibleRows[i].onQuestionReadOnlyChanged();\n    }\n  }\n  //IMatrixDropdownData\n  createQuestion(row, column) {\n    return this.createQuestionCore(row, column);\n  }\n  createQuestionCore(row, column) {\n    var question = column.createCellQuestion(row);\n    question.setSurveyImpl(row);\n    question.setParentQuestion(this);\n    question.inMatrixMode = true;\n    return question;\n  }\n  deleteRowValue(newValue, row) {\n    if (!newValue) return newValue;\n    delete newValue[row.rowName];\n    return this.isObject(newValue) && Object.keys(newValue).length == 0 ? null : newValue;\n  }\n  onAnyValueChanged(name, questionName) {\n    if (this.isUpdateLocked || this.isDoingonAnyValueChanged) return;\n    if (!this.generatedVisibleRows) {\n      if (name === this.getValueName()) {\n        this.isValueChangedWithoutRows = true;\n      }\n      return;\n    }\n    this.isDoingonAnyValueChanged = true;\n    var rows = this.generatedVisibleRows;\n    for (var i = 0; i < rows.length; i++) {\n      rows[i].onAnyValueChanged(name, questionName);\n    }\n    var totalRow = this.visibleTotalRow;\n    if (!!totalRow) {\n      totalRow.onAnyValueChanged(name, questionName);\n    }\n    this.isDoingonAnyValueChanged = false;\n  }\n  isObject(value) {\n    return value !== null && typeof value === \"object\";\n  }\n  getOnCellValueChangedOptions(row, columnName, rowValue) {\n    const getQuestion = colName => {\n      return row.getQuestionByName(colName);\n    };\n    return {\n      row: row,\n      columnName: columnName,\n      rowValue: rowValue,\n      value: !!rowValue ? rowValue[columnName] : null,\n      getCellQuestion: getQuestion,\n      cellQuestion: row.getQuestionByName(columnName),\n      column: this.getColumnByName(columnName)\n    };\n  }\n  onCellValueChanged(row, columnName, rowValue) {\n    if (!this.survey) return;\n    var options = this.getOnCellValueChangedOptions(row, columnName, rowValue);\n    if (!!this.onCellValueChangedCallback) {\n      this.onCellValueChangedCallback(options);\n    }\n    this.survey.matrixCellValueChanged(this, options);\n  }\n  validateCell(row, columnName, rowValue) {\n    if (!this.survey) return;\n    var options = this.getOnCellValueChangedOptions(row, columnName, rowValue);\n    return this.survey.matrixCellValidate(this, options);\n  }\n  get isValidateOnValueChanging() {\n    return !!this.survey ? this.survey.isValidateOnValueChanging : false;\n  }\n  get hasInvisibleRows() {\n    const rows = this.generatedVisibleRows;\n    if (!Array.isArray(rows)) return false;\n    for (let i = 0; i < rows.length; i++) {\n      if (!rows[i].isVisible) return true;\n    }\n    return false;\n  }\n  getFilteredData() {\n    if (this.isEmpty() || !this.generatedVisibleRows || !this.hasInvisibleRows) return this.value;\n    return this.getFilteredDataCore();\n  }\n  getFilteredDataCore() {\n    return this.value;\n  }\n  onRowChanging(row, columnName, rowValue) {\n    if (!this.survey && !this.cellValueChangingCallback) return !!rowValue ? rowValue[columnName] : null;\n    var options = this.getOnCellValueChangedOptions(row, columnName, rowValue);\n    var oldRowValue = this.getRowValueCore(row, this.createNewValue(), true);\n    options.oldValue = !!oldRowValue ? oldRowValue[columnName] : null;\n    if (!!this.cellValueChangingCallback) {\n      options.value = this.cellValueChangingCallback(row, columnName, options.value, options.oldValue);\n    }\n    if (!!this.survey) {\n      this.survey.matrixCellValueChanging(this, options);\n    }\n    return options.value;\n  }\n  getSharedQuestionFromArray(name, rowIndex) {\n    return !!this.survey && !!this.valueName ? this.survey.getQuestionByValueNameFromArray(this.valueName, name, rowIndex) : null;\n  }\n  onRowChanged(row, columnName, newRowValue, isDeletingValue) {\n    var rowObj = !!columnName ? this.getRowObj(row) : null;\n    if (!!rowObj) {\n      var columnValue = null;\n      if (!!newRowValue && !isDeletingValue) {\n        columnValue = newRowValue[columnName];\n      }\n      this.isRowChanging = true;\n      Serializer.setObjPropertyValue(rowObj, columnName, columnValue);\n      this.isRowChanging = false;\n      this.onCellValueChanged(row, columnName, rowObj);\n    } else {\n      var oldValue = this.createNewValue(true);\n      var combine = this.getNewValueOnRowChanged(row, columnName, newRowValue, isDeletingValue, this.createNewValue());\n      if (this.isTwoValueEquals(oldValue, combine.value)) return;\n      this.isRowChanging = true;\n      this.setNewValue(combine.value);\n      this.isRowChanging = false;\n      if (columnName) {\n        this.onCellValueChanged(row, columnName, combine.rowValue);\n      }\n    }\n    if (this.getUniqueColumnsNames().indexOf(columnName) > -1) {\n      this.isValueInColumnDuplicated(columnName, !!rowObj);\n    }\n  }\n  getNewValueOnRowChanged(row, columnName, newRowValue, isDeletingValue, newValue) {\n    const rowValue = this.getRowValueCore(row, newValue, true);\n    if (isDeletingValue) {\n      delete rowValue[columnName];\n    }\n    row.questions.forEach(q => {\n      delete rowValue[q.getValueName()];\n    });\n    if (newRowValue) {\n      newRowValue = JSON.parse(JSON.stringify(newRowValue));\n      for (var key in newRowValue) {\n        if (!this.isValueEmpty(newRowValue[key])) {\n          rowValue[key] = newRowValue[key];\n        }\n      }\n    }\n    if (this.isObject(rowValue) && Object.keys(rowValue).length === 0) {\n      newValue = this.deleteRowValue(newValue, row);\n    }\n    return {\n      value: newValue,\n      rowValue: rowValue\n    };\n  }\n  getRowIndex(row) {\n    if (!Array.isArray(this.generatedVisibleRows)) return -1;\n    return this.generatedVisibleRows.indexOf(row);\n  }\n  getElementsInDesign(includeHidden = false) {\n    let elements;\n    if (this.detailPanelMode == \"none\") {\n      elements = super.getElementsInDesign(includeHidden);\n    } else {\n      elements = includeHidden ? [this.detailPanel] : this.detailElements;\n    }\n    return this.columns.concat(elements);\n  }\n  hasDetailPanel(row) {\n    if (this.detailPanelMode == \"none\") return false;\n    if (this.isDesignMode) return true;\n    if (!!this.onHasDetailPanelCallback) return this.onHasDetailPanelCallback(row);\n    return this.detailElements.length > 0;\n  }\n  getIsDetailPanelShowing(row) {\n    if (this.detailPanelMode == \"none\") return false;\n    if (this.isDesignMode) {\n      var res = this.visibleRows.indexOf(row) == 0;\n      if (res) {\n        if (!row.detailPanel) {\n          row.showDetailPanel();\n        }\n      }\n      return res;\n    }\n    return this.getPropertyValue(\"isRowShowing\" + row.id, false);\n  }\n  setIsDetailPanelShowing(row, val) {\n    if (val == this.getIsDetailPanelShowing(row)) return;\n    this.setPropertyValue(\"isRowShowing\" + row.id, val);\n    this.updateDetailPanelButtonCss(row);\n    if (!!this.renderedTable) {\n      this.renderedTable.onDetailPanelChangeVisibility(row, val);\n    }\n    if (this.survey) {\n      this.survey.matrixDetailPanelVisibleChanged(this, row.rowIndex - 1, row, val);\n    }\n    if (val && this.detailPanelMode === \"underRowSingle\") {\n      var rows = this.visibleRows;\n      for (var i = 0; i < rows.length; i++) {\n        if (rows[i].id !== row.id && rows[i].isDetailPanelShowing) {\n          rows[i].hideDetailPanel();\n        }\n      }\n    }\n  }\n  getDetailPanelButtonCss(row) {\n    const builder = new CssClassBuilder().append(this.getPropertyValue(\"detailButtonCss\" + row.id));\n    return builder.append(this.cssClasses.detailButton, builder.toString() === \"\").toString();\n  }\n  getDetailPanelIconCss(row) {\n    const builder = new CssClassBuilder().append(this.getPropertyValue(\"detailIconCss\" + row.id));\n    return builder.append(this.cssClasses.detailIcon, builder.toString() === \"\").toString();\n  }\n  getDetailPanelIconId(row) {\n    return this.getIsDetailPanelShowing(row) ? this.cssClasses.detailIconExpandedId : this.cssClasses.detailIconId;\n  }\n  updateDetailPanelButtonCss(row) {\n    const classes = this.cssClasses;\n    const isPanelShowing = this.getIsDetailPanelShowing(row);\n    const iconBuilder = new CssClassBuilder().append(classes.detailIcon).append(classes.detailIconExpanded, isPanelShowing);\n    this.setPropertyValue(\"detailIconCss\" + row.id, iconBuilder.toString());\n    const buttonBuilder = new CssClassBuilder().append(classes.detailButton).append(classes.detailButtonExpanded, isPanelShowing);\n    this.setPropertyValue(\"detailButtonCss\" + row.id, buttonBuilder.toString());\n  }\n  createRowDetailPanel(row) {\n    if (this.isDesignMode) return this.detailPanel;\n    var panel = this.createNewDetailPanel();\n    panel.readOnly = this.isReadOnly || !row.isRowEnabled();\n    panel.setSurveyImpl(row);\n    var json = this.detailPanel.toJSON();\n    new JsonObject().toObject(json, panel);\n    panel.renderWidth = \"100%\";\n    panel.updateCustomWidgets();\n    if (!!this.onCreateDetailPanelCallback) {\n      this.onCreateDetailPanelCallback(row, panel);\n    }\n    panel.questions.forEach(q => q.setParentQuestion(this));\n    panel.onSurveyLoad();\n    return panel;\n  }\n  getSharedQuestionByName(columnName, row) {\n    if (!this.survey || !this.valueName) return null;\n    var index = this.getRowIndex(row);\n    if (index < 0) return null;\n    return this.survey.getQuestionByValueNameFromArray(this.valueName, columnName, index);\n  }\n  onTotalValueChanged() {\n    if (!!this.data && !!this.visibleTotalRow && !this.isUpdateLocked && !this.isSett) {\n      this.data.setValue(this.getValueName() + settings.matrix.totalsSuffix, this.totalValue, false);\n    }\n  }\n  getDataFilteredValues() {\n    return this.data ? this.data.getFilteredValues() : {};\n  }\n  getParentTextProcessor() {\n    if (!this.parentQuestion || !this.parent) return null;\n    const data = this.parent.data;\n    if (!!data && !!data.getTextProcessor) return data.getTextProcessor();\n    return null;\n  }\n  isMatrixReadOnly() {\n    return this.isReadOnly;\n  }\n  onRowVisibilityChanged(row) {\n    this.clearVisibleRows();\n    this.resetRenderedTable();\n    this.resetSingleInput();\n  }\n  clearValueIfInvisibleCore(reason) {\n    super.clearValueIfInvisibleCore(reason);\n    this.clearInvisibleValuesInRows();\n  }\n  clearInvisibleValuesInRows() {\n    var _a;\n    if (this.isEmpty() || !this.isRowsFiltered()) return;\n    const sharedQuestions = ((_a = this.survey) === null || _a === void 0 ? void 0 : _a.questionsByValueName(this.getValueName())) || [];\n    if (sharedQuestions.length < 2) {\n      this.value = this.getFilteredData();\n    }\n  }\n  isRowsFiltered() {\n    return super.isRowsFiltered() || this.visibleRows !== this.generatedVisibleRows;\n  }\n  getQuestionFromArray(name, index) {\n    if (index >= this.visibleRows.length) return null;\n    return this.visibleRows[index].getQuestionByName(name);\n  }\n  isMatrixValueEmpty(val) {\n    if (!val) return;\n    if (Array.isArray(val)) {\n      for (var i = 0; i < val.length; i++) {\n        if (this.isObject(val[i]) && Object.keys(val[i]).length > 0) return false;\n      }\n      return true;\n    }\n    return Object.keys(val).length == 0;\n  }\n  get SurveyModel() {\n    return this.survey;\n  }\n  getCellTemplateData(cell) {\n    // return cell.cell.column.templateQuestion;\n    return this.SurveyModel.getMatrixCellTemplateData(cell);\n  }\n  getCellWrapperComponentName(cell) {\n    return this.SurveyModel.getElementWrapperComponentName(cell, cell.row instanceof MatrixDropdownTotalRowModel ? \"row-footer\" : \"cell\");\n  }\n  getCellWrapperComponentData(cell) {\n    return this.SurveyModel.getElementWrapperComponentData(cell, cell.row instanceof MatrixDropdownTotalRowModel ? \"row-footer\" : \"cell\");\n  }\n  getColumnHeaderWrapperComponentName(cell) {\n    return this.SurveyModel.getElementWrapperComponentName(cell, \"column-header\");\n  }\n  getColumnHeaderWrapperComponentData(cell) {\n    return this.SurveyModel.getElementWrapperComponentData(cell, \"column-header\");\n  }\n  getRowHeaderWrapperComponentName(cell) {\n    return this.SurveyModel.getElementWrapperComponentName(cell, \"row-header\");\n  }\n  getRowHeaderWrapperComponentData(cell) {\n    return this.SurveyModel.getElementWrapperComponentData(cell, \"row-header\");\n  }\n  onMobileChanged() {\n    super.onMobileChanged();\n    this.resetRenderedTable();\n  }\n  getRootCss() {\n    return new CssClassBuilder().append(super.getRootCss()).append(this.cssClasses.rootScroll, this.horizontalScroll).toString();\n  }\n  afterRenderQuestionElement(el) {\n    super.afterRenderQuestionElement(el);\n    this.setRootElement(el === null || el === void 0 ? void 0 : el.parentElement);\n  }\n  beforeDestroyQuestionElement(el) {\n    super.beforeDestroyQuestionElement(el);\n    this.setRootElement(undefined);\n  }\n  setRootElement(val) {\n    this.rootElement = val;\n  }\n  getRootElement() {\n    return this.rootElement;\n  }\n}\nSerializer.addClass(\"matrixdropdownbase\", [{\n  name: \"columns:matrixdropdowncolumns\",\n  className: \"matrixdropdowncolumn\",\n  isArray: true\n}, {\n  name: \"columnLayout\",\n  alternativeName: \"columnsLocation\",\n  choices: [\"horizontal\", \"vertical\"],\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"transposeData:boolean\",\n  version: \"1.9.130\",\n  oldName: \"columnLayout\"\n}, {\n  name: \"detailElements\",\n  baseClassName: \"question\",\n  visible: false,\n  isLightSerializable: false\n}, {\n  name: \"detailPanelMode\",\n  choices: [\"none\", \"underRow\", \"underRowSingle\"],\n  default: \"none\"\n}, {\n  name: \"cellErrorLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\"]\n}, {\n  name: \"detailErrorLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\"],\n  visibleIf: obj => {\n    return !!obj && obj.detailPanelMode != \"none\";\n  }\n}, {\n  name: \"horizontalScroll:boolean\",\n  visible: false\n}, {\n  name: \"choices:itemvalue[]\",\n  uniqueProperty: \"value\",\n  visibleIf: obj => obj.isSelectCellType()\n}, {\n  name: \"placeholder\",\n  alternativeName: \"optionsCaption\",\n  serializationProperty: \"locPlaceholder\"\n}, {\n  name: \"keyDuplicationError\",\n  serializationProperty: \"locKeyDuplicationError\"\n}, {\n  name: \"singleInputTitleTemplate\",\n  serializationProperty: \"locSingleInputTitleTemplate\",\n  visibleIf(obj) {\n    var _a;\n    return ((_a = obj.survey) === null || _a === void 0 ? void 0 : _a.questionsOnPageMode) === \"inputPerPage\";\n  }\n}, {\n  name: \"cellType\",\n  default: \"dropdown\",\n  choices: () => {\n    return MatrixDropdownColumn.getColumnTypes();\n  }\n}, {\n  name: \"columnColCount\",\n  default: 0,\n  choices: [0, 1, 2, 3, 4]\n}, \"columnMinWidth\", {\n  name: \"allowAdaptiveActions:boolean\",\n  default: false,\n  visible: false\n}], function () {\n  return new QuestionMatrixDropdownModelBase(\"\");\n}, \"matrixbase\");\nclass MatrixDropdownRowModel extends MatrixDropdownRowModelBase {\n  constructor(name, item, data, value) {\n    super(data, value);\n    this.name = name;\n    this.item = item;\n    this.buildCells(value);\n  }\n  get rowName() {\n    return this.name;\n  }\n  get rowTitle() {\n    return this.text;\n  }\n  get text() {\n    return this.item.text;\n  }\n  get locText() {\n    return this.item.locText;\n  }\n  isItemVisible() {\n    return this.item.isVisible;\n  }\n  isRowEnabled() {\n    return this.item.isEnabled;\n  }\n  isRowHasEnabledCondition() {\n    return !!this.item.enableIf;\n  }\n  setRowsVisibleIfValues(values) {\n    values[\"item\"] = this.item.value;\n    values[\"choice\"] = this.item.value;\n  }\n}\n/**\n  * A class that describes the Multi-Select Matrix question type. Multi-Select Matrix allows you to use the [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel), [Checkbox](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Radiogroup](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), [Text](https://surveyjs.io/form-library/documentation/questiontextmodel), and [Comment](https://surveyjs.io/form-library/documentation/questioncommentmodel) question types as cell editors.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/ (linkStyle))\n */\nclass QuestionMatrixDropdownModel extends QuestionMatrixDropdownModelBase {\n  constructor(name) {\n    super(name);\n    this.defaultValuesInRows = {};\n    this.createLocalizableString(\"totalText\", this, true);\n    this.registerPropertyChangedHandlers([\"rows\"], () => {\n      if (!this.generatedVisibleRows) return;\n      this.clearGeneratedRows();\n      this.resetRenderedTable();\n      this.getVisibleRows();\n      this.clearIncorrectValues();\n    });\n    this.registerPropertyChangedHandlers([\"hideIfRowsEmpty\"], () => {\n      this.updateVisibilityBasedOnRows();\n    });\n  }\n  getType() {\n    return \"matrixdropdown\";\n  }\n  /**\n   * A title for the total row. Applies if at least one column displays total values.\n   * @see rowTitleWidth\n   * @see columns\n   */\n  get totalText() {\n    return this.getLocalizableStringText(\"totalText\", \"\");\n  }\n  set totalText(val) {\n    this.setLocalizableStringText(\"totalText\", val);\n  }\n  get locTotalText() {\n    return this.getLocalizableString(\"totalText\");\n  }\n  getFooterText() {\n    return this.locTotalText;\n  }\n  getRowTitleWidth() {\n    return this.rowTitleWidth;\n  }\n  /**\n   * Specifies whether to hide the question when the matrix has no visible rows.\n   * @see rowsVisibleIf\n   */\n  get hideIfRowsEmpty() {\n    return this.getPropertyValue(\"hideIfRowsEmpty\");\n  }\n  set hideIfRowsEmpty(val) {\n    this.setPropertyValue(\"hideIfRowsEmpty\", val);\n  }\n  getSingleInputTitleTemplate() {\n    return \"rowNameTemplateTitle\";\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!value) return value;\n    var rows = this.visibleRows;\n    var res = {};\n    if (!rows) return res;\n    for (var i = 0; i < rows.length; i++) {\n      var rowName = rows[i].rowName;\n      var val = value[rowName];\n      if (!val) continue;\n      if (keysAsText) {\n        var displayRowValue = ItemValue.getTextOrHtmlByValue(this.rows, rowName);\n        if (!!displayRowValue) {\n          rowName = displayRowValue;\n        }\n      }\n      res[rowName] = this.getRowDisplayValue(keysAsText, rows[i], val);\n    }\n    return res;\n  }\n  getConditionObjectRowName(index) {\n    return \".\" + this.rows[index].value;\n  }\n  getConditionObjectRowText(index) {\n    return \".\" + this.rows[index].calculatedText;\n  }\n  getConditionObjectsRowIndeces() {\n    const res = [];\n    for (var i = 0; i < this.rows.length; i++) res.push(i);\n    return res;\n  }\n  isNewValueCorrect(val) {\n    return Helpers.isValueObject(val, true);\n  }\n  clearIncorrectValues() {\n    if (!this.isEmpty()) {\n      this.getVisibleRows();\n      const newVal = {};\n      const val = this.value;\n      for (let key in val) {\n        const row = this.getRowByKey(key);\n        if (!!row && row.isVisible) {\n          newVal[key] = val[key];\n        }\n      }\n      this.value = newVal;\n    }\n    super.clearIncorrectValues();\n  }\n  getRowByKey(val) {\n    const rows = this.generatedVisibleRows;\n    if (!rows) return null;\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].rowName === val) return rows[i];\n    }\n    return null;\n  }\n  clearGeneratedRows() {\n    if (!this.generatedVisibleRows) return;\n    if (!this.isDisposed) {\n      this.generatedVisibleRows.forEach(row => {\n        this.defaultValuesInRows[row.rowName] = row.getNamesWithDefaultValues();\n      });\n    }\n    super.clearGeneratedRows();\n  }\n  getRowValueForCreation(val, rowName) {\n    const res = val[rowName];\n    if (!res) return res;\n    const names = this.defaultValuesInRows[rowName];\n    if (!Array.isArray(names) || names.length === 0) return res;\n    names.forEach(name => {\n      delete res[name];\n    });\n    return res;\n  }\n  generateRows() {\n    var result = new Array();\n    var rows = this.rows;\n    if (!rows || rows.length === 0) return result;\n    var val = this.value;\n    if (!val) val = {};\n    for (var i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      if (this.isValueEmpty(row.value)) continue;\n      result.push(this.createMatrixRow(row, this.getRowValueForCreation(val, row.value)));\n    }\n    return result;\n  }\n  createMatrixRow(item, value) {\n    return new MatrixDropdownRowModel(item.value, item, this, value);\n  }\n  getFilteredDataCore() {\n    const res = {};\n    const val = this.createValueCopy();\n    this.generatedVisibleRows.forEach(row => {\n      const rowVal = val[row.rowName];\n      if (row.isVisible && !Helpers.isValueEmpty(rowVal)) {\n        res[row.rowName] = rowVal;\n      }\n    });\n    return res;\n  }\n  getSearchableItemValueKeys(keys) {\n    keys.push(\"rows\");\n  }\n  getIsRequireToGenerateRows() {\n    if (super.getIsRequireToGenerateRows()) return true;\n    for (let i = 0; i < this.rows.length; i++) {\n      if (!!this.rows[i].visibleIf) return true;\n    }\n    return false;\n  }\n  updateProgressInfoByValues(res) {\n    let val = this.value;\n    if (!val) val = {};\n    for (var i = 0; i < this.rows.length; i++) {\n      const row = this.rows[i];\n      const rowName = val[row.value];\n      this.updateProgressInfoByRow(res, !!rowName ? rowName : {});\n    }\n  }\n}\nSerializer.addClass(\"matrixdropdown\", [{\n  name: \"rows:itemvalue[]\",\n  uniqueProperty: \"value\"\n}, \"rowsVisibleIf:condition\", \"rowTitleWidth\", {\n  name: \"totalText\",\n  serializationProperty: \"locTotalText\"\n}, \"hideIfRowsEmpty:boolean\"], function () {\n  return new QuestionMatrixDropdownModel(\"\");\n}, \"matrixdropdownbase\");\nQuestionFactory.Instance.registerQuestion(\"matrixdropdown\", name => {\n  var q = new QuestionMatrixDropdownModel(name);\n  q.choices = [1, 2, 3, 4, 5];\n  q.rows = QuestionFactory.DefaultRows;\n  QuestionMatrixDropdownModelBase.addDefaultColumns(q);\n  return q;\n});\n\n/* eslint-disable no-restricted-globals */\n// WebKit requires cancelable `touchmove` events to be added as early as possible\n// see https://bugs.webkit.org/show_bug.cgi?id=184250\nif (typeof window !== \"undefined\") {\n  window.addEventListener(\"touchmove\", event => {\n    if (!DragDropDOMAdapter.PreventScrolling) {\n      return;\n    }\n    // Prevent scrolling\n    event.preventDefault();\n  }, {\n    passive: false\n  });\n}\nclass DragDropDOMAdapter {\n  constructor(dd, longTap = true, fitToContainer = false) {\n    this.dd = dd;\n    this.longTap = longTap;\n    this.fitToContainer = fitToContainer;\n    this.scrollIntervalId = null;\n    this.stopLongTapIfMoveEnough = pointerMoveEvent => {\n      pointerMoveEvent.preventDefault();\n      this.currentX = pointerMoveEvent.pageX;\n      this.currentY = pointerMoveEvent.pageY;\n      if (this.isMicroMovement) return;\n      this.returnUserSelectBack();\n      this.stopLongTap();\n    };\n    this.stopLongTap = e => {\n      clearTimeout(this.timeoutID);\n      this.timeoutID = null;\n      document.removeEventListener(\"pointerup\", this.stopLongTap);\n      document.removeEventListener(\"pointermove\", this.stopLongTapIfMoveEnough);\n    };\n    this.handlePointerCancel = event => {\n      this.clear();\n    };\n    this.handleEscapeButton = event => {\n      if (event.keyCode == 27) {\n        this.clear();\n      }\n    };\n    this.onContextMenu = event => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    this.dragOver = event => {\n      this.moveShortcutElement(event);\n      this.draggedElementShortcut.style.cursor = \"grabbing\";\n      this.dd.dragOver(event);\n    };\n    this.clear = () => {\n      cancelAnimationFrame(this.scrollIntervalId);\n      document.removeEventListener(\"pointermove\", this.dragOver);\n      document.removeEventListener(\"pointercancel\", this.handlePointerCancel);\n      document.removeEventListener(\"keydown\", this.handleEscapeButton);\n      document.removeEventListener(\"pointerup\", this.drop);\n      this.draggedElementShortcut.removeEventListener(\"pointerup\", this.drop);\n      if (IsTouch) {\n        this.draggedElementShortcut.removeEventListener(\"contextmenu\", this.onContextMenu);\n      }\n      this.draggedElementShortcut.parentElement.removeChild(this.draggedElementShortcut);\n      this.dd.clear();\n      this.draggedElementShortcut = null;\n      this.scrollIntervalId = null;\n      if (IsTouch) {\n        this.savedTargetNode.style.cssText = null;\n        this.savedTargetNode && this.savedTargetNode.parentElement.removeChild(this.savedTargetNode);\n        this.insertNodeToParentAtIndex(this.savedTargetNodeParent, this.savedTargetNode, this.savedTargetNodeIndex);\n        DragDropDOMAdapter.PreventScrolling = false;\n      }\n      this.savedTargetNode = null;\n      this.savedTargetNodeParent = null;\n      this.savedTargetNodeIndex = null;\n      this.returnUserSelectBack();\n    };\n    this.drop = () => {\n      this.dd.drop();\n      this.clear();\n    };\n    this.draggedElementShortcut = null;\n  }\n  get documentOrShadowRoot() {\n    const rootNode = this.rootElement.getRootNode();\n    return rootNode instanceof Document || rootNode instanceof ShadowRoot ? rootNode : undefined;\n  }\n  get rootElement() {\n    if (isShadowDOM(settings.environment.root)) {\n      return this.rootContainer || settings.environment.root;\n    } else {\n      return this.rootContainer || settings.environment.root.documentElement || document.body;\n    }\n  }\n  get viewRootElement() {\n    return isShadowDOM(this.rootElement) ? this.rootElement.host : this.rootElement;\n  }\n  // see https://stackoverflow.com/questions/6042202/how-to-distinguish-mouse-click-and-drag\n  get isMicroMovement() {\n    const delta = 5;\n    const diffX = Math.abs(this.currentX - this.startX);\n    const diffY = Math.abs(this.currentY - this.startY);\n    return diffX < delta && diffY < delta;\n  }\n  startLongTapProcessing(event, draggedElement, parentElement, draggedElementNode, preventSaveTargetNode = false) {\n    this.startX = event.pageX;\n    this.startY = event.pageY;\n    document.body.style.setProperty(\"touch-action\", \"none\", \"important\");\n    //document.body.style.setProperty(\"-webkit-touch-callout\", \"none\", \"important\");\n    this.timeoutID = setTimeout(() => {\n      this.doStartDrag(event, draggedElement, parentElement, draggedElementNode);\n      if (!preventSaveTargetNode) {\n        this.savedTargetNode = event.target;\n        this.savedTargetNode.style.cssText = `\n          position: absolute;\n          height: 1px!important;\n          width: 1px!important;\n          overflow: hidden;\n          clip: rect(1px 1px 1px 1px);\n          clip: rect(1px, 1px, 1px, 1px);\n        `;\n        this.savedTargetNodeParent = this.savedTargetNode.parentElement;\n        this.savedTargetNodeIndex = this.getNodeIndexInParent(this.savedTargetNode);\n        this.rootElement.appendChild(this.savedTargetNode);\n      }\n      this.stopLongTap();\n    }, this.longTap ? 500 : 0);\n    document.addEventListener(\"pointerup\", this.stopLongTap);\n    document.addEventListener(\"pointermove\", this.stopLongTapIfMoveEnough);\n  }\n  moveShortcutElement(event) {\n    let rootElementX = this.viewRootElement.getBoundingClientRect().x;\n    let rootElementY = this.viewRootElement.getBoundingClientRect().y;\n    let rootElementScrollLeft = this.viewRootElement.scrollLeft;\n    let rootElementScrollTop = this.viewRootElement.scrollTop;\n    this.doScroll(event.clientY, event.clientX);\n    const shortcutHeight = this.draggedElementShortcut.offsetHeight;\n    const shortcutWidth = this.draggedElementShortcut.offsetWidth;\n    let shortcutXOffset = this.draggedElementShortcut.shortcutXOffset || shortcutWidth / 2;\n    let shortcutYOffset = this.draggedElementShortcut.shortcutYOffset || shortcutHeight / 2;\n    // TODO this is hot fix for RTL support. Probably we need better global strategy for it. https://github.com/surveyjs/survey-library/issues/4554\n    if (document.querySelectorAll(\"[dir='rtl']\").length !== 0) {\n      shortcutXOffset = shortcutWidth / 2;\n      shortcutYOffset = shortcutHeight / 2;\n    }\n    const documentBottom = document.documentElement.clientHeight;\n    const documentRight = document.documentElement.clientWidth;\n    const pageX = event.pageX;\n    const pageY = event.pageY;\n    const clientX = event.clientX;\n    const clientY = event.clientY;\n    //https://github.com/surveyjs/survey-creator/issues/5484\n    rootElementX -= rootElementScrollLeft;\n    rootElementY -= rootElementScrollTop;\n    const shortcutBottomCoordinate = this.getShortcutBottomCoordinate(clientY, shortcutHeight, shortcutYOffset);\n    const shortcutRightCoordinate = this.getShortcutRightCoordinate(clientX, shortcutWidth, shortcutXOffset);\n    if (shortcutRightCoordinate >= documentRight) {\n      // right boundary\n      this.draggedElementShortcut.style.left =\n      // pageX -\n      // clientX +\n      documentRight - shortcutWidth - rootElementX + \"px\";\n      this.draggedElementShortcut.style.top = /*pageY*/clientY - shortcutYOffset - rootElementY + \"px\";\n      return;\n    }\n    if (clientX - shortcutXOffset <= 0) {\n      // left boundary\n      this.draggedElementShortcut.style.left = pageX - clientX - rootElementX + \"px\";\n      this.draggedElementShortcut.style.top = /*pageY*/clientY - rootElementY - shortcutYOffset + \"px\";\n      return;\n    }\n    if (shortcutBottomCoordinate >= documentBottom) {\n      // bottom boundary\n      this.draggedElementShortcut.style.left = /*pageX*/clientX - shortcutXOffset - rootElementX + \"px\";\n      this.draggedElementShortcut.style.top =\n      // pageY -\n      // clientY +\n      documentBottom - shortcutHeight - rootElementY + \"px\";\n      return;\n    }\n    if (clientY - shortcutYOffset <= 0) {\n      // top  boundary\n      this.draggedElementShortcut.style.left = clientX - shortcutXOffset - rootElementX + \"px\";\n      this.draggedElementShortcut.style.top = pageY - clientY - rootElementY + \"px\";\n      return;\n    }\n    this.draggedElementShortcut.style.left = clientX - rootElementX - shortcutXOffset + \"px\";\n    this.draggedElementShortcut.style.top = clientY - rootElementY - shortcutYOffset + \"px\";\n  }\n  getShortcutBottomCoordinate(currentY, shortcutHeight, shortcutYOffset) {\n    return currentY + shortcutHeight - shortcutYOffset;\n  }\n  getShortcutRightCoordinate(currentX, shortcutWidth, shortcutXOffset) {\n    return currentX + shortcutWidth - shortcutXOffset;\n  }\n  requestAnimationFrame(callback) {\n    return requestAnimationFrame(callback);\n  }\n  scrollByDrag(scrollableParentNode, clientY, clientX) {\n    const startScrollBoundary = 100;\n    let top;\n    let bottom;\n    let left;\n    let right;\n    if (scrollableParentNode.tagName === \"HTML\") {\n      top = 0;\n      bottom = document.documentElement.clientHeight;\n      left = 0;\n      right = document.documentElement.clientWidth;\n    } else {\n      top = scrollableParentNode.getBoundingClientRect().top;\n      bottom = scrollableParentNode.getBoundingClientRect().bottom;\n      left = scrollableParentNode.getBoundingClientRect().left;\n      right = scrollableParentNode.getBoundingClientRect().right;\n    }\n    const repeat = () => {\n      const isTop = clientY - top <= startScrollBoundary;\n      const isBottom = bottom - clientY <= startScrollBoundary;\n      const isLeft = clientX - left <= startScrollBoundary;\n      const isRight = right - clientX <= startScrollBoundary;\n      if (isTop && !isLeft && !isRight) {\n        scrollableParentNode.scrollTop -= 15;\n      } else if (isBottom && !isLeft && !isRight) {\n        scrollableParentNode.scrollTop += 15;\n      } else if (isRight && !isTop && !isBottom) {\n        scrollableParentNode.scrollLeft += 15;\n      } else if (isLeft && !isTop && !isBottom) {\n        scrollableParentNode.scrollLeft -= 15;\n      }\n      this.scrollIntervalId = this.requestAnimationFrame(repeat);\n    };\n    this.scrollIntervalId = this.requestAnimationFrame(repeat);\n  }\n  doScroll(clientY, clientX) {\n    cancelAnimationFrame(this.scrollIntervalId);\n    const displayProp = this.draggedElementShortcut.style.display;\n    //this.draggedElementShortcut.hidden = true;\n    this.draggedElementShortcut.style.display = \"none\";\n    let dragOverNode = this.documentOrShadowRoot.elementFromPoint(clientX, clientY);\n    //this.draggedElementShortcut.hidden = false;\n    this.draggedElementShortcut.style.display = displayProp || \"block\";\n    let scrollableParentNode = findScrollableParent(dragOverNode);\n    this.scrollByDrag(scrollableParentNode, clientY, clientX);\n  }\n  doStartDrag(event, draggedElement, parentElement, draggedElementNode) {\n    if (IsTouch) {\n      DragDropDOMAdapter.PreventScrolling = true;\n    }\n    if (event.which === 3) return; //right mouse btn\n    this.dd.dragInit(event, draggedElement, parentElement, draggedElementNode);\n    this.rootElement.append(this.draggedElementShortcut);\n    this.moveShortcutElement(event);\n    document.addEventListener(\"pointermove\", this.dragOver);\n    document.addEventListener(\"pointercancel\", this.handlePointerCancel);\n    document.addEventListener(\"keydown\", this.handleEscapeButton);\n    document.addEventListener(\"pointerup\", this.drop);\n    if (!IsTouch) {\n      this.draggedElementShortcut.addEventListener(\"pointerup\", this.drop);\n    } else {\n      this.draggedElementShortcut.addEventListener(\"contextmenu\", this.onContextMenu);\n    }\n  }\n  returnUserSelectBack() {\n    document.body.style.setProperty(\"touch-action\", \"auto\");\n    document.body.style.setProperty(\"user-select\", \"auto\");\n    document.body.style.setProperty(\"-webkit-user-select\", \"auto\");\n    //document.body.style.setProperty(\"-webkit-touch-callout\", \"default\");\n  }\n  startDrag(event, draggedElement, parentElement, draggedElementNode, preventSaveTargetNode = false) {\n    document.body.style.setProperty(\"user-select\", \"none\", \"important\");\n    document.body.style.setProperty(\"-webkit-user-select\", \"none\", \"important\");\n    if (IsTouch) {\n      this.startLongTapProcessing(event, draggedElement, parentElement, draggedElementNode, preventSaveTargetNode);\n      return;\n    }\n    this.doStartDrag(event, draggedElement, parentElement, draggedElementNode);\n  }\n  getNodeIndexInParent(node) {\n    return [...node.parentElement.childNodes].indexOf(node);\n  }\n  insertNodeToParentAtIndex(parent, node, index) {\n    parent.insertBefore(node, parent.childNodes[index]);\n  }\n}\nDragDropDOMAdapter.PreventScrolling = false;\nclass DragDropCore {\n  get isBottom() {\n    return !!this._isBottom;\n  }\n  set isBottom(val) {\n    this._isBottom = val;\n    this.ghostPositionChanged();\n  }\n  ghostPositionChanged() {\n    this.onGhostPositionChanged.fire({}, {});\n  }\n  get dropTargetDataAttributeName() {\n    return `[data-sv-drop-target-${this.draggedElementType}]`;\n  }\n  get survey() {\n    var _a;\n    return this.surveyValue || ((_a = this.creator) === null || _a === void 0 ? void 0 : _a.survey);\n  }\n  constructor(surveyValue, creator, longTap, domAdapter) {\n    var _a;\n    this.surveyValue = surveyValue;\n    this.creator = creator;\n    this._isBottom = null;\n    this.onGhostPositionChanged = new EventBase();\n    this.onDragStart = new EventBase();\n    this.onDragEnd = new EventBase();\n    this.onDragClear = new EventBase();\n    this.onBeforeDrop = this.onDragStart;\n    this.onAfterDrop = this.onDragEnd;\n    this.draggedElement = null;\n    this.dropTarget = null;\n    this.prevDropTarget = null;\n    this.allowDropHere = false;\n    this.banDropHere = () => {\n      this.allowDropHere = false;\n      this.doBanDropHere();\n      this.dropTarget = null;\n      this.domAdapter.draggedElementShortcut.style.cursor = \"not-allowed\";\n      this.isBottom = null;\n    };\n    this.doBanDropHere = () => {};\n    this.domAdapter = domAdapter || new DragDropDOMAdapter(this, longTap, (_a = this.survey) === null || _a === void 0 ? void 0 : _a.fitToContainer);\n  }\n  startDrag(event, draggedElement, parentElement, draggedElementNode, preventSaveTargetNode = false) {\n    this.domAdapter.rootContainer = this.getRootElement(this.survey, this.creator);\n    this.domAdapter.startDrag(event, draggedElement, parentElement, draggedElementNode, preventSaveTargetNode);\n  }\n  getRootElement(survey, creator) {\n    return creator ? creator.rootElement : survey.rootElement;\n  }\n  dragInit(event, draggedElement, parentElement, draggedElementNode) {\n    this.draggedElement = draggedElement;\n    this.parentElement = parentElement;\n    const shortcutText = this.getShortcutText(this.draggedElement);\n    this.domAdapter.draggedElementShortcut = this.createDraggedElementShortcut(shortcutText, draggedElementNode, event);\n    this.onStartDrag(event);\n    const fromElement = this.draggedElement && this.draggedElement.parent;\n    this.onDragStart.fire(this, {\n      fromElement: fromElement,\n      draggedElement: this.draggedElement\n    });\n  }\n  onStartDrag(event) {}\n  isDropTargetDoesntChanged(newIsBottom) {\n    return this.dropTarget === this.prevDropTarget && newIsBottom === this.isBottom;\n  }\n  getShortcutText(draggedElement) {\n    return draggedElement === null || draggedElement === void 0 ? void 0 : draggedElement.shortcutText;\n  }\n  createDraggedElementShortcut(text, draggedElementNode, event) {\n    const draggedElementShortcut = DomDocumentHelper.createElement(\"div\");\n    if (!!draggedElementShortcut) {\n      draggedElementShortcut.innerText = text;\n      draggedElementShortcut.className = this.getDraggedElementClass();\n    }\n    return draggedElementShortcut;\n  }\n  getDraggedElementClass() {\n    return \"sv-dragged-element-shortcut\";\n  }\n  doDragOver() {}\n  afterDragOver(dropTargetNode) {}\n  findDropTargetNodeFromPoint(clientX, clientY) {\n    const displayProp = this.domAdapter.draggedElementShortcut.style.display;\n    this.domAdapter.draggedElementShortcut.style.display = \"none\";\n    if (!DomDocumentHelper.isAvailable()) return null;\n    let dragOverNodes = this.domAdapter.documentOrShadowRoot.elementsFromPoint(clientX, clientY);\n    this.domAdapter.draggedElementShortcut.style.display = displayProp || \"block\";\n    let index = 0;\n    let dragOverNode = dragOverNodes[index];\n    while (dragOverNode && dragOverNode.className && typeof dragOverNode.className.indexOf == \"function\" && dragOverNode.className.indexOf(\"sv-drag-target-skipped\") != -1) {\n      index++;\n      dragOverNode = dragOverNodes[index];\n    }\n    if (!dragOverNode) return null;\n    return this.findDropTargetNodeByDragOverNode(dragOverNode);\n  }\n  getDataAttributeValueByNode(node) {\n    let datasetName = \"svDropTarget\";\n    const words = this.draggedElementType.split(\"-\");\n    words.forEach(word => {\n      datasetName += this.capitalizeFirstLetter(word);\n    });\n    return node.dataset[datasetName];\n  }\n  getDropTargetByNode(dropTargetNode, event) {\n    let dataAttributeValue = this.getDataAttributeValueByNode(dropTargetNode);\n    return this.getDropTargetByDataAttributeValue(dataAttributeValue, dropTargetNode, event);\n  }\n  capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  calculateVerticalMiddleOfHTMLElement(HTMLElement) {\n    const rect = HTMLElement.getBoundingClientRect();\n    return rect.y + rect.height / 2;\n  }\n  calculateHorizontalMiddleOfHTMLElement(HTMLElement) {\n    const rect = HTMLElement.getBoundingClientRect();\n    return rect.x + rect.width / 2;\n  }\n  calculateIsBottom(clientY, dropTargetNode) {\n    return false;\n  }\n  findDropTargetNodeByDragOverNode(dragOverNode) {\n    const dropTargetNode = dragOverNode.closest(this.dropTargetDataAttributeName);\n    return dropTargetNode;\n  }\n  dragOver(event) {\n    const dropTargetNode = this.findDropTargetNodeFromPoint(event.clientX, event.clientY);\n    if (!dropTargetNode) {\n      this.banDropHere();\n      return;\n    }\n    this.dropTarget = this.getDropTargetByNode(dropTargetNode, event);\n    const isDropTargetValid = this.isDropTargetValid(this.dropTarget, dropTargetNode);\n    this.doDragOver();\n    if (!isDropTargetValid) {\n      this.banDropHere();\n      return;\n    }\n    let isBottom = this.calculateIsBottom(event.clientY, dropTargetNode);\n    this.allowDropHere = true;\n    if (this.isDropTargetDoesntChanged(isBottom)) return;\n    this.isBottom = null; //TODO need for property change trigger with guarantee but it would be better not to watch on isBottom property but have some event like onValidTargetDragOver\n    this.isBottom = isBottom;\n    if (this.draggedElement != this.dropTarget) {\n      this.afterDragOver(dropTargetNode);\n    }\n    this.prevDropTarget = this.dropTarget;\n  }\n  drop() {\n    if (this.allowDropHere) {\n      const fromElement = this.draggedElement.parent;\n      const newElement = this.doDrop();\n      this.onDragEnd.fire(this, {\n        fromElement: fromElement,\n        draggedElement: newElement,\n        toElement: this.dropTarget\n      });\n    }\n  }\n  clear() {\n    const options = {\n      draggedElement: this.draggedElement\n    };\n    this.dropTarget = null;\n    this.prevDropTarget = null;\n    this.draggedElement = null;\n    this.isBottom = null;\n    this.parentElement = null;\n    this.onDragClear.fire(this, options);\n  }\n}\nclass DragDropMatrixRows extends DragDropCore {\n  constructor() {\n    super(...arguments);\n    this.dropIsBanned = false;\n    this.matrixRowMap = {};\n    this.fromIndex = null;\n    this.toIndex = null;\n    this.toMatrix = null;\n    this.doBanDropHere = () => {\n      if (!this.dropIsBanned) {\n        this.removeGhost();\n        this.parentElement.renderedTable.rows.splice(this.initialDraggedElementIndex, 0, this.draggedRenderedRow);\n        this.dropIsBanned = true;\n        this.lastDropTargetParentElement = this.parentElement;\n      }\n    };\n    this.doDrop = () => {\n      if (this.parentElement == this.toMatrix) {\n        if (this.fromIndex < this.toIndex) {\n          this.toIndex--;\n        }\n        this.parentElement.moveRowByIndex(this.fromIndex, this.toIndex);\n      } else if (this.toMatrix) {\n        const row = Object.assign({}, this.parentElement.value[this.fromIndex]);\n        this.toMatrix.addRowByIndex(row, this.toIndex);\n        this.parentElement.removeRowByIndex(this.fromIndex);\n      }\n      return this.parentElement;\n    };\n  }\n  get draggedElementType() {\n    return \"matrix-row\";\n  }\n  patchUserSelect() {\n    const _body = DomDocumentHelper.getBody();\n    if (!!_body) {\n      this.restoreUserSelectValue = _body.style.userSelect;\n      _body.style.userSelect = \"none\";\n    }\n  }\n  onStartDrag() {\n    this.patchUserSelect();\n    const renderedRows = this.parentElement.renderedTable.rows;\n    let index = renderedRows.findIndex(r => r.row === this.draggedElement);\n    if (index >= 0) {\n      this.draggedRenderedRow = renderedRows[index];\n      this.initialDraggedElementIndex = index;\n      this.draggedRenderedRow.isGhostRow = true;\n      this.lastDropTargetParentElement = this.parentElement;\n    }\n    const matrices = [];\n    function fillMatricies(questions) {\n      const ms = questions.filter(q => q.isDescendantOf(\"matrixdynamic\") && q.allowRowReorder);\n      ms.forEach(m => {\n        matrices.push(m);\n        if (m.detailPanelMode !== \"none\") {\n          m.visibleRows.forEach(r => {\n            if (r.isDetailPanelShowing) {\n              fillMatricies(r.questions);\n            }\n          });\n        }\n      });\n    }\n    if (this.survey.onMatrixRowDragOver.isEmpty) {\n      matrices.push(this.parentElement);\n    } else {\n      fillMatricies(this.survey.getAllQuestions());\n    }\n    this.matrixRowMap = {};\n    matrices.forEach(matrix => {\n      matrix.visibleRows.forEach(row => {\n        this.matrixRowMap[row.id] = {\n          row,\n          matrix\n        };\n      });\n      if (matrix.visibleRows.length == 0) {\n        this.matrixRowMap[matrix.id] = {\n          row: matrix,\n          matrix\n        };\n      }\n    });\n    this.fromIndex = this.parentElement.visibleRows.indexOf(this.draggedElement);\n  }\n  get shortcutClass() {\n    return new CssClassBuilder().append(this.parentElement.cssClasses.draggedRow)\n    //.append(this.parentElement.cssClasses.dragShortcutMobileMod, IsMobile)\n    .toString();\n  }\n  createDraggedElementShortcut(text, draggedElementNode, event) {\n    const draggedElementShortcut = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n    draggedElementShortcut.className = this.shortcutClass;\n    const isDeepClone = true;\n    if (!!draggedElementNode) {\n      const row = draggedElementNode.closest(\"[data-sv-drop-target-matrix-row]\");\n      const clone = row.cloneNode(isDeepClone);\n      clone.style.cssText = `\n        width: ${row.offsetWidth}px;\n      `;\n      clone.classList.remove(\"sv-matrix__drag-drop--moveup\");\n      clone.classList.remove(\"sv-matrix__drag-drop--movedown\");\n      this.draggedElement.isDragDropMoveDown = false;\n      this.draggedElement.isDragDropMoveUp = false;\n      draggedElementShortcut.appendChild(clone);\n      const rect = draggedElementNode.getBoundingClientRect();\n      draggedElementShortcut.shortcutXOffset = event.clientX - rect.x;\n      draggedElementShortcut.shortcutYOffset = event.clientY - rect.y;\n    }\n    return draggedElementShortcut;\n  }\n  getDropTargetByDataAttributeValue(dataAttributeValue) {\n    const mapData = this.matrixRowMap[dataAttributeValue];\n    return (mapData === null || mapData === void 0 ? void 0 : mapData.row) || (mapData === null || mapData === void 0 ? void 0 : mapData.matrix);\n  }\n  canInsertIntoThisRow(row) {\n    const lockedRows = this.parentElement.lockedRowCount;\n    return lockedRows <= 0 || row.rowIndex > lockedRows;\n  }\n  isDropTargetValid(dropTarget, dropTargetNode) {\n    return this.canInsertIntoThisRow(dropTarget);\n  }\n  calculateIsBottom(clientY, dropTargetNode) {\n    const rect = dropTargetNode.getBoundingClientRect();\n    return clientY >= rect.y + rect.height / 2;\n  }\n  removeGhost() {\n    const lastRenderedRows = this.lastDropTargetParentElement.renderedTable.rows;\n    const draggedRenderedRowIndex = lastRenderedRows.indexOf(this.draggedRenderedRow);\n    if (draggedRenderedRowIndex >= 0) lastRenderedRows.splice(draggedRenderedRowIndex, 1);\n  }\n  afterDragOver(dropTargetNode) {\n    if (!this.dropTarget) return;\n    const dropTargetMatrix = this.matrixRowMap[this.dropTarget.id].matrix;\n    const dropTargetRow = this.matrixRowMap[this.dropTarget.id].row;\n    const bottomOffset = this.isBottom ? 1 : 0;\n    let toIndex = 0;\n    const options = {\n      allow: dropTargetMatrix == this.parentElement,\n      row: dropTargetRow,\n      fromMatrix: this.parentElement,\n      toMatrix: dropTargetMatrix\n    };\n    this.survey.onMatrixRowDragOver.fire(this.survey, options);\n    if (!options.allow) return;\n    this.removeGhost();\n    this.lastDropTargetParentElement = dropTargetMatrix;\n    const renderedRows = dropTargetMatrix.renderedTable.rows;\n    if (dropTargetMatrix.visibleRows.length > 0) {\n      const dropTargetRenderedRowIndex = renderedRows.findIndex(r => r.row == this.dropTarget);\n      if (dropTargetRenderedRowIndex >= 0) {\n        renderedRows.splice(dropTargetRenderedRowIndex + bottomOffset, 0, this.draggedRenderedRow);\n      }\n      toIndex = dropTargetMatrix.visibleRows.indexOf(this.dropTarget) + bottomOffset;\n    } else {\n      if (!dropTargetMatrix.renderedTable.headerRow) renderedRows[0].cells[0].colSpans = this.draggedRenderedRow.cells.length;\n      renderedRows.splice(0, 0, this.draggedRenderedRow);\n    }\n    this.toIndex = toIndex;\n    this.toMatrix = dropTargetMatrix;\n    this.dropIsBanned = false;\n    super.ghostPositionChanged();\n  }\n  clear() {\n    this.matrixRowMap = {};\n    const renderedRows = this.parentElement.renderedTable.rows;\n    renderedRows.forEach(renderedRow => {\n      renderedRow.isGhostRow = false;\n    });\n    this.parentElement.clearOnDrop();\n    if (this.toMatrix) this.toMatrix.clearOnDrop();\n    this.fromIndex = null;\n    this.toIndex = null;\n    const _body = DomDocumentHelper.getBody();\n    if (!!_body) {\n      _body.style.userSelect = this.restoreUserSelectValue || \"initial\";\n    }\n    super.clear();\n  }\n}\nclass DragOrClickHelper {\n  constructor(dragHandler, preventOnTouch = true) {\n    this.dragHandler = dragHandler;\n    this.preventOnTouch = preventOnTouch;\n    this.onPointerUp = pointerUpEvent => {\n      this.clearListeners();\n    };\n    this.tryToStartDrag = pointerMoveEvent => {\n      this.currentX = pointerMoveEvent.pageX;\n      this.currentY = pointerMoveEvent.pageY;\n      if (this.isMicroMovement) return;\n      this.clearListeners();\n      this.dragHandler(this.pointerDownEvent, this.targets, this.itemModel);\n      return true;\n    };\n  }\n  onPointerDown(pointerDownEvent, itemModel) {\n    this.targets = {\n      currentTarget: pointerDownEvent.currentTarget,\n      target: pointerDownEvent.target\n    };\n    if (IsTouch && this.preventOnTouch) {\n      this.dragHandler(pointerDownEvent, this.targets, itemModel); //TODO handle inside in the library's drag drop core, need refactoring\n      return;\n    }\n    this.pointerDownEvent = pointerDownEvent;\n    this.startX = pointerDownEvent.pageX;\n    this.startY = pointerDownEvent.pageY;\n    this.targets.currentTarget.getRootNode().addEventListener(\"pointermove\", this.tryToStartDrag);\n    this.targets.currentTarget.addEventListener(\"pointerup\", this.onPointerUp);\n    this.itemModel = itemModel;\n  }\n  // see https://stackoverflow.com/questions/6042202/how-to-distinguish-mouse-click-and-drag\n  get isMicroMovement() {\n    const delta = 10;\n    const diffX = Math.abs(this.currentX - this.startX);\n    const diffY = Math.abs(this.currentY - this.startY);\n    return diffX < delta && diffY < delta;\n  }\n  clearListeners() {\n    if (!this.pointerDownEvent) return;\n    this.targets.currentTarget.getRootNode().removeEventListener(\"pointermove\", this.tryToStartDrag);\n    this.targets.currentTarget.removeEventListener(\"pointerup\", this.onPointerUp);\n  }\n}\nclass QuestionSingleInputSummaryItem {\n  constructor(locText, btnEdit, btnRemove) {\n    this.locText = locText;\n    this.btnEdit = btnEdit;\n    this.btnRemove = btnRemove;\n  }\n  get showRemove() {\n    return !!this.btnRemove;\n  }\n}\nclass QuestionSingleInputSummary {\n  constructor(question, noEntry) {\n    this.question = question;\n    this.noEntry = noEntry;\n    this.items = [];\n  }\n  isEmpty() {\n    return this.items.length == 0;\n  }\n  dispose() {\n    this.items.forEach(item => {\n      var _a, _b;\n      (_a = item.btnEdit) === null || _a === void 0 ? void 0 : _a.dispose();\n      (_b = item.btnRemove) === null || _b === void 0 ? void 0 : _b.dispose();\n    });\n  }\n}\nclass MatrixDynamicRowModel extends MatrixDropdownRowModelBase {\n  constructor(index, data, value) {\n    super(data, value);\n    this.index = index;\n    this.buildCells(value);\n  }\n  getRowIndex() {\n    const res = super.getRowIndex();\n    return res > 0 ? res : this.index + 1;\n  }\n  get rowName() {\n    return this.id;\n  }\n  get dataName() {\n    return \"row\" + (this.index + 1);\n  }\n  get text() {\n    return \"row \" + (this.visibleIndex + 1);\n  }\n  getAccessbilityText() {\n    return (this.visibleIndex + 1).toString();\n  }\n  get shortcutText() {\n    const matrix = this.data;\n    const index = matrix.visibleRows.indexOf(this) + 1;\n    const questionValue1 = this.cells.length > 1 ? this.cells[1][\"questionValue\"] : undefined;\n    const questionValue0 = this.cells.length > 0 ? this.cells[0][\"questionValue\"] : undefined;\n    return questionValue1 && questionValue1.value || questionValue0 && questionValue0.value || \"\" + index;\n  }\n}\n/**\n  * A class that describes the Dynamic Matrix question type.\n  *\n  * Dynamic Matrix allows respondents to add and delete matrix rows. You can use the [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel), [Checkboxes](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Radio Button Group](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), [Single-Line Input](https://surveyjs.io/form-library/documentation/questiontextmodel), [Long Text](https://surveyjs.io/form-library/documentation/questioncommentmodel), and other question types as cell editors.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/ (linkStyle))\n  */\nclass QuestionMatrixDynamicModel extends QuestionMatrixDropdownModelBase {\n  constructor(name) {\n    super(name);\n    this.rowCounter = 0;\n    this.setRowCountValueFromData = false;\n    this.startDragMatrixRow = (event, targets) => {\n      this.dragDropMatrixRows.startDrag(event, this.draggedRow, this, targets.target);\n    };\n    this.initialRowCount = this.getDefaultPropertyValue(\"rowCount\");\n    this.createLocalizableString(\"confirmDeleteText\", this, false, \"confirmDelete\");\n    var locAddRowText = this.createLocalizableString(\"addRowText\", this);\n    locAddRowText.onGetTextCallback = text => {\n      return !!text ? text : this.defaultAddRowText;\n    };\n    this.createLocalizableString(\"removeRowText\", this, false, \"removeRow\");\n    this.createLocalizableString(\"noRowsText\", this, false, true);\n    this.createLocalizableString(\"editRowText\", this, false, \"editText\");\n    this.registerPropertyChangedHandlers([\"hideColumnsIfEmpty\", \"allowAddRows\"], () => {\n      this.updateShowTableAndAddRow();\n    });\n    this.registerPropertyChangedHandlers([\"allowRowReorder\", \"isReadOnly\", \"lockedRowCount\"], () => {\n      this.resetRenderedTable();\n    });\n    this.registerPropertyChangedHandlers([\"minRowCount\"], () => {\n      this.onMinRowCountChanged();\n    });\n    this.registerPropertyChangedHandlers([\"maxRowCount\"], () => {\n      this.onMaxRowCountChanged();\n    });\n    this.dragOrClickHelper = new DragOrClickHelper(this.startDragMatrixRow);\n  }\n  setSurveyImpl(value, isLight) {\n    super.setSurveyImpl(value, isLight);\n    this.dragDropMatrixRows = new DragDropMatrixRows(this.survey, null, true);\n  }\n  isBanStartDrag(pointerDownEvent) {\n    const target = pointerDownEvent.target;\n    return target.getAttribute(\"contenteditable\") === \"true\" || target.nodeName === \"INPUT\" || !this.isDragHandleAreaValid(target);\n  }\n  isDragHandleAreaValid(node) {\n    if (this.survey.matrixDragHandleArea === \"icon\") {\n      return node.classList.contains(this.cssClasses.dragElementDecorator);\n    }\n    return true;\n  }\n  onPointerDown(pointerDownEvent, row) {\n    if (!row || !this.isRowsDragAndDrop || this.isDesignMode) return;\n    if (this.isBanStartDrag(pointerDownEvent)) return;\n    if (row.isDetailPanelShowing) return;\n    this.draggedRow = row;\n    this.dragOrClickHelper.onPointerDown(pointerDownEvent);\n  }\n  getType() {\n    return \"matrixdynamic\";\n  }\n  get isRowsDynamic() {\n    return true;\n  }\n  /**\n   * Specifies whether to display a confirmation dialog when a respondent wants to delete a row.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see confirmDeleteText\n   */\n  get confirmDelete() {\n    return this.getPropertyValue(\"confirmDelete\");\n  }\n  set confirmDelete(val) {\n    this.setPropertyValue(\"confirmDelete\", val);\n  }\n  get isValueArray() {\n    return true;\n  }\n  /**\n   * Specifies a key column. Set this property to a column name, and the question will display `keyDuplicationError` if a user tries to enter a duplicate value in this column.\n   * @see keyDuplicationError\n   */\n  get keyName() {\n    return this.getPropertyValue(\"keyName\", \"\");\n  }\n  set keyName(val) {\n    this.setPropertyValue(\"keyName\", val);\n  }\n  /**\n   * If it is not empty, then this value is set to every new row, including rows created initially, unless the defaultValue is not empty\n   * @see defaultValue\n   * @see copyDefaultValueFromLastEntry\n   */\n  get defaultRowValue() {\n    return this.getPropertyValue(\"defaultRowValue\");\n  }\n  set defaultRowValue(val) {\n    this.setPropertyValue(\"defaultRowValue\", val);\n  }\n  /**\n   * Specifies whether default values for a new row/column should be copied from the last row/column.\n   *\n   * If you also specify `defaultValue`, it will be merged with the copied values.\n   * @see defaultValue\n   */\n  get copyDefaultValueFromLastEntry() {\n    return this.getPropertyValue(\"copyDefaultValueFromLastEntry\");\n  }\n  set copyDefaultValueFromLastEntry(val) {\n    this.setPropertyValue(\"copyDefaultValueFromLastEntry\", val);\n  }\n  /**\n   * @deprecated Use the [`copyDefaultValueFromLastEntry`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#copyDefaultValueFromLastEntry) property instead.\n   */\n  get defaultValueFromLastRow() {\n    return this.copyDefaultValueFromLastEntry;\n  }\n  set defaultValueFromLastRow(val) {\n    this.copyDefaultValueFromLastEntry = val;\n  }\n  isDefaultValueEmpty() {\n    return super.isDefaultValueEmpty() && this.isValueEmpty(this.defaultRowValue);\n  }\n  valueFromData(val) {\n    if (this.minRowCount < 1 || this.isEmpty()) return super.valueFromData(val);\n    if (!Array.isArray(val)) val = [];\n    for (var i = val.length; i < this.minRowCount; i++) val.push({});\n    return val;\n  }\n  isNewValueCorrect(val) {\n    return Array.isArray(val);\n  }\n  setDefaultValue() {\n    if (this.isValueEmpty(this.defaultRowValue) || !this.isValueEmpty(this.defaultValue)) {\n      super.setDefaultValue();\n      return;\n    }\n    if (!this.isEmpty() || this.rowCount == 0) return;\n    var newValue = [];\n    for (var i = 0; i < this.rowCount; i++) {\n      newValue.push(this.defaultRowValue);\n    }\n    this.value = newValue;\n  }\n  moveRowByIndex(fromIndex, toIndex) {\n    const value = this.createNewValue();\n    if (!Array.isArray(value) && Math.max(fromIndex, toIndex) >= value.length) return;\n    const movableRow = value[fromIndex];\n    value.splice(fromIndex, 1);\n    value.splice(toIndex, 0, movableRow);\n    this.value = value;\n  }\n  addRowByIndex(rowData, toIndex) {\n    const value = this.createNewValue();\n    if (!Array.isArray(value) && toIndex >= value.length) return;\n    value.splice(toIndex, 0, rowData);\n    this.rowCount++;\n    this.value = value;\n  }\n  removeRowByIndex(fromIndex) {\n    const value = this.createNewValue();\n    if (!Array.isArray(value) && fromIndex >= value.length) return;\n    value.splice(fromIndex, 1);\n    this.rowCount--;\n    this.value = value;\n  }\n  clearOnDrop() {\n    if (!this.isEditingSurveyElement) {\n      this.resetRenderedTable();\n    }\n  }\n  initDataUI() {\n    if (!this.generatedVisibleRows) {\n      this.getVisibleRows();\n    }\n  }\n  /**\n   * The number of rows in the matrix.\n   *\n   * Default value: 2\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see minRowCount\n   * @see maxRowCount\n   */\n  get rowCount() {\n    return this.rowCountValue;\n  }\n  set rowCount(val) {\n    val = Helpers.getNumber(val);\n    if (val < 0 || val > settings.matrix.maxRowCount || val === this.rowCount) return;\n    this.setRowCountValueFromData = false;\n    var prevValue = this.rowCountValue;\n    this.rowCountValue = val;\n    if (this.value && this.value.length > val) {\n      var qVal = this.value;\n      qVal.splice(val);\n      this.value = qVal;\n    }\n    if (this.isUpdateLocked) {\n      this.initialRowCount = val;\n      return;\n    }\n    if (this.generatedVisibleRows || prevValue == 0) {\n      if (!this.generatedVisibleRows) {\n        this.clearGeneratedRows();\n        this.generatedVisibleRows = [];\n      }\n      this.generatedVisibleRows.splice(val);\n      for (var i = prevValue; i < val; i++) {\n        var newRow = this.createMatrixRow(this.getValueForNewRow());\n        this.generatedVisibleRows.push(newRow);\n        this.onMatrixRowCreated(newRow);\n      }\n      this.runCondition(this.getDataFilteredValues(), this.getDataFilteredProperties());\n    }\n    this.onRowsChanged();\n  }\n  updateBindingProp(propName, value) {\n    super.updateBindingProp(propName, value);\n    const rows = this.generatedVisibleRows;\n    if (propName !== \"rowCount\" || !Array.isArray(rows)) return;\n    const val = this.getUnbindValue(this.value) || [];\n    if (val.length < rows.length) {\n      let hasValue = false;\n      for (let i = val.length; i < rows.length; i++) {\n        hasValue || (hasValue = !rows[i].isEmpty);\n        val.push(rows[i].value || {});\n      }\n      if (hasValue) {\n        this.value = val;\n      }\n    }\n  }\n  updateProgressInfoByValues(res) {\n    let val = this.value;\n    if (!Array.isArray(val)) val = [];\n    for (var i = 0; i < this.rowCount; i++) {\n      const rowValue = i < val.length ? val[i] : {};\n      this.updateProgressInfoByRow(res, rowValue);\n    }\n  }\n  getValueForNewRow() {\n    var res = null;\n    if (!!this.onGetValueForNewRowCallBack) {\n      res = this.onGetValueForNewRowCallBack(this);\n    }\n    return res;\n  }\n  /**\n   * Specifies whether users can drag and drop matrix rows to reorder them. Applies only if [`transposeData`](#transposeData) is `false`.\n   *\n   * Default value: `false`\n   */\n  get allowRowReorder() {\n    return this.getPropertyValue(\"allowRowReorder\");\n  }\n  set allowRowReorder(val) {\n    this.setPropertyValue(\"allowRowReorder\", val);\n  }\n  /**\n   * @deprecated Use the [`allowRowReorder`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#allowRowReorder) property instead.\n   */\n  get allowRowsDragAndDrop() {\n    return this.allowRowReorder;\n  }\n  set allowRowsDragAndDrop(val) {\n    this.allowRowReorder = val;\n  }\n  get allowRowDragIn() {\n    var _a, _b;\n    return !((_b = (_a = this.survey) === null || _a === void 0 ? void 0 : _a.onMatrixRowDragOver) === null || _b === void 0 ? void 0 : _b.isEmpty);\n  }\n  get isRowsDragAndDrop() {\n    return this.allowRowReorder && !this.isReadOnly;\n  }\n  get lockedRowCount() {\n    return this.getPropertyValue(\"lockedRowCount\", 0);\n  }\n  set lockedRowCount(val) {\n    this.setPropertyValue(\"lockedRowCount\", val);\n  }\n  get iconDragElement() {\n    return this.cssClasses.iconDragElement;\n  }\n  createRenderedTable() {\n    return new QuestionMatrixDynamicRenderedTable(this);\n  }\n  get rowCountValue() {\n    return this.getPropertyValue(\"rowCount\");\n  }\n  set rowCountValue(val) {\n    this.setPropertyValue(\"rowCount\", val);\n  }\n  /**\n   * A minimum number of rows in the matrix. Users cannot delete rows if `rowCount` equals `minRowCount`.\n   *\n   * Default value: 0\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see rowCount\n   * @see maxRowCount\n   * @see allowRemoveRows\n   */\n  get minRowCount() {\n    return this.getPropertyValue(\"minRowCount\");\n  }\n  set minRowCount(val) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"minRowCount\", val);\n  }\n  onMinRowCountChanged() {\n    const val = this.minRowCount;\n    if (val > this.maxRowCount) this.maxRowCount = val;\n    if (this.initialRowCount < val) this.initialRowCount = val;\n    if (this.rowCount < val) this.rowCount = val;\n  }\n  /**\n   * A maximum number of rows in the matrix. Users cannot add new rows if `rowCount` equals `maxRowCount`.\n   *\n   * Default value: 1000 (inherited from [`settings.matrix.maxRowCount`](https://surveyjs.io/form-library/documentation/settings#matrixMaximumRowCount))\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see rowCount\n   * @see minRowCount\n   * @see allowAddRows\n   */\n  get maxRowCount() {\n    return this.getPropertyValue(\"maxRowCount\");\n  }\n  set maxRowCount(val) {\n    if (val <= 0) return;\n    if (val > settings.matrix.maxRowCount) val = settings.matrix.maxRowCount;\n    if (val == this.maxRowCount) return;\n    this.setPropertyValue(\"maxRowCount\", val);\n  }\n  onMaxRowCountChanged() {\n    const val = this.maxRowCount;\n    if (val < this.minRowCount) this.minRowCount = val;\n    if (this.rowCount > val) this.rowCount = val;\n  }\n  /**\n   * Specifies whether users are allowed to add new rows.\n   *\n   * Default value: `true`\n   * @see canAddRow\n   * @see allowRemoveRows\n   */\n  get allowAddRows() {\n    return this.getPropertyValue(\"allowAddRows\");\n  }\n  set allowAddRows(val) {\n    this.setPropertyValue(\"allowAddRows\", val);\n  }\n  /**\n   * Specifies whether users are allowed to delete rows.\n   *\n   * Default value: `true`\n   * @see canRemoveRows\n   * @see allowAddRows\n   */\n  get allowRemoveRows() {\n    return this.getPropertyValue(\"allowRemoveRows\");\n  }\n  set allowRemoveRows(val) {\n    this.setPropertyValue(\"allowRemoveRows\", val);\n    if (!this.isUpdateLocked) {\n      this.resetRenderedTable();\n    }\n  }\n  /**\n   * Indicates whether it is possible to add a new row.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to add new rows (`allowAddRows` is `true`).\n   * - The question, its parent panel, or survey is not in read-only state.\n   * - `rowCount` is less than `maxRowCount`.\n   * @see allowAddRows\n   * @see isReadOnly\n   * @see rowCount\n   * @see maxRowCount\n   * @see canRemoveRows\n   */\n  get canAddRow() {\n    return this.allowAddRows && !this.isReadOnly && this.rowCount < this.maxRowCount;\n  }\n  /**\n   * Indicates whether it is possible to delete rows.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to delete rows (`allowRemoveRows` is `true`).\n   * - The question, its parent panel, or survey is not in read-only state.\n   * - `rowCount` exceeds `minRowCount`.\n   * @see allowRemoveRows\n   * @see isReadOnly\n   * @see rowCount\n   * @see minRowCount\n   * @see canAddRow\n   */\n  get canRemoveRows() {\n    var res = this.allowRemoveRows && !this.isReadOnly && this.rowCount > this.minRowCount;\n    return !!this.canRemoveRowsCallback ? this.canRemoveRowsCallback(res) : res;\n  }\n  canRemoveRow(row) {\n    if (!this.survey) return true;\n    const index = row.rowIndex - 1;\n    if (this.lockedRowCount > 0 && index < this.lockedRowCount) return false;\n    return this.survey.matrixAllowRemoveRow(this, index, row);\n  }\n  addRowUI() {\n    this.addRow(true);\n  }\n  getQuestionToFocusOnAddingRow() {\n    if (this.visibleRows.length === 0) return null;\n    var row = this.visibleRows[this.visibleRows.length - 1];\n    for (var i = 0; i < row.cells.length; i++) {\n      var q = row.cells[i].question;\n      if (!!q && q.isVisible && !q.isReadOnly) {\n        return q;\n      }\n    }\n    return null;\n  }\n  /**\n   * Creates and adds a new row to the matrix.\n   * @param setFocus *(Optional)* Pass `true` to focus the cell in the first column.\n   */\n  addRow(setFocus) {\n    const oldRowCount = this.rowCount;\n    const allow = this.canAddRow;\n    var options = {\n      question: this,\n      canAddRow: allow,\n      allow: allow\n    };\n    if (!!this.survey) {\n      this.survey.matrixBeforeRowAdded(options);\n    }\n    const newAllow = allow !== options.allow ? options.allow : allow !== options.canAddRow ? options.canAddRow : allow;\n    if (!newAllow) return;\n    this.onStartRowAddingRemoving();\n    this.addRowCore();\n    this.onEndRowAdding();\n    this.singleInputOnAddItem(false);\n    if (this.detailPanelShowOnAdding && this.visibleRows.length > 0) {\n      this.visibleRows[this.visibleRows.length - 1].showDetailPanel();\n    }\n    if (setFocus && oldRowCount !== this.rowCount) {\n      const q = this.getQuestionToFocusOnAddingRow();\n      if (!!q) {\n        q.focus();\n      }\n    }\n  }\n  /**\n   * Specifies whether to expand the detail section immediately when a respondent adds a new row.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see detailPanelMode\n   */\n  get detailPanelShowOnAdding() {\n    return this.getPropertyValue(\"detailPanelShowOnAdding\");\n  }\n  set detailPanelShowOnAdding(val) {\n    this.setPropertyValue(\"detailPanelShowOnAdding\", val);\n  }\n  hasRowsAsItems() {\n    return false;\n  }\n  unbindValue() {\n    this.clearGeneratedRows();\n    this.clearPropertyValue(\"value\");\n    this.rowCountValue = 0;\n    super.unbindValue();\n  }\n  isValueSurveyElement(val) {\n    return this.isEditingSurveyElement || super.isValueSurveyElement(val);\n  }\n  addRowCore() {\n    var prevRowCount = this.rowCount;\n    this.rowCount = this.rowCount + 1;\n    var defaultValue = this.getDefaultRowValue(true);\n    var newValue = null;\n    if (!this.isValueEmpty(defaultValue)) {\n      newValue = this.createNewValue();\n      if (newValue.length == this.rowCount) {\n        newValue[newValue.length - 1] = defaultValue;\n        this.value = newValue;\n      }\n    }\n    if (this.data) {\n      this.runCellsCondition(this.getDataFilteredValues(), this.getDataFilteredProperties());\n      const rows = this.visibleRows;\n      if (this.isValueEmpty(defaultValue) && rows.length > 0) {\n        const row = rows[rows.length - 1];\n        if (!this.isValueEmpty(row.value)) {\n          if (!newValue) {\n            newValue = this.createNewValue();\n          }\n          if (!this.isValueSurveyElement(newValue) && !this.isTwoValueEquals(newValue[newValue.length - 1], row.value)) {\n            newValue[newValue.length - 1] = row.value;\n            this.value = newValue;\n          }\n        }\n      }\n    }\n    if (this.survey) {\n      const rows = this.visibleRows;\n      if (prevRowCount + 1 == this.rowCount && rows.length > 0) {\n        const row = rows[rows.length - 1];\n        this.survey.matrixRowAdded(this, row);\n        this.onRowsChanged();\n      }\n    }\n  }\n  getDefaultRowValue(isRowAdded) {\n    var res = null;\n    for (var i = 0; i < this.columns.length; i++) {\n      var q = this.columns[i].templateQuestion;\n      if (!!q && !this.isValueEmpty(q.getDefaultValue())) {\n        res = res || {};\n        res[this.columns[i].name] = q.getDefaultValue();\n      }\n    }\n    if (!this.isValueEmpty(this.defaultRowValue)) {\n      for (var key in this.defaultRowValue) {\n        res = res || {};\n        res[key] = this.defaultRowValue[key];\n      }\n    }\n    if (isRowAdded && this.copyDefaultValueFromLastEntry) {\n      var val = this.value;\n      if (!!val && Array.isArray(val) && val.length >= this.rowCount - 1) {\n        var rowValue = val[this.rowCount - 2];\n        for (var key in rowValue) {\n          res = res || {};\n          res[key] = rowValue[key];\n        }\n      }\n    }\n    return res;\n  }\n  focusAddBUtton() {\n    const rootElement = this.getRootElement();\n    if (!!rootElement && !!this.cssClasses.buttonAdd) {\n      const addButton = rootElement.querySelectorAll(\".\" + this.cssClasses.buttonAdd)[0];\n      addButton && addButton.focus();\n    }\n  }\n  getActionCellIndex(row) {\n    const headerShift = this.showHeader ? 1 : 0;\n    if (this.isColumnLayoutHorizontal) {\n      return row.cells.length - 1 + headerShift;\n    }\n    return this.visibleRows.indexOf(row) + headerShift;\n  }\n  removeRowUI(value) {\n    if (!!value && !!value.rowName) {\n      var index = this.visibleRows.indexOf(value);\n      if (index < 0) return;\n      value = index;\n    }\n    this.removeRow(value, undefined, () => {\n      const rowCount = this.visibleRows.length;\n      const nextIndex = index >= rowCount ? rowCount - 1 : index;\n      const nextRow = nextIndex > -1 ? this.visibleRows[nextIndex] : undefined;\n      setTimeout(() => {\n        if (nextRow) {\n          this.renderedTable.focusActionCell(nextRow, this.getActionCellIndex(nextRow));\n        } else {\n          this.focusAddBUtton();\n        }\n      }, 10);\n    });\n  }\n  isRequireConfirmOnRowDelete(index) {\n    if (!this.confirmDelete) return false;\n    if (index < 0 || index >= this.rowCount) return false;\n    var value = this.createNewValue();\n    if (this.isValueEmpty(value) || !Array.isArray(value)) return false;\n    if (index >= value.length) return false;\n    return !this.isValueEmpty(value[index]);\n  }\n  /**\n   * Removes a matrix row with a specified index.\n   * @param index A zero-based row index.\n   * @param confirmDelete *(Optional)* A Boolean value that specifies whether to display a confirmation dialog. If you do not specify this parameter, the [`confirmDelete`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#confirmDelete) property value is used.\n   */\n  removeRow(index, confirmDelete, onRowRemoved) {\n    if (!this.canRemoveRows) return;\n    if (index < 0 || index >= this.rowCount) return;\n    var row = !!this.visibleRows && index < this.visibleRows.length ? this.visibleRows[index] : null;\n    if (confirmDelete === undefined) {\n      confirmDelete = this.isRequireConfirmOnRowDelete(index);\n    }\n    if (confirmDelete) {\n      confirmActionAsync({\n        message: this.confirmDeleteText,\n        funcOnYes: () => {\n          this.removeRowAsync(index, row);\n          onRowRemoved && onRowRemoved();\n        },\n        locale: this.getLocale(),\n        rootElement: this.survey.rootElement,\n        cssClass: this.cssClasses.confirmDialog\n      });\n      return;\n    }\n    this.removeRowAsync(index, row);\n    onRowRemoved && onRowRemoved();\n  }\n  removeRowAsync(index, row) {\n    if (!!row && !!this.survey && !this.survey.matrixRowRemoving(this, index, row)) return;\n    this.onStartRowAddingRemoving();\n    this.removeRowCore(index);\n    this.singleInputOnRemoveItem(index);\n    this.onEndRowRemoving(row);\n  }\n  removeRowCore(index) {\n    var row = this.generatedVisibleRows ? this.generatedVisibleRows[index] : null;\n    if (this.generatedVisibleRows && index < this.generatedVisibleRows.length) {\n      this.generatedVisibleRows.splice(index, 1);\n    }\n    this.rowCountValue--;\n    if (this.value) {\n      var val = [];\n      if (Array.isArray(this.value) && index < this.value.length) {\n        val = this.createValueCopy();\n      } else {\n        val = this.createNewValue();\n      }\n      val.splice(index, 1);\n      val = this.deleteRowValue(val, null);\n      this.isRowChanging = true;\n      this.value = val;\n      this.isRowChanging = false;\n    }\n    this.onRowsChanged();\n    if (this.survey) {\n      this.survey.matrixRowRemoved(this, index, row);\n    }\n  }\n  onSingleInputQuestionAdded(question) {\n    if (!this.showHeader) {\n      question.titleLocation = \"hidden\";\n    }\n  }\n  getSingleInputQuestionsCore(question, checkDynamic) {\n    const res = new Array();\n    const rows = this.visibleRows;\n    if (checkDynamic) {\n      for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        if (!row.hasValueAnyQuestion(true) || row.hasErrors(false, {}, () => {})) {\n          this.fillSingleInputQuestionsByRow(res, row);\n        }\n      }\n    }\n    return this.getSingleInputQuestionsForDynamic(question, res);\n  }\n  fillSingleInputQuestionsInContainer(res, innerQuestion) {\n    const row = this.getRowByQuestion(innerQuestion);\n    this.fillSingleInputQuestionsByRow(res, row);\n  }\n  fillSingleInputQuestionsByRow(res, row) {\n    if (row) {\n      row.questions.forEach(q => q.addNestedQuestion(res, true, false, false));\n    }\n  }\n  getSingleInputAddTextCore() {\n    if (!this.canAddRow) return undefined;\n    return this.addRowText;\n  }\n  singleInputAddItemCore() {\n    this.addRowUI();\n  }\n  singleInputRemoveItemCore(question) {\n    this.removeRowUI(this.getRowByQuestion(question));\n  }\n  getSingleQuestionOnChange(index) {\n    const rows = this.visibleRows;\n    if (rows.length > 0) {\n      if (index < 0 || index >= rows.length) index = rows.length - 1;\n      const row = rows[index];\n      const vQs = row.visibleQuestions;\n      if (vQs.length > 0) {\n        return vQs[0];\n      }\n    }\n    return null;\n  }\n  createSingleInputSummary() {\n    const res = new QuestionSingleInputSummary(this, this.locNoRowsText);\n    const items = new Array();\n    const canRemoveRows = this.canRemoveRows;\n    this.visibleRows.forEach(row => {\n      const locText = new LocalizableString(this, true, undefined, this.getSingleInputTitleTemplate());\n      locText.setJson(this.locSingleInputTitleTemplate.getJson());\n      locText.onGetTextCallback = text => {\n        return row.getTextProcessor().processText(text, true);\n      };\n      const bntEdit = new Action({\n        locTitle: this.getLocalizableString(\"editRowText\"),\n        action: () => {\n          this.singleInputEditRow(row);\n        }\n      });\n      const btnRemove = canRemoveRows && this.canRemoveRow(row) ? new Action({\n        locTitle: this.locRemoveRowText,\n        action: () => {\n          this.removeRowUI(row);\n        }\n      }) : undefined;\n      items.push(new QuestionSingleInputSummaryItem(locText, bntEdit, btnRemove));\n    });\n    res.items = items;\n    return res;\n  }\n  /**\n   * A message displayed in a confirmation dialog that appears when a respondent wants to delete a row.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   * @see confirmDelete\n   */\n  get confirmDeleteText() {\n    return this.getLocalizableStringText(\"confirmDeleteText\");\n  }\n  set confirmDeleteText(val) {\n    this.setLocalizableStringText(\"confirmDeleteText\", val);\n  }\n  get locConfirmDeleteText() {\n    return this.getLocalizableString(\"confirmDeleteText\");\n  }\n  /**\n   * A caption for the Add Row button.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dynamic-matrix-add-new-rows/ (linkStyle))\n   * @see addRowButtonLocation\n   */\n  get addRowText() {\n    return this.getLocalizableStringText(\"addRowText\", this.defaultAddRowText);\n  }\n  set addRowText(val) {\n    this.setLocalizableStringText(\"addRowText\", val);\n  }\n  get locAddRowText() {\n    return this.getLocalizableString(\"addRowText\");\n  }\n  get defaultAddRowText() {\n    return this.getLocalizationString(this.isColumnLayoutHorizontal ? \"addRow\" : \"addColumn\");\n  }\n  getSingleInputTitleTemplate() {\n    return \"rowIndexTemplateTitle\";\n  }\n  /**\n   * Specifies the location of the Add Row button.\n   *\n   * Possible values:\n   *\n   * - `\"top\"` - Displays the Add Row button at the top of the matrix.\n   * - `\"bottom\"` - Displays the Add Row button at the bottom of the matrix.\n   * - `\"topBottom\"` - Displays the Add Row button at the top and bottom of the matrix.\n   *\n   * Default value: `\"top\"` if [`transposeData`](#transposeData) is `true`; `\"bottom\"` if `transposeData` is `false` or the matrix is in compact mode.\n   * @see addRowText\n   */\n  get addRowButtonLocation() {\n    return this.getPropertyValue(\"addRowButtonLocation\");\n  }\n  set addRowButtonLocation(val) {\n    this.setPropertyValue(\"addRowButtonLocation\", val);\n  }\n  /**\n   * @deprecated Use the [`addRowButtonLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#addRowButtonLocation) property instead.\n   */\n  get addRowLocation() {\n    return this.addRowButtonLocation;\n  }\n  set addRowLocation(val) {\n    this.addRowButtonLocation = val;\n  }\n  getAddRowLocation() {\n    return this.addRowButtonLocation;\n  }\n  /**\n   * Specifies whether to hide columns when the matrix does not contain any rows. If you enable this property, the matrix displays the `noRowsText` message and the Add Row button.\n   *\n   * Default value: `false`\n   * @see noRowsText\n   */\n  get hideColumnsIfEmpty() {\n    return this.getPropertyValue(\"hideColumnsIfEmpty\");\n  }\n  set hideColumnsIfEmpty(val) {\n    this.setPropertyValue(\"hideColumnsIfEmpty\", val);\n  }\n  getShowColumnsIfEmpty() {\n    return this.hideColumnsIfEmpty;\n  }\n  /**\n   * Use this property to change the default value of remove row button text.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/ (linkStyle))\n   */\n  get removeRowText() {\n    return this.getLocalizableStringText(\"removeRowText\");\n  }\n  set removeRowText(val) {\n    this.setLocalizableStringText(\"removeRowText\", val);\n  }\n  get locRemoveRowText() {\n    return this.getLocalizableString(\"removeRowText\");\n  }\n  /**\n   * A message displayed when the matrix does not contain any rows. Applies only if `hideColumnsIfEmpty` is enabled.\n   * @see hideColumnsIfEmpty\n   */\n  get noRowsText() {\n    return this.getLocalizableStringText(\"noRowsText\");\n  }\n  set noRowsText(val) {\n    this.setLocalizableStringText(\"noRowsText\", val);\n  }\n  get locNoRowsText() {\n    return this.getLocalizableString(\"noRowsText\");\n  }\n  /**\n   * @deprecated Use the [`noRowsText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model#noRowsText) property instead.\n   */\n  get emptyRowsText() {\n    return this.noRowsText;\n  }\n  set emptyRowsText(val) {\n    this.noRowsText = val;\n  }\n  get locEmptyRowsText() {\n    return this.locNoRowsText;\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!value || !Array.isArray(value)) return value;\n    var values = this.getUnbindValue(value);\n    var rows = this.visibleRows;\n    for (var i = 0; i < rows.length && i < values.length; i++) {\n      var val = values[i];\n      if (!val) continue;\n      values[i] = this.getRowDisplayValue(keysAsText, rows[i], val);\n    }\n    return values;\n  }\n  getConditionObjectRowName(index) {\n    return \"[\" + index.toString() + \"]\";\n  }\n  getConditionObjectsRowIndeces() {\n    const res = [];\n    const rowCount = Math.max(this.rowCount, 1);\n    for (var i = 0; i < Math.min(settings.matrix.maxRowCountInCondition, rowCount); i++) {\n      res.push(i);\n    }\n    return res;\n  }\n  supportAutoAdvance() {\n    return false;\n  }\n  get hasRowText() {\n    return false;\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (!isOnValueChanged && this.hasErrorInMinRows()) {\n      errors.push(new MinRowCountError(this.minRowCount, this));\n    }\n  }\n  hasErrorInMinRows() {\n    if (this.minRowCount <= 0 || !this.isRequired || !this.generatedVisibleRows) return false;\n    var setRowCount = 0;\n    for (var rowIndex = 0; rowIndex < this.generatedVisibleRows.length; rowIndex++) {\n      var row = this.generatedVisibleRows[rowIndex];\n      if (!row.isEmpty) setRowCount++;\n    }\n    return setRowCount < this.minRowCount;\n  }\n  getUniqueColumnsNames() {\n    var res = super.getUniqueColumnsNames();\n    const name = this.keyName;\n    if (!!name && res.indexOf(name) < 0) {\n      res.push(name);\n    }\n    return res;\n  }\n  generateRows() {\n    var result = new Array();\n    if (this.rowCount === 0) return result;\n    var val = this.createNewValue();\n    for (var i = 0; i < this.rowCount; i++) {\n      result.push(this.createMatrixRow(this.getRowValueByIndex(val, i)));\n    }\n    if (!this.isValueEmpty(this.getDefaultRowValue(false))) {\n      this.value = val;\n    }\n    return result;\n  }\n  createMatrixRow(value) {\n    return new MatrixDynamicRowModel(this.rowCounter++, this, value);\n  }\n  getInsertedDeletedIndex(rows, val) {\n    const len = Math.min(rows.length, val.length);\n    for (let i = 0; i < len; i++) {\n      if (val[i] !== rows[i].editingObj) return i;\n    }\n    return len;\n  }\n  isEditingObjectValueChanged() {\n    const val = this.value;\n    if (!this.generatedVisibleRows || !this.isValueSurveyElement(val)) return false;\n    let lastDelRow = this.lastDeletedRow;\n    this.lastDeletedRow = undefined;\n    const rows = this.generatedVisibleRows;\n    if (!Array.isArray(val) || Math.abs(rows.length - val.length) > 1 || rows.length === val.length) return false;\n    const index = this.getInsertedDeletedIndex(rows, val);\n    if (rows.length > val.length) {\n      this.lastDeletedRow = rows[index];\n      const row = rows[index];\n      rows.splice(index, 1);\n      if (this.isRendredTableCreated) {\n        this.renderedTable.onRemovedRow(row);\n      }\n    } else {\n      let newRow = undefined;\n      if (!!lastDelRow && lastDelRow.editingObj === val[index]) {\n        newRow = lastDelRow;\n      } else {\n        lastDelRow = undefined;\n        newRow = this.createMatrixRow(val[index]);\n      }\n      rows.splice(index, 0, newRow);\n      if (!lastDelRow) {\n        this.onMatrixRowCreated(newRow);\n      }\n      if (this.isRendredTableCreated) {\n        this.renderedTable.onAddedRow(newRow, index);\n      }\n    }\n    this.setPropertyValueDirectly(\"rowCount\", val.length);\n    return true;\n  }\n  updateValueFromSurvey(newValue, clearData = false) {\n    this.setRowCountValueFromData = true;\n    if (this.minRowCount > 0 && Helpers.isValueEmpty(newValue) && !Helpers.isValueEmpty(this.defaultRowValue)) {\n      newValue = [];\n      for (let i = 0; i < this.minRowCount; i++) {\n        newValue.push(Helpers.createCopy(this.defaultRowValue));\n      }\n    }\n    super.updateValueFromSurvey(newValue, clearData);\n    this.setRowCountValueFromData = false;\n  }\n  getFilteredDataCore() {\n    const res = [];\n    const val = this.createValueCopy();\n    if (!Array.isArray(val)) return res;\n    const rows = this.generatedVisibleRows;\n    for (let i = 0; i < rows.length && i < val.length; i++) {\n      const rowVal = val[i];\n      if (rows[i].isVisible && !Helpers.isValueEmpty(rowVal)) {\n        res.push(rowVal);\n      }\n    }\n    return res;\n  }\n  onBeforeValueChanged(val) {\n    if (!val || !Array.isArray(val)) return;\n    var newRowCount = val.length;\n    if (newRowCount == this.rowCount) return;\n    if (!this.setRowCountValueFromData && newRowCount < this.initialRowCount) return;\n    if (this.isEditingObjectValueChanged()) return;\n    this.setRowCountValueFromData = true;\n    this.rowCountValue = newRowCount;\n    if (!this.generatedVisibleRows) return;\n    if (newRowCount == this.generatedVisibleRows.length + 1) {\n      this.onStartRowAddingRemoving();\n      const newValue = this.getRowValueByIndex(val, newRowCount - 1);\n      const newRow = this.createMatrixRow(newValue);\n      this.generatedVisibleRows.push(newRow);\n      this.onMatrixRowCreated(newRow);\n      this.onEndRowAdding();\n    } else {\n      this.clearGeneratedRows();\n      this.getVisibleRows();\n      this.onRowsChanged();\n    }\n    this.setRowCountValueFromData = false;\n  }\n  createNewValue() {\n    var result = this.createValueCopy();\n    if (!result || !Array.isArray(result)) result = [];\n    if (result.length > this.rowCount) result.splice(this.rowCount);\n    var rowValue = this.getDefaultRowValue(false);\n    rowValue = rowValue || {};\n    for (var i = result.length; i < this.rowCount; i++) {\n      result.push(this.getUnbindValue(rowValue));\n    }\n    return result;\n  }\n  deleteRowValue(newValue, row) {\n    if (!Array.isArray(newValue)) return newValue;\n    var isEmpty = true;\n    for (var i = 0; i < newValue.length; i++) {\n      if (this.isObject(newValue[i]) && Object.keys(newValue[i]).length > 0) {\n        isEmpty = false;\n        break;\n      }\n    }\n    return isEmpty ? null : newValue;\n  }\n  getRowValueByIndex(questionValue, index) {\n    return Array.isArray(questionValue) && index >= 0 && index < questionValue.length ? questionValue[index] : null;\n  }\n  getRowValueCore(row, questionValue, create = false) {\n    if (!this.generatedVisibleRows) return {};\n    var res = this.getRowValueByIndex(questionValue, this.generatedVisibleRows.indexOf(row));\n    if (!res && create) res = {};\n    return res;\n  }\n  getAddRowButtonCss(isEmptySection = false) {\n    return new CssClassBuilder().append(this.cssClasses.button).append(this.cssClasses.buttonAdd).append(this.cssClasses.emptyRowsButton, isEmptySection).toString();\n  }\n  getRemoveRowButtonCss() {\n    return new CssClassBuilder().append(this.cssClasses.button).append(this.cssClasses.buttonRemove).toString();\n  }\n  getRootCss() {\n    var _a;\n    return new CssClassBuilder().append(super.getRootCss()).append(this.cssClasses.empty, !((_a = this.renderedTable) === null || _a === void 0 ? void 0 : _a.showTable)).toString();\n  }\n}\nclass QuestionMatrixDynamicRenderedTable extends QuestionMatrixDropdownRenderedTable {\n  setDefaultRowActions(row, actions) {\n    super.setDefaultRowActions(row, actions);\n  }\n}\nSerializer.addClass(\"matrixdynamic\", [{\n  name: \"allowAddRows:boolean\",\n  default: true\n}, {\n  name: \"allowRemoveRows:boolean\",\n  default: true\n}, {\n  name: \"rowCount:number\",\n  default: 2,\n  minValue: 0,\n  isBindable: true\n}, {\n  name: \"minRowCount:number\",\n  default: 0,\n  minValue: 0\n}, {\n  name: \"maxRowCount:number\",\n  default: settings.matrix.maxRowCount\n}, {\n  name: \"keyName\"\n}, \"defaultRowValue:rowvalue\", {\n  name: \"copyDefaultValueFromLastEntry:boolean\",\n  alternativeName: \"defaultValueFromLastRow\"\n}, {\n  name: \"confirmDelete:boolean\"\n}, {\n  name: \"confirmDeleteText\",\n  dependsOn: \"confirmDelete\",\n  visibleIf: function (obj) {\n    return !obj || obj.confirmDelete;\n  },\n  serializationProperty: \"locConfirmDeleteText\"\n}, {\n  name: \"addRowButtonLocation\",\n  alternativeName: \"addRowLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\", \"topBottom\"]\n}, {\n  name: \"addRowText\",\n  serializationProperty: \"locAddRowText\"\n}, {\n  name: \"removeRowText\",\n  serializationProperty: \"locRemoveRowText\"\n}, \"hideColumnsIfEmpty:boolean\", {\n  name: \"noRowsText:text\",\n  alternativeName: \"emptyRowsText\",\n  serializationProperty: \"locNoRowsText\",\n  dependsOn: \"hideColumnsIfEmpty\",\n  visibleIf: function (obj) {\n    return !obj || obj.hideColumnsIfEmpty;\n  }\n}, {\n  name: \"detailPanelShowOnAdding:boolean\",\n  dependsOn: \"detailPanelMode\",\n  visibleIf: function (obj) {\n    return obj.detailPanelMode !== \"none\";\n  }\n}, {\n  name: \"allowRowReorder:switch\",\n  alternativeName: \"allowRowsDragAndDrop\"\n}], function () {\n  return new QuestionMatrixDynamicModel(\"\");\n}, \"matrixdropdownbase\");\nQuestionFactory.Instance.registerQuestion(\"matrixdynamic\", name => {\n  var q = new QuestionMatrixDynamicModel(name);\n  q.choices = [1, 2, 3, 4, 5];\n  QuestionMatrixDropdownModelBase.addDefaultColumns(q);\n  return q;\n});\nvar surveyCss = {\n  currentType: \"default\",\n  getCss: function () {\n    var loc = this.currentType ? this[this.currentType] : defaultCss;\n    if (!loc) loc = defaultCss;\n    return loc;\n  },\n  getAvailableThemes: function () {\n    return Object.keys(this).filter(propertyName => [\"currentType\", \"getCss\", \"getAvailableThemes\"].indexOf(propertyName) === -1);\n  }\n};\nvar defaultCss = {\n  root: \"sd-root-modern\",\n  rootProgress: \"sd-progress\",\n  rootMobile: \"sd-root-modern--mobile\",\n  rootAnimationDisabled: \"sd-root-modern--animation-disabled\",\n  rootReadOnly: \"sd-root--readonly\",\n  rootCompact: \"sd-root--compact\",\n  rootFitToContainer: \"sd-root-modern--full-container\",\n  rootWrapper: \"sd-root-modern__wrapper\",\n  rootWrapperFixed: \"sd-root-modern__wrapper--fixed\",\n  rootWrapperHasImage: \"sd-root-modern__wrapper--has-image\",\n  rootBackgroundImage: \"sd-root_background-image\",\n  container: \"sd-container-modern\",\n  header: \"sd-title sd-container-modern__title\",\n  bodyContainer: \"sv-components-row\",\n  body: \"sd-body\",\n  bodyWithTimer: \"sd-body--with-timer\",\n  clockTimerRoot: \"sd-timer\",\n  clockTimerRootTop: \"sd-timer--top\",\n  clockTimerRootBottom: \"sd-timer--bottom\",\n  clockTimerProgress: \"sd-timer__progress\",\n  clockTimerProgressAnimation: \"sd-timer__progress--animation\",\n  clockTimerTextContainer: \"sd-timer__text-container\",\n  clockTimerMinorText: \"sd-timer__text--minor\",\n  clockTimerMajorText: \"sd-timer__text--major\",\n  bodyEmpty: \"sd-body sd-body--empty\",\n  bodyLoading: \"sd-body--loading\",\n  footer: \"sd-footer sd-body__navigation sd-clearfix\",\n  title: \"sd-title\",\n  description: \"sd-description\",\n  logo: \"sd-logo\",\n  logoImage: \"sd-logo__image\",\n  headerText: \"sd-header__text\",\n  headerClose: \"sd-hidden\",\n  navigationButton: \"\",\n  bodyNavigationButton: \"sd-btn\",\n  completedPage: \"sd-completedpage\",\n  completedBeforePage: \"sd-completed-before-page\",\n  timerRoot: \"sd-body__timer\",\n  navigation: {\n    complete: \"sd-btn--action sd-navigation__complete-btn\",\n    prev: \"sd-navigation__prev-btn\",\n    next: \"sd-navigation__next-btn\",\n    start: \"sd-navigation__start-btn\",\n    preview: \"sd-navigation__preview-btn\",\n    edit: \"sd-btn sd-btn--small\"\n  },\n  panel: {\n    contentEnter: \"sd-element__content--enter\",\n    contentLeave: \"sd-element__content--leave\",\n    enter: \"sd-element-wrapper--enter\",\n    leave: \"sd-element-wrapper--leave\",\n    asPage: \"sd-panel--as-page\",\n    number: \"sd-element__num\",\n    title: \"sd-title sd-element__title sd-panel__title\",\n    titleExpandable: \"sd-element__title--expandable\",\n    titleExpandableSvg: \"sd-element__title-expandable-svg\",\n    titleNumInline: \"sd-element__title--num-inline\",\n    titleExpanded: \"sd-element__title--expanded\",\n    titleCollapsed: \"sd-element__title--collapsed\",\n    titleDisabled: \"sd-element__title--disabled\",\n    titleOnExpand: \"sd-panel__title--expanded\",\n    titleOnError: \"sd-panel__title--error\",\n    titleBar: \"sd-action-title-bar\",\n    description: \"sd-description sd-panel__description\",\n    container: \"sd-element sd-element--complex sd-panel sd-row__panel\",\n    withFrame: \"sd-element--with-frame\",\n    content: \"sd-element__content sd-panel__content\",\n    icon: \"sd-panel__icon\",\n    iconExpanded: \"sd-panel__icon--expanded\",\n    footer: \"sd-panel__footer\",\n    requiredMark: \"sd-panel__required-text\",\n    header: \"sd-panel__header sd-element__header sd-element__header--location-top\",\n    collapsed: \"sd-element--collapsed\",\n    expanded: \"sd-element--expanded\",\n    expandable: \"sd-element--expandable\",\n    expandableAnimating: \"sd-elemenet--expandable--animating\",\n    nested: \"sd-element--nested sd-element--nested-with-borders\",\n    invisible: \"sd-element--invisible\",\n    navigationButton: \"\",\n    compact: \"sd-element--with-frame sd-element--compact\",\n    errorsContainer: \"sd-panel__errbox sd-element__erbox sd-element__erbox--above-element\"\n  },\n  paneldynamic: {\n    mainRoot: \"sd-element  sd-question sd-question--paneldynamic sd-element--complex sd-question--complex sd-row__question\",\n    empty: \"sd-question--empty\",\n    root: \"sd-paneldynamic\",\n    iconRemove: \"sd-hidden\",\n    navigation: \"sd-paneldynamic__navigation\",\n    title: \"sd-title sd-element__title sd-question__title\",\n    header: \"sd-paneldynamic__header sd-element__header\",\n    headerTab: \"sd-paneldynamic__header-tab\",\n    button: \"sd-action sd-paneldynamic__btn\",\n    buttonRemove: \"sd-action--negative sd-paneldynamic__remove-btn\",\n    buttonAdd: \"sd-paneldynamic__add-btn\",\n    buttonPrev: \"sd-paneldynamic__prev-btn sd-action--icon sd-action\",\n    buttonPrevDisabled: \"sd-action--disabled\",\n    buttonNextDisabled: \"sd-action--disabled\",\n    buttonNext: \"sd-paneldynamic__next-btn sd-action--icon sd-action\",\n    progressContainer: \"sd-paneldynamic__progress-container\",\n    progress: \"sd-progress\",\n    progressBar: \"sd-progress__bar\",\n    nested: \"sd-element--nested sd-element--nested-with-borders\",\n    progressText: \"sd-paneldynamic__progress-text\",\n    separator: \"sd-paneldynamic__separator\",\n    panelWrapper: \"sd-paneldynamic__panel-wrapper\",\n    footer: \"sd-paneldynamic__footer\",\n    panelFooter: \"sd-paneldynamic__panel-footer\",\n    footerButtonsContainer: \"sd-paneldynamic__buttons-container\",\n    panelsContainer: \"sd-paneldynamic__panels-container\",\n    panelWrapperInRow: \"sd-paneldynamic__panel-wrapper--in-row\",\n    panelWrapperEnter: \"sd-paneldynamic__panel-wrapper--enter\",\n    panelWrapperLeave: \"sd-paneldynamic__panel-wrapper--leave\",\n    panelWrapperList: \"sd-paneldynamic__panel-wrapper--list\",\n    progressBtnIcon: \"icon-progressbuttonv2\",\n    noEntriesPlaceholder: \"sd-paneldynamic__placeholder sd-question__placeholder\",\n    compact: \"sd-element--with-frame sd-element--compact\",\n    tabsContainer: \"sd-paneldynamic__tabs-container\",\n    tabsContainerWithHeader: \"sd-paneldynamic__tabs-container--with-header\",\n    tabsRoot: \"sd-tabs-toolbar\",\n    tabsLeft: \"sd-tabs-toolbar--left\",\n    tabsRight: \"sd-tabs-toolbar--right\",\n    tabsCenter: \"sd-tabs-toolbar--center\",\n    tabs: {\n      item: \"sd-tab-item\",\n      itemPressed: \"sd-tab-item--pressed\",\n      itemAsIcon: \"sd-tab-item--icon\",\n      itemIcon: \"sd-tab-item__icon\",\n      itemTitle: \"sd-tab-item__title\"\n    }\n  },\n  progress: \"sd-progress sd-body__progress\",\n  progressTop: \"sd-body__progress--top\",\n  progressBottom: \"sd-body__progress--bottom\",\n  progressBar: \"sd-progress__bar\",\n  progressText: \"sd-progress__text\",\n  progressButtonsRoot: \"sd-progress-buttons\",\n  progressButtonsNumbered: \"sd-progress-buttons--numbered\",\n  progressButtonsFitSurveyWidth: \"sd-progress-buttons--fit-survey-width\",\n  progressButtonsContainerCenter: \"sd-progress-buttons__container-center\",\n  progressButtonsContainer: \"sd-progress-buttons__container\",\n  progressButtonsConnector: \"sd-progress-buttons__connector\",\n  progressButtonsButton: \"sd-progress-buttons__button\",\n  progressButtonsButtonBackground: \"sd-progress-buttons__button-background\",\n  progressButtonsButtonContent: \"sd-progress-buttons__button-content\",\n  progressButtonsHeader: \"sd-progress-buttons__header\",\n  progressButtonsFooter: \"sd-progress-buttons__footer\",\n  progressButtonsImageButtonLeft: \"sd-progress-buttons__image-button-left\",\n  progressButtonsImageButtonRight: \"sd-progress-buttons__image-button-right\",\n  progressButtonsImageButtonHidden: \"sd-progress-buttons__image-button--hidden\",\n  progressButtonsListContainer: \"sd-progress-buttons__list-container\",\n  progressButtonsList: \"sd-progress-buttons__list\",\n  progressButtonsListElementPassed: \"sd-progress-buttons__list-element--passed\",\n  progressButtonsListElementCurrent: \"sd-progress-buttons__list-element--current\",\n  progressButtonsListElementNonClickable: \"sd-progress-buttons__list-element--nonclickable\",\n  progressButtonsPageTitle: \"sd-progress-buttons__page-title\",\n  progressButtonsPageDescription: \"sd-progress-buttons__page-description\",\n  progressTextInBar: \"sd-hidden\",\n  page: {\n    root: \"sd-page sd-body__page\",\n    emptyHeaderRoot: \"sd-page__empty-header\",\n    title: \"sd-title sd-page__title\",\n    description: \"sd-description sd-page__description\",\n    number: \"sd-page__num\",\n    errorsContainer: \"sd-page__errbox\"\n  },\n  pageTitle: \"sd-title sd-page__title\",\n  pageDescription: \"sd-description sd-page__description\",\n  row: \"sd-row sd-clearfix\",\n  rowMultiple: \"sd-row--multiple\",\n  rowCompact: \"sd-row--compact\",\n  rowEnter: \"sd-row--enter\",\n  rowDelayedEnter: \"sd-row--delayed-enter\",\n  rowLeave: \"sd-row--leave\",\n  rowReplace: \"sd-row--replace\",\n  pageRow: \"sd-page__row\",\n  question: {\n    contentEnter: \"sd-element__content--enter\",\n    contentLeave: \"sd-element__content--leave\",\n    enter: \"sd-element-wrapper--enter\",\n    leave: \"sd-element-wrapper--leave\",\n    mobile: \"sd-question--mobile\",\n    mainRoot: \"sd-element sd-question sd-row__question\",\n    flowRoot: \"sd-element sd-question sd-row__question sd-row__question--flow\",\n    withFrame: \"sd-element--with-frame\",\n    asCell: \"sd-table__cell\",\n    answered: \"sd-question--answered\",\n    header: \"sd-question__header sd-element__header\",\n    headerLeft: \"sd-question__header--location--left\",\n    headerTop: \"sd-question__header--location-top sd-element__header--location-top\",\n    headerBottom: \"sd-question__header--location--bottom\",\n    content: \"sd-element__content sd-question__content\",\n    contentSupportContainerQueries: \"sd-question__content--support-container-queries\",\n    contentLeft: \"sd-question__content--left\",\n    titleNumInline: \"sd-element__title--num-inline\",\n    titleLeftRoot: \"sd-question--left\",\n    titleTopRoot: \"sd-question--title-top\",\n    descriptionUnderInputRoot: \"sd-question--description-under-input\",\n    titleBottomRoot: \"sd-question--title-bottom\",\n    titleOnAnswer: \"sd-question__title--answer\",\n    titleEmpty: \"sd-question__title--empty\",\n    titleOnError: \"sd-question__title--error\",\n    title: \"sd-title sd-element__title sd-question__title\",\n    titleExpandable: \"sd-element__title--expandable\",\n    titleExpandableSvg: \"sd-element__title-expandable-svg\",\n    titleExpanded: \"sd-element__title--expanded\",\n    titleCollapsed: \"sd-element__title--collapsed\",\n    titleDisabled: \"sd-element__title--disabled\",\n    titleReadOnly: \"sd-element__title--readonly\",\n    titleBar: \"sd-action-title-bar\",\n    requiredMark: \"sd-question__required-text\",\n    number: \"sd-element__num\",\n    description: \"sd-description sd-question__description\",\n    descriptionUnderInput: \"sd-question__description--under-input\",\n    comment: \"sd-input sd-comment\",\n    other: \"sd-input sd-comment\",\n    required: \"sd-question--required\",\n    titleRequired: \"sd-question__title--required\",\n    indent: 20,\n    footer: \"sd-question__footer\",\n    commentArea: \"sd-question__comment-area\",\n    formGroup: \"sd-question__form-group\",\n    hasError: \"sd-question--error\",\n    hasErrorTop: \"sd-question--error-top\",\n    hasErrorBottom: \"sd-question--error-bottom\",\n    collapsed: \"sd-element--collapsed\",\n    expandable: \"sd-element--expandable\",\n    expandableAnimating: \"sd-elemenet--expandable--animating\",\n    expanded: \"sd-element--expanded\",\n    nested: \"sd-element--nested\",\n    invisible: \"sd-element--invisible\",\n    composite: \"sd-element--complex sd-composite\",\n    disabled: \"sd-question--disabled\",\n    readOnly: \"sd-question--readonly\",\n    preview: \"sd-question--preview\",\n    noPointerEventsMode: \"sd-question--no-pointer-events\",\n    errorsContainer: \"sd-element__erbox sd-question__erbox\",\n    errorsContainerTop: \"sd-element__erbox--above-element sd-question__erbox--above-question\",\n    errorsContainerBottom: \"sd-question__erbox--below-question\",\n    confirmDialog: \"sd-popup--confirm sv-popup--confirm\",\n    singleInputTitle: \"sd-element__title--singleinput\",\n    singleInputWrapper: \"sd-question__singleinput-wrapper\",\n    breadcrumbsRoot: \"sd-breadcrumbs\",\n    breadcrumbsItem: \"sd-breadcrumbs-item\",\n    breadcrumbsItemButton: \"sd-breadcrumbs-item__button\",\n    breadcrumbsSeparator: \"sd-breadcrumbs-separator\",\n    summary: \"sd-summary\",\n    summaryRow: \"sd-summary-row\",\n    summaryRowContent: \"sd-summary-row__content\",\n    summaryRowActions: \"sd-summary-row__actions\",\n    summaryRowAction: \"sd-summary-row-action\",\n    summaryRowActionEdit: \"sd-summary-row-action sd-summary-row-action--edit\",\n    summaryRowActionDelete: \"sd-summary-row-action sd-summary-row-action--delete\"\n  },\n  image: {\n    mainRoot: \"sd-element sd-question sd-question--image\",\n    root: \"sd-image\",\n    image: \"sd-image__image\",\n    adaptive: \"sd-image__image--adaptive\",\n    noImage: \"sd-image__no-image\",\n    noImageSvgIconId: \"icon-no-image\",\n    withFrame: \"\"\n  },\n  html: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-question--html\",\n    root: \"sd-html\",\n    withFrame: \"\",\n    nested: \"sd-element--nested sd-html--nested\"\n  },\n  error: {\n    root: \"sd-error\",\n    icon: \"\",\n    item: \"\",\n    locationTop: \"\",\n    locationBottom: \"\"\n  },\n  checkbox: {\n    root: \"sd-selectbase\",\n    rootMobile: \"sd-selectbase--mobile\",\n    rootRow: \"sd-selectbase--row\",\n    rootMultiColumn: \"sd-selectbase--multi-column\",\n    item: \"sd-item sd-checkbox sd-selectbase__item\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    itemOnError: \"sd-item--error\",\n    itemSelectAll: \"sd-checkbox--selectall\",\n    itemNone: \"sd-checkbox--none\",\n    itemDisabled: \"sd-item--disabled sd-checkbox--disabled\",\n    itemReadOnly: \"sd-item--readonly sd-checkbox--readonly\",\n    itemPreview: \"sd-item--preview sd-checkbox--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    itemChecked: \"sd-item--checked sd-checkbox--checked\",\n    itemHover: \"sd-item--allowhover sd-checkbox--allowhover\",\n    itemInline: \"sd-selectbase__item--inline\",\n    label: \"sd-selectbase__label\",\n    labelChecked: \"\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-checkbox__control\",\n    itemDecorator: \"sd-item__svg sd-checkbox__svg\",\n    itemSvgIconId: \"#icon-check-16x16\",\n    controlLabel: \"sd-item__control-label\",\n    materialDecorator: \"sd-item__decorator sd-checkbox__decorator\",\n    other: \"sd-input sd-comment sd-selectbase__other\",\n    column: \"sd-selectbase__column\"\n  },\n  radiogroup: {\n    root: \"sd-selectbase\",\n    rootMobile: \"sd-selectbase--mobile\",\n    rootRow: \"sd-selectbase--row\",\n    rootMultiColumn: \"sd-selectbase--multi-column\",\n    item: \"sd-item sd-radio sd-selectbase__item\",\n    itemOnError: \"sd-item--error\",\n    itemInline: \"sd-selectbase__item--inline\",\n    label: \"sd-selectbase__label\",\n    labelChecked: \"\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    itemDisabled: \"sd-item--disabled sd-radio--disabled\",\n    itemReadOnly: \"sd-item--readonly sd-radio--readonly\",\n    itemPreview: \"sd-item--preview sd-radio--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    itemChecked: \"sd-item--checked sd-radio--checked\",\n    itemHover: \"sd-item--allowhover sd-radio--allowhover\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-radio__control\",\n    itemDecorator: \"sd-item__svg sd-radio__svg\",\n    controlLabel: \"sd-item__control-label\",\n    materialDecorator: \"sd-item__decorator sd-radio__decorator\",\n    other: \"sd-input sd-comment sd-selectbase__other\",\n    clearButton: \"\",\n    column: \"sd-selectbase__column\"\n  },\n  boolean: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-question--boolean\",\n    root: \"sv_qcbc sv_qbln sd-scrollable-container sd-boolean-root\",\n    rootRadio: \"sv_qcbc sv_qbln sd-scrollable-container sd-scrollable-container--compact\",\n    item: \"sd-boolean\",\n    itemOnError: \"sd-boolean--error\",\n    control: \"sd-boolean__control sd-visuallyhidden\",\n    itemChecked: \"sd-boolean--checked\",\n    itemExchanged: \"sd-boolean--exchanged\",\n    itemIndeterminate: \"sd-boolean--indeterminate\",\n    itemDisabled: \"sd-boolean--disabled\",\n    itemReadOnly: \"sd-boolean--readonly\",\n    itemPreview: \"sd-boolean--preview\",\n    itemHover: \"sd-boolean--allowhover\",\n    label: \"sd-boolean__label\",\n    labelTrue: \"sd-boolean__label--true\",\n    labelFalse: \"sd-boolean__label--false\",\n    switch: \"sd-boolean__switch\",\n    disabledLabel: \"sd-checkbox__label--disabled\",\n    labelReadOnly: \"sd-checkbox__label--readonly\",\n    labelPreview: \"sd-checkbox__label--preview\",\n    sliderText: \"sd-boolean__thumb-text\",\n    slider: \"sd-boolean__thumb\",\n    sliderGhost: \"sd-boolean__thumb-ghost\",\n    //radio\n    radioItem: \"sd-item\",\n    radioItemChecked: \"sd-item--checked sd-radio--checked\",\n    radioItemDisabled: \"sd-item--disabled sd-radio--disabled\",\n    radioItemReadOnly: \"sd-item--readonly sd-radio--readonly\",\n    radioItemPreview: \"sd-item--preview sd-radio--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    radioLabel: \"sd-selectbase__label\",\n    radioControlLabel: \"sd-item__control-label\",\n    radioFieldset: \"sd-selectbase\",\n    itemRadioDecorator: \"sd-item__svg sd-radio__svg\",\n    materialRadioDecorator: \"sd-item__decorator sd-radio__decorator\",\n    itemRadioControl: \"sd-visuallyhidden sd-item__control sd-radio__control\",\n    //end radio\n    //checkbox\n    rootCheckbox: \"sd-selectbase\",\n    checkboxItem: \"sd-item sd-selectbase__item sd-checkbox\",\n    checkboxLabel: \"sd-selectbase__label\",\n    checkboxItemOnError: \"sd-item--error\",\n    checkboxItemIndeterminate: \"sd-checkbox--intermediate\",\n    checkboxItemChecked: \"sd-item--checked sd-checkbox--checked\",\n    checkboxItemDecorator: \"sd-item__svg sd-checkbox__svg\",\n    checkboxItemDisabled: \"sd-item--disabled sd-checkbox--disabled\",\n    checkboxItemReadOnly: \"sd-item--readonly sd-checkbox--readonly\",\n    checkboxItemPreview: \"sd-item--preview sd-checkbox--preview\",\n    controlCheckbox: \"sd-visuallyhidden sd-item__control sd-checkbox__control\",\n    checkboxMaterialDecorator: \"sd-item__decorator sd-checkbox__decorator\",\n    checkboxControlLabel: \"sd-item__control-label\",\n    svgIconCheckedId: \"#icon-check-16x16\"\n  },\n  text: {\n    root: \"sd-input sd-text\",\n    small: \"sd-row__question--small\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    constrolWithCharacterCounter: \"sd-text__character-counter\",\n    characterCounterBig: \"sd-text__character-counter--big\",\n    content: \"sd-text__content sd-question__content\",\n    remainingCharacterCounter: \"sd-remaining-character-counter\",\n    onError: \"sd-input--error\"\n  },\n  multipletext: {\n    root: \"sd-multipletext\",\n    rootMobile: \"sd-multipletext--mobile\",\n    itemLabel: \"sd-multipletext__item-container sd-input\",\n    itemLabelReadOnly: \"sd-input--readonly\",\n    itemLabelDisabled: \"sd-input--disabled\",\n    itemLabelPreview: \"sd-input--preview\",\n    itemLabelOnError: \"sd-multipletext__item-container--error\",\n    itemLabelAllowFocus: \"sd-multipletext__item-container--allow-focus\",\n    itemLabelAnswered: \"sd-multipletext__item-container--answered\",\n    itemWithCharacterCounter: \"sd-multipletext-item__character-counter\",\n    item: \"sd-multipletext__item\",\n    itemTitle: \"sd-multipletext__item-title\",\n    content: \"sd-multipletext__content sd-question__content\",\n    row: \"sd-multipletext__row\",\n    cell: \"sd-multipletext__cell\",\n    cellError: \"sd-multipletext__cell--error\",\n    cellErrorTop: \"sd-multipletext__cell--error-top\",\n    cellErrorBottom: \"sd-multipletext__cell--error-bottom\"\n  },\n  dropdown: {\n    root: \"sd-selectbase\",\n    popup: \"sv-dropdown-popup\",\n    small: \"sd-row__question--small\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    other: \"sd-input sd-comment sd-selectbase__other\",\n    onError: \"sd-input--error\",\n    label: \"sd-selectbase__label\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    item: \"sd-item sd-radio sd-selectbase__item\",\n    itemDisabled: \"sd-item--disabled sd-radio--disabled\",\n    itemChecked: \"sd-item--checked sd-radio--checked\",\n    itemHover: \"sd-item--allowhover sd-radio--allowhover\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-radio__control\",\n    itemDecorator: \"sd-item__svg sd-radio__svg\",\n    cleanButtonIconId: \"icon-cancel\",\n    chevronButton: \"sd-dropdown_chevron-button\",\n    chevronButtonSvg: \"sd-dropdown_chevron-button-svg\",\n    chevronButtonIconId: \"icon-chevron\",\n    control: \"sd-input sd-dropdown\",\n    controlInputFieldComponent: \"sd-dropdown__input-field-component\",\n    controlValue: \"sd-dropdown__value\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlEmpty: \"sd-dropdown--empty\",\n    controlLabel: \"sd-item__control-label\",\n    filterStringInput: \"sd-dropdown__filter-string-input\",\n    materialDecorator: \"sd-item__decorator sd-radio__decorator\",\n    hintPrefix: \"sd-dropdown__hint-prefix\",\n    hintSuffix: \"sd-dropdown__hint-suffix\"\n  },\n  imagepicker: {\n    mainRoot: \"sd-element sd-question sd-row__question\",\n    root: \"sd-selectbase sd-imagepicker\",\n    rootResponsive: \"sd-imagepicker--responsive\",\n    rootStatic: \"sd-imagepicker--static\",\n    rootColumn: \"sd-imagepicker--column\",\n    item: \"sd-imagepicker__item\",\n    itemOnError: \"sd-imagepicker__item--error\",\n    itemInline: \"sd-imagepicker__item--inline\",\n    itemChecked: \"sd-imagepicker__item--checked\",\n    itemDisabled: \"sd-imagepicker__item--disabled\",\n    itemReadOnly: \"sd-imagepicker__item--readonly\",\n    itemPreview: \"sd-imagepicker__item--preview\",\n    itemHover: \"sd-imagepicker__item--allowhover\",\n    label: \"sd-imagepicker__label\",\n    itemDecorator: \"sd-imagepicker__item-decorator\",\n    imageContainer: \"sd-imagepicker__image-container\",\n    itemControl: \"sd-imagepicker__control sd-visuallyhidden\",\n    image: \"sd-imagepicker__image\",\n    itemText: \"sd-imagepicker__text\",\n    other: \"sd-input sd-comment\",\n    itemNoImage: \"sd-imagepicker__no-image\",\n    itemNoImageSvgIcon: \"sd-imagepicker__no-image-svg\",\n    itemNoImageSvgIconId: \"icon-no-image\",\n    column: \"sd-selectbase__column sd-imagepicker__column\",\n    checkedItemDecorator: \"sd-imagepicker__check-decorator\",\n    checkedItemSvgIcon: \"sd-imagepicker__check-icon\",\n    checkedItemSvgIconId: \"icon-check-24x24\"\n  },\n  matrix: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-element--complex sd-question--complex sd-question--table\",\n    tableWrapper: \"sd-matrix sd-table-wrapper\",\n    root: \"sd-table sd-matrix__table\",\n    columnsAutoWidth: \"sd-table--columnsautowidth\",\n    noHeader: \"sd-table--no-header\",\n    rootVerticalAlignTop: \"sd-table--align-top\",\n    rootVerticalAlignMiddle: \"sd-table--align-middle\",\n    rootAlternateRows: \"sd-table--alternate-rows\",\n    rowError: \"sd-matrix__row--error\",\n    cell: \"sd-table__cell sd-matrix__cell\",\n    row: \"sd-table__row\",\n    rowDisabled: \"sd-table__row-disabled\",\n    rowReadOnly: \"sd-table__row-readonly\",\n    headerCell: \"sd-table__cell sd-table__cell--header\",\n    rowTextCell: \"sd-table__cell sd-matrix__cell sd-table__cell--row-text\",\n    label: \"sd-item sd-radio sd-matrix__label\",\n    itemOnError: \"sd-item--error\",\n    itemValue: \"sd-visuallyhidden sd-item__control sd-radio__control\",\n    itemChecked: \"sd-item--checked sd-radio--checked\",\n    itemDisabled: \"sd-item--disabled sd-radio--disabled\",\n    itemReadOnly: \"sd-item--readonly sd-radio--readonly\",\n    itemPreview: \"sd-item--preview sd-radio--preview\",\n    itemPreviewSvgIconId: \"#icon-check-16x16\",\n    itemHover: \"sd-radio--allowhover\",\n    materialDecorator: \"sd-item__decorator sd-radio__decorator\",\n    itemDecorator: \"sd-item__svg sd-radio__svg\",\n    cellText: \"sd-matrix__text\",\n    cellTextSelected: \"sd-matrix__text--checked\",\n    cellTextDisabled: \"sd-matrix__text--disabled\",\n    cellResponsiveTitle: \"sd-matrix__responsive-title\",\n    compact: \"sd-element--with-frame sd-element--compact\"\n  },\n  matrixdropdown: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-element--complex sd-question--complex sd-question--table\",\n    rootScroll: \"sd-question--scroll\",\n    root: \"sd-table sd-matrixdropdown\",\n    columnsAutoWidth: \"sd-table--columnsautowidth\",\n    noHeader: \"sd-table--no-header\",\n    hasFooter: \"sd-table--has-footer\",\n    rootVerticalAlignTop: \"sd-table--align-top\",\n    rootVerticalAlignMiddle: \"sd-table--align-middle\",\n    tableWrapper: \"sd-table-wrapper\",\n    rootAlternateRows: \"sd-table--alternate-rows\",\n    cell: \"sd-table__cell\",\n    cellResponsiveTitle: \"sd-table__responsive-title\",\n    errorsCell: \"sd-table__cell--error\",\n    errorsCellTop: \"sd-table__cell--error-top\",\n    errorsCellBottom: \"sd-table__cell--error-bottom\",\n    itemCell: \"sd-table__cell--item\",\n    row: \"sd-table__row\",\n    rowDelayedEnter: \"sd-table__row--delayed-enter\",\n    rowEnter: \"sd-table__row--enter\",\n    rowLeave: \"sd-table__row--leave\",\n    expandedRow: \"sd-table__row--expanded\",\n    rowHasPanel: \"sd-table__row--has-panel\",\n    rowHasEndActions: \"sd-table__row--has-end-actions\",\n    headerCell: \"sd-table__cell sd-table__cell--header\",\n    rowTextCell: \"sd-table__cell sd-table__cell--row-text\",\n    footerCell: \"sd-table__cell sd-table__cell--footer\",\n    footerTotalCell: \"sd-table__cell sd-table__cell--footer-total\",\n    columnTitleCell: \"sd-table__cell--column-title\",\n    cellRequiredMark: \"sd-question__required-text\",\n    detailButton: \"sd-table__cell--detail-button\",\n    detailButtonExpanded: \"sd-table__cell--detail-button--expanded\",\n    detailIcon: \"sd-detail-panel__icon\",\n    detailIconExpanded: \"sd-detail-panel__icon--expanded\",\n    detailIconId: \"icon-expanddetail\",\n    detailIconExpandedId: \"icon-collapsedetail\",\n    detailPanelCell: \"sd-table__cell--detail-panel\",\n    detailRowCell: \"sd-table__cell--detail\",\n    actionsCellPrefix: \"sd-table__cell-action\",\n    actionsCell: \"sd-table__cell sd-table__cell--actions\",\n    actionsCellDrag: \"sd-table__cell--drag\",\n    emptyCell: \"sd-table__cell--empty\",\n    verticalCell: \"sd-table__cell--vertical\",\n    cellQuestionWrapper: \"sd-matrix__question-wrapper sd-table__question-wrapper\",\n    compact: \"sd-element--with-frame sd-element--compact\"\n  },\n  matrixdynamic: {\n    mainRoot: \"sd-element sd-question sd-row__question sd-element--complex sd-question--complex sd-question--table\",\n    rootScroll: \"sd-question--scroll\",\n    empty: \"sd-question--empty\",\n    root: \"sd-table sd-matrixdynamic\",\n    columnsAutoWidth: \"sd-table--columnsautowidth\",\n    noHeader: \"sd-table--no-header\",\n    hasFooter: \"sd-table--has-footer\",\n    tableWrapper: \"sd-table-wrapper\",\n    rootAlternateRows: \"sd-table--alternate-rows\",\n    content: \"sd-matrixdynamic__content sd-question__content\",\n    cell: \"sd-table__cell\",\n    cellResponsiveTitle: \"sd-table__responsive-title\",\n    row: \"sd-table__row\",\n    rowEmpty: \"sd-table__row--empty\",\n    rowDelayedEnter: \"sd-table__row--delayed-enter\",\n    rowEnter: \"sd-table__row--enter\",\n    rowLeave: \"sd-table__row--leave\",\n    rowHasPanel: \"sd-table__row--has-panel\",\n    rowHasEndActions: \"sd-table__row--has-end-actions\",\n    expandedRow: \"sd-table__row--expanded\",\n    itemCell: \"sd-table__cell--item\",\n    headerCell: \"sd-table__cell sd-table__cell--header\",\n    rowTextCell: \"sd-table__cell sd-table__cell--row-text\",\n    footerCell: \"sd-table__cell sd-table__cell--footer\",\n    columnTitleCell: \"sd-table__cell--column-title\",\n    cellRequiredMark: \"sd-question__required-text\",\n    button: \"sd-action sd-matrixdynamic__btn\",\n    detailRow: \"sd-table__row sd-table__row--detail\",\n    detailButton: \"sd-table__cell--detail-button\",\n    detailButtonExpanded: \"sd-table__cell--detail-button--expanded\",\n    detailIcon: \"sd-detail-panel__icon\",\n    detailIconExpanded: \"sd-detail-panel__icon--expanded\",\n    detailIconId: \"icon-expanddetail\",\n    detailIconExpandedId: \"icon-collapsedetail\",\n    detailPanelCell: \"sd-table__cell--detail-panel\",\n    detailRowCell: \"sd-table__cell--detail\",\n    actionsCellPrefix: \"sd-table__cell-action\",\n    actionsCell: \"sd-table__cell sd-table__cell--actions\",\n    actionsCellDrag: \"sd-table__cell--drag\",\n    buttonAdd: \"sd-matrixdynamic__add-btn\",\n    buttonRemove: \"sd-action--negative sd-matrixdynamic__remove-btn\",\n    iconAdd: \"sd-hidden\",\n    iconRemove: \"\",\n    dragElementDecorator: \"sd-drag-element__svg\",\n    iconDragElement: \"#icon-drag-24x24\",\n    footer: \"sd-matrixdynamic__footer\",\n    footerTotalCell: \"sd-table__cell sd-table__cell--footer-total\",\n    noRowsSection: \"sd-matrixdynamic__placeholder sd-question__placeholder\",\n    iconDrag: \"sv-matrixdynamic__drag-icon\",\n    ghostRow: \"sv-matrix-row--drag-drop-ghost-mod\",\n    draggedRow: \"sv-matrixdynamic-dragged-row\",\n    emptyCell: \"sd-table__cell--empty\",\n    verticalCell: \"sd-table__cell--vertical\",\n    cellQuestionWrapper: \"sd-matrix__question-wrapper sd-table__question-wrapper\",\n    errorsCell: \"sd-table__cell--error\",\n    errorsCellTop: \"sd-table__cell--error-top\",\n    errorsCellBottom: \"sd-table__cell--error-bottom\",\n    compact: \"sd-element--with-frame sd-element--compact\"\n  },\n  rating: {\n    rootDropdown: \"sd-scrollable-container sd-scrollable-container--compact sd-selectbase\",\n    root: \"sd-scrollable-container sd-rating\",\n    rootWrappable: \"sd-rating--wrappable\",\n    rootLabelsTop: \"sd-rating--labels-top\",\n    rootLabelsBottom: \"sd-rating--labels-bottom\",\n    rootLabelsDiagonal: \"sd-rating--labels-diagonal\",\n    item: \"sd-rating__item\",\n    itemOnError: \"sd-rating__item--error\",\n    itemHover: \"sd-rating__item--allowhover\",\n    selected: \"sd-rating__item--selected\",\n    itemStar: \"sd-rating__item-star\",\n    itemStarOnError: \"sd-rating__item-star--error\",\n    itemStarHover: \"sd-rating__item-star--allowhover\",\n    itemStarSelected: \"sd-rating__item-star--selected\",\n    itemStarDisabled: \"sd-rating__item-star--disabled\",\n    itemStarReadOnly: \"sd-rating__item-star--readonly\",\n    itemStarPreview: \"sd-rating__item-star--preview\",\n    itemStarHighlighted: \"sd-rating__item-star--highlighted\",\n    itemStarUnhighlighted: \"sd-rating__item-star--unhighlighted\",\n    itemStarSmall: \"sd-rating__item-star--small\",\n    itemSmiley: \"sd-rating__item-smiley\",\n    itemSmileyOnError: \"sd-rating__item-smiley--error\",\n    itemSmileyHover: \"sd-rating__item-smiley--allowhover\",\n    itemSmileySelected: \"sd-rating__item-smiley--selected\",\n    itemSmileyDisabled: \"sd-rating__item-smiley--disabled\",\n    itemSmileyReadOnly: \"sd-rating__item-smiley--readonly\",\n    itemSmileyPreview: \"sd-rating__item-smiley--preview\",\n    itemSmileyHighlighted: \"sd-rating__item-star--highlighted\",\n    itemSmileyScaleColored: \"sd-rating__item-smiley--scale-colored\",\n    itemSmileyRateColored: \"sd-rating__item-smiley--rate-colored\",\n    itemSmileySmall: \"sd-rating__item-smiley--small\",\n    minText: \"sd-rating__item-text sd-rating__min-text\",\n    itemText: \"sd-rating__item-text\",\n    maxText: \"sd-rating__item-text sd-rating__max-text\",\n    itemDisabled: \"sd-rating__item--disabled\",\n    itemReadOnly: \"sd-rating__item--readonly\",\n    itemPreview: \"sd-rating__item--preview\",\n    itemFixedSize: \"sd-rating__item--fixed-size\",\n    control: \"sd-input sd-dropdown\",\n    itemSmall: \"sd-rating--small\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    controlValue: \"sd-dropdown__value\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlEmpty: \"sd-dropdown--empty\",\n    filterStringInput: \"sd-dropdown__filter-string-input\",\n    chevronButtonIconId: \"icon-chevron\",\n    popup: \"sv-dropdown-popup\",\n    onError: \"sd-input--error\"\n  },\n  slider: {\n    root: \"sd-slider\",\n    rootSingleMode: \"sd-slider--single\",\n    rootNegativeScaleMode: \"sd-slider--negative-scale\",\n    rootDesignMode: \"sd-slider--design-mode\",\n    rootAnimatedThumbMode: \"sd-slider--animated-thumb-mode\",\n    visualContainer: \"sd-slider-container\",\n    visualContainerSlider: \"sd-slider-container__slider\",\n    rangeTrack: \"sd-slider__track sd-slider__range-track\",\n    inverseTrackLeft: \"sd-slider__track sd-slider__inverse-track sd-slider__inverse-track--left\",\n    inverseTrackRight: \"sd-slider__track sd-slider__inverse-track sd-slider__inverse-track--right\",\n    thumbContainer: \"sd-slider__thumb-container\",\n    thumbContainerIndeterminateMode: \"sd-slider__thumb-container--indeterminate\",\n    thumbContainerFocusedMode: \"sd-slider__thumb-container--focused\",\n    thumb: \"sd-slider__thumb\",\n    thumbDot: \"sd-slider__thumb-dot\",\n    tooltip: \"sd-slider__tooltip\",\n    tooltipPanel: \"sd-slider__tooltip-panel\",\n    tooltipOnHoverMode: \"sd-slider__tooltip--on-hover\",\n    tooltipValue: \"sd-slider__tooltip-value\",\n    input: \"sd-slider__input\",\n    labelsContainer: \"sd-slider-labels-container\",\n    label: \"sd-slider__label\",\n    labelLongMod: \"sd-slider__label--long\",\n    labelTick: \"sd-slider__label-tick\",\n    labelText: \"sd-slider__label-text\",\n    clearButton: \"\"\n  },\n  comment: {\n    root: \"sd-input sd-comment\",\n    small: \"sd-row__question--small\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    content: \"sd-comment__content sd-question__content\",\n    remainingCharacterCounter: \"sd-remaining-character-counter\",\n    onError: \"sd-input--error\"\n  },\n  expression: \"sd-expression\",\n  file: {\n    root: \"sd-file\",\n    rootDragging: \"sd-file--dragging\",\n    rootAnswered: \"sd-file--answered\",\n    rootDisabled: \"sd-file--disabled\",\n    rootReadOnly: \"sd-file--readonly\",\n    rootPreview: \"sd-file--preview\",\n    other: \"sd-input sd-comment\",\n    placeholderInput: \"sd-visuallyhidden\",\n    previewItem: \"sd-file__preview-item\",\n    fileSign: \"\",\n    fileList: \"sd-file__list\",\n    fileSignBottom: \"sd-file__sign\",\n    dragArea: \"sd-file__drag-area\",\n    dragAreaActive: \"sd-file__drag-area--active\",\n    fileDecorator: \"sd-file__decorator\",\n    onError: \"sd-file__decorator--error\",\n    fileDecoratorDrag: \"sd-file__decorator--drag\",\n    fileInput: \"sd-visuallyhidden\",\n    chooseFile: \"sd-file__choose-btn\",\n    chooseFileAsText: \"sd-action sd-file__choose-btn--text\",\n    chooseFileAsTextDisabled: \"sd-action--disabled\",\n    chooseFileAsIcon: \"sd-file__choose-btn--icon\",\n    chooseFileIconId: \"icon-choosefile\",\n    disabled: \"sd-file__choose-btn--disabled\",\n    controlDisabled: \"sd-file__choose-file-btn--disabled\",\n    //todo: remove it in v2\n    removeButton: \"sd-context-btn--negative\",\n    removeButtonBottom: \"\",\n    //\n    removeButtonIconId: \"icon-clear\",\n    removeFile: \"sd-hidden\",\n    removeFileSvg: \"\",\n    removeFileSvgIconId: \"icon-close_16x16\",\n    wrapper: \"sd-file__wrapper\",\n    defaultImage: \"sd-file__default-image\",\n    defaultImageIconId: \"icon-defaultfile\",\n    leftIconId: \"icon-arrowleft\",\n    rightIconId: \"icon-arrowright\",\n    removeFileButton: \"sd-context-btn--small sd-context-btn--with-border sd-context-btn--colorful sd-context-btn--negative sd-file__remove-file-button\",\n    dragAreaPlaceholder: \"sd-file__drag-area-placeholder\",\n    imageWrapper: \"sd-file__image-wrapper\",\n    imageWrapperDefaultImage: \"sd-file__image-wrapper--default-image\",\n    single: \"sd-file--single\",\n    singleImage: \"sd-file--single-image\",\n    mobile: \"sd-file--mobile\",\n    videoContainer: \"sd-file__video-container\",\n    contextButton: \"sd-context-btn\",\n    video: \"sd-file__video\",\n    actionsContainer: \"sd-file__actions-container\",\n    closeCameraButton: \"sd-file__close-camera-button\",\n    changeCameraButton: \"sd-file__change-camera-button\",\n    takePictureButton: \"sd-file__take-picture-button\",\n    loadingIndicator: \"sd-file__loading-indicator\",\n    page: \"sd-file__page\"\n  },\n  signaturepad: {\n    mainRoot: \"sd-element sd-question sd-question--signature sd-row__question\",\n    root: \"sd-signaturepad sjs_sp_container\",\n    small: \"sd-row__question--small\",\n    controls: \"sjs_sp_controls sd-signaturepad__controls\",\n    placeholder: \"sjs_sp_placeholder\",\n    canvas: \"sjs_sp_canvas sd-signaturepad__canvas\",\n    backgroundImage: \"sjs_sp__background-image sd-signaturepad__background-image\",\n    clearButton: \"sjs_sp_clear sd-context-btn sd-context-btn--negative sd-signaturepad__clear\",\n    clearButtonIconId: \"icon-clear\",\n    loadingIndicator: \"sd-signaturepad__loading-indicator\"\n  },\n  saveData: {\n    root: \"sv-save-data_root\",\n    rootWithButtons: \"sv-save-data_root--with-buttons\",\n    info: \"sv-save-data_info\",\n    error: \"sv-save-data_error\",\n    success: \"sv-save-data_success\",\n    button: \"sv-save-data_button\",\n    shown: \"sv-save-data_root--shown\"\n  },\n  window: {\n    root: \"sv_window\",\n    rootCollapsedMod: \"sv_window--collapsed\",\n    rootFullScreenMode: \"sv_window--full-screen\",\n    rootContent: \"sv_window_root-content\",\n    body: \"sv_window_content\",\n    header: {\n      root: \"sv_window_header\",\n      titleCollapsed: \"sv_window_header_title_collapsed\",\n      buttonsContainer: \"sv_window_buttons_container\",\n      button: \"sv_window_button\",\n      buttonExpanded: \"\",\n      buttonCollapsed: \"\",\n      collapseButton: \"sv_window_button sv_window_button_collapse\",\n      closeButton: \"sv_window_button sv_window_button_close\",\n      fullScreenButton: \"sv_window_button sv_window_button_full_screen\"\n    }\n  },\n  ranking: {\n    root: \"sv-ranking\",\n    rootMobileMod: \"sv-ranking--mobile\",\n    rootDragMod: \"sv-ranking--drag\",\n    rootDisabled: \"sd-ranking--disabled\",\n    rootReadOnly: \"sd-ranking--readonly\",\n    rootPreview: \"sd-ranking--preview\",\n    rootDesignMode: \"sv-ranking--design-mode\",\n    rootDragHandleAreaIcon: \"sv-ranking--drag-handle-area-icon\",\n    rootSelectToRankMod: \"sv-ranking--select-to-rank\",\n    rootSelectToRankEmptyValueMod: \"sv-ranking--select-to-rank-empty-value\",\n    rootSelectToRankAlignVertical: \"sv-ranking--select-to-rank-vertical\",\n    rootSelectToRankAlignHorizontal: \"sv-ranking--select-to-rank-horizontal\",\n    rootSelectToRankSwapAreas: \"sv-ranking--select-to-rank-swap-areas\",\n    item: \"sv-ranking-item\",\n    itemContent: \"sv-ranking-item__content sd-ranking-item__content\",\n    itemIndex: \"sv-ranking-item__index sd-ranking-item__index\",\n    itemIndexEmptyMode: \"sv-ranking-item__index--empty sd-ranking-item__index--empty\",\n    // itemText: \"sv-ranking-item__text\",\n    itemDisabled: \"sv-ranking-item--disabled\",\n    itemReadOnly: \"sv-ranking-item--readonly\",\n    itemPreview: \"sv-ranking-item--preview\",\n    controlLabel: \"sv-ranking-item__text\",\n    itemGhostNode: \"sv-ranking-item__ghost\",\n    itemIconContainer: \"sv-ranking-item__icon-container\",\n    itemIcon: \"sv-ranking-item__icon\",\n    itemIconHoverMod: \"sv-ranking-item__icon--hover\",\n    itemIconFocusMod: \"sv-ranking-item__icon--focus\",\n    itemGhostMod: \"sv-ranking-item--ghost\",\n    itemDragMod: \"sv-ranking--drag\",\n    itemOnError: \"sv-ranking-item--error\",\n    container: \"sv-ranking__container\",\n    containerEmptyMode: \"sv-ranking__container--empty\",\n    containerFromMode: \"sv-ranking__container--from\",\n    containerToMode: \"sv-ranking__container--to\",\n    containerPlaceholder: \"sv-ranking__container-placeholder\",\n    containersDivider: \"sv-ranking__containers-divider\"\n  },\n  buttongroup: {\n    root: \"sd-button-group-scrollable-container sv-button-group\",\n    item: \"sv-button-group__item\",\n    itemIcon: \"sv-button-group__item-icon\",\n    itemDecorator: \"sv-button-group__item-decorator\",\n    itemCaption: \"sv-button-group__item-caption\",\n    itemHover: \"sv-button-group__item--hover\",\n    itemSelected: \"sv-button-group__item--selected\",\n    itemDisabled: \"sv-button-group__item--disabled\",\n    itemControl: \"sv-visuallyhidden\",\n    rootDropdown: \"sd-button-group-scrollable-container sd-scrollable-container--compact sd-selectbase\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    control: \"sd-input sd-dropdown\",\n    controlEmpty: \"sd-dropdown--empty\",\n    controlValue: \"sd-dropdown__value\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlLabel: \"sd-item__control-label\",\n    filterStringInput: \"sd-dropdown__filter-string-input\",\n    chevronButtonIconId: \"icon-chevron\",\n    popup: \"sv-dropdown-popup\",\n    cleanButtonIconId: \"icon-cancel\",\n    hintPrefix: \"sd-dropdown__hint-prefix\",\n    hintSuffix: \"sd-dropdown__hint-suffix\"\n  },\n  list: {\n    root: \"sv-list__container sd-list\",\n    item: \"sv-list__item sd-list__item\",\n    itemBody: \"sv-list__item-body sd-list__item-body\",\n    itemSelected: \"sv-list__item--selected sd-list__item--selected\",\n    itemFocused: \"sv-list__item--focused sd-list__item--focused\",\n    itemHovered: \"sv-list__item--hovered sd-list__item--hovered\"\n  },\n  actionBar: {\n    root: \"sd-action-bar\",\n    item: \"sd-action\",\n    defaultSizeMode: \"\",\n    smallSizeMode: \"\",\n    itemPressed: \"sd-action--pressed\",\n    itemAsIcon: \"sd-action--icon\",\n    itemIcon: \"sd-action__icon\",\n    itemTitle: \"sd-action__title\"\n  },\n  variables: {\n    mobileWidth: \"--sd-mobile-width\",\n    themeMark: \"--sv-defaultV2-mark\"\n  },\n  tagbox: {\n    root: \"sd-selectbase\",\n    popup: \"sv-dropdown-popup\",\n    small: \"sd-row__question--small\",\n    selectWrapper: \"sv-dropdown_select-wrapper\",\n    other: \"sd-input sd-comment sd-selectbase__other\",\n    onError: \"sd-input--error\",\n    label: \"sd-selectbase__label\",\n    itemSvgIconId: \"#icon-check-16x16\",\n    item: \"sd-item sd-checkbox sd-selectbase__item\",\n    itemDisabled: \"sd-item--disabled sd-checkbox--disabled\",\n    itemChecked: \"sd-item--checked sd-checkbox--checked\",\n    itemHover: \"sd-item--allowhover sd-checkbox--allowhover\",\n    itemControl: \"sd-visuallyhidden sd-item__control sd-checkbox__control\",\n    itemDecorator: \"sd-item__svg sd-checkbox__svg\",\n    itemEnter: \"sd-item--enter\",\n    itemLeave: \"sd-item--leave\",\n    // cleanButton: \"sd-tagbox_clean-button sd-editor-clean-button\",\n    cleanButtonIconId: \"icon-cancel-24x24\",\n    cleanItemButton: \"sd-tagbox-item_clean-button\",\n    cleanItemButtonSvg: \"sd-tagbox-item_clean-button-svg\",\n    cleanItemButtonIconId: \"icon-clear_16x16\",\n    chevronButtonIconId: \"icon-chevron\",\n    control: \"sd-input sd-tagbox sd-dropdown\",\n    controlValue: \"sd-tagbox__value sd-dropdown__value\",\n    controlValueItems: \"sd-tagbox__value-items\",\n    placeholderInput: \"sd-tagbox__placeholder\",\n    controlEditable: \"sd-input--editable\",\n    controlDisabled: \"sd-input--disabled\",\n    controlReadOnly: \"sd-input--readonly\",\n    controlPreview: \"sd-input--preview\",\n    controlEmpty: \"sd-dropdown--empty sd-tagbox--empty\",\n    controlLabel: \"sd-item__control-label\",\n    filterStringInput: \"sd-tagbox__filter-string-input sd-dropdown__filter-string-input\",\n    materialDecorator: \"sd-item__decorator sd-checkbox__decorator\",\n    hint: \"sd-tagbox__hint\",\n    hintPrefix: \"sd-dropdown__hint-prefix sd-tagbox__hint-prefix\",\n    hintSuffix: \"sd-dropdown__hint-suffix sd-tagbox__hint-suffix\",\n    hintSuffixWrapper: \"sd-tagbox__hint-suffix-wrapper\"\n  }\n};\nconst defaultThemeName = \"default\";\nsurveyCss[defaultThemeName] = defaultCss;\nvar surveyTimerFunctions = {\n  setTimeout: func => {\n    return surveyTimerFunctions.safeTimeOut(func, 1000);\n  },\n  clearTimeout: timerId => {\n    clearTimeout(timerId);\n  },\n  safeTimeOut: (func, delay) => {\n    if (delay <= 0) {\n      func();\n      return 0;\n    } else {\n      return setTimeout(func, delay);\n    }\n  },\n  now() {\n    return Date.now();\n  }\n};\nclass SurveyTimer {\n  constructor() {\n    this.listenerCounter = 0;\n    this.timerId = -1;\n    this.onTimerTick = new EventBase();\n    this.onTimer = this.onTimerTick;\n  }\n  static get instance() {\n    if (!SurveyTimer.instanceValue) {\n      SurveyTimer.instanceValue = new SurveyTimer();\n    }\n    return SurveyTimer.instanceValue;\n  }\n  start(func = null) {\n    if (func) {\n      this.onTimerTick.add(func);\n    }\n    this.prevTimeInMs = surveyTimerFunctions.now();\n    if (this.timerId < 0) {\n      this.timerId = surveyTimerFunctions.setTimeout(() => {\n        this.doTimer();\n      });\n    }\n    this.listenerCounter++;\n  }\n  stop(func = null) {\n    if (func) {\n      this.onTimerTick.remove(func);\n    }\n    this.listenerCounter--;\n    if (this.listenerCounter == 0 && this.timerId > -1) {\n      surveyTimerFunctions.clearTimeout(this.timerId);\n      this.timerId = -1;\n    }\n  }\n  doTimer() {\n    if (this.onTimerTick.isEmpty || this.listenerCounter == 0) {\n      this.timerId = -1;\n    }\n    if (this.timerId < 0) return;\n    const newTimer = surveyTimerFunctions.now();\n    let seconds = Math.floor((newTimer - this.prevTimeInMs) / 1000);\n    this.prevTimeInMs = newTimer;\n    if (seconds < 0) {\n      seconds = 1;\n    }\n    const prevItem = this.timerId;\n    this.onTimerTick.fire(this, {\n      seconds: seconds\n    });\n    //We have to check that we have the same timerId\n    //It could be changed during events execution and it will lead to double timer events\n    if (prevItem !== this.timerId) return;\n    this.timerId = surveyTimerFunctions.setTimeout(() => {\n      this.doTimer();\n    });\n  }\n}\nSurveyTimer.instanceValue = null;\nclass SurveyTimerModel extends Base {\n  constructor(survey) {\n    super();\n    this.timerFunc = null;\n    this.surveyValue = survey;\n    this.onCreating();\n  }\n  get survey() {\n    return this.surveyValue;\n  }\n  onCreating() {}\n  start() {\n    if (!this.survey) return;\n    if (this.isRunning || this.isDesignMode) return;\n    this.survey.onCurrentPageChanged.add(() => {\n      this.update();\n    });\n    this.timerFunc = (sender, options) => {\n      this.doTimer(options.seconds);\n    };\n    this.setIsRunning(true);\n    this.update();\n    SurveyTimer.instance.start(this.timerFunc);\n  }\n  stop() {\n    if (!this.isRunning) return;\n    this.setIsRunning(false);\n    SurveyTimer.instance.stop(this.timerFunc);\n  }\n  get isRunning() {\n    return this.getPropertyValue(\"isRunning\", false);\n  }\n  setIsRunning(val) {\n    this.setPropertyValue(\"isRunning\", val);\n  }\n  update() {\n    this.updateText();\n    this.updateProgress();\n  }\n  doTimer(seconds) {\n    var page = this.survey.currentPage;\n    if (page) {\n      const pageMaxTime = page.getMaxTimeToFinish();\n      if (pageMaxTime > 0 && pageMaxTime < page.timeSpent + seconds) {\n        seconds = pageMaxTime - page.timeSpent;\n      }\n      page.timeSpent = page.timeSpent + seconds;\n    }\n    this.spent = this.spent + seconds;\n    this.update();\n    if (this.onTimerTick) {\n      this.onTimerTick(page);\n    }\n  }\n  updateProgress() {\n    let {\n      spent,\n      limit\n    } = this.survey.timerInfo;\n    if (!limit) {\n      this.progress = undefined;\n    } else {\n      if (spent == 0) {\n        this.progress = 0;\n        setTimeout(() => {\n          this.progress = Math.floor((spent + 1) / limit * 100) / 100;\n        }, 0);\n      } else if (spent <= limit) {\n        this.progress = Math.floor((spent + 1) / limit * 100) / 100;\n      }\n      if (this.progress > 1) {\n        this.progress = undefined;\n      }\n    }\n  }\n  updateText() {\n    let timerClock = this.survey.timerClock;\n    this.clockMajorText = timerClock.majorText;\n    this.clockMinorText = timerClock.minorText;\n    this.text = this.survey.timerInfoText;\n  }\n  get showProgress() {\n    return this.progress !== undefined;\n  }\n  get showTimerAsClock() {\n    return !!this.survey.getCss().clockTimerRoot;\n  }\n  get rootCss() {\n    return new CssClassBuilder().append(this.survey.getCss().clockTimerRoot).append(this.survey.getCss().clockTimerRootTop, this.survey.isTimerPanelShowingOnTop).append(this.survey.getCss().clockTimerRootBottom, this.survey.isTimerPanelShowingOnBottom).toString();\n  }\n  getProgressCss() {\n    return new CssClassBuilder().append(this.survey.getCss().clockTimerProgress).append(this.survey.getCss().clockTimerProgressAnimation, this.progress > 0).toString();\n  }\n  get textContainerCss() {\n    return this.survey.getCss().clockTimerTextContainer;\n  }\n  get minorTextCss() {\n    return this.survey.getCss().clockTimerMinorText;\n  }\n  get majorTextCss() {\n    return this.survey.getCss().clockTimerMajorText;\n  }\n}\n__decorate([property()], SurveyTimerModel.prototype, \"text\", void 0);\n__decorate([property()], SurveyTimerModel.prototype, \"progress\", void 0);\n__decorate([property()], SurveyTimerModel.prototype, \"clockMajorText\", void 0);\n__decorate([property()], SurveyTimerModel.prototype, \"clockMinorText\", void 0);\n__decorate([property({\n  defaultValue: 0\n})], SurveyTimerModel.prototype, \"spent\", void 0);\nclass Notifier extends Base {\n  constructor(cssClasses) {\n    super();\n    this.cssClasses = cssClasses;\n    this.timeout = settings.notifications.lifetime;\n    this.timer = undefined;\n    this.actionsVisibility = {};\n    this.showActions = true;\n    this.actionBar = new ActionContainer();\n    this.actionBar.setCssClasses({\n      root: defaultActionBarCss.root,\n      defaultSizeMode: defaultActionBarCss.defaultSizeMode,\n      smallSizeMode: defaultActionBarCss.smallSizeMode\n    }, false);\n    this.css = this.cssClasses.root;\n  }\n  getCssClass(type) {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.rootWithButtons, this.actionBar.getVisibleActions().length > 0).append(this.cssClasses.info, type !== \"error\" && type !== \"success\").append(this.cssClasses.error, type === \"error\").append(this.cssClasses.success, type === \"success\").append(this.cssClasses.shown, this.active).toString();\n  }\n  updateActionsVisibility(type) {\n    this.actionBar.actions.forEach(action => action.visible = this.showActions && this.actionsVisibility[action.id] === type);\n  }\n  notify(message, type = \"info\", waitUserAction = false) {\n    this.isDisplayed = true;\n    setTimeout(() => {\n      this.updateActionsVisibility(type);\n      this.message = message;\n      this.active = true;\n      this.css = this.getCssClass(type);\n      if (!!this.timer) {\n        clearTimeout(this.timer);\n        this.timer = undefined;\n      }\n      if (!waitUserAction) {\n        this.timer = setTimeout(() => {\n          this.timer = undefined;\n          this.active = false;\n          this.css = this.getCssClass(type);\n        }, this.timeout);\n      }\n    }, 1);\n  }\n  addAction(action, notificationType) {\n    action.visible = false;\n    action.innerCss = this.cssClasses.button;\n    const res = this.actionBar.addAction(action);\n    this.actionsVisibility[res.id] = notificationType;\n  }\n}\n__decorate([property({\n  defaultValue: false\n})], Notifier.prototype, \"active\", void 0);\n__decorate([property({\n  defaultValue: false\n})], Notifier.prototype, \"isDisplayed\", void 0);\n__decorate([property()], Notifier.prototype, \"message\", void 0);\n__decorate([property()], Notifier.prototype, \"css\", void 0);\nclass CoverCell {\n  calcRow(positionY) {\n    return positionY === \"top\" ? 1 : positionY === \"middle\" ? 2 : 3;\n  }\n  calcColumn(positionX) {\n    return positionX === \"left\" ? 1 : positionX === \"center\" ? 2 : 3;\n  }\n  calcAlignItems(positionX) {\n    return positionX === \"left\" ? \"flex-start\" : positionX === \"center\" ? \"center\" : \"flex-end\";\n  }\n  calcAlignText(positionX) {\n    return positionX === \"left\" ? \"start\" : positionX === \"center\" ? \"center\" : \"end\";\n  }\n  calcJustifyContent(positionY) {\n    return positionY === \"top\" ? \"flex-start\" : positionY === \"middle\" ? \"center\" : \"flex-end\";\n  }\n  calcGridRow() {\n    const rowNumber = this.calcRow(this.positionY);\n    if (!!this.cover.renderedHeight) return rowNumber;\n    const visibleRows = this.cover.getVisibleRows();\n    const visibleRowIndex = visibleRows.indexOf(rowNumber);\n    if (visibleRowIndex === -1) return 0;\n    const visibleRowsCount = visibleRows.length;\n    if (visibleRowsCount === 3) return rowNumber;\n    if (visibleRowsCount === 1) return 1;\n    return visibleRowIndex + 1;\n  }\n  constructor(cover, positionX, positionY) {\n    this.cover = cover;\n    this.positionX = positionX;\n    this.positionY = positionY;\n  }\n  get survey() {\n    return this.cover.survey;\n  }\n  get css() {\n    const result = new CssClassBuilder().append(CoverCell.CLASSNAME).append(`${CoverCell.CLASSNAME}--${this.positionX}`).append(`${CoverCell.CLASSNAME}--${this.positionY}`).append(CoverCell.CLASSNAME + \"--empty\", this.isEmpty).toString();\n    return result;\n  }\n  get style() {\n    const gridRow = this.calcGridRow();\n    const result = {};\n    result[\"gridRow\"] = gridRow;\n    result[\"gridColumn\"] = gridRow !== 0 ? this.calcColumn(this.positionX) : 0;\n    result[\"width\"] = !!this.width ? this.width + \"px\" : undefined;\n    if (gridRow === 0) {\n      result[\"display\"] = \"none\";\n    }\n    return result;\n  }\n  get contentStyle() {\n    const result = {};\n    result[\"textAlign\"] = this.calcAlignText(this.positionX);\n    result[\"alignItems\"] = this.calcAlignItems(this.positionX);\n    result[\"justifyContent\"] = this.calcJustifyContent(this.positionY);\n    result[\"maxWidth\"] = this.contentMaxWidth;\n    return result;\n  }\n  get showLogo() {\n    return this.survey.hasLogo && this.positionX === this.cover.logoPositionX && this.positionY === this.cover.logoPositionY;\n  }\n  get showTitle() {\n    return this.survey.hasTitle && this.positionX === this.cover.titlePositionX && this.positionY === this.cover.titlePositionY;\n  }\n  get showDescription() {\n    return this.survey.renderedHasDescription && this.positionX === this.cover.descriptionPositionX && this.positionY === this.cover.descriptionPositionY;\n  }\n  get isEmpty() {\n    return !this.showLogo && !this.showTitle && !this.showDescription;\n  }\n  get textAreaWidth() {\n    return this.cover.renderedTextAreaWidth;\n  }\n  get width() {\n    if (this.cover.width) {\n      return Math.ceil(this.cover.width / 3);\n    }\n    return undefined;\n  }\n  get contentMaxWidth() {\n    return this.cover.getContentMaxWidth(this);\n  }\n}\nCoverCell.CLASSNAME = \"sv-header__cell\";\nclass Cover extends Base {\n  calcBackgroundSize(backgroundImageFit) {\n    if (backgroundImageFit === \"fill\") {\n      return \"100% 100%\";\n    }\n    if (backgroundImageFit === \"tile\") {\n      return \"auto\";\n    }\n    return backgroundImageFit;\n  }\n  updateHeaderClasses() {\n    const backgroundColorNone = !this.backgroundColor || this.backgroundColor === \"transparent\";\n    const backgroundColorAccent = this.backgroundColor === \"var(--sjs-primary-backcolor)\";\n    const backgroundColorCustom = !backgroundColorNone && !backgroundColorAccent;\n    this.headerClasses = new CssClassBuilder().append(\"sv-header\").append(\"sv-header--height-auto\", !this.renderedHeight).append(\"sv-header__without-background\", backgroundColorNone && !this.backgroundImage).append(\"sv-header__background-color--none\", backgroundColorNone && !this.titleColor && !this.descriptionColor).append(\"sv-header__background-color--accent\", backgroundColorAccent && !this.titleColor && !this.descriptionColor).append(\"sv-header__background-color--custom\", backgroundColorCustom && !this.titleColor && !this.descriptionColor).append(\"sv-header__overlap\", this.overlapEnabled).toString();\n  }\n  updateContentClasses() {\n    const surveyWidthMode = !!this.survey && this.survey.calculateWidthMode();\n    this.maxWidth = this.inheritWidthFrom === \"survey\" && !!surveyWidthMode && surveyWidthMode === \"static\" && this.survey.width;\n    if (!!this.maxWidth) {\n      const maxWidthString = this.maxWidth.toString();\n      if (maxWidthString.indexOf(\"px\") === -1 && maxWidthString.indexOf(\"%\") === -1) {\n        this.maxWidth = parseFloat(maxWidthString) + \"px\";\n      }\n    }\n    this.contentClasses = new CssClassBuilder().append(\"sv-header__content\").append(\"sv-header__content--static\", this.inheritWidthFrom === \"survey\" && !!surveyWidthMode && surveyWidthMode === \"static\").append(\"sv-header__content--responsive\", this.inheritWidthFrom === \"container\" || !!surveyWidthMode && surveyWidthMode === \"responsive\").toString();\n  }\n  updateBackgroundImageClasses() {\n    this.backgroundImageClasses = new CssClassBuilder().append(\"sv-header__background-image\").append(\"sv-header__background-image--contain\", this.backgroundImageFit === \"contain\").append(\"sv-header__background-image--tile\", this.backgroundImageFit === \"tile\").toString();\n  }\n  fromTheme(theme) {\n    super.fromJSON(theme.header || {});\n    if (!!theme.cssVariables) {\n      this.backgroundColor = theme.cssVariables[\"--sjs-header-backcolor\"];\n      this.titleColor = theme.cssVariables[\"--sjs-font-headertitle-color\"];\n      this.descriptionColor = theme.cssVariables[\"--sjs-font-headerdescription-color\"];\n    }\n    this.init();\n  }\n  init() {\n    this.renderBackgroundImage = wrapUrlForBackgroundImage(this.backgroundImage);\n    this.updateHeaderClasses();\n    this.updateContentClasses();\n    this.updateBackgroundImageClasses();\n  }\n  constructor() {\n    super();\n    this.cells = [];\n    [\"top\", \"middle\", \"bottom\"].forEach(positionY => [\"left\", \"center\", \"right\"].forEach(positionX => this.cells.push(new CoverCell(this, positionX, positionY))));\n    this.init();\n  }\n  getType() {\n    return \"cover\";\n  }\n  get renderedHeight() {\n    if (this.survey && !this.survey.isMobile || !this.survey) {\n      return this.height ? this.height + \"px\" : undefined;\n    }\n    if (this.survey && this.survey.isMobile) {\n      return this.mobileHeight ? this.mobileHeight + \"px\" : undefined;\n    }\n    return undefined;\n  }\n  get renderedTextAreaWidth() {\n    return this.textAreaWidth ? this.textAreaWidth + \"px\" : undefined;\n  }\n  get isEmpty() {\n    return !this.survey.hasLogo && !this.survey.hasTitle && !this.survey.renderedHasDescription;\n  }\n  get survey() {\n    return this._survey;\n  }\n  set survey(newValue) {\n    if (this._survey === newValue) return;\n    this._survey = newValue;\n    if (!!newValue) {\n      this.updateContentClasses();\n      this._survey.onPropertyChanged.add((sender, options) => {\n        if (options.name == \"widthMode\" || options.name == \"width\") {\n          this.updateContentClasses();\n        }\n      });\n    }\n  }\n  get backgroundImageStyle() {\n    if (!this.backgroundImage) return null;\n    return {\n      opacity: this.backgroundImageOpacity,\n      backgroundImage: this.renderBackgroundImage,\n      backgroundSize: this.calcBackgroundSize(this.backgroundImageFit)\n    };\n  }\n  propertyValueChanged(name, oldValue, newValue, arrayChanges, target) {\n    super.propertyValueChanged(name, oldValue, newValue);\n    if (name === \"height\" || name === \"backgroundColor\" || name === \"backgroundImage\" || name === \"overlapEnabled\") {\n      this.updateHeaderClasses();\n    }\n    if (name === \"inheritWidthFrom\") {\n      this.updateContentClasses();\n    }\n    if (name === \"backgroundImageFit\") {\n      this.updateBackgroundImageClasses();\n    }\n  }\n  getVisibleRows() {\n    const result = [];\n    for (let rowIndex = 0; rowIndex < 3; rowIndex++) {\n      const startCellIndex = rowIndex * 3;\n      if (!this.cells[startCellIndex].isEmpty || !this.cells[startCellIndex + 1].isEmpty || !this.cells[startCellIndex + 2].isEmpty) {\n        result.push(rowIndex + 1);\n      }\n    }\n    return result.length !== 0 ? result : [1, 2, 3];\n  }\n  // public calculateActualHeight(logoHeight: number, titleHeight: number, descriptionHeight: number): number {\n  //   const positionsY = [\"top\", \"middle\", \"bottom\"];\n  //   const logoIndex = positionsY.indexOf(this.logoPositionY);\n  //   const titleIndex = positionsY.indexOf(this.titlePositionY);\n  //   const descriptionIndex = positionsY.indexOf(this.descriptionPositionY);\n  //   const positionsX = [\"left\", \"center\", \"right\"];\n  //   const logoIndexX = positionsX.indexOf(this.logoPositionX);\n  //   const titleIndexX = positionsX.indexOf(this.titlePositionX);\n  //   const descriptionIndexX = positionsX.indexOf(this.descriptionPositionX);\n  //   const heights = [\n  //     [0, 0, 0],\n  //     [0, 0, 0],\n  //     [0, 0, 0]\n  //   ];\n  //   heights[logoIndex][logoIndexX] = logoHeight;\n  //   heights[titleIndex][titleIndexX] += titleHeight;\n  //   heights[descriptionIndex][descriptionIndexX] += descriptionHeight;\n  //   return heights.reduce((total, rowArr) => total + Math.max(...rowArr), 0);\n  // }\n  getContentMaxWidth(cell) {\n    if (cell.isEmpty || cell.showLogo) {\n      return undefined;\n    }\n    const cellIndex = this.cells.indexOf(cell);\n    const rowIndex = Math.floor(cellIndex / 3);\n    const colIndex = cellIndex % 3;\n    if (colIndex == 1) {\n      if (!this.cells[rowIndex * 3].isEmpty || !this.cells[rowIndex * 3 + 2].isEmpty) {\n        return \"100%\";\n      }\n    } else if (colIndex == 0) {\n      let rightFreeCells = 0;\n      let index = colIndex + 1;\n      while (index < 3 && this.cells[rowIndex * 3 + index].isEmpty) {\n        if (this.cells[rowIndex * 3 + index].isEmpty) {\n          rightFreeCells++;\n        }\n        index++;\n      }\n      return 100 * (rightFreeCells + 1) + \"%\";\n    } else if (colIndex == 2) {\n      let leftFreeCells = 0;\n      let index = colIndex - 1;\n      while (index > 0 && this.cells[rowIndex * 3 + index].isEmpty) {\n        if (this.cells[rowIndex * 3 + index].isEmpty) {\n          leftFreeCells++;\n        }\n        index--;\n      }\n      return 100 * (leftFreeCells + 1) + \"%\";\n    }\n    return undefined;\n  }\n  processResponsiveness() {\n    if (this.survey && this.survey.rootElement) {\n      if (!this.survey.isMobile) {\n        const headerEl = this.survey.rootElement.querySelectorAll(\".sv-header__content\")[0];\n        if (!headerEl) return;\n        let elWidth = headerEl.getBoundingClientRect().width;\n        const headerComputedStyle = DomDocumentHelper.getComputedStyle(headerEl);\n        const paddingLeft = parseFloat(headerComputedStyle.paddingLeft) || 0;\n        const paddingRight = parseFloat(headerComputedStyle.paddingRight) || 0;\n        const columnGap = parseFloat(headerComputedStyle.columnGap) || 0;\n        this.width = elWidth - paddingLeft - paddingRight - 2 * columnGap;\n      }\n    }\n  }\n  get hasBackground() {\n    return !!this.backgroundImage || this.backgroundColor !== \"transparent\";\n  }\n}\n__decorate([property()], Cover.prototype, \"height\", void 0);\n__decorate([property()], Cover.prototype, \"mobileHeight\", void 0);\n__decorate([property()], Cover.prototype, \"inheritWidthFrom\", void 0);\n__decorate([property()], Cover.prototype, \"textAreaWidth\", void 0);\n__decorate([property()], Cover.prototype, \"textGlowEnabled\", void 0);\n__decorate([property()], Cover.prototype, \"overlapEnabled\", void 0);\n__decorate([property({\n  defaultValue: \"transparent\"\n})], Cover.prototype, \"backgroundColor\", void 0);\n__decorate([property()], Cover.prototype, \"titleColor\", void 0);\n__decorate([property()], Cover.prototype, \"descriptionColor\", void 0);\n__decorate([property({\n  onSet: (newVal, target) => {\n    target.renderBackgroundImage = wrapUrlForBackgroundImage(newVal);\n  }\n})], Cover.prototype, \"backgroundImage\", void 0);\n__decorate([property()], Cover.prototype, \"renderBackgroundImage\", void 0);\n__decorate([property()], Cover.prototype, \"backgroundImageFit\", void 0);\n__decorate([property()], Cover.prototype, \"backgroundImageOpacity\", void 0);\n__decorate([property()], Cover.prototype, \"logoPositionX\", void 0);\n__decorate([property()], Cover.prototype, \"logoPositionY\", void 0);\n__decorate([property()], Cover.prototype, \"titlePositionX\", void 0);\n__decorate([property()], Cover.prototype, \"titlePositionY\", void 0);\n__decorate([property()], Cover.prototype, \"descriptionPositionX\", void 0);\n__decorate([property()], Cover.prototype, \"descriptionPositionY\", void 0);\n__decorate([property()], Cover.prototype, \"logoStyle\", void 0);\n__decorate([property()], Cover.prototype, \"titleStyle\", void 0);\n__decorate([property()], Cover.prototype, \"descriptionStyle\", void 0);\n__decorate([property()], Cover.prototype, \"headerClasses\", void 0);\n__decorate([property()], Cover.prototype, \"contentClasses\", void 0);\n__decorate([property()], Cover.prototype, \"width\", void 0);\n__decorate([property()], Cover.prototype, \"maxWidth\", void 0);\n__decorate([property()], Cover.prototype, \"backgroundImageClasses\", void 0);\nSerializer.addClass(\"cover\", [{\n  name: \"height:number\",\n  minValue: 0,\n  default: 0\n}, {\n  name: \"mobileHeight:number\",\n  minValue: 0,\n  default: 0\n}, {\n  name: \"inheritWidthFrom\",\n  default: \"survey\"\n}, {\n  name: \"textAreaWidth:number\",\n  minValue: 0,\n  default: 0\n}, {\n  name: \"textGlowEnabled:boolean\"\n}, {\n  name: \"overlapEnabled:boolean\"\n}, {\n  name: \"backgroundImage:file\"\n}, {\n  name: \"backgroundImageOpacity:number\",\n  minValue: 0,\n  maxValue: 1,\n  default: 1\n}, {\n  name: \"backgroundImageFit\",\n  default: \"cover\",\n  choices: [\"cover\", \"fill\", \"contain\"]\n}, {\n  name: \"logoPositionX\",\n  default: \"left\"\n}, {\n  name: \"logoPositionY\",\n  default: \"top\"\n}, {\n  name: \"titlePositionX\",\n  default: \"left\"\n}, {\n  name: \"titlePositionY\",\n  default: \"bottom\"\n}, {\n  name: \"descriptionPositionX\",\n  default: \"left\"\n}, {\n  name: \"descriptionPositionY\",\n  default: \"bottom\"\n}], function () {\n  return new Cover();\n});\nclass SurveyTaskModel {\n  constructor(type) {\n    this.type = type;\n    this.timestamp = new Date();\n  }\n}\nclass SurveyTaskManagerModel extends Base {\n  constructor() {\n    super();\n    this.taskList = [];\n    this.onAllTasksCompleted = this.addEvent();\n  }\n  runTask(type, func) {\n    const task = new SurveyTaskModel(type);\n    this.taskList.push(task);\n    this.hasActiveTasks = true;\n    func(() => this.taskFinished(task));\n    return task;\n  }\n  waitAndExecute(action) {\n    if (!this.hasActiveTasks) {\n      action();\n      return;\n    }\n    this.onAllTasksCompleted.add(() => {\n      action();\n    });\n  }\n  taskFinished(task) {\n    const index = this.taskList.indexOf(task);\n    if (index > -1) {\n      this.taskList.splice(index, 1);\n    }\n    if (this.hasActiveTasks && this.taskList.length == 0) {\n      this.hasActiveTasks = false;\n      this.onAllTasksCompleted.fire(this, {});\n    }\n  }\n}\n__decorate([property({\n  defaultValue: false\n})], SurveyTaskManagerModel.prototype, \"hasActiveTasks\", void 0);\nclass PanelLayoutColumnModel extends Base {\n  constructor(width, questionTitleWidth) {\n    super();\n    this.effectiveWidth = width;\n    this.questionTitleWidth = questionTitleWidth;\n  }\n  getType() {\n    return \"panellayoutcolumn\";\n  }\n  isEmpty() {\n    return !this.width && !this.questionTitleWidth;\n  }\n}\n__decorate([property()], PanelLayoutColumnModel.prototype, \"width\", void 0);\n__decorate([property({\n  onSet: (newValue, target, prevVal) => {\n    if (newValue !== prevVal) {\n      target.width = newValue;\n    }\n  }\n})], PanelLayoutColumnModel.prototype, \"effectiveWidth\", void 0);\n__decorate([property()], PanelLayoutColumnModel.prototype, \"questionTitleWidth\", void 0);\nSerializer.addClass(\"panellayoutcolumn\", [{\n  name: \"effectiveWidth:number\",\n  isSerializable: false,\n  minValue: 0\n}, {\n  name: \"width:number\",\n  visible: false\n}, \"questionTitleWidth\"], value => new PanelLayoutColumnModel());\nclass QuestionRowModel extends Base {\n  static getRowId() {\n    return \"pr_\" + QuestionRowModel.rowCounter++;\n  }\n  get allowRendering() {\n    return !this.panel || !this.panel.survey || !this.panel.survey[\"isLazyRenderingSuspended\"];\n  }\n  startLazyRendering(rowContainerDiv, findScrollableContainer = findScrollableParent) {\n    if (!DomDocumentHelper.isAvailable()) return;\n    this._scrollableParent = findScrollableContainer(rowContainerDiv);\n    // if  this._scrollableParent is html the scroll event isn't fired, so we should use window\n    if (this._scrollableParent === DomDocumentHelper.getDocumentElement()) {\n      this._scrollableParent = DomWindowHelper.getWindow();\n    }\n    const hasScroll = this._scrollableParent.scrollHeight > this._scrollableParent.clientHeight;\n    this.isNeedRender = !hasScroll;\n    if (hasScroll) {\n      this._updateVisibility = () => {\n        if (!this.allowRendering) {\n          return;\n        }\n        var isRowContainerDivVisible = isElementVisible(rowContainerDiv, 50);\n        if (!this.isNeedRender && isRowContainerDivVisible) {\n          this.isNeedRender = true;\n          this.stopLazyRendering();\n        }\n      };\n      this.lazyRenderingTimeout = setTimeout(() => {\n        if (!!this._scrollableParent && !!this._scrollableParent.addEventListener) {\n          this._scrollableParent.addEventListener(\"scroll\", this._updateVisibility);\n        }\n        this.ensureVisibility();\n      }, 10);\n    }\n  }\n  ensureVisibility() {\n    if (!!this._updateVisibility) {\n      this._updateVisibility();\n    }\n  }\n  stopLazyRendering() {\n    if (!!this._scrollableParent && !!this._updateVisibility && !!this._scrollableParent.removeEventListener) {\n      this._scrollableParent.removeEventListener(\"scroll\", this._updateVisibility);\n    }\n    clearTimeout(this.lazyRenderingTimeout);\n    this._scrollableParent = undefined;\n    this._updateVisibility = undefined;\n  }\n  constructor(panel) {\n    super();\n    this.panel = panel;\n    this._scrollableParent = undefined;\n    this._updateVisibility = undefined;\n    this.visibleElementsAnimation = new AnimationGroup(this.getVisibleElementsAnimationOptions(), value => {\n      this.setWidth(value);\n      this.setPropertyValue(\"visibleElements\", value);\n    }, () => this.visibleElements);\n    this.idValue = QuestionRowModel.getRowId();\n    this.visible = panel.areInvisibleElementsShowing;\n    this.createNewArray(\"elements\");\n    this.createNewArray(\"visibleElements\");\n  }\n  setIsLazyRendering(val) {\n    this.isLazyRenderingValue = val;\n    this.isNeedRender = !val;\n  }\n  isLazyRendering() {\n    return this.isLazyRenderingValue === true;\n  }\n  get id() {\n    return this.idValue;\n  }\n  equalsCore(obj) {\n    return this == obj;\n  }\n  get elements() {\n    return this.getPropertyValue(\"elements\");\n  }\n  getIsAnimationAllowed() {\n    var _a;\n    return super.getIsAnimationAllowed() && this.visible && ((_a = this.panel) === null || _a === void 0 ? void 0 : _a.animationAllowed);\n  }\n  getVisibleElementsAnimationOptions() {\n    const beforeRunAnimation = el => {\n      prepareElementForVerticalAnimation(el);\n      setPropertiesOnElementForAnimation(el, {\n        width: getElementWidth(el) + \"px\"\n      });\n    };\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      isAnimationEnabled: () => this.animationAllowed,\n      allowSyncRemovalAddition: false,\n      getAnimatedElement: element => element.getWrapperElement(),\n      getLeaveOptions: element => {\n        const surveyElement = element;\n        const cssClasses = element.isPanel ? surveyElement.cssClasses.panel : surveyElement.cssClasses;\n        return {\n          cssClass: cssClasses.leave,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      },\n      getEnterOptions: element => {\n        const surveyElement = element;\n        const cssClasses = element.isPanel ? surveyElement.cssClasses.panel : surveyElement.cssClasses;\n        return {\n          cssClass: cssClasses.enter,\n          onBeforeRunAnimation: beforeRunAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      }\n    };\n  }\n  set visibleElements(val) {\n    if (!val.length) {\n      this.visible = false;\n      this.visibleElementsAnimation.cancel();\n      return;\n    } else {\n      this.visible = true;\n    }\n    this.visibleElementsAnimation.sync(val);\n  }\n  get visibleElements() {\n    return this.getPropertyValue(\"visibleElements\");\n  }\n  get visible() {\n    return this.getPropertyValue(\"visible\", true);\n  }\n  set visible(val) {\n    this.setPropertyValue(\"visible\", val);\n    this.onVisibleChangedCallback && this.onVisibleChangedCallback();\n  }\n  get isNeedRender() {\n    return this.getPropertyValue(\"isneedrender\", true);\n  }\n  set isNeedRender(val) {\n    this.setPropertyValue(\"isneedrender\", val);\n  }\n  updateVisible() {\n    var visElements = [];\n    for (var i = 0; i < this.elements.length; i++) {\n      if (this.elements[i].isVisible) {\n        visElements.push(this.elements[i]);\n      }\n      if (this.elements[i].isPanel || this.elements[i].getType() === \"paneldynamic\") {\n        this.setIsLazyRendering(false);\n        this.stopLazyRendering();\n      }\n    }\n    this.visibleElements = visElements;\n    return;\n  }\n  addElement(q) {\n    this.elements.push(q);\n    this.updateVisible();\n  }\n  get index() {\n    return this.panel.rows.indexOf(this);\n  }\n  setWidth(visibleElement) {\n    var visCount = visibleElement.length;\n    if (visCount == 0) return;\n    const isSingleInRow = visibleElement.length === 1;\n    var preSetWidthElements = [];\n    for (var i = 0; i < this.elements.length; i++) {\n      var el = this.elements[i];\n      if (el.isVisible) {\n        el.isSingleInRow = isSingleInRow;\n        var width = this.getElementWidth(el);\n        if (!!width) {\n          el.renderWidth = this.getRenderedWidthFromWidth(width);\n          preSetWidthElements.push(el);\n        }\n        el.rightIndent = 0;\n      } else {\n        el.renderWidth = \"\";\n      }\n    }\n    for (var i = 0; i < this.elements.length; i++) {\n      var el = this.elements[i];\n      if (!el.isVisible || preSetWidthElements.indexOf(el) > -1) continue;\n      if (preSetWidthElements.length == 0) {\n        el.renderWidth = `${Number.parseFloat((100 / visCount).toFixed(6))}%`;\n      } else {\n        el.renderWidth = this.getRenderedCalcWidth(el, preSetWidthElements, visCount);\n      }\n    }\n  }\n  getRenderedCalcWidth(el, preSetWidthElements, visCount) {\n    var expression = \"100%\";\n    for (var i = 0; i < preSetWidthElements.length; i++) {\n      expression += \" - \" + preSetWidthElements[i].renderWidth;\n    }\n    var calcWidthEl = visCount - preSetWidthElements.length;\n    if (calcWidthEl > 1) {\n      expression = \"(\" + expression + \")/\" + calcWidthEl.toString();\n    }\n    return \"calc(\" + expression + \")\";\n  }\n  getElementWidth(el) {\n    var width = el.width;\n    if (!width || typeof width !== \"string\") return \"\";\n    return width.trim();\n  }\n  getRenderedWidthFromWidth(width) {\n    return Helpers.isNumber(width) ? width + \"px\" : width;\n  }\n  dispose() {\n    super.dispose();\n    this.stopLazyRendering();\n  }\n  getRowCss() {\n    return new CssClassBuilder().append(this.panel.cssClasses.row).append(this.panel.cssClasses.rowCompact, this.panel[\"isCompact\"]).append(this.panel.cssClasses.pageRow, this.panel.isPage || this.panel.showPanelAsPage).append(this.panel.cssClasses.rowMultiple, this.visibleElements.length > 1).toString();\n  }\n  setRootElement(element) {\n    this.rootElement = element;\n  }\n  getRootElement() {\n    return this.rootElement;\n  }\n}\nQuestionRowModel.rowCounter = 100;\n/**\n * A base class for the [`PanelModel`](https://surveyjs.io/form-library/documentation/panelmodel) and [`PageModel`](https://surveyjs.io/form-library/documentation/pagemodel) classes.\n */\nclass PanelModelBase extends SurveyElement {\n  static getPanelId() {\n    return \"sp_\" + PanelModelBase.panelCounter++;\n  }\n  /**\n   * An array of columns used to arrange survey elements within this page or panel. Applies only if you set the `SurveyModel`'s [`gridLayoutEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#gridLayoutEnabled) property to `true`.\n   *\n   * Each object in this array configures a single layout column and has the following properties:\n   *\n   * - `width`: `number`\\\n   * Column width, in percentage.\n   *\n   * - `questionTitleWidth`: `string`\\\n   * The width of question titles, in pixels.\n   *\n   * The `gridLayoutColumns` array is generated automatically based on the maximum number of questions and panels in the same row. To arrange the survey elements in one or several rows, disable the [`startWithNewLine`](https://surveyjs.io/form-library/documentation/api-reference/question#startWithNewLine) property for those elements that should occupy the same row as the previous question or panel. You can also set the [`colSpan`](https://surveyjs.io/form-library/documentation/api-reference/question#colSpan) property for individual questions and panels to specify how many layout columns they span.\n   */\n  get gridLayoutColumns() {\n    let res = this.getPropertyValue(\"gridLayoutColumns\");\n    if (!this._columns) {\n      this.generateColumns([].concat(res));\n      res = this._columns;\n      this.gridLayoutColumns = res;\n    }\n    return res;\n  }\n  set gridLayoutColumns(val) {\n    this.setPropertyValue(\"gridLayoutColumns\", val);\n  }\n  onAddRow(row) {\n    this.onRowVisibleChanged();\n    row.onVisibleChangedCallback = () => this.onRowVisibleChanged();\n  }\n  getRowsAnimationOptions() {\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      isAnimationEnabled: () => this.animationAllowed,\n      getAnimatedElement: row => row.getRootElement(),\n      getLeaveOptions: (row, info) => {\n        return {\n          cssClass: this.cssClasses.rowLeave,\n          onBeforeRunAnimation: prepareElementForVerticalAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      },\n      getEnterOptions: (_, animationInfo) => {\n        const cssClasses = this.cssClasses;\n        return {\n          cssClass: new CssClassBuilder().append(cssClasses.rowEnter).append(cssClasses.rowDelayedEnter, animationInfo.isDeletingRunning).toString(),\n          onBeforeRunAnimation: prepareElementForVerticalAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      }\n    };\n  }\n  get visibleRows() {\n    return this.getPropertyValue(\"visibleRows\");\n  }\n  set visibleRows(val) {\n    this.rowsAnimation.sync(val);\n  }\n  onRemoveRow(row) {\n    row.visibleElementsAnimation.cancel();\n    this.visibleRows = this.rows.filter(row => row.visible);\n    row.onVisibleChangedCallback = undefined;\n  }\n  onRowVisibleChanged() {\n    this.visibleRows = this.rows.filter(row => row.visible);\n  }\n  constructor(name = \"\") {\n    super(name);\n    this.isQuestionsReady = false;\n    this.questionsValue = new Array();\n    this._columns = undefined;\n    this._columnsReady = false;\n    this.rowsAnimation = new AnimationGroup(this.getRowsAnimationOptions(), value => {\n      this.setPropertyValue(\"visibleRows\", value);\n    }, () => this.visibleRows);\n    this.isRandomizing = false;\n    this.onColumnPropertyValueChangedCallback = (name, oldValue, newValue, sender, arrayChanges) => {\n      if (this._columnsReady) {\n        this.updateColumnWidth(this.gridLayoutColumns);\n        this.updateRootStyle();\n      }\n    };\n    this.locCountRowUpdates = 0;\n    this.createNewArray(\"rows\", (el, index) => {\n      this.onAddRow(el);\n    }, el => {\n      this.onRemoveRow(el);\n    });\n    this.createNewArray(\"visibleRows\");\n    this.createNewArray(\"gridLayoutColumns\", col => {\n      col.onPropertyValueChangedCallback = this.onColumnPropertyValueChangedCallback;\n    });\n    this.elementsValue = this.createNewArray(\"elements\", this.onAddElement.bind(this), this.onRemoveElement.bind(this));\n    this.setPropertyValueDirectly(\"id\", PanelModelBase.getPanelId());\n    this.addExpressionProperty(\"visibleIf\", (obj, res) => {\n      this.visible = res === true;\n    }, obj => {\n      return !this.areInvisibleElementsShowing;\n    });\n    this.addExpressionProperty(\"enableIf\", (obj, res) => {\n      this.readOnly = res === false;\n    });\n    this.addExpressionProperty(\"requiredIf\", (obj, res) => {\n      this.isRequired = res === true;\n    });\n    this.createLocalizableString(\"requiredErrorText\", this);\n    this.createLocalizableString(\"navigationTitle\", this, true).onGetTextCallback = text => {\n      return text || this.title || this.name;\n    };\n    this.registerPropertyChangedHandlers([\"questionTitleLocation\"], () => {\n      this.onVisibleChanged.bind(this);\n      this.updateElementCss(true);\n    });\n    this.registerPropertyChangedHandlers([\"questionStartIndex\", \"showQuestionNumbers\"], () => {\n      this.updateVisibleIndexes();\n    });\n    this.registerPropertyChangedHandlers([\"title\"], () => {\n      this.resetHasTextInTitle();\n    });\n  }\n  getType() {\n    return \"panelbase\";\n  }\n  setSurveyImpl(value, isLight) {\n    //if(this.surveyImpl === value) return; TODO refactor\n    this.blockAnimations();\n    super.setSurveyImpl(value, isLight);\n    if (this.isDesignMode) this.onVisibleChanged();\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].setSurveyImpl(value, isLight);\n    }\n    this.releaseAnimations();\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.markQuestionListDirty();\n    this.onRowsChanged();\n  }\n  get hasTextInTitle() {\n    return this.getPropertyValue(\"hasTextInTitle\", undefined, () => !!this.title);\n  }\n  resetHasTextInTitle() {\n    this.resetPropertyValue(\"hasTextInTitle\");\n  }\n  get hasTitle() {\n    return this.canShowTitle(this.survey) && (this.hasTextInTitle || this.locTitle.textOrHtml.length > 0) || this.isDesignMode && !this.isPanel && this.showTitle && settings.designMode.showEmptyTitles;\n  }\n  delete(doDispose = true) {\n    this.deletePanel();\n    this.removeFromParent();\n    if (doDispose) {\n      this.dispose();\n    }\n  }\n  deletePanel() {\n    const els = this.elements;\n    for (let i = 0; i < els.length; i++) {\n      const el = els[i];\n      if (el.isPanel) {\n        el.deletePanel();\n      }\n      this.onRemoveElementNotifySurvey(el);\n    }\n  }\n  removeFromParent() {}\n  canShowTitle(survey) {\n    return true;\n  }\n  getDefaultTitleTagName() {\n    return settings.titleTags.panel;\n  }\n  get _showDescription() {\n    if (!this.hasTitle && this.isDesignMode) return false;\n    return this.survey && this.survey.showPageTitles && this.hasDescription || this.showDescription && this.isDesignMode && settings.designMode.showEmptyDescriptions;\n  }\n  localeChanged() {\n    super.localeChanged();\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].localeChanged();\n    }\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].locStrsChanged();\n    }\n  }\n  getMarkdownHtml(text, name, item) {\n    if (name === \"navigationTitle\" && this.locNavigationTitle.isEmpty) {\n      return this.locTitle.renderedHtml || this.name;\n    }\n    return super.getMarkdownHtml(text, name, item);\n  }\n  get locNavigationTitle() {\n    return this.getLocalizableString(\"navigationTitle\");\n  }\n  get renderedNavigationTitle() {\n    return this.locNavigationTitle.renderedHtml;\n  }\n  /**\n   * Returns a character or text string that indicates a required panel/page.\n   * @see SurveyModel.requiredMark\n   * @see isRequired\n   */\n  get requiredMark() {\n    return !!this.survey && this.isRequired ? this.survey.requiredMark : \"\";\n  }\n  /**\n   * @deprecated Use the [`requiredMark`](https://surveyjs.io/form-library/documentation/api-reference/panel-model#requiredMark) property instead.\n   */\n  get requiredText() {\n    return this.requiredMark;\n  }\n  get titlePattern() {\n    return !!this.survey ? this.survey.questionTitlePattern : \"numTitleRequire\";\n  }\n  get isRequireTextOnStart() {\n    return this.isRequired && this.titlePattern == \"requireNumTitle\";\n  }\n  get isRequireTextBeforeTitle() {\n    return this.isRequired && this.titlePattern == \"numRequireTitle\";\n  }\n  get isRequireTextAfterTitle() {\n    return this.isRequired && this.titlePattern == \"numTitleRequire\";\n  }\n  /**\n   * Specifies a custom error message for a required panel/page.\n   * @see isRequired\n   * @see requiredIf\n   */\n  get requiredErrorText() {\n    return this.getLocalizableStringText(\"requiredErrorText\");\n  }\n  set requiredErrorText(val) {\n    this.setLocalizableStringText(\"requiredErrorText\", val);\n  }\n  get locRequiredErrorText() {\n    return this.getLocalizableString(\"requiredErrorText\");\n  }\n  /**\n   * Specifies the sort order of questions in the panel/page.\n   *\n   * Possible values:\n   *\n   * - `\"initial\"` - Preserves the original order of questions.\n   * - `\"random\"` - Displays questions in random order.\n   * - `\"default\"` (default) - Inherits the setting from the `SurveyModel`'s [`questionOrder`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionOrder) property.\n   * @see areQuestionsRandomized\n   */\n  get questionOrder() {\n    return this.getPropertyValue(\"questionOrder\");\n  }\n  set questionOrder(val) {\n    this.setPropertyValue(\"questionOrder\", val);\n  }\n  /**\n   * @deprecated Use the [`questionOrder`](https://surveyjs.io/form-library/documentation/api-reference/panel-model#questionOrder) property instead.\n   */\n  get questionsOrder() {\n    return this.questionOrder;\n  }\n  set questionsOrder(val) {\n    this.questionOrder = val;\n  }\n  addNoFromChild(no) {\n    return no;\n  }\n  canRandomize(isRandom) {\n    return isRandom && this.questionOrder !== \"initial\" || this.questionOrder === \"random\";\n  }\n  randomizeElements(isRandom) {\n    if (!this.canRandomize(isRandom) || this.isRandomizing) return false;\n    this.isRandomizing = true;\n    var oldElements = [];\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      oldElements.push(elements[i]);\n    }\n    const newElements = Helpers.randomizeArray(oldElements);\n    this.setArrayPropertyDirectly(\"elements\", newElements, false);\n    this.updateRows();\n    this.updateVisibleIndexes();\n    this.isRandomizing = false;\n    return true;\n  }\n  /**\n   * Returns `true` if elements in this panel/page are arranged in random order.\n   * @see questionOrder\n   */\n  get areQuestionsRandomized() {\n    var order = this.questionOrder == \"default\" && this.survey ? this.survey.questionOrder : this.questionOrder;\n    return order == \"random\";\n  }\n  /**\n   * Returns a survey element (panel or page) that contains this panel and allows you to move the panel to a different survey element.\n   *\n   * For `PageModel` objects, the `parent` property is `null`, except in the following cases:\n   *\n   * - `SurveyModel`'s [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) is set to `\"singlePage\"`.\n   * - The page is included in a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   *\n   * In those cases, the survey creates an internal `PageModel` object to show all questions on one page, and the `parent` property contains this object.\n   */\n  get parent() {\n    return this.getPropertyValue(\"parent\", null);\n  }\n  set parent(val) {\n    this.setPropertyValue(\"parent\", val);\n  }\n  get depth() {\n    if (this.parent == null) return 0;\n    return this.parent.depth + 1;\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this panel/page becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visible\n   * @see isVisible\n   */\n  get visibleIf() {\n    return this.getPropertyValue(\"visibleIf\", \"\");\n  }\n  set visibleIf(val) {\n    this.setPropertyValue(\"visibleIf\", val);\n  }\n  calcCssClasses(css) {\n    var classes = {\n      panel: {},\n      error: {},\n      row: \"\",\n      rowEnter: \"\",\n      rowLeave: \"\",\n      rowDelayedEnter: \"\",\n      rowMultiple: \"\",\n      pageRow: \"\",\n      rowCompact: \"\"\n    };\n    this.copyCssClasses(classes.panel, css.panel);\n    this.copyCssClasses(classes.error, css.error);\n    if (!!css.pageRow) {\n      classes.pageRow = css.pageRow;\n    }\n    if (!!css.rowCompact) {\n      classes.rowCompact = css.rowCompact;\n    }\n    if (!!css.row) {\n      classes.row = css.row;\n    }\n    if (!!css.rowEnter) {\n      classes.rowEnter = css.rowEnter;\n    }\n    if (!!css.rowLeave) {\n      classes.rowLeave = css.rowLeave;\n    }\n    if (!!css.rowDelayedEnter) {\n      classes.rowDelayedEnter = css.rowDelayedEnter;\n    }\n    if (!!css.rowMultiple) {\n      classes.rowMultiple = css.rowMultiple;\n    }\n    if (this.survey) {\n      this.survey.updatePanelCssClasses(this, classes);\n    }\n    return classes;\n  }\n  /**\n   * An auto-generated unique element identifier.\n   */\n  get id() {\n    return this.getPropertyValue(\"id\");\n  }\n  set id(val) {\n    this.setPropertyValue(\"id\", val);\n  }\n  get isPanel() {\n    return false;\n  }\n  getPanel() {\n    return this;\n  }\n  getLayoutType() {\n    return \"row\";\n  }\n  isLayoutTypeSupported(layoutType) {\n    return layoutType !== \"flow\";\n  }\n  /**\n   * An array of all questions within this panel/page. Includes questions within nested panels.\n   * @see elements\n   */\n  get questions() {\n    if (!this.isQuestionsReady) {\n      this.questionsValue = [];\n      for (var i = 0; i < this.elements.length; i++) {\n        var el = this.elements[i];\n        if (el.isPanel) {\n          var qs = el.questions;\n          for (var j = 0; j < qs.length; j++) {\n            this.questionsValue.push(qs[j]);\n          }\n        } else {\n          this.questionsValue.push(el);\n        }\n      }\n      this.isQuestionsReady = true;\n    }\n    return this.questionsValue;\n  }\n  get visibleQuestions() {\n    const res = new Array();\n    this.questions.forEach(q => {\n      if (q.isVisible) res.push(q);\n    });\n    return res;\n  }\n  getQuestions(includeNested) {\n    const res = this.questions;\n    if (!includeNested) return res;\n    const res2 = [];\n    res.forEach(q => {\n      res2.push(q);\n      q.getNestedQuestions().forEach(nQ => res2.push(nQ));\n    });\n    return res2;\n  }\n  getValidName(name) {\n    if (!!name) return name.trim();\n    return name;\n  }\n  /**\n   * Returns a question with a specified `name`. This method does not find questions within nested panels.\n   * @param name A question name.\n   */\n  getQuestionByName(name) {\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      if (questions[i].name == name) return questions[i];\n    }\n    return null;\n  }\n  /**\n   * Returns a survey element with a specified `name`. This method can find survey elements within nested panels.\n   * @param name An element name.\n   */\n  getElementByName(name) {\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (el.name == name) return el;\n      var pnl = el.getPanel();\n      if (!!pnl) {\n        var res = pnl.getElementByName(name);\n        if (!!res) return res;\n      }\n    }\n    return null;\n  }\n  getQuestionByValueName(valueName) {\n    const res = this.getQuestionsByValueName(valueName);\n    return res.length > 0 ? res[0] : null;\n  }\n  getQuestionsByValueName(valueName) {\n    const res = [];\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      if (questions[i].getValueName() == valueName) res.push(questions[i]);\n    }\n    return res;\n  }\n  /**\n   * Returns a JSON object with question values nested in the panel/page.\n   * @see getDisplayValue\n   */\n  getValue() {\n    var data = {};\n    this.collectValues(data, 0);\n    return Helpers.getUnbindValue(data);\n  }\n  hasValueAnyQuestion(visibleOnly) {\n    const questions = visibleOnly ? this.visibleQuestions : this.questions;\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isEmpty()) return true;\n    }\n    return false;\n  }\n  collectValues(data, level) {\n    let elements = this.elements;\n    if (level === 0) {\n      elements = this.questions;\n    }\n    for (var i = 0; i < elements.length; i++) {\n      const el = elements[i];\n      if (el.isPanel || el.isPage) {\n        const panelData = {};\n        if (el.collectValues(panelData, level - 1)) {\n          data[el.name] = panelData;\n        }\n      } else {\n        const q = el;\n        if (!q.isEmpty()) {\n          var valueName = q.getValueName();\n          data[valueName] = q.value;\n          if (!!this.data) {\n            var comment = this.data.getComment(valueName);\n            if (!!comment) {\n              data[valueName + Base.commentSuffix] = comment;\n            }\n          }\n        }\n      }\n    }\n    return true;\n  }\n  /**\n   * Returns a JSON object with display texts that correspond to question values nested in the panel/page.\n   * @param keysAsText Pass `true` if not only values in the object should be display texts, but also keys. Default value: `false`.\n   * @see getValue\n   */\n  getDisplayValue(keysAsText) {\n    var data = {};\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      if (q.isEmpty()) continue;\n      var valueName = keysAsText ? q.title : q.getValueName();\n      data[valueName] = q.getDisplayValue(keysAsText);\n    }\n    return data;\n  }\n  /**\n   * Returns a JSON object with comments left to questions within this panel/page. Question names are used as keys.\n   */\n  getComments() {\n    var comments = {};\n    if (!this.data) return comments;\n    var questions = this.questions;\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      var comment = this.data.getComment(q.getValueName());\n      if (!!comment) {\n        comments[q.getValueName()] = comment;\n      }\n    }\n    return comments;\n  }\n  /**\n   * Removes values that cannot be assigned to nested questions, for example, choices unlisted in the `choices` array.\n   *\n   * Call this method after you assign new question values in code to ensure that they are acceptable.\n   *\n   * > This method does not remove values for invisible questions and values that fail validation. Call the `validate()` method to validate newly assigned values.\n   *\n   * @see validate\n   */\n  clearIncorrectValues() {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].clearIncorrectValues();\n    }\n  }\n  /**\n   * Empties the `errors` array for this panel/page and all its child elements (panels and questions).\n   * @see errors\n   */\n  clearErrors() {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].clearErrors();\n    }\n    this.errors = [];\n  }\n  markQuestionListDirty() {\n    this.isQuestionsReady = false;\n    if (this.parent) this.parent.markQuestionListDirty();\n  }\n  /**\n   * An array of all survey elements (questions or panels) within this panel/page. Does not include questions within nested panels.\n   * @see questions\n   */\n  get elements() {\n    Base.collectDependency(this, \"elements\");\n    return this.elementsValue;\n  }\n  getElementsInDesign(includeHidden = false) {\n    return this.elements;\n  }\n  /**\n   * Checks whether a given element belongs to this panel/page or nested panels.\n   * @param element A survey element to check.\n   */\n  containsElement(element) {\n    for (var i = 0; i < this.elements.length; i++) {\n      var el = this.elements[i];\n      if (el == element) return true;\n      var pnl = el.getPanel();\n      if (!!pnl) {\n        if (pnl.containsElement(element)) return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * Makes the panel/page require an answer at least in one nested question. If a respondent leaves the panel/page without any answers, the survey displays a validation error.\n   * @see requiredIf\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  get isRequired() {\n    return this.getPropertyValue(\"isRequired\");\n  }\n  set isRequired(val) {\n    this.setPropertyValue(\"isRequired\", val);\n  }\n  /**\n   * A Boolean expression. If it evaluates to `true`, this panel/page becomes required (at least one question in the panel/page should have an answer).\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see isRequired\n   */\n  get requiredIf() {\n    return this.getPropertyValue(\"requiredIf\", \"\");\n  }\n  set requiredIf(val) {\n    this.setPropertyValue(\"requiredIf\", val);\n  }\n  searchText(text, founded) {\n    super.searchText(text, founded);\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].searchText(text, founded);\n    }\n  }\n  hasErrors(fireCallback = true, focusOnFirstError = false, rec = null) {\n    return !this.validate(fireCallback, focusOnFirstError, rec);\n  }\n  /**\n   * Validates questions within this panel or page and returns `false` if the validation fails.\n   * @param fireCallback *(Optional)* Pass `false` if you do not want to show validation errors in the UI.\n   * @param focusFirstError *(Optional)* Pass `true` if you want to focus the first question with a validation error.\n   * @see [Data Validation](https://surveyjs.io/form-library/documentation/data-validation)\n   */\n  validate(fireCallback = true, focusFirstError = false, rec = null) {\n    rec = rec || {\n      fireCallback: fireCallback,\n      focusOnFirstError: focusFirstError,\n      firstErrorQuestion: null,\n      result: false\n    };\n    if (rec.result !== true) rec.result = false;\n    this.hasErrorsCore(rec);\n    return !rec.result;\n  }\n  validateContainerOnly() {\n    this.hasErrorsInPanels({\n      fireCallback: true\n    });\n    if (!!this.parent) {\n      this.parent.validateContainerOnly();\n    }\n  }\n  onQuestionValueChanged(el) {\n    const index = this.questions.indexOf(el);\n    if (index < 0) return;\n    const dif = 5;\n    const max = this.questions.length - 1;\n    const start = index - dif > 0 ? index - dif : 0;\n    const end = index + dif < max ? index + dif : max;\n    for (let i = start; i <= end; i++) {\n      if (i === index) continue;\n      const q = this.questions[i];\n      if (q.errors.length > 0 && q.validate(false)) {\n        q.validate(true);\n      }\n    }\n  }\n  hasErrorsInPanels(rec) {\n    var errors = [];\n    this.hasRequiredError(rec, errors);\n    if (this.survey) {\n      this.survey.validatePanel(this, errors, rec.fireCallback);\n      if (errors.length > 0) {\n        rec.result = true;\n      }\n    }\n    if (!!rec.fireCallback) {\n      this.errors = errors;\n    }\n  }\n  //ISurveyErrorOwner\n  getErrorCustomText(text, error) {\n    if (!!this.survey) return this.survey.getSurveyErrorCustomText(this, text, error);\n    return text;\n  }\n  hasRequiredError(rec, errors) {\n    if (!this.isRequired) return;\n    var visQuestions = [];\n    this.addQuestionsToList(visQuestions, true);\n    if (visQuestions.length == 0) return;\n    for (var i = 0; i < visQuestions.length; i++) {\n      if (!visQuestions[i].isEmpty()) return;\n    }\n    rec.result = true;\n    errors.push(new OneAnswerRequiredError(this.requiredErrorText, this));\n    if (rec.focusOnFirstError && !rec.firstErrorQuestion) {\n      rec.firstErrorQuestion = visQuestions[0];\n    }\n  }\n  hasErrorsCore(rec) {\n    var _a;\n    let singleQ = (_a = this.survey) === null || _a === void 0 ? void 0 : _a.currentSingleQuestion;\n    if (singleQ && this.questions.indexOf(singleQ) < 0) {\n      singleQ = undefined;\n    }\n    const elements = singleQ ? [singleQ] : this.elements;\n    let element = null;\n    let firstErroredEl = null;\n    for (var i = 0; i < elements.length; i++) {\n      element = elements[i];\n      if (!element.isVisible) continue;\n      if (element.isPanel) {\n        element.hasErrorsCore(rec);\n      } else {\n        var question = element;\n        if (!question.validate(rec.fireCallback, rec)) {\n          if (!firstErroredEl) {\n            firstErroredEl = question;\n          }\n          if (!rec.firstErrorQuestion) {\n            rec.firstErrorQuestion = question;\n          }\n          rec.result = true;\n        }\n      }\n    }\n    if (!singleQ) {\n      this.hasErrorsInPanels(rec);\n      this.updateContainsErrors();\n    }\n    if (!firstErroredEl && this.errors.length > 0) {\n      firstErroredEl = this.getFirstQuestionToFocus(false, true);\n      if (!rec.firstErrorQuestion) {\n        rec.firstErrorQuestion = firstErroredEl;\n      }\n    }\n    if (rec.fireCallback && firstErroredEl) {\n      const selQ = singleQ ? rec.firstErrorQuestion || firstErroredEl : firstErroredEl;\n      if (rec.focusOnFirstError) {\n        selQ.focus(true);\n      } else {\n        selQ.expandAllParents();\n      }\n    }\n  }\n  getContainsErrors() {\n    var res = super.getContainsErrors();\n    if (res) return res;\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      if (elements[i].containsErrors) return true;\n    }\n    return false;\n  }\n  updateElementVisibility() {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i].updateElementVisibility();\n    }\n    super.updateElementVisibility();\n  }\n  getFirstQuestionToFocus(withError = false, ignoreCollapseState = false) {\n    if (!withError && !ignoreCollapseState && this.isCollapsed) return null;\n    var elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (!el.isVisible || !ignoreCollapseState && el.isCollapsed) continue;\n      if (el.isPanel) {\n        var res = el.getFirstQuestionToFocus(withError, ignoreCollapseState);\n        if (!!res) return res;\n      } else {\n        const q = el.getFirstQuestionToFocus(withError);\n        if (!!q) return q;\n      }\n    }\n    return null;\n  }\n  getFirstVisibleQuestion() {\n    const qs = this.questions;\n    for (let i = 0; i < qs.length; i++) {\n      if (qs[i].isVisible) return qs[i];\n    }\n    return null;\n  }\n  getFirstVisibleElement() {\n    const els = this.elements;\n    for (let i = 0; i < els.length; i++) {\n      if (els[i].isVisible) return els[i];\n    }\n    return null;\n  }\n  /**\n   * Focuses the first question in this panel/page.\n   * @see focusFirstErrorQuestion\n   */\n  focusFirstQuestion() {\n    const q = this.getFirstQuestionToFocus();\n    if (!!q) {\n      q.focus();\n    }\n  }\n  /**\n   * Focuses the first question with a validation error in this panel/page.\n   * @see validate\n   * @see focusFirstQuestion\n   */\n  focusFirstErrorQuestion() {\n    var q = this.getFirstQuestionToFocus(true);\n    if (!!q) {\n      q.focus();\n    }\n  }\n  addQuestionsToList(list, visibleOnly = false, includingDesignTime = false) {\n    this.addElementsToList(list, visibleOnly, includingDesignTime, false);\n  }\n  addPanelsIntoList(list, visibleOnly = false, includingDesignTime = false) {\n    this.addElementsToList(list, visibleOnly, includingDesignTime, true);\n  }\n  addElementsToList(list, visibleOnly, includingDesignTime, isPanel) {\n    if (visibleOnly && !this.visible) return;\n    this.addElementsToListCore(list, this.elements, visibleOnly, includingDesignTime, isPanel);\n  }\n  addElementsToListCore(list, elements, visibleOnly, includingDesignTime, isPanel) {\n    for (var i = 0; i < elements.length; i++) {\n      var el = elements[i];\n      if (visibleOnly && !el.visible) continue;\n      if (isPanel && el.isPanel || !isPanel && !el.isPanel) {\n        list.push(el);\n      }\n      if (el.isPanel) {\n        el.addElementsToListCore(list, el.elements, visibleOnly, includingDesignTime, isPanel);\n      } else {\n        if (includingDesignTime) {\n          this.addElementsToListCore(list, el.getElementsInDesign(false), visibleOnly, includingDesignTime, isPanel);\n        }\n      }\n    }\n  }\n  calcMaxRowColSpan() {\n    let maxRowColSpan = 0;\n    this.rows.forEach(row => {\n      let curRowSpan = 0;\n      let userDefinedRow = false;\n      row.elements.forEach(el => {\n        if (!!el.width) {\n          userDefinedRow = true;\n        }\n        curRowSpan += el.colSpan || 1;\n      });\n      if (!userDefinedRow && curRowSpan > maxRowColSpan) maxRowColSpan = curRowSpan;\n    });\n    return maxRowColSpan;\n  }\n  updateColumnWidth(columns) {\n    let remainingSpace = 0,\n      remainingColCount = 0;\n    columns.forEach(col => {\n      if (!col.width) {\n        remainingColCount++;\n      } else {\n        remainingSpace += col.width;\n        col.setPropertyValue(\"effectiveWidth\", col.width);\n      }\n    });\n    if (!!remainingColCount) {\n      const oneColumnWidth = floorTo2Decimals((100 - remainingSpace) / remainingColCount);\n      for (let index = 0; index < columns.length; index++) {\n        if (!columns[index].width) {\n          columns[index].setPropertyValue(\"effectiveWidth\", oneColumnWidth);\n        }\n      }\n    }\n  }\n  updateColumns() {\n    this._columns = undefined;\n    this.updateRootStyle();\n  }\n  updateRootStyle() {\n    var _a;\n    super.updateRootStyle();\n    (_a = this.elements) === null || _a === void 0 ? void 0 : _a.forEach(el => el.updateRootStyle());\n  }\n  updateCustomWidgets() {\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].updateCustomWidgets();\n    }\n  }\n  /**\n   * Sets a title location relative to the input field for questions that belong to this panel/page.\n   *\n   * Use this property to override the [`questionTitleLocation`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionTitleLocation) property specified for the survey or parent page. You can also set the [`titleLocation`](https://surveyjs.io/form-library/documentation/api-reference/question#titleLocation) property for individual questions.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionTitleLocation` property specified for the survey or parent page.\n   * - `\"top\"` - Displays the title above the input field.\n   * - `\"bottom\"` - Displays the title below the input field.\n   * - `\"left\"` - Displays the title to the left of the input field.\n   * - `\"hidden\"` - Hides the question title.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/vertically-align-input-fields/ (linkStyle))\n   *\n   * > Certain question types (Matrix, Multiple Text) do not support the `\"left\"` value. For them, the `\"top\"` value is used.\n   */\n  get questionTitleLocation() {\n    return this.getPropertyValue(\"questionTitleLocation\");\n  }\n  set questionTitleLocation(value) {\n    this.setPropertyValue(\"questionTitleLocation\", value.toLowerCase());\n  }\n  getQuestionTitleLocation() {\n    if (this.onGetQuestionTitleLocation) return this.onGetQuestionTitleLocation();\n    if (this.questionTitleLocation != \"default\") return this.questionTitleLocation;\n    if (this.parent) return this.parent.getQuestionTitleLocation();\n    return this.survey ? this.survey.questionTitleLocation : \"top\";\n  }\n  availableQuestionTitleWidth() {\n    return this.getQuestionTitleLocation() === \"left\" || this.hasElementWithTitleLocationLeft();\n  }\n  hasElementWithTitleLocationLeft() {\n    const result = this.elements.some(el => {\n      if (el instanceof PanelModelBase) {\n        return el.hasElementWithTitleLocationLeft();\n      } else if (el instanceof Question) {\n        return el.getTitleLocation() === \"left\";\n      }\n    });\n    return result;\n  }\n  getQuestionTitleWidth() {\n    const width = this.onGetQuestionTitleWidth ? this.onGetQuestionTitleWidth() : this.questionTitleWidth;\n    return width || this.parent && this.parent.getQuestionTitleWidth();\n  }\n  get columns() {\n    if (!this._columns) {\n      this.generateColumns(this.gridLayoutColumns);\n      this.gridLayoutColumns = this._columns;\n    }\n    return this._columns || [];\n  }\n  generateColumns(gridColumns) {\n    var _a;\n    const isEnabled = (_a = this.survey) === null || _a === void 0 ? void 0 : _a.gridLayoutEnabled;\n    let columns = [].concat(gridColumns);\n    if (isEnabled) {\n      let maxRowColSpan = this.calcMaxRowColSpan();\n      if (maxRowColSpan <= gridColumns.length) {\n        columns = gridColumns.slice(0, maxRowColSpan);\n      } else {\n        for (let index = gridColumns.length; index < maxRowColSpan; index++) {\n          const newCol = new PanelLayoutColumnModel();\n          columns.push(newCol);\n        }\n      }\n    }\n    this._columns = columns;\n    try {\n      this._columnsReady = false;\n      this.updateColumnWidth(columns);\n    } finally {\n      this._columnsReady = true;\n    }\n  }\n  createGridLayoutColumns() {\n    this.generateColumns([]);\n    return this._columns;\n  }\n  updateGridColumns() {\n    this.updateColumns();\n    this.elements.forEach(el => {\n      el.isPanel && el.updateGridColumns();\n    });\n  }\n  getColumsForElement(el) {\n    const row = this.findRowByElement(el);\n    if (!row || !this.survey || !this.survey.gridLayoutEnabled) return [];\n    let lastExpandableElementIndex = row.elements.length - 1;\n    while (lastExpandableElementIndex >= 0) {\n      if (!row.elements[lastExpandableElementIndex].getPropertyValueWithoutDefault(\"colSpan\")) {\n        break;\n      }\n      lastExpandableElementIndex--;\n    }\n    const elementIndex = row.elements.indexOf(el);\n    let startIndex = 0;\n    for (let index = 0; index < elementIndex; index++) {\n      startIndex += row.elements[index].colSpan;\n    }\n    let currentColSpan = el.getPropertyValueWithoutDefault(\"colSpan\");\n    if (!currentColSpan && elementIndex === lastExpandableElementIndex) {\n      let usedSpans = 0;\n      for (let index = 0; index < row.elements.length; index++) {\n        if (index !== lastExpandableElementIndex) {\n          usedSpans += row.elements[index].colSpan;\n        }\n      }\n      currentColSpan = this.columns.length - usedSpans;\n    }\n    const result = this.columns.slice(startIndex, startIndex + (currentColSpan || 1));\n    el.setPropertyValueDirectly(\"effectiveColSpan\", result.length);\n    return result;\n  }\n  getStartIndex() {\n    if (!!this.parent) return this.parent.getQuestionStartIndex();\n    if (!!this.survey) return this.survey.questionStartIndex;\n    return \"\";\n  }\n  getQuestionStartIndex() {\n    return this.getStartIndex();\n  }\n  getChildrenLayoutType() {\n    return \"row\";\n  }\n  getProgressInfo() {\n    return SurveyElement.getProgressInfoByElements(this.elements, this.isRequired);\n  }\n  get root() {\n    var res = this;\n    while (res.parent) res = res.parent;\n    return res;\n  }\n  childVisibilityChanged() {\n    var newIsVisibleValue = this.getIsPageVisible(null);\n    var oldIsVisibleValue = this.getPropertyValue(\"isVisible\", true);\n    if (newIsVisibleValue !== oldIsVisibleValue) {\n      this.onVisibleChanged();\n    }\n  }\n  canRenderFirstRows() {\n    return this.isPage;\n  }\n  isLazyRenderInRow(rowIndex) {\n    if (!this.survey || !this.survey.isLazyRendering) return false;\n    return rowIndex >= this.survey.lazyRenderFirstBatchSize || !this.canRenderFirstRows();\n  }\n  createRowAndSetLazy(index) {\n    const row = this.createRow();\n    row.setIsLazyRendering(this.isLazyRenderInRow(index));\n    return row;\n  }\n  createRow() {\n    return new QuestionRowModel(this);\n  }\n  onSurveyLoad() {\n    this.blockAnimations();\n    super.onSurveyLoad();\n    for (var i = 0; i < this.elements.length; i++) {\n      this.elements[i].onSurveyLoad();\n    }\n    this.onElementVisibilityChanged(this);\n    this.releaseAnimations();\n  }\n  onFirstRenderingCore() {\n    super.onFirstRenderingCore();\n    this.onRowsChanged();\n    this.elements.forEach(el => el.onFirstRendering());\n  }\n  updateRows() {\n    if (this.isLoadingFromJson) return;\n    this.getElementsForRows().forEach(el => {\n      if (el.isPanel) {\n        el.updateRows();\n      }\n    });\n    this.onRowsChanged();\n  }\n  get rows() {\n    return this.getPropertyValue(\"rows\");\n  }\n  ensureRowsVisibility() {\n    this.rows.forEach(row => {\n      row.ensureVisibility();\n    });\n  }\n  onRowsChanged() {\n    if (this.isLoadingFromJson) return;\n    this.blockAnimations();\n    this.setArrayPropertyDirectly(\"rows\", this.buildRows());\n    this.updateColumns();\n    this.releaseAnimations();\n  }\n  blockRowsUpdates() {\n    this.locCountRowUpdates++;\n  }\n  releaseRowsUpdates() {\n    this.locCountRowUpdates--;\n  }\n  updateRowsBeforeElementRemoved(element) {\n    const elementRow = this.findRowByElement(element);\n    const elementRowIndex = this.rows.indexOf(elementRow);\n    const elementIndexInRow = elementRow.elements.indexOf(element);\n    elementRow.elements.splice(elementIndexInRow, 1);\n    if (elementRow.elements.length == 0) {\n      this.rows.splice(elementRowIndex, 1);\n    } else if (!elementRow.elements[0].startWithNewLine && this.rows[elementRowIndex - 1]) {\n      elementRow.elements.forEach(el => this.rows[elementRowIndex - 1].addElement(el));\n      this.rows.splice(elementRowIndex, 1);\n    } else {\n      elementRow.updateVisible();\n    }\n  }\n  updateRowsOnElementAdded(element) {\n    if (!this.wasRendered && this.rows.length === 0 && this.elements.length > 1) return;\n    const index = this.elements.indexOf(element);\n    const targetElement = this.elements[index + 1];\n    const createRowAtIndex = index => {\n      const row = this.createRowAndSetLazy(index);\n      if (this.isDesignMode) {\n        row.setIsLazyRendering(false);\n      }\n      this.rows.splice(index, 0, row);\n      return row;\n    };\n    const updateRow = (row, start, deleteCount, ...elements) => {\n      const removedElements = row.elements.splice(start, deleteCount, ...elements);\n      row.updateVisible();\n      return removedElements;\n    };\n    if (!targetElement) {\n      if (index == 0 || element.startWithNewLine) {\n        updateRow(createRowAtIndex(this.rows.length), 0, 0, element);\n      } else {\n        this.rows[this.rows.length - 1].addElement(element);\n      }\n      return;\n    }\n    const targetRow = this.findRowByElement(targetElement);\n    if (!targetRow) return;\n    const targetRowIndex = this.rows.indexOf(targetRow);\n    const targetElementIndexInRow = targetRow.elements.indexOf(targetElement);\n    if (targetElementIndexInRow == 0) {\n      if (!targetElement.startWithNewLine) {\n        updateRow(targetRow, 0, 0, element);\n      } else if (element.startWithNewLine || targetRowIndex < 1) {\n        createRowAtIndex(targetRowIndex).addElement(element);\n      } else {\n        this.rows[targetRowIndex - 1].addElement(element);\n      }\n    } else {\n      if (element.startWithNewLine) {\n        updateRow(createRowAtIndex(targetRowIndex + 1), 0, 0, ...[element].concat(updateRow(targetRow, targetElementIndexInRow, targetRow.elements.length)));\n      } else {\n        updateRow(targetRow, targetElementIndexInRow, 0, element);\n      }\n    }\n  }\n  canFireAddRemoveNotifications(element) {\n    return !!this.survey && element.prevSurvey !== this.survey;\n  }\n  onAddElement(element, index) {\n    const survey = this.survey;\n    const fireNotification = this.canFireAddRemoveNotifications(element);\n    if (!!this.surveyImpl) {\n      element.setSurveyImpl(this.surveyImpl);\n    }\n    element.parent = this;\n    this.markQuestionListDirty();\n    if (this.canBuildRows()) {\n      this.updateRowsOnElementAdded(element);\n    }\n    if (fireNotification) {\n      if (element.isPanel) {\n        survey.panelAdded(element, index, this, this.root);\n      } else {\n        survey.questionAdded(element, index, this, this.root);\n      }\n    }\n    if (!!this.addElementCallback) this.addElementCallback(element);\n    element.registerPropertyChangedHandlers([\"visible\", \"isVisible\"], () => {\n      this.onElementVisibilityChanged(element);\n    }, this.id);\n    element.registerPropertyChangedHandlers([\"startWithNewLine\"], () => {\n      this.onElementStartWithNewLineChanged(element);\n    }, this.id);\n    this.onElementVisibilityChanged(this);\n  }\n  onRemoveElement(element) {\n    element.parent = null;\n    this.unregisterElementPropertiesChanged(element);\n    this.markQuestionListDirty();\n    this.updateRowsOnElementRemoved(element);\n    if (this.isRandomizing) return;\n    this.onRemoveElementNotifySurvey(element);\n    if (!!this.removeElementCallback) this.removeElementCallback(element);\n    this.onElementVisibilityChanged(this);\n  }\n  unregisterElementPropertiesChanged(element) {\n    element.unregisterPropertyChangedHandlers([\"visible\", \"isVisible\", \"startWithNewLine\"], this.id);\n  }\n  onRemoveElementNotifySurvey(element) {\n    if (!this.canFireAddRemoveNotifications(element)) return;\n    if (!element.isPanel) {\n      this.survey.questionRemoved(element);\n    } else {\n      this.survey.panelRemoved(element);\n    }\n  }\n  onElementVisibilityChanged(element) {\n    if (this.isLoadingFromJson || this.isRandomizing) return;\n    this.updateRowsVisibility(element);\n    this.childVisibilityChanged();\n    if (!!this.parent) {\n      this.parent.onElementVisibilityChanged(this);\n    }\n  }\n  onElementStartWithNewLineChanged(element) {\n    if (this.locCountRowUpdates > 0) return;\n    this.blockAnimations();\n    this.updateRowsBeforeElementRemoved(element);\n    this.updateRowsOnElementAdded(element);\n    this.releaseAnimations();\n  }\n  updateRowsVisibility(element) {\n    var rows = this.rows;\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[i];\n      if (row.elements.indexOf(element) > -1) {\n        row.updateVisible();\n        if (row.visible && !row.isNeedRender) {\n          row.isNeedRender = true;\n        }\n        break;\n      }\n    }\n  }\n  canBuildRows() {\n    return !this.isLoadingFromJson && this.getChildrenLayoutType() == \"row\";\n  }\n  buildRows() {\n    if (!this.canBuildRows()) return [];\n    const res = new Array();\n    const els = this.getElementsForRows();\n    for (let i = 0; i < els.length; i++) {\n      const el = els[i];\n      const isNewRow = i == 0 || el.startWithNewLine;\n      const row = isNewRow ? this.createRowAndSetLazy(res.length) : res[res.length - 1];\n      if (isNewRow) res.push(row);\n      row.addElement(el);\n    }\n    res.forEach(row => row.updateVisible());\n    return res;\n  }\n  getElementsForRows() {\n    return this.elements;\n  }\n  getDragDropInfo() {\n    const page = this.getPage(this.parent);\n    return !!page ? page.getDragDropInfo() : undefined;\n  }\n  updateRowsOnElementRemoved(element) {\n    if (!this.canBuildRows()) return;\n    this.updateRowsRemoveElementFromRow(element, this.findRowByElement(element));\n    this.updateColumns();\n  }\n  updateRowsRemoveElementFromRow(element, row) {\n    if (!row || !row.panel) return;\n    var elIndex = row.elements.indexOf(element);\n    if (elIndex < 0) return;\n    row.elements.splice(elIndex, 1);\n    if (row.elements.length > 0) {\n      this.blockRowsUpdates();\n      row.elements[0].startWithNewLine = true;\n      this.releaseRowsUpdates();\n      row.updateVisible();\n    } else {\n      if (row.index >= 0) {\n        row.panel.rows.splice(row.index, 1);\n      }\n    }\n  }\n  getAllRows() {\n    const allRows = [];\n    this.rows.forEach(row => {\n      const nestedRows = [];\n      row.elements.forEach(element => {\n        if (element.isPanel) {\n          nestedRows.push(...element.getAllRows());\n        } else if (element.getType() == \"paneldynamic\") {\n          if (this.isDesignMode) {\n            nestedRows.push(...element.template.getAllRows());\n          } else {\n            element.panels.forEach(panel => nestedRows.push(...panel.getAllRows()));\n          }\n        }\n      });\n      allRows.push(row);\n      allRows.push(...nestedRows);\n    });\n    return allRows;\n  }\n  findRowAndIndexByElement(el, rows) {\n    if (!el) {\n      return {\n        row: undefined,\n        index: this.rows.length - 1\n      };\n    }\n    rows = rows || this.rows;\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].elements.indexOf(el) > -1) return {\n        row: rows[i],\n        index: i\n      };\n    }\n    return {\n      row: null,\n      index: -1\n    };\n  }\n  forceRenderRow(row) {\n    if (!!row && !row.isNeedRender) {\n      row.isNeedRender = true;\n      row.stopLazyRendering();\n    }\n  }\n  forceRenderElement(el, elementsRendered = () => {}, gap = 0) {\n    const allRows = this.getAllRows();\n    const {\n      row,\n      index\n    } = this.findRowAndIndexByElement(el, allRows);\n    if (index >= 0 && index < allRows.length) {\n      const rowsToRender = [];\n      rowsToRender.push(row);\n      for (let i = index - 1; i >= index - gap && i >= 0; i--) {\n        rowsToRender.push(allRows[i]);\n      }\n      this.forceRenderRows(rowsToRender, elementsRendered);\n    }\n  }\n  forceRenderRows(rows, elementsRendered = () => {}) {\n    const rowRenderedHandler = (rowsCount => () => {\n      rowsCount--;\n      if (rowsCount <= 0) {\n        elementsRendered();\n      }\n    })(rows.length);\n    rows.forEach(row => new RenderingCompletedAwaiter(row.visibleElements, rowRenderedHandler));\n    rows.forEach(row => this.forceRenderRow(row));\n  }\n  findRowByElement(el) {\n    return this.findRowAndIndexByElement(el).row;\n  }\n  elementWidthChanged(el) {\n    if (this.isLoadingFromJson) return;\n    var row = this.findRowByElement(el);\n    if (!!row) {\n      row.updateVisible();\n    }\n  }\n  get ariaTitleId() {\n    return this.id + \"_ariaTitle\";\n  }\n  get ariaLabelledBy() {\n    return this.hasTitle ? this.ariaTitleId : null;\n  }\n  get ariaLabel() {\n    return this.hasTitle ? null : this.title || this.name || null;\n  }\n  get ariaRole() {\n    return \"group\";\n  }\n  get processedTitle() {\n    return this.getRenderedTitle(this.locTitle.textOrHtml);\n  }\n  getRenderedTitle(str) {\n    return this.textProcessor != null ? this.textProcessor.processText(str, true) : str;\n  }\n  /**\n   * Gets or sets panel/page visibility.\n   *\n   * If you want to display or hide a survey element based on a condition, specify the `visibleIf` property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see isVisible\n   */\n  get visible() {\n    return this.getPropertyValue(\"visible\", true);\n  }\n  set visible(value) {\n    if (value === this.visible) return;\n    this.setPropertyValue(\"visible\", value);\n    this.setPropertyValue(\"isVisible\", this.isVisible);\n    if (!this.isLoadingFromJson) this.onVisibleChanged();\n  }\n  onHidingContent() {\n    this.questions.forEach(q => q.onHidingContent());\n  }\n  onVisibleChanged() {\n    if (this.isRandomizing) return;\n    this.setPropertyValue(\"isVisible\", this.isVisible);\n    if (!this.isLoadingFromJson) {\n      const questions = this.questions;\n      const isVisible = this.isVisible;\n      for (var i = 0; i < questions.length; i++) {\n        const q = questions[i];\n        if (!isVisible) {\n          q.clearValueIfInvisible(\"onHiddenContainer\");\n          q.onHidingContent();\n        } else {\n          q.updateValueWithDefaults();\n        }\n      }\n    }\n  }\n  notifyStateChanged(prevState) {\n    super.notifyStateChanged(prevState);\n    if (this.isCollapsed) {\n      this.questions.forEach(q => q.onHidingContent());\n    }\n  }\n  /**\n   * Returns `true` if the panel/page is visible or the survey is currently in design mode.\n   *\n   * If you want to display or hide a question based on a condition, specify the `visibleIf` property. Refer to the following help topic for information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see visible\n   */\n  get isVisible() {\n    return this.areInvisibleElementsShowing || this.getIsPageVisible(null);\n  }\n  getIsContentVisible(exceptionQuestion) {\n    if (this.areInvisibleElementsShowing) return true;\n    for (var i = 0; i < this.elements.length; i++) {\n      if (this.elements[i] == exceptionQuestion) continue;\n      if (this.elements[i].isVisible) return true;\n    }\n    return false;\n  }\n  getIsPageVisible(exceptionQuestion) {\n    const isContentVisible = this.getIsContentVisible(exceptionQuestion);\n    return this.visible && isContentVisible;\n  }\n  setVisibleIndex(index) {\n    if (!this.isVisible || index < 0) {\n      this.resetVisibleIndexes();\n      return 0;\n    }\n    this.lastVisibleIndex = index;\n    var startIndex = index;\n    index += this.beforeSetVisibleIndex(index);\n    var panelStartIndex = this.getPanelStartIndex(index);\n    var panelIndex = panelStartIndex;\n    const elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      panelIndex += elements[i].setVisibleIndex(panelIndex);\n    }\n    if (this.isContinueNumbering()) {\n      index += panelIndex - panelStartIndex;\n    }\n    return index - startIndex;\n  }\n  updateVisibleIndexes() {\n    if (this.lastVisibleIndex === undefined) return;\n    this.resetVisibleIndexes();\n    this.setVisibleIndex(this.lastVisibleIndex);\n  }\n  resetVisibleIndexes() {\n    const elements = this.elements;\n    for (var i = 0; i < elements.length; i++) {\n      elements[i].setVisibleIndex(-1);\n    }\n  }\n  beforeSetVisibleIndex(index) {\n    return 0;\n  }\n  getPanelStartIndex(index) {\n    return index;\n  }\n  isContinueNumbering() {\n    return true;\n  }\n  get isReadOnly() {\n    var isParentReadOnly = !!this.parent && this.parent.isReadOnly;\n    var isSurveyReadOnly = !!this.survey && this.survey.isDisplayMode;\n    return this.readOnly || isParentReadOnly || isSurveyReadOnly;\n  }\n  onReadOnlyChanged() {\n    for (var i = 0; i < this.elements.length; i++) {\n      var el = this.elements[i];\n      el.setPropertyValue(\"isReadOnly\", el.isReadOnly);\n    }\n    super.onReadOnlyChanged();\n  }\n  updateElementCss(reNew) {\n    super.updateElementCss(reNew);\n    for (let i = 0; i < this.elements.length; i++) {\n      const el = this.elements[i];\n      el.updateElementCss(reNew);\n    }\n  }\n  /**\n   * A Boolean expression. If it evaluates to `false`, this panel/page becomes read-only.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see readOnly\n   * @see isReadOnly\n   */\n  get enableIf() {\n    return this.getPropertyValue(\"enableIf\", \"\");\n  }\n  set enableIf(val) {\n    this.setPropertyValue(\"enableIf\", val);\n  }\n  /**\n   * Adds a survey element (question or panel) to this panel/page. Returns `true` if the element was added successfully; `false` otherwise.\n   * @param element A survey element to add.\n   * @param index A desired index of this element in the `elements` array.\n   * @see addNewQuestion\n   * @see addNewPanel\n   */\n  addElement(element, index = -1) {\n    if (!this.canAddElement(element)) return false;\n    if (index < 0 || index >= this.elements.length) {\n      this.elements.push(element);\n    } else {\n      this.elements.splice(index, 0, element);\n    }\n    if (this.wasRendered) {\n      element.onFirstRendering();\n    }\n    this.updateColumns();\n    return true;\n  }\n  insertElement(element, dest, location = \"bottom\") {\n    if (!dest) {\n      this.addElement(element);\n      return;\n    }\n    this.blockRowsUpdates();\n    let index = this.elements.indexOf(dest);\n    const destRow = this.findRowByElement(dest);\n    if (location == \"left\" || location == \"right\") {\n      if (location == \"right\") {\n        element.startWithNewLine = false;\n        index++;\n      } else {\n        if (destRow.elements.indexOf(dest) == 0) {\n          dest.startWithNewLine = false;\n          element.startWithNewLine = true;\n        } else {\n          element.startWithNewLine = false;\n        }\n      }\n    } else {\n      element.startWithNewLine = true;\n      if (location == \"top\") {\n        index = this.elements.indexOf(destRow.elements[0]);\n      } else {\n        index = this.elements.indexOf(destRow.elements[destRow.elements.length - 1]) + 1;\n      }\n    }\n    this.releaseRowsUpdates();\n    this.addElement(element, index);\n  }\n  insertElementAfter(element, after) {\n    const index = this.elements.indexOf(after);\n    if (index >= 0) this.addElement(element, index + 1);\n  }\n  insertElementBefore(element, before) {\n    const index = this.elements.indexOf(before);\n    if (index >= 0) this.addElement(element, index);\n  }\n  canAddElement(element) {\n    return !!element && element.isLayoutTypeSupported(this.getChildrenLayoutType());\n  }\n  addQuestion(question, index = -1) {\n    return this.addElement(question, index);\n  }\n  addPanel(panel, index = -1) {\n    return this.addElement(panel, index);\n  }\n  /**\n   * Creates a new question of a given type and adds it to the `elements` array at a specified index.\n   *\n   * This method returns `null` if the question cannot be created or added to this panel/page; otherwise, the method returns the created question.\n   *\n   * @param questionType A [question type](https://surveyjs.io/form-library/documentation/question#getType).\n   * @param name A question name.\n   * @param index A desired index of the new question in the `elements` array.\n   * @see elements\n   * @see addElement\n   */\n  addNewQuestion(questionType, name = null, index = -1) {\n    var question = QuestionFactory.Instance.createQuestion(questionType, name);\n    if (!this.addQuestion(question, index)) return null;\n    return question;\n  }\n  /**\n   * Creates a new panel and adds it to the end of the `elements` array.\n   *\n   * This method returns `null` if the panel cannot be created or added to this panel/page; otherwise, the method returns the created panel.\n   * @param name A panel name.\n   * @see elementsup\n   * @see addElement\n   */\n  addNewPanel(name = null) {\n    var panel = this.createNewPanel(name);\n    if (!this.addPanel(panel)) return null;\n    return panel;\n  }\n  indexOf(element) {\n    return this.elements.indexOf(element);\n  }\n  createNewPanel(name) {\n    var res = Serializer.createClass(\"panel\");\n    res.name = name;\n    return res;\n  }\n  /**\n   * Deletes a survey element (question or panel) from this panel/page. Returns `true` if the element was deleted successfully; `false` otherwise.\n   * @param element A survey element to delete.\n   * @see elements\n   */\n  removeElement(element) {\n    var index = this.elements.indexOf(element);\n    if (index < 0) {\n      for (var i = 0; i < this.elements.length; i++) {\n        if (this.elements[i].removeElement(element)) return true;\n      }\n      return false;\n    }\n    this.elements.splice(index, 1);\n    this.updateColumns();\n    return true;\n  }\n  removeQuestion(question) {\n    this.removeElement(question);\n  }\n  runCondition(values, properties) {\n    if (this.isDesignMode || this.isLoadingFromJson) return;\n    var elements = this.elements.slice();\n    for (var i = 0; i < elements.length; i++) {\n      elements[i].runCondition(values, properties);\n    }\n    this.runConditionCore(values, properties);\n  }\n  onAnyValueChanged(name, questionName) {\n    var els = this.elements;\n    for (var i = 0; i < els.length; i++) {\n      els[i].onAnyValueChanged(name, questionName);\n    }\n  }\n  checkBindings(valueName, value) {\n    var els = this.elements;\n    for (var i = 0; i < els.length; i++) {\n      els[i].checkBindings(valueName, value);\n    }\n  }\n  needResponsiveWidth() {\n    let result = false;\n    this.elements.forEach(e => {\n      if (e.needResponsiveWidth()) result = true;\n    });\n    this.rows.forEach(r => {\n      if (r.elements.length > 1) result = true;\n    });\n    return result;\n  }\n  get hasDescriptionUnderTitle() {\n    return this.hasDescription;\n  }\n  get cssHeader() {\n    return this.cssClasses.panel.header;\n  }\n  get cssDescription() {\n    return this.cssClasses.panel.description;\n  }\n  /**\n   * Specifies the error message position for questions that belong to this page/panel.\n   *\n   * Use this property to override the [`questionErrorLocation`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionErrorLocation) property specified for the survey. You can also set the [`errorLocation`](https://surveyjs.io/form-library/documentation/question#errorLocation) property for individual questions.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the `questionErrorLocation` property specified for the survey.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-properties-on-multiple-questions-using-panel/ (linkStyle))\n   */\n  get questionErrorLocation() {\n    return this.getPropertyValue(\"questionErrorLocation\");\n  }\n  set questionErrorLocation(val) {\n    this.setPropertyValue(\"questionErrorLocation\", val);\n  }\n  getQuestionErrorLocation() {\n    if (this.questionErrorLocation !== \"default\") return this.questionErrorLocation;\n    if (this.parent) return this.parent.getQuestionErrorLocation();\n    return this.survey ? this.survey.questionErrorLocation : \"top\";\n  }\n  //ITitleOwner\n  getTitleOwner() {\n    return this;\n  }\n  get no() {\n    return \"\";\n  }\n  get cssTitleNumber() {\n    return this.cssClasses.panel.number;\n  }\n  get cssRequiredMark() {\n    return this.cssClasses.panel.requiredMark;\n  }\n  get cssError() {\n    return this.getCssError(this.cssClasses);\n  }\n  getCssError(cssClasses) {\n    return new CssClassBuilder().append(cssClasses.error.root).toString();\n  }\n  getSerializableColumnsValue() {\n    let tailIndex = -1;\n    for (let index = this.gridLayoutColumns.length - 1; index >= 0; index--) {\n      if (!this.gridLayoutColumns[index].isEmpty()) {\n        tailIndex = index;\n        break;\n      }\n    }\n    return this.gridLayoutColumns.slice(0, tailIndex + 1);\n  }\n  afterRender(el) {\n    this.afterRenderCore(el);\n  }\n  dispose() {\n    super.dispose();\n    if (this.rows) {\n      for (let i = 0; i < this.rows.length; i++) {\n        this.rows[i].dispose();\n      }\n      this.rows.splice(0, this.rows.length);\n    }\n    this.disposeElements();\n    this.elements.splice(0, this.elements.length);\n  }\n  disposeElements() {\n    for (let i = 0; i < this.elements.length; i++) {\n      this.elements[i].dispose();\n    }\n  }\n}\nPanelModelBase.panelCounter = 100;\n__decorate([property({\n  defaultValue: true\n})], PanelModelBase.prototype, \"showTitle\", void 0);\n__decorate([property({\n  defaultValue: true\n})], PanelModelBase.prototype, \"showDescription\", void 0);\n__decorate([property()], PanelModelBase.prototype, \"questionTitleWidth\", void 0);\n/**\n * A class that describes the Panel container element.\n *\n * A panel can contain questions and other panels. Refer to the following help topic for an illustration: [Survey Structure](https://surveyjs.io/form-library/documentation/design-survey-create-a-simple-survey#survey-structure).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-panel/ (linkStyle))\n */\nclass PanelModel extends PanelModelBase {\n  constructor(name = \"\") {\n    super(name);\n    this.forcusFirstQuestionOnExpand = true;\n    this.createNewArray(\"footerActions\");\n    this.registerPropertyChangedHandlers([\"width\"], () => {\n      if (!!this.parent) {\n        this.parent.elementWidthChanged(this);\n      }\n    });\n    this.registerPropertyChangedHandlers([\"indent\", \"innerIndent\", \"rightIndent\"], () => {\n      this.resetIndents();\n    });\n    this.registerPropertyChangedHandlers([\"colSpan\"], () => {\n      var _a;\n      (_a = this.parent) === null || _a === void 0 ? void 0 : _a.updateColumns();\n    });\n  }\n  getType() {\n    return \"panel\";\n  }\n  get contentId() {\n    return this.id + \"_content\";\n  }\n  getSurvey(live = false) {\n    if (live && this.isPanel) {\n      return !!this.parent ? this.parent.getSurvey(live) : null;\n    }\n    return super.getSurvey(live);\n  }\n  get isPanel() {\n    return true;\n  }\n  /**\n   * Returns a page to which the panel belongs and allows you to move this panel to a different page.\n   * @see PanelModelBase.parent\n   */\n  get page() {\n    return this.getPage(this.parent);\n  }\n  set page(val) {\n    this.setPage(this.parent, val);\n  }\n  removeFromParent() {\n    if (!!this.parent) {\n      this.removeSelfFromList(this.parent.elements);\n    }\n  }\n  moveTo(container, insertBefore = null) {\n    return this.moveToBase(this.parent, container, insertBefore);\n  }\n  /**\n   * Returns the visible index of the panel in the survey. Commonly it is -1 and it doesn't show.\n   * You have to set showNumber to true to show index/numbering for the Panel\n   * @see showNumber\n   */\n  get visibleIndex() {\n    return this.getPropertyValue(\"visibleIndex\", -1);\n  }\n  /**\n   * Specifies whether to show the panel number in the title.\n   *\n   * Default value: `false`\n   * @see SurveyModel.showQuestionNumbers\n   * @see SurveyModel.questionTitlePattern\n   */\n  get showNumber() {\n    return this.getPropertyValue(\"showNumber\");\n  }\n  set showNumber(val) {\n    this.setPropertyValue(\"showNumber\", val);\n    this.notifySurveyOnVisibilityChanged();\n  }\n  addNoFromChild(no) {\n    if (this.isQuestionIndexRecursive) return this.calcNo() + no;\n    return super.addNoFromChild(no);\n  }\n  /**\n   * Specifies whether to display survey element numbers within this page/panel and how to calculate them.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` - Inherits the setting from the parent panel, page, or survey.\n   * - `\"recursive\"` - Applies recursive numbering to elements nested within this page/panel (for example, 1 -> 1.1 -> 1.1.1, etc.).\n   * - `\"onpanel\"` - Starts numbering within this page/panel from scratch.\n   * - `false` or `\"off\"` - Hides question numbers within this page/panel.\n   * @see [SurveyModel.showQuestionNumbers](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showQuestionNumbers)\n   * @see showNumber\n   */\n  get showQuestionNumbers() {\n    return this.getPropertyValue(\"showQuestionNumbers\");\n  }\n  set showQuestionNumbers(value) {\n    this.setPropertyValue(\"showQuestionNumbers\", value);\n    this.notifySurveyOnVisibilityChanged();\n  }\n  /**\n   * Specifies a number or letter used to start numbering of elements inside the panel.\n   *\n   * You can include desired prefixes and postfixes alongside the number or letter:\n   *\n   * ```js\n   * \"questionStartIndex\": \"a.\", // a., b., c., ...\n   * \"questionStartIndex\": \"#3\", // #3, #4, #5, ...\n   * \"questionStartIndex\": \"(B).\" // (B)., (C)., (D)., ...\n   * ```\n   * Default value: `\"1.\"` (inherited from `SurveyModel`'s `questionStartIndex` property)\n   * @see SurveyModel.questionStartIndex\n   * @see showQuestionNumbers\n   */\n  get questionStartIndex() {\n    return this.getPropertyValue(\"questionStartIndex\", \"\");\n  }\n  set questionStartIndex(val) {\n    this.setPropertyValue(\"questionStartIndex\", val);\n  }\n  getQuestionStartIndex() {\n    if (!!this.questionStartIndex) return this.questionStartIndex;\n    return super.getQuestionStartIndex();\n  }\n  /**\n   * A question number or letter (depends on the `questionStartIndex` property).\n   *\n   * When the question number, title, or the entire question is invisible, this property returns an empty string.\n   * @see questionStartIndex\n   * @see showNumber\n   * @see visibleIf\n   */\n  get no() {\n    return this.getPropertyValue(\"no\", undefined, () => this.calcNo());\n  }\n  calcNo() {\n    let no = Helpers.getNumberByIndex(this.visibleIndex, this.getStartIndex());\n    if (!!this.parent) {\n      no = this.parent.addNoFromChild(no);\n    }\n    if (this.survey) {\n      no = this.survey.getUpdatedPanelNo(this, no);\n    }\n    return no || \"\";\n  }\n  notifyStateChanged(prevState) {\n    if (!this.isLoadingFromJson) {\n      this.locTitle.strChanged();\n    }\n    super.notifyStateChanged(prevState);\n  }\n  createLocTitleProperty() {\n    const locTitleValue = super.createLocTitleProperty();\n    locTitleValue.onGetTextCallback = text => {\n      if (!text && this.state !== \"default\") {\n        text = this.name;\n      }\n      return text;\n    };\n    return locTitleValue;\n  }\n  beforeSetVisibleIndex(index) {\n    if (this.isPage) return super.beforeSetVisibleIndex(index);\n    let visibleIndex = -1;\n    if ((this.showNumber || this.isQuestionIndexRecursive) && (this.isDesignMode || !this.locTitle.isEmpty || this.hasParentInQuestionIndex())) {\n      visibleIndex = index;\n    }\n    this.setPropertyValue(\"visibleIndex\", visibleIndex);\n    this.resetPropertyValue(\"no\");\n    return visibleIndex < 0 ? 0 : 1;\n  }\n  getPanelStartIndex(index) {\n    if (this.showQuestionNumbers === \"off\") return -1;\n    if (this.isQuestionIndexOnPanel) return 0;\n    return index;\n  }\n  get isQuestionIndexOnPanel() {\n    return this.showQuestionNumbers === \"onpanel\" || this.isQuestionIndexRecursive;\n  }\n  get isQuestionIndexRecursive() {\n    if (this.isPage) return false;\n    const val = this.showQuestionNumbers;\n    if (val !== \"default\") return val === \"recursive\";\n    return !!this.survey && this.survey.showQuestionNumbers === \"recursive\";\n  }\n  hasParentInQuestionIndex() {\n    if (!this.isQuestionIndexOnPanel) return false;\n    const str = this.questionStartIndex;\n    const index = str.indexOf(\".\");\n    return index > -1 && index < str.length - 1;\n  }\n  isContinueNumbering() {\n    return this.showQuestionNumbers !== \"off\" && !this.isQuestionIndexOnPanel;\n  }\n  notifySurveyOnVisibilityChanged() {\n    if (this.survey != null && !this.isLoadingFromJson) {\n      this.survey.panelVisibilityChanged(this, this.isVisible);\n    }\n  }\n  getRenderedTitle(str) {\n    if (this.isPanel && !str) {\n      if (this.isCollapsed || this.isExpanded) return this.name;\n      if (this.isDesignMode) return \"[\" + this.name + \"]\";\n    }\n    return super.getRenderedTitle(str);\n  }\n  /**\n   * Increases or decreases an indent of panel content from the left edge. Accepts positive integer values and 0.\n   */\n  get innerIndent() {\n    return this.getPropertyValue(\"innerIndent\");\n  }\n  set innerIndent(val) {\n    this.setPropertyValue(\"innerIndent\", val);\n  }\n  /**\n   * Disable this property if you want to render the current panel on the same line or row with the previous question or panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/arrange-multiple-questions-in-single-line/ (linkStyle))\n   */\n  get startWithNewLine() {\n    return this.getPropertyValue(\"startWithNewLine\");\n  }\n  set startWithNewLine(value) {\n    this.setPropertyValue(\"startWithNewLine\", value);\n  }\n  get allowAdaptiveActions() {\n    return this.getPropertyValue(\"allowAdaptiveActions\");\n  }\n  set allowAdaptiveActions(val) {\n    this.setPropertyValue(\"allowAdaptiveActions\", val);\n  }\n  get innerPaddingLeft() {\n    const func = () => {\n      return this.getIndentSize(this.innerIndent);\n    };\n    return this.getPropertyValue(\"innerPaddingLeft\", undefined, func);\n  }\n  set innerPaddingLeft(val) {\n    this.setPropertyValue(\"innerPaddingLeft\", val);\n  }\n  calcPaddingLeft() {\n    return this.getIndentSize(this.indent);\n  }\n  calcPaddingRight() {\n    return this.getIndentSize(this.rightIndent);\n  }\n  resetIndents() {\n    this.resetPropertyValue(\"innerPaddingLeft\");\n    super.resetIndents();\n  }\n  getIndentSize(indent) {\n    if (!this.survey) return undefined;\n    if (indent < 1) return \"\";\n    var css = this.survey[\"css\"];\n    if (!css || !css.question || !css.question.indent) return \"\";\n    return indent * css.question.indent + \"px\";\n  }\n  clearOnDeletingContainer() {\n    this.elements.forEach(element => {\n      if (element instanceof Question || element instanceof PanelModel) {\n        element.clearOnDeletingContainer();\n      }\n    });\n  }\n  get footerActions() {\n    return this.getPropertyValue(\"footerActions\");\n  }\n  getFooterToolbar() {\n    var _a, _b;\n    if (!this.footerToolbarValue) {\n      var actions = this.footerActions;\n      if (this.hasEditButton) {\n        actions.push({\n          id: \"cancel-preview\",\n          locTitle: this.survey.locEditText,\n          innerCss: this.survey.cssNavigationEdit,\n          component: \"sv-nav-btn\",\n          action: () => {\n            this.cancelPreview();\n          }\n        });\n      }\n      if (!!this.onGetFooterActionsCallback) {\n        actions = this.onGetFooterActionsCallback();\n      } else {\n        actions = (_a = this.survey) === null || _a === void 0 ? void 0 : _a.getUpdatedPanelFooterActions(this, actions);\n      }\n      this.footerToolbarValue = this.createActionContainer(this.allowAdaptiveActions);\n      let footerCss = this.onGetFooterToolbarCssCallback ? this.onGetFooterToolbarCssCallback() : \"\";\n      if (!footerCss) {\n        footerCss = (_b = this.cssClasses.panel) === null || _b === void 0 ? void 0 : _b.footer;\n      }\n      if (footerCss) {\n        this.footerToolbarValue.containerCss = footerCss;\n      }\n      this.footerToolbarValue.setItems(actions);\n      this.footerToolbarValue.flushUpdates();\n    }\n    return this.footerToolbarValue;\n  }\n  get hasEditButton() {\n    return false;\n  }\n  cancelPreview() {\n    if (!this.hasEditButton) return;\n    this.survey.cancelPreviewByPage(this);\n  }\n  get cssTitle() {\n    return this.getCssPanelTitle();\n  }\n  getCssPanelTitle() {\n    return this.getCssTitle(this.cssClasses.panel);\n  }\n  getCssTitleExpandableSvg() {\n    if (this.state === \"default\") return null;\n    return this.cssClasses.panel.titleExpandableSvg;\n  }\n  get showErrorsAbovePanel() {\n    return !this.showPanelAsPage;\n  }\n  getCssError(cssClasses) {\n    if (this.isPage) return super.getCssError(cssClasses);\n    const builder = new CssClassBuilder().append(super.getCssError(cssClasses)).append(cssClasses.panel.errorsContainer);\n    return builder.append(\"panel-error-root\", builder.isEmpty()).toString();\n  }\n  onVisibleChanged() {\n    super.onVisibleChanged();\n    this.notifySurveyOnVisibilityChanged();\n  }\n  needResponsiveWidth() {\n    if (!this.startWithNewLine) {\n      return true;\n    } else {\n      return super.needResponsiveWidth();\n    }\n  }\n  focusIn() {\n    if (!this.survey) return;\n    this.survey.whenPanelFocusIn(this);\n  }\n  getHasFrameV2() {\n    return super.getHasFrameV2() && !this.showPanelAsPage;\n  }\n  getIsNested() {\n    return super.getIsNested() && this.parent !== undefined;\n  }\n  get showPanelAsPage() {\n    return false;\n  }\n  /**\n   * Expands the panel.\n   * @param focusFirstQuestion Specifies whether to focus the first question within the expanded panel. Default value: `true`.\n   * @hidefor PageModel\n   * @see state\n   * @see toggleState\n   * @see collapse\n   * @see isCollapsed\n   * @see isExpanded\n   */\n  expand(focusFirstQuestion = true) {\n    this.forcusFirstQuestionOnExpand = focusFirstQuestion;\n    super.expand();\n  }\n  onElementExpanded(elementIsRendered) {\n    if (!this.forcusFirstQuestionOnExpand) {\n      return;\n    }\n    if (this.survey != null && !this.isLoadingFromJson) {\n      const q = this.getFirstQuestionToFocus(false);\n      if (!!q) {\n        setTimeout(() => {\n          if (!this.isDisposed && !!this.survey) {\n            this.survey.scrollElementToTop(q, q, null, q.inputId, false, {\n              behavior: \"smooth\"\n            });\n          }\n        }, elementIsRendered ? 0 : 15);\n      }\n    }\n  }\n  getCssRoot(cssClasses) {\n    return new CssClassBuilder().append(super.getCssRoot(cssClasses)).append(cssClasses.container).append(cssClasses.asPage, this.showPanelAsPage).append(cssClasses.invisible, !this.isDesignMode && this.areInvisibleElementsShowing && !this.visible).toString();\n  }\n  getContainerCss() {\n    return this.getCssRoot(this.cssClasses.panel);\n  }\n  afterRenderCore(element) {\n    var _a;\n    super.afterRenderCore(element);\n    if (this.isPanel) {\n      (_a = this.survey) === null || _a === void 0 ? void 0 : _a.afterRenderPanel(this, element);\n    }\n  }\n}\nSerializer.addClass(\"panelbase\", [\"name\", {\n  name: \"elements\",\n  alternativeName: \"questions\",\n  baseClassName: \"question\",\n  visible: false,\n  isLightSerializable: false\n}, {\n  name: \"visible:switch\",\n  default: true,\n  overridingProperty: \"visibleIf\"\n}, {\n  name: \"readOnly:boolean\",\n  overridingProperty: \"enableIf\"\n}, \"visibleIf:condition\", \"enableIf:condition\", \"requiredIf:condition\", {\n  name: \"questionTitleWidth\",\n  visibleIf: function (obj) {\n    return !!obj && obj[\"availableQuestionTitleWidth\"]();\n  }\n}, {\n  name: \"questionTitleLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\", \"left\", \"hidden\"]\n}, {\n  name: \"gridLayoutColumns:panellayoutcolumns\",\n  className: \"panellayoutcolumn\",\n  isArray: true,\n  onSerializeValue: obj => {\n    return obj.getSerializableColumnsValue();\n  },\n  visibleIf: function (obj) {\n    return !!obj && !!obj.survey && obj.survey.gridLayoutEnabled;\n  }\n}, {\n  name: \"title:text\",\n  serializationProperty: \"locTitle\"\n}, {\n  name: \"description:text\",\n  serializationProperty: \"locDescription\"\n}, {\n  name: \"questionOrder\",\n  alternativeName: \"questionsOrder\",\n  default: \"default\",\n  choices: [\"default\", \"initial\", \"random\"]\n}, {\n  name: \"questionErrorLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\"]\n}], function () {\n  return new PanelModelBase();\n});\nSerializer.addClass(\"panel\", [{\n  name: \"state\",\n  default: \"default\",\n  choices: [\"default\", \"collapsed\", \"expanded\"]\n}, {\n  name: \"isRequired:switch\",\n  overridingProperty: \"requiredIf\"\n}, {\n  name: \"requiredErrorText:text\",\n  serializationProperty: \"locRequiredErrorText\"\n}, {\n  name: \"startWithNewLine:boolean\",\n  default: true\n}, {\n  name: \"width\"\n}, {\n  name: \"minWidth\",\n  defaultFunc: () => \"auto\"\n}, {\n  name: \"maxWidth\",\n  defaultFunc: () => settings.maxWidth\n}, {\n  name: \"colSpan:number\",\n  visible: false,\n  onSerializeValue: obj => {\n    return obj.getPropertyValue(\"colSpan\");\n  }\n}, {\n  name: \"effectiveColSpan:number\",\n  minValue: 1,\n  isSerializable: false,\n  visibleIf: function (obj) {\n    return !!obj.survey && obj.survey.gridLayoutEnabled;\n  }\n}, {\n  name: \"innerIndent:number\",\n  default: 0,\n  choices: [0, 1, 2, 3]\n}, {\n  name: \"indent:number\",\n  default: 0,\n  choices: [0, 1, 2, 3],\n  visible: false\n}, {\n  name: \"page\",\n  isSerializable: false,\n  visibleIf: function (obj) {\n    var survey = obj ? obj.survey : null;\n    return !survey || !survey.pages || survey.pages.length > 1;\n  },\n  choices: function (obj) {\n    var survey = obj ? obj.survey : null;\n    return survey ? survey.pages.map(p => {\n      return {\n        value: p.name,\n        text: p.title\n      };\n    }) : [];\n  }\n}, {\n  name: \"showNumber:boolean\"\n}, {\n  name: \"showQuestionNumbers\",\n  default: \"default\",\n  choices: [\"default\", \"onpanel\", \"recursive\", \"off\"]\n}, {\n  name: \"questionStartIndex\",\n  visibleIf: obj => obj.isPanel\n}, {\n  name: \"allowAdaptiveActions:boolean\",\n  default: true,\n  visible: false\n}], function () {\n  return new PanelModel();\n}, \"panelbase\");\nElementFactory.Instance.registerElement(\"panel\", name => {\n  return new PanelModel(name);\n});\n\n/**\n * The `PageModel` object describes a survey page and contains properties and methods that allow you to control the page and access its elements (panels and questions).\n *\n * [View Demo](https://surveyjs.io/form-library/examples/nps-question/ (linkStyle))\n */\nclass PageModel extends PanelModel {\n  constructor(name = \"\") {\n    super(name);\n    /**\n     * A time period that a respondent has spent on this page so far; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n     * @see timeLimit\n     */\n    this.timeSpent = 0;\n    this._isReadyForClean = true;\n    this.createLocalizableString(\"navigationDescription\", this, true);\n  }\n  getType() {\n    return \"page\";\n  }\n  toString() {\n    return this.name;\n  }\n  get isPage() {\n    return !this.isPanel;\n  }\n  get isPanel() {\n    return !!this.parent;\n  }\n  get showPanelAsPage() {\n    return true;\n  }\n  get hasEditButton() {\n    return this.isPanel && this.survey && this.survey.state === \"preview\" && !!this.parent && !this.parent.isPanel;\n  }\n  getElementsForRows() {\n    var _a;\n    if (!this.isStartPage) {\n      const q = (_a = this.survey) === null || _a === void 0 ? void 0 : _a.currentSingleElement;\n      if (!!q) {\n        if (q.page === this) return [q];\n        return [];\n      }\n    }\n    return super.getElementsForRows();\n  }\n  disposeElements() {\n    if (!this.isPageContainer) {\n      super.disposeElements();\n    }\n  }\n  onRemoveElement(element) {\n    if (this.isPageContainer) {\n      element.parent = null;\n      this.unregisterElementPropertiesChanged(element);\n    } else {\n      super.onRemoveElement(element);\n    }\n  }\n  getTemplate() {\n    return this.isPanel ? \"panel\" : super.getTemplate();\n  }\n  get no() {\n    if (!this.canShowPageNumber() || !this.survey) return \"\";\n    let no = this.isStartPage ? \"\" : this.num + \". \";\n    return this.survey.getUpdatedPageNo(this, no);\n  }\n  get cssTitleNumber() {\n    return this.isPanel ? this.cssClasses.panel.number : this.cssClasses.page.number;\n  }\n  getCssTitleExpandableSvg() {\n    return null;\n  }\n  get cssRequiredMark() {\n    return \"\";\n  }\n  canShowPageNumber() {\n    return this.survey && this.survey.showPageNumbers;\n  }\n  canShowTitle(survey) {\n    return !survey || survey.showPageTitles;\n  }\n  setTitleValue(val) {\n    super.setTitleValue(val);\n    this.navigationLocStrChanged();\n  }\n  getDefaultTitleTagName() {\n    return settings.titleTags.page;\n  }\n  /**\n   * A caption displayed on a navigation button in the TOC or progress bar. Applies when [`showTOC`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTOC) is `true` or when the [progress bar is visible](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showProgressBar), [`progressBarType`](https://surveyjs.io/form-library/documentation/surveymodel#progressBarType) is set to `\"pages\"`, and [`progressBarShowPageTitles`](https://surveyjs.io/form-library/documentation/surveymodel#progressBarShowPageTitles) is `true`.\n   *\n   * [Table of Contents Demo](https://surveyjs.io/form-library/examples/table-of-contents/ (linkStyle))\n   *\n   * [Progress Bar Demo](https://surveyjs.io/form-library/examples/configure-form-navigation-with-progress-indicators/ (linkStyle))\n   *\n   * > If navigation titles are unspecified, the navigation buttons display page [titles](https://surveyjs.io/form-library/documentation/api-reference/page-model#title) or [names](https://surveyjs.io/form-library/documentation/pagemodel#name).\n   */\n  get navigationTitle() {\n    return this.getLocalizableStringText(\"navigationTitle\");\n  }\n  set navigationTitle(val) {\n    this.setLocalizableStringText(\"navigationTitle\", val);\n  }\n  get navigationDescription() {\n    return this.getLocalizableStringText(\"navigationDescription\");\n  }\n  set navigationDescription(val) {\n    this.setLocalizableStringText(\"navigationDescription\", val);\n  }\n  get locNavigationDescription() {\n    return this.getLocalizableString(\"navigationDescription\");\n  }\n  navigationLocStrChanged() {\n    if (this.locNavigationTitle.isEmpty) {\n      this.locTitle.strChanged();\n    }\n    this.locNavigationTitle.strChanged();\n    this.locNavigationDescription.strChanged();\n  }\n  getMarkdownHtml(text, name, item) {\n    const result = super.getMarkdownHtml(text, name, item);\n    if (name === \"navigationTitle\" && this.canShowPageNumber() && result) {\n      return this.num + \". \" + result;\n    }\n    return result;\n  }\n  get passed() {\n    return this.getPropertyValue(\"passed\", false);\n  }\n  set passed(val) {\n    this.setPropertyValue(\"passed\", val);\n  }\n  removeFromParent() {\n    if (!!this.survey) {\n      this.removeSelfFromList(this.survey.pages);\n    }\n  }\n  /**\n   * The visible index of the page. It has values from 0 to visible page count - 1.\n   * @see SurveyModel.visiblePages\n   * @see SurveyModel.pages\n   */\n  get visibleIndex() {\n    return this.getPropertyValue(\"visibleIndex\", -1);\n  }\n  set visibleIndex(val) {\n    this.setPropertyValue(\"visibleIndex\", val);\n  }\n  canRenderFirstRows() {\n    return !this.isDesignMode || this.visibleIndex == 0;\n  }\n  /**\n   * Returns `true` if this page is a start page.\n   *\n   * Refer to the following help topic for more information on how to configure a start page: [Start Page](https://surveyjs.io/form-library/documentation/design-survey-create-a-multi-page-survey#start-page).\n   */\n  get isStartPage() {\n    return this.survey && this.survey.isPageStarted(this);\n  }\n  get isStarted() {\n    return this.isStartPage;\n  }\n  calcCssClasses(css) {\n    if (this.isPanel) return super.calcCssClasses(css);\n    const classes = {\n      page: {},\n      error: {},\n      pageTitle: \"\",\n      pageDescription: \"\",\n      row: \"\",\n      rowMultiple: \"\",\n      pageRow: \"\",\n      rowCompact: \"\",\n      rowEnter: \"\",\n      rowLeave: \"\",\n      rowDelayedEnter: \"\",\n      rowReplace: \"\"\n    };\n    this.copyCssClasses(classes.page, css.page);\n    this.copyCssClasses(classes.error, css.error);\n    if (!!css.pageTitle) {\n      classes.pageTitle = css.pageTitle;\n    }\n    if (!!css.pageDescription) {\n      classes.pageDescription = css.pageDescription;\n    }\n    if (!!css.row) {\n      classes.row = css.row;\n    }\n    if (!!css.pageRow) {\n      classes.pageRow = css.pageRow;\n    }\n    if (!!css.rowMultiple) {\n      classes.rowMultiple = css.rowMultiple;\n    }\n    if (!!css.rowCompact) {\n      classes.rowCompact = css.rowCompact;\n    }\n    if (!!css.rowEnter) {\n      classes.rowEnter = css.rowEnter;\n    }\n    if (!!css.rowDelayedEnter) {\n      classes.rowDelayedEnter = css.rowDelayedEnter;\n    }\n    if (!!css.rowLeave) {\n      classes.rowLeave = css.rowLeave;\n    }\n    if (!!css.rowReplace) {\n      classes.rowReplace = css.rowReplace;\n    }\n    if (this.survey) {\n      this.survey.updatePageCssClasses(this, classes);\n    }\n    return classes;\n  }\n  getCssPanelTitle() {\n    if (this.isPanel) return super.getCssPanelTitle();\n    if (!this.cssClasses.page) return \"\";\n    return new CssClassBuilder().append(this.cssClasses.page.title).toString();\n  }\n  get cssRoot() {\n    if (this.isPanel || !this.cssClasses.page || !this.survey) return \"\";\n    return new CssClassBuilder().append(this.cssClasses.page.root).append(this.cssClasses.page.emptyHeaderRoot, !this.survey.renderedHasHeader && !(this.survey.isShowProgressBarOnTop && !this.survey.isStaring)).toString();\n  }\n  getCssError(cssClasses) {\n    if (this.isPanel) return super.getCssError(cssClasses);\n    return new CssClassBuilder().append(super.getCssError(cssClasses)).append(cssClasses.page.errorsContainer).toString();\n  }\n  /**\n   * @deprecated Use the [`showNavigationButtons`](https://surveyjs.io/form-library/documentation/api-reference/page-model#showNavigationButtons) property instead.\n   */\n  get navigationButtonsVisibility() {\n    const result = this.showNavigationButtons;\n    if (result === undefined || result === null) {\n      return \"inherit\";\n    }\n    return result ? \"show\" : \"hide\";\n  }\n  set navigationButtonsVisibility(val) {\n    if (typeof val == \"string\") {\n      val = val.toLowerCase();\n    }\n    this.showNavigationButtons = val;\n  }\n  /**\n   * Gets or sets the visibility of the Start, Next, Previous, and Complete navigation buttons on this page. Overrides the [`showNavigationButtons`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showNavigationButtons) property specified on the survey-level.\n   *\n   * Default value: `undefined` (the visibility depends on the survey-level setting)\n   */\n  get showNavigationButtons() {\n    return this.getPropertyValue(\"showNavigationButtons\", undefined);\n  }\n  set showNavigationButtons(val) {\n    this.setShowNavigationButtonsProperty(val);\n  }\n  setShowNavigationButtonsProperty(val) {\n    if (val === true || val === false) {\n      this.setPropertyValue(\"showNavigationButtons\", val);\n    } else if (val === \"show\") {\n      this.setPropertyValue(\"showNavigationButtons\", true);\n    } else if (val === \"hide\") {\n      this.setPropertyValue(\"showNavigationButtons\", false);\n    } else {\n      this.setPropertyValue(\"showNavigationButtons\", undefined);\n    }\n  }\n  /**\n   * Returns `true` if this is the current page.\n   * @see SurveyModel.currentPage\n   */\n  get isActive() {\n    return !!this.survey && this.survey.currentPage === this;\n  }\n  /**\n   * Returns `true` if the respondent has already seen this page during the current session.\n   */\n  get wasShown() {\n    return this.wasRendered;\n  }\n  get hasShown() {\n    return this.wasRendered;\n  }\n  setWasShown(val) {\n    if (!val) {\n      this.resetWasRendered();\n    }\n  }\n  onFirstRenderingCore() {\n    var _a;\n    super.onFirstRenderingCore();\n    if (this.isDesignMode) return;\n    var els = this.elements;\n    for (var i = 0; i < els.length; i++) {\n      if (els[i].isPanel) {\n        els[i].randomizeElements(this.areQuestionsRandomized);\n      }\n    }\n    if (this.randomizeElements(this.areQuestionsRandomized)) {\n      const singleQuestion = (_a = this.survey) === null || _a === void 0 ? void 0 : _a.currentSingleElement;\n      if ((singleQuestion === null || singleQuestion === void 0 ? void 0 : singleQuestion.page) === this) {\n        this.survey.currentSingleElement = this.getFirstVisibleElement();\n      }\n    }\n  }\n  /**\n   * Scrolls this page to the top.\n   */\n  scrollToTop() {\n    if (!!this.survey) {\n      this.survey.scrollElementToTop(this, null, this, this.id, false, {\n        block: \"start\"\n      });\n    }\n  }\n  /**\n   * Returns a list of all panels on this page.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible panels.\n   * @param includingDesignTime For internal use.\n   */\n  getAllPanels(visibleOnly = false, includingDesignTime = false) {\n    var result = new Array();\n    this.addPanelsIntoList(result, visibleOnly, includingDesignTime);\n    return result;\n  }\n  getPanels(visibleOnly = false, includingDesignTime = false) {\n    return this.getAllPanels(visibleOnly, includingDesignTime);\n  }\n  /**\n   * A time period that a respondent has to complete this page; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: 0 (time is unlimited)\n   *\n   * Alternatively, you can use the `SurveyModel`'s [`timeLimitPerPage`](https://surveyjs.io/form-library/documentation/surveymodel#timeLimitPerPage) property to specify identical time periods for all survey pages.\n   * @see timeSpent\n   */\n  get timeLimit() {\n    return this.getPropertyValue(\"timeLimit\", 0);\n  }\n  set timeLimit(val) {\n    this.setPropertyValue(\"timeLimit\", val);\n  }\n  /**\n   * @deprecated Use the [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/page-model#timeLimit) property instead.\n   */\n  get maxTimeToFinish() {\n    return this.timeLimit;\n  }\n  set maxTimeToFinish(val) {\n    this.timeLimit = val;\n  }\n  getMaxTimeToFinish() {\n    if (this.timeLimit !== 0) return this.timeLimit;\n    const res = !!this.survey ? this.survey.timeLimitPerPage : 0;\n    return res > 0 ? res : 0;\n  }\n  onNumChanged(value) {}\n  onVisibleChanged() {\n    if (this.isRandomizing) return;\n    super.onVisibleChanged();\n    if (this.survey != null) {\n      this.survey.pageVisibilityChanged(this, this.isVisible);\n    }\n  }\n  ensureRowsVisibility() {\n    super.ensureRowsVisibility();\n    this.getPanels().forEach(panel => panel.ensureRowsVisibility());\n  }\n  get isReadyForClean() {\n    return this._isReadyForClean;\n  }\n  set isReadyForClean(val) {\n    const oldValue = this._isReadyForClean;\n    this._isReadyForClean = val;\n    if (this._isReadyForClean !== oldValue) {\n      this.isReadyForCleanChangedCallback && this.isReadyForCleanChangedCallback();\n    }\n  }\n  enableOnElementRerenderedEvent() {\n    super.enableOnElementRerenderedEvent();\n    this.isReadyForClean = false;\n  }\n  disableOnElementRerenderedEvent() {\n    super.disableOnElementRerenderedEvent();\n    this.isReadyForClean = true;\n  }\n}\n__decorate([property({\n  defaultValue: -1,\n  onSet: (val, target) => target.onNumChanged(val)\n})], PageModel.prototype, \"num\", void 0);\nSerializer.addClass(\"page\", [{\n  name: \"showNavigationButtons:boolean\",\n  defaultFunc: () => undefined,\n  onSetValue: function (obj, value) {\n    obj && obj.setShowNavigationButtonsProperty(value);\n  },\n  alternativeName: \"navigationButtonsVisibility\"\n}, {\n  name: \"timeLimit:number\",\n  alternativeName: \"maxTimeToFinish\",\n  default: 0,\n  minValue: 0,\n  visibleIf: obj => {\n    return !!obj.survey && obj.survey.showTimer;\n  }\n}, {\n  name: \"navigationTitle\",\n  serializationProperty: \"locNavigationTitle\"\n}, {\n  name: \"navigationDescription\",\n  visibleIf: function (obj) {\n    return !!obj.survey && obj.survey.progressBarType === \"buttons\";\n  },\n  serializationProperty: \"locNavigationDescription\"\n}, {\n  name: \"title:text\",\n  serializationProperty: \"locTitle\"\n}, {\n  name: \"description:text\",\n  serializationProperty: \"locDescription\"\n}, {\n  name: \"state\",\n  visible: false\n}, {\n  name: \"isRequired\",\n  visible: false\n}, {\n  name: \"startWithNewLine\",\n  visible: false\n}, {\n  name: \"width\",\n  visible: false\n}, {\n  name: \"minWidth\",\n  visible: false\n}, {\n  name: \"maxWidth\",\n  visible: false\n}, {\n  name: \"colSpan\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"effectiveColSpan:number\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"innerIndent\",\n  visible: false\n}, {\n  name: \"indent\",\n  visible: false\n}, {\n  name: \"page\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"showNumber\",\n  visible: false\n}, {\n  name: \"showQuestionNumbers\",\n  visible: false\n}, {\n  name: \"questionStartIndex\",\n  visible: false\n}, {\n  name: \"allowAdaptiveActions\",\n  visible: false\n}, {\n  name: \"requiredErrorText:text\",\n  serializationProperty: \"locRequiredErrorText\",\n  visible: false\n}], function () {\n  return new PageModel();\n}, \"panel\");\nclass ProgressButtons extends Base {\n  constructor(survey) {\n    super();\n    this.survey = survey;\n    this.onResize = this.addEvent();\n  }\n  isListElementClickable(index) {\n    if (!this.survey.onServerValidateQuestions || this.survey.onServerValidateQuestions.isEmpty || this.survey.checkErrorsMode === \"onComplete\") {\n      return true;\n    }\n    return index <= this.survey.currentPageNo + 1;\n  }\n  getRootCss(container = \"center\") {\n    let result = this.survey.css.progressButtonsContainerCenter;\n    if (this.survey.css.progressButtonsRoot) {\n      result += \" \" + this.survey.css.progressButtonsRoot + \" \" + this.survey.css.progressButtonsRoot + \"--\" + ([\"footer\", \"contentBottom\"].indexOf(container) !== -1 ? \"bottom\" : \"top\");\n      result += \" \" + this.survey.css.progressButtonsRoot + \"--\" + (this.showItemTitles ? \"with-titles\" : \"no-titles\");\n    }\n    if (this.showItemNumbers && this.survey.css.progressButtonsNumbered) {\n      result += \" \" + this.survey.css.progressButtonsNumbered;\n    }\n    if (this.isFitToSurveyWidth) {\n      result += \" \" + this.survey.css.progressButtonsFitSurveyWidth;\n    }\n    return result;\n  }\n  getListElementCss(index) {\n    if (index >= this.survey.visiblePages.length) return;\n    return new CssClassBuilder().append(this.survey.css.progressButtonsListElementPassed, this.survey.visiblePages[index].passed).append(this.survey.css.progressButtonsListElementCurrent, this.survey.currentPageNo === index).append(this.survey.css.progressButtonsListElementNonClickable, !this.isListElementClickable(index)).toString();\n  }\n  getScrollButtonCss(hasScroller, isLeftScroll) {\n    return new CssClassBuilder().append(this.survey.css.progressButtonsImageButtonLeft, isLeftScroll).append(this.survey.css.progressButtonsImageButtonRight, !isLeftScroll).append(this.survey.css.progressButtonsImageButtonHidden, !hasScroller).toString();\n  }\n  clickListElement(element) {\n    if (!(element instanceof PageModel)) {\n      element = this.survey.visiblePages[element];\n    }\n    this.survey.tryNavigateToPage(element);\n  }\n  isListContainerHasScroller(element) {\n    const listContainerElement = element.querySelector(\".\" + this.survey.css.progressButtonsListContainer);\n    if (!!listContainerElement) {\n      return listContainerElement.scrollWidth > listContainerElement.offsetWidth;\n    }\n    return false;\n  }\n  isCanShowItemTitles(element) {\n    const listContainerElement = element.querySelector(\"ul\");\n    if (!listContainerElement || listContainerElement.children.length < 2) return true;\n    if (listContainerElement.clientWidth > listContainerElement.parentElement.clientWidth) {\n      return false;\n    }\n    const expectedElementWidth = listContainerElement.children[0].clientWidth;\n    for (let i = 0; i < listContainerElement.children.length; i++) {\n      if (Math.abs(listContainerElement.children[i].clientWidth - expectedElementWidth) > 5) {\n        return false;\n      }\n    }\n    return true;\n  }\n  clearConnectorsWidth(element) {\n    const listContainerElements = element.querySelectorAll(\".sd-progress-buttons__connector\");\n    for (let i = 0; i < listContainerElements.length; i++) {\n      listContainerElements[i].style.width = \"\";\n    }\n  }\n  adjustConnectors(element) {\n    const listContainerElement = element.querySelector(\"ul\");\n    if (!listContainerElement) return;\n    const listContainerElements = element.querySelectorAll(\".sd-progress-buttons__connector\");\n    const circleWidth = this.showItemNumbers ? 36 : 20;\n    // const sideCorrection = this.survey.isMobile ? circleWidth : listContainerElement.children[0].clientWidth;\n    // const connectorWidth = (listContainerElement.clientWidth - sideCorrection) / (listContainerElement.children.length - 1) - circleWidth;\n    const connectorWidth = (listContainerElement.clientWidth - circleWidth) / (listContainerElement.children.length - 1) - circleWidth;\n    for (let i = 0; i < listContainerElements.length; i++) {\n      listContainerElements[i].style.width = connectorWidth + \"px\";\n    }\n  }\n  get isFitToSurveyWidth() {\n    if (surveyCss.currentType !== \"default\") {\n      return false;\n    }\n    return this.survey.progressBarInheritWidthFrom === \"survey\" && this.survey.widthMode == \"static\";\n  }\n  get progressWidth() {\n    if (this.isFitToSurveyWidth) {\n      return this.survey.renderedWidth;\n    }\n    return \"\";\n  }\n  get showItemNumbers() {\n    if (surveyCss.currentType !== \"default\") {\n      return false;\n    }\n    return this.survey.progressBarShowPageNumbers;\n  }\n  get showItemTitles() {\n    if (surveyCss.currentType !== \"default\") {\n      return true;\n    }\n    return this.survey.progressBarShowPageTitles;\n  }\n  getItemNumber(page) {\n    let result = \"\";\n    if (this.showItemNumbers) {\n      result += this.survey.visiblePages.indexOf(page) + 1;\n    }\n    return result;\n  }\n  get headerText() {\n    return this.survey.currentPage ? this.survey.currentPage.renderedNavigationTitle : \"\";\n  }\n  get footerText() {\n    return this.progressText;\n  }\n  get progressText() {\n    return this.getPropertyValue(\"progressText\", undefined, () => this.survey.getProgressText());\n  }\n  get progressBarAriaLabel() {\n    return getLocaleString(\"progressbar\", this.survey.getLocale());\n  }\n  resetProgressText() {\n    this.resetPropertyValue(\"progressText\");\n  }\n  processResponsiveness(width) {\n    this.onResize.fire(this, {\n      width\n    });\n  }\n}\nclass ProgressButtonsResponsivityManager {\n  constructor(model, element, viewModel) {\n    this.model = model;\n    this.element = element;\n    this.viewModel = viewModel;\n    this.criticalProperties = [\"progressBarType\", \"progressBarShowPageTitles\"];\n    this.canShowItemTitles = true;\n    this.processResponsiveness = (model, options) => {\n      this.viewModel.onUpdateScroller(model.isListContainerHasScroller(this.element));\n      this.model.clearConnectorsWidth(this.element);\n      if (!model.showItemTitles) {\n        this.model.adjustConnectors(this.element);\n        return;\n      }\n      if (model.survey.isMobile) {\n        this.prevWidth = options.width;\n        this.canShowItemTitles = false;\n        this.model.adjustConnectors(this.element);\n        this.viewModel.onResize(this.canShowItemTitles);\n        return;\n      }\n      if (this.timer !== undefined) {\n        clearTimeout(this.timer);\n      }\n      this.timer = setTimeout(() => {\n        if (this.prevWidth === undefined || this.prevWidth < options.width && !this.canShowItemTitles || this.prevWidth > options.width && this.canShowItemTitles) {\n          this.prevWidth = options.width;\n          this.canShowItemTitles = model.isCanShowItemTitles(this.element);\n          this.viewModel.onResize(this.canShowItemTitles);\n          this.timer = undefined;\n        }\n      }, 10);\n    };\n    this.model.survey.registerFunctionOnPropertiesValueChanged(this.criticalProperties, () => this.forceUpdate(), \"ProgressButtonsResponsivityManager\" + this.viewModel.container);\n    this.model.onResize.add(this.processResponsiveness);\n    this.forceUpdate();\n  }\n  forceUpdate() {\n    this.viewModel.onUpdateSettings();\n    this.processResponsiveness(this.model, {});\n  }\n  dispose() {\n    clearTimeout(this.timer);\n    this.model.onResize.remove(this.processResponsiveness);\n    this.model.survey.unRegisterFunctionOnPropertiesValueChanged(this.criticalProperties, \"ProgressButtonsResponsivityManager\" + this.viewModel.container);\n    this.element = undefined;\n    this.model = undefined;\n  }\n}\nfunction tryFocusPage(survey, panel) {\n  if (survey.isDesignMode) return true;\n  panel.focusFirstQuestion();\n  return true;\n}\nfunction getPage(question) {\n  if (!!question.parentQuestion) {\n    return getPage(question.parentQuestion);\n  }\n  let parent = question.parent;\n  while (parent && parent.getType() !== \"page\" && parent.parent) {\n    parent = parent.parent;\n  }\n  if (parent && parent.getType() === \"page\") {\n    return parent;\n  }\n  return null;\n}\nfunction createTOCListModel(survey, onAction) {\n  var items = getTOCItems(survey, onAction);\n  const listOptions = {\n    items: items,\n    searchEnabled: false,\n    locOwner: survey,\n    listRole: \"menu\",\n    listItemRole: \"menuitemradio\",\n    listAriaLabel: getLocaleString(\"toc\", survey.getLocale())\n  };\n  var listModel = new ListModel(listOptions);\n  listModel.allowSelection = false;\n  const updateSelectedItem = (currentPage, defaultSelection) => {\n    listModel.selectedItem = !!currentPage && listModel.actions.filter(i => i.id === currentPage.name)[0] || defaultSelection;\n  };\n  updateSelectedItem(survey.currentPage, items[0]);\n  survey.onCurrentPageChanged.add((s, o) => {\n    updateSelectedItem(survey.currentPage);\n  });\n  survey.onFocusInQuestion.add((s, o) => {\n    updateSelectedItem(getPage(o.question));\n  });\n  const updatePagesFunc = () => {\n    listModel.setItems(getTOCItems(survey, onAction));\n  };\n  survey.registerFunctionOnPropertyValueChanged(\"pages\", updatePagesFunc, \"toc\");\n  survey.onEndLoadingFromJson.add(updatePagesFunc);\n  return listModel;\n}\nfunction getTOCItems(survey, onAction) {\n  const pagesSource = survey.pages;\n  var items = (pagesSource || []).map(page => {\n    return new Action({\n      id: page.name,\n      locTitle: page.locNavigationTitle,\n      action: () => {\n        DomDocumentHelper.activeElementBlur();\n        !!onAction && onAction();\n        if (page.isPage) {\n          return survey.tryNavigateToPage(page);\n        } else if (page.isPanel) {\n          return tryFocusPage(survey, page);\n        }\n      },\n      visible: new ComputedUpdater(() => {\n        return page.isVisible && !page[\"isStartPage\"];\n      })\n    });\n  });\n  return items;\n}\nfunction getTocRootCss(survey, isMobile = false) {\n  let rootCss = TOCModel.RootStyle;\n  if (isMobile) {\n    return rootCss + \" \" + TOCModel.RootStyle + \"--mobile\";\n  }\n  rootCss += \" \" + TOCModel.RootStyle + \"--\" + (survey.tocLocation || \"\").toLowerCase();\n  if (TOCModel.StickyPosition) {\n    rootCss += \" \" + TOCModel.RootStyle + \"--sticky\";\n  }\n  return rootCss;\n}\nclass TOCModel {\n  constructor(survey) {\n    this.survey = survey;\n    this.icon = \"icon-navmenu_24x24\";\n    this.togglePopup = () => {\n      this.popupModel.toggleVisibility();\n    };\n    this.listModel = createTOCListModel(survey, () => {\n      this.popupModel.isVisible = false;\n    });\n    this.popupModel = new PopupModel(\"sv-list\", {\n      model: this.listModel\n    });\n    this.popupModel.overlayDisplayMode = \"tablet-dropdown-overlay\";\n    this.popupModel.displayMode = new ComputedUpdater(() => this.isMobile ? \"overlay\" : \"popup\");\n    if (TOCModel.StickyPosition) {\n      survey.onAfterRenderSurvey.add((s, o) => this.initStickyTOCSubscriptions(o.htmlElement));\n      this.initStickyTOCSubscriptions(survey.rootElement);\n    }\n  }\n  initStickyTOCSubscriptions(rootElement) {\n    if (TOCModel.StickyPosition && !!rootElement) {\n      rootElement.addEventListener(\"scroll\", event => {\n        this.updateStickyTOCSize(rootElement);\n      });\n      this.updateStickyTOCSize(rootElement);\n    }\n  }\n  updateStickyTOCSize(rootElement) {\n    if (!rootElement) {\n      return;\n    }\n    const tocRootElement = rootElement.querySelector(\".\" + TOCModel.RootStyle);\n    if (!!tocRootElement) {\n      tocRootElement.style.height = \"\";\n      if (!this.isMobile && TOCModel.StickyPosition && !!rootElement) {\n        const rootHeight = rootElement.getBoundingClientRect().height;\n        const headerLayoutElement = this.survey.findLayoutElement(\"advanced-header\");\n        const advHeader = headerLayoutElement && headerLayoutElement.data;\n        let isBelowHeader = !advHeader || advHeader.hasBackground;\n        const titleSelector = this.survey.headerView === \"advanced\" ? \".sv-header\" : \".sv_custom_header+div div.\" + (this.survey.css.title || \"sd-title\");\n        const titleElement = rootElement.querySelector(titleSelector);\n        const titleElementHeight = titleElement && isBelowHeader ? titleElement.getBoundingClientRect().height : 0;\n        const scrollElement = rootElement.querySelector(\".sv-scroll__scroller\") || rootElement;\n        const scrollCompensationHeight = scrollElement.scrollTop > titleElementHeight ? 0 : titleElementHeight - scrollElement.scrollTop;\n        tocRootElement.style.height = rootHeight - scrollCompensationHeight - 1 + \"px\";\n      }\n    }\n  }\n  get isMobile() {\n    return this.survey.isMobile;\n  }\n  get containerCss() {\n    return getTocRootCss(this.survey, this.isMobile);\n  }\n  dispose() {\n    const [handler] = this.survey.unRegisterFunctionOnPropertyValueChanged(\"pages\", \"toc\");\n    this.survey.onEndLoadingFromJson.remove(handler);\n    this.survey.onPageAdded.remove(handler);\n    this.popupModel.dispose();\n    this.listModel.dispose();\n  }\n}\nTOCModel.RootStyle = \"sv_progress-toc\";\nTOCModel.StickyPosition = true;\n\n/**\n * The `SurveyModel` object contains properties and methods that allow you to control the survey and access its elements.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/nps-question/ (linkStyle))\n */\nclass SurveyModel extends SurveyElementCore {\n  get platformName() {\n    return SurveyModel.platform;\n  }\n  /**\n   * A suffix added to the name of the property that stores comments.\n   *\n   * Default value: \"-Comment\"\n   *\n   * Many question types allow respondents to leave comments. To enable this functionality, set a question's [`showCommentArea`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#showCommentArea) property to `true`. Comment values are saved in a separate property. The property name is composed of the question `name` and `commentSuffix`.\n   *\n   * Respondents can also leave comments when they select \"Other\" in choice-based questions, such as Dropdown or Checkboxes. The property name for the comment value is composed according to the same rules. However, you can use the question `name` as a key to store the comment value instead. Disable the [`storeOthersAsComment`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#storeOthersAsComment) property in this case.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   */\n  get commentSuffix() {\n    return settings.commentSuffix;\n  }\n  set commentSuffix(val) {\n    settings.commentSuffix = val;\n  }\n  get commentPrefix() {\n    return this.commentSuffix;\n  }\n  set commentPrefix(val) {\n    this.commentSuffix = val;\n  }\n  //#endregion\n  constructor(jsonObj = null, renderedElement = null) {\n    super();\n    this.valuesHash = {};\n    this.variablesHash = {};\n    //#region Event declarations\n    this.onEndLoadingFromJson = this.addEvent();\n    /**\n     * An event that is raised after a [trigger](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#triggers) is executed.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [Conditional Survey Logic (Triggers)](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers (linkStyle))\n     * @see triggers\n     * @see runTriggers\n     */\n    this.onTriggerExecuted = this.addEvent();\n    /**\n     * An event that is raised before the survey is completed. Use this event to prevent survey completion.\n     * @see onComplete\n     * @see doComplete\n     * @see autoAdvanceAllowComplete\n     */\n    this.onCompleting = this.addEvent();\n    /**\n     * An event that is raised after the survey is completed. Use this event to send survey results to the server.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * For an example of how to use the methods described above, refer to the following help topic: [Store Survey Results in Your Own Database](https://surveyjs.io/form-library/documentation/handle-survey-results-store#store-survey-results-in-your-own-database).\n     *\n     * > Do not disable the [`showCompletePage`](https://surveyjs.io/form-library/documentation/surveymodel#showCompletePage) property if you call one of the `options.showSave...` methods. This is required because the UI that indicates data saving progress is integrated into the complete page. If you hide the complete page, the UI also becomes invisible.\n     * @see onPartialSend\n     * @see doComplete\n     * @see autoAdvanceAllowComplete\n     */\n    this.onComplete = this.addEvent();\n    /**\n     * An event that is raised before the survey displays a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page). Use this event to cancel the preview.\n     * @see showPreviewBeforeComplete\n     * @see previewMode\n     * @see showPreview\n     * @see cancelPreview\n     */\n    this.onShowingPreview = this.addEvent();\n    /**\n     * An event that is raised before the survey navigates to a specified URL. Use this event to change the URL or cancel the navigation.\n     * @see navigateToUrl\n     * @see navigateToUrlOnCondition\n     */\n    this.onNavigateToUrl = this.addEvent();\n    /**\n     * An event that is raised when the survey [`state`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#state) changes to `\"running\"`.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/automatically-move-to-next-page-if-answer-selected/ (linkStyle))\n     * @see firstPageIsStartPage\n     */\n    this.onStarted = this.addEvent();\n    /**\n     * An event that is raised to save incomplete survey results. Enable the [`partialSendEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#partialSendEnabled) property for this event to occur.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * Alternatively, you can handle the [`onCurrentPageChanged`](#onCurrentPageChanged) and [`onValueChanged`](#onValueChanged) events, as shown in the following demo: [Continue an Incomplete Survey](https://surveyjs.io/form-library/examples/survey-editprevious/).\n     */\n    this.onPartialSend = this.addEvent();\n    /**\n     * An event that is raised before the current page is switched.\n     *\n     * @see currentPageNo\n     * @see nextPage\n     * @see prevPage\n     **/\n    this.onCurrentPageChanging = this.addEvent();\n    /**\n     * An event that is raised after the current page is switched.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/save-and-restore-user-responses-to-complete-survey/ (linkStyle))\n     * @see currentPageNo\n     * @see nextPage\n     * @see prevPage\n     */\n    this.onCurrentPageChanged = this.addEvent();\n    /**\n     * An event that is raised before a question value is changed.\n     * @see setValue\n     */\n    this.onValueChanging = this.addEvent();\n    /**\n     * An event that is raised after a question value is changed.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/save-and-restore-user-responses-to-complete-survey/ (linkStyle))\n     *\n     * To handle value changes in matrix cells or panels within a [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model), use the [`onMatrixCellValueChanged`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onMatrixCellValueChanged) or [`onDynamicPanelValueChanged`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onDynamicPanelValueChanged) event.\n     * @see setValue\n     */\n    this.onValueChanged = this.addEvent();\n    /**\n     * An event that is raised after a [variable](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables) or [calculated value](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#calculated-values) is changed.\n     *\n     * @see setVariable\n     * @see calculatedValues\n     */\n    this.onVariableChanged = this.addEvent();\n    /**\n     * An event that is raised after question visibility is changed.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * Refer to the following help topic for information on how to implement conditional visibility: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n     */\n    this.onQuestionVisibleChanged = this.addEvent();\n    this.onVisibleChanged = this.onQuestionVisibleChanged;\n    /**\n     * An event that is raised after page visibility is changed.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * Refer to the following help topic for information on how to implement conditional visibility: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n     */\n    this.onPageVisibleChanged = this.addEvent();\n    /**\n     * An event that is raised after panel visibility is changed.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * Refer to the following help topic for information on how to implement conditional visibility: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n     */\n    this.onPanelVisibleChanged = this.addEvent();\n    /**\n     * An event that is raised when the survey creates any new object derived from [`Question`](https://surveyjs.io/form-library/documentation/api-reference/question).\n     *\n     * In a survey, complex elements ([Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/), [Multiple Text](https://surveyjs.io/form-library/examples/questiontype-multipletext/), and [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/)) are composed of questions. Use this event to customize any question regardless of which survey element it belongs to.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * To use this event for questions loaded from JSON, create an empty survey model, add an event handler, and only then populate the model from the JSON object:\n     *\n     * ```js\n     * import { Model } from \"survey-core\";\n     *\n     * const surveyJson = {\n     *    // ...\n     * };\n     * // Create an empty model\n     * const survey = new Model();\n     * // Add an event handler\n     * survey.onQuestionCreated.add((sender, options) => {\n     *   //...\n     * });\n     * // Load the survey JSON schema\n     * survey.fromJSON(surveyJson);\n     * ```\n     * @see onQuestionAdded\n     */\n    this.onQuestionCreated = this.addEvent();\n    /**\n     * An event that is raised when a new question is added to a panel or page.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * To use this event for questions loaded from JSON, create an empty survey model, add an event handler, and only then populate the model from the JSON object:\n     *\n     * ```js\n     * import { Model } from \"survey-core\";\n     *\n     * const surveyJson = {\n     *    // ...\n     * };\n     * // Create an empty model\n     * const survey = new Model();\n     * // Add an event handler\n     * survey.onQuestionAdded.add((sender, options) => {\n     *   //...\n     * });\n     * // Load the survey JSON schema\n     * survey.fromJSON(surveyJson);\n     * ```\n     * @see onQuestionCreated\n     */\n    this.onQuestionAdded = this.addEvent();\n    /**\n     * An event that is raised after a question is deleted from the survey.\n     */\n    this.onQuestionRemoved = this.addEvent();\n    /**\n     * An event that is raised when a new panel is added to a page.\n     */\n    this.onPanelAdded = this.addEvent();\n    /**\n     * An event that is raised after a panel is deleted from the survey.\n     */\n    this.onPanelRemoved = this.addEvent();\n    /**\n     * An event that is raised when a new page is added to the survey.\n     * @see PanelModel\n     */\n    this.onPageAdded = this.addEvent();\n    /**\n     * An event that is raised when a question value is being validated. Use this event to add/remove/modify errors or specify a custom error message.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/add-custom-input-validation/ (linkStyle))\n     * @see onServerValidateQuestions\n     * @see onValidatePanel\n     * @see onMatrixCellValidate\n     */\n    this.onValidateQuestion = this.addEvent();\n    /**\n     * @deprecated Use the [`onValidateQuestion`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidateQuestion) property instead.\n     */\n    this.onSettingQuestionErrors = this.addEvent();\n    /**\n     * Use this event to validate data on your server.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/javascript-server-side-form-validation/ (linkStyle))\n     * @see onValidateQuestion\n     * @see onValidatePanel\n     * @see isValidatingOnServer\n     */\n    this.onServerValidateQuestions = this.addEvent();\n    /**\n     * An event that is raised when a panel is being validated. Use this event to add/remove/modify errors or specify a custom error message.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/add-custom-input-validation/ (linkStyle))\n     * @see onValidateQuestion\n     * @see onServerValidateQuestions\n     */\n    this.onValidatePanel = this.addEvent();\n    /**\n     * @deprecated Use the [`onValidateQuestion`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidateQuestion), [`onValidatePanel`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidatePanel), and [`onValidatePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidatePage) events instead.\n     */\n    this.onErrorCustomText = this.addEvent();\n    /**\n     * An event that is raised when a survey page is being validated. Use this event to add/remove/modify errors.\n     */\n    this.onValidatePage = this.addEvent();\n    /**\n     * @deprecated Use the [`onValidatePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onValidatePage) event instead.\n     */\n    this.onValidatedErrorsOnCurrentPage = this.onValidatePage;\n    /**\n     * An event that is raised when the survey processes HTML content. Handle this event to modify HTML content before displaying.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/add-html-form-field/ (linkStyle))\n     * @see completedHtml\n     * @see loadingHtml\n     * @see [QuestionHtmlModel.html](https://surveyjs.io/form-library/documentation/api-reference/add-custom-html-to-survey#html)\n     */\n    this.onProcessHtml = this.addEvent();\n    /**\n     * Use this event to change a question's display text.\n     */\n    this.onGetQuestionDisplayValue = this.addEvent();\n    /**\n     * An event that is raised before the survey displays a question title. Handle this event to modify question titles.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * If you want to modify question numbers, handle the [`onGetQuestionNumber`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetQuestionNumber) event.\n     * @see requiredMark\n     */\n    this.onGetQuestionTitle = this.addEvent();\n    /**\n     * An event that is raised when the survey applies HTML tags to a survey, page, panel, and question title. Handle this event to change the HTML tag of individual titles.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * If you want to specify HTML tags for all titles, use the [`titleTags`](https://surveyjs.io/form-library/documentation/api-reference/settings#titleTags) object in [global settings](https://surveyjs.io/form-library/documentation/api-reference/settings).\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/survey-titletagnames/ (linkStyle))\n     * @see onGetQuestionTitle\n     * @see onGetQuestionNumber\n     */\n    this.onGetTitleTagName = this.addEvent();\n    /**\n     * An event that is raised before the survey calculates a question number. Handle this event to modify question numbers.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * If you want to hide question numbers, disable the [`showQuestionNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showQuestionNumbers) property.\n     * @see onGetQuestionTitle\n     * @see questionStartIndex\n     */\n    this.onGetQuestionNumber = this.addEvent();\n    /**\n     * @deprecated Use the [`onGetQuestionNumber`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetQuestionNumber) event instead.\n     */\n    this.onGetQuestionNo = this.onGetQuestionNumber;\n    /**\n     * An event that is raised before the survey calculates a panel number. Handle this event to modify panel numbers.\n     *\n     * This event is raised only for the panels with a [specified title](https://surveyjs.io/form-library/documentation/api-reference/panel-model#title) and [visible number](https://surveyjs.io/form-library/documentation/api-reference/panel-model#showNumber).\n     */\n    this.onGetPanelNumber = this.addEvent();\n    /**\n     * An event that is raised before the survey calculates a page number. Handle this event to modify page numbers.\n     *\n     * This event is raised only if the [`showPageNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showPageNumbers) property is enabled.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     * @see onGetQuestionTitle\n     * @see questionStartIndex\n     */\n    this.onGetPageNumber = this.addEvent();\n    /**\n     * An event that is raised before the survey displays progress text. Handle this event to change the progress text in code.\n     * @see showProgressBar\n     * @see progressBarLocation\n     * @see progressBarType\n     */\n    this.onGetProgressText = this.addEvent();\n    /**\n     * @deprecated Use the [`onGetProgressText`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetProgressText) event instead.\n     */\n    this.onProgressText = this.onGetProgressText;\n    /**\n     * An event that is raised to convert Markdown content to HTML.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/ (linkStyle))\n     */\n    this.onTextMarkdown = this.addEvent();\n    this.onTextRenderAs = this.addEvent();\n    /**\n     * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n     */\n    this.onSendResult = this.addEvent();\n    /**\n     * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n     */\n    this.onGetResult = this.addEvent();\n    /**\n     * An event that is raised when a respondent opens a dialog window to select files.\n     * @see chooseFiles\n     */\n    this.onOpenFileChooser = this.addEvent();\n    /**\n     * An event that is raised when a File Upload or Signature Pad question starts to upload a file. Applies only if [`storeDataAsText`](https://surveyjs.io/form-library/documentation/api-reference/file-model#storeDataAsText) is `false`. Use this event to upload files to your server.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n     *\n     * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n     * @see uploadFiles\n     * @see onDownloadFile\n     * @see onClearFiles\n     */\n    this.onUploadFiles = this.addEvent();\n    /**\n     * An event that is raised when a File Upload question starts to download a file. Use this event to implement file preview when your server stores only file names.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/store-file-names-in-survey-results/ (linkStyle))\n     * @see downloadFile\n     * @see onClearFiles\n     * @see onUploadFiles\n     */\n    this.onDownloadFile = this.addEvent();\n    /**\n     * An event that is raised when users clear files in a [File Upload](https://surveyjs.io/form-library/documentation/api-reference/file-model) question or clear signature in a [Signature Pad](https://surveyjs.io/form-library/documentation/api-reference/signature-pad-model) question. Use this event to delete files from your server.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n     *\n     * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n     * @see clearFiles\n     * @see onDownloadFile\n     * @see onUploadFiles\n     */\n    this.onClearFiles = this.addEvent();\n    /**\n     * An event that is raised after choices are loaded from a server but before they are assigned to a choice-based question, such as [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) or [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model). Handle this event if you need to modify the loaded choices.\n     */\n    this.onChoicesLoaded = this.addEvent();\n    /**\n     * @deprecated Use the [`onChoicesLoaded`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onChoicesLoaded) event instead.\n     */\n    this.onLoadChoicesFromServer = this.onChoicesLoaded;\n    /**\n     * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n     */\n    this.onLoadedSurveyFromService = this.addEvent();\n    /**\n     * An event that is raised when the survey processes [dynamic texts](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#dynamic-texts) and any text in curly brackets. Use this event, for instance, to substitute parameters in a RESTful URL with real values when you [load choices by URL](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#choicesByUrl).\n     */\n    this.onProcessDynamicText = this.addEvent();\n    /**\n     * @deprecated Use the [`onProcessDynamicText`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onProcessDynamicText) event instead.\n     */\n    this.onProcessTextValue = this.onProcessDynamicText;\n    /**\n     * An event that is raised before rendering a question. Use it to override default question CSS classes.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n     * @see css\n     */\n    this.onUpdateQuestionCssClasses = this.addEvent();\n    /**\n     * An event that is raised before rendering a standalone panel and panels within [Dynamic Panel](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/). Use it to override default panel CSS classes.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n     * @see css\n     */\n    this.onUpdatePanelCssClasses = this.addEvent();\n    /**\n     * An event that is raised before rendering a page. Use it to override default page CSS classes.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n     * @see css\n     */\n    this.onUpdatePageCssClasses = this.addEvent();\n    /**\n     * An event that is raised before rendering a choice item in Radio Button Group, Checkboxes and Rating Scale questions. Use it to override default CSS classes applied to choice items.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n     * @see css\n     */\n    this.onUpdateChoiceItemCss = this.addEvent();\n    /**\n     * An event that is raised after the survey is rendered to the DOM. Use this event to modify survey markup.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/survey-animation/ (linkStyle))\n     */\n    this.onAfterRenderSurvey = this.addEvent();\n    this.onAfterRenderHeader = this.addEvent();\n    /**\n     * An event that is raised after a page is rendered to the DOM. Use it to modify page markup.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/survey-afterrender/ (linkStyle))\n     */\n    this.onAfterRenderPage = this.addEvent();\n    /**\n     * An event that is raised after a question is rendered to the DOM. Use it to modify question markup.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/survey-afterrender/ (linkStyle))\n     */\n    this.onAfterRenderQuestion = this.addEvent();\n    /**\n     * An event that is raised after a question with a single input field is rendered to the DOM. Use it to modify question markup.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * > This event is not raised for questions without input fields ([HTML](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel)) or questions with multiple input fields ([Matrix](https://surveyjs.io/form-library/documentation/questionmatrixmodel), [Multiple Text](https://surveyjs.io/form-library/documentation/questionmultipletextmodel)).\n     */\n    this.onAfterRenderQuestionInput = this.addEvent();\n    /**\n     * An event that is raised after a panel is rendered to the DOM. Use it to modify panel markup.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * > This event is raised for static [Panels](https://surveyjs.io/form-library/examples/set-properties-on-multiple-questions-using-panel/) as well as panels within a [Dynamic Panel](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/).\n     */\n    this.onAfterRenderPanel = this.addEvent();\n    /**\n     * An event that is raised when an element (input field, checkbox, radio button) within a question gets focus.\n     * @see onFocusInPanel\n     * @see autoFocusFirstQuestion\n     * @see focusQuestion\n     */\n    this.onFocusInQuestion = this.addEvent();\n    /**\n     * An event that is raised when an element within a panel gets focus.\n     * @see onFocusInQuestion\n     * @see autoFocusFirstQuestion\n     * @see focusQuestion\n     */\n    this.onFocusInPanel = this.addEvent();\n    /**\n     * An event that is raised before a [choice item](https://surveyjs.io/form-library/documentation/api-reference/questionselectbase#choices) is displayed. Use this event to change the visibility of individual choice items in [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model), [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model), [Radio Button Group](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model), and other similar question types.\n     */\n    this.onShowingChoiceItem = this.addEvent();\n    /**\n     * Use this event to load choice items in [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel) and [Tag Box](https://surveyjs.io/form-library/documentation/questiontagboxmodel) questions on demand.\n     *\n     * This event is raised only for those questions that have the [`choicesLazyLoadEnabled`](https://surveyjs.io/form-library/documentation/questiondropdownmodel#choicesLazyLoadEnabled) property set to `true`.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/lazy-loading-dropdown/ (linkStyle))\n     */\n    this.onChoicesLazyLoad = this.addEvent();\n    /**\n     * An event that is raised each time a search string in a [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) or [Tag Box](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) question changes. Use this event to implement custom filtering of choice options.\n     * @see [QuestionDropdownModel.searchEnabled](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#searchEnabled)\n     * @see [QuestionDropdownModel.searchMode](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#searchMode)\n     */\n    this.onChoicesSearch = this.addEvent();\n    /**\n     * Use this event to load a display text for the [default choice item](https://surveyjs.io/form-library/documentation/questiondropdownmodel#defaultValue) in [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel) and [Tag Box](https://surveyjs.io/form-library/documentation/questiontagboxmodel) questions.\n     *\n     * If you load choices from a server (use [`choicesByUrl`](https://surveyjs.io/form-library/documentation/questiondropdownmodel#choicesByUrl) or [`onChoicesLazyLoad`](https://surveyjs.io/form-library/documentation/surveymodel#onChoicesLazyLoad)), display texts become available only when data is loaded, which does not happen until a user opens the drop-down menu. However, a display text for a default choice item is required before that. In this case, you can load data individually for the default item within the `onGetChoiceDisplayValue` event handler.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/lazy-loading-dropdown/ (linkStyle))\n     */\n    this.onGetChoiceDisplayValue = this.addEvent();\n    /**\n     * An event that is raised after a new row is added to a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n     */\n    this.onMatrixRowAdded = this.addEvent();\n    /**\n     * An event that is raised before a new row is added to a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n     */\n    this.onMatrixRowAdding = this.addEvent();\n    /**\n     * @deprecated Use the [`onMatrixRowAdding`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onMatrixRowAdding) event instead.\n     */\n    this.onMatrixBeforeRowAdded = this.onMatrixRowAdding;\n    /**\n     * An event that is raised before a row is deleted from a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/). You can cancel row deletion and clear row data instead.\n     * @see onMatrixRenderRemoveButton\n     */\n    this.onMatrixRowRemoving = this.addEvent();\n    /**\n     * An event that is raised after a row is deleted from a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n     * @see onMatrixRenderRemoveButton\n     */\n    this.onMatrixRowRemoved = this.addEvent();\n    /**\n     * An event that is raised before rendering the Remove button in a row of a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/). Use this event to hide the Remove button for individual matrix rows.\n     * @see onMatrixRowRemoving\n     * @see onMatrixRowRemoved\n     */\n    this.onMatrixRenderRemoveButton = this.addEvent();\n    /**\n     * @deprecated Use the [`onMatrixRenderRemoveButton`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onMatrixRenderRemoveButton) event instead.\n     */\n    this.onMatrixAllowRemoveRow = this.onMatrixRenderRemoveButton;\n    /**\n     * An event that is raised after the visibility of an [expandable detail section](https://surveyjs.io/form-library/examples/add-expandable-details-section-under-matrix-rows/) is changed. This event can be raised for [Multi-Select](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) and [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model) questions.\n     */\n    this.onMatrixDetailPanelVisibleChanged = this.addEvent();\n    /**\n     * An event that is raised before a cell in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) is created. Use this event to change the type of individual matrix cells.\n     * @see onAfterRenderMatrixCell\n     */\n    this.onMatrixCellCreating = this.addEvent();\n    /**\n      * An event that is raised after a cell in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) is created.\n      * @see onAfterRenderMatrixCell\n      */\n    this.onMatrixCellCreated = this.addEvent();\n    /**\n     * An event that is raised after a cell in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) is rendered to the DOM.\n     * @see onMatrixCellCreated\n     */\n    this.onAfterRenderMatrixCell = this.addEvent();\n    /**\n     * @deprecated Use the [`onAfterRenderMatrixCell`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onAfterRenderMatrixCell) event instead.\n     */\n    this.onMatrixAfterCellRender = this.onAfterRenderMatrixCell;\n    /**\n     * An event that is raised after a cell value is changed in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n     * @see onMatrixRowAdding\n     */\n    this.onMatrixCellValueChanged = this.addEvent();\n    /**\n     * An event that is raised before a cell value is changed in a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/). Use this event to change the cell value.\n     * @see onMatrixRowAdding\n     */\n    this.onMatrixCellValueChanging = this.addEvent();\n    /**\n     * An event that is raised for [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) and [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) questions when they validate a cell value. Use this event to display a custom error message based on a condition.\n     * @see onMatrixRowAdding\n     */\n    this.onMatrixCellValidate = this.addEvent();\n    /**\n     * An event that is raised after a new column is added to a [Multi-Select Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdropdown/) or [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n     */\n    this.onMatrixColumnAdded = this.addEvent();\n    /**\n     * An event that is raised on adding a new item in Multiple Text question.\n     */\n    this.onMultipleTextItemAdded = this.addEvent();\n    /**\n     * An event that is raised after a new panel is added to a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n     */\n    this.onDynamicPanelAdded = this.addEvent();\n    /**\n     * An event that is raised after a panel is deleted from a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n     */\n    this.onDynamicPanelRemoved = this.addEvent();\n    /**\n     * An event that is raised before a panel is deleted from a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question. Use this event to cancel the deletion.\n     */\n    this.onDynamicPanelRemoving = this.addEvent();\n    /**\n    * An event that is raised every second while the timer is running.\n    *\n    * Use the [`timeSpent`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeSpent) property to find out how many seconds have elapsed.\n    * @see timeLimit\n    * @see timeLimitPerPage\n    * @see showTimer\n    * @see timerLocation\n    * @see startTimer\n    */\n    this.onTimerTick = this.addEvent();\n    /**\n     * @deprecated Use the [`onTimerTick`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTimerTick) event instead.\n     */\n    this.onTimer = this.onTimerTick;\n    this.onTimerPanelInfoText = this.addEvent();\n    /**\n     * An event that is raised after a value is changed in a panel within a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n     */\n    this.onDynamicPanelValueChanged = this.addEvent();\n    /**\n     * @deprecated Use the [`onDynamicPanelValueChanged`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onDynamicPanelValueChanged) event instead.\n     */\n    this.onDynamicPanelItemValueChanged = this.onDynamicPanelValueChanged;\n    /**\n     * An event that is raised before a value is changed in a panel within a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n     */\n    this.onDynamicPanelValueChanging = this.addEvent();\n    /**\n     * An event that is raised before a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) renders [tab titles](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateTabTitle). Use this event to change individual tab titles.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/tabbed-interface-for-duplicate-group-option/ (linkStyle))\n     */\n    this.onGetDynamicPanelTabTitle = this.addEvent();\n    /**\n     * An event that is raised after the current panel is changed in a [Dynamic Panel](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/) question.\n     */\n    this.onDynamicPanelCurrentIndexChanged = this.addEvent();\n    /**\n     * An event that is raised to define whether a question answer is correct. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n     */\n    this.onCheckAnswerCorrect = this.addEvent();\n    /**\n     * @deprecated Use the [`onCheckAnswerCorrect`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCheckAnswerCorrect) event instead.\n     */\n    this.onIsAnswerCorrect = this.onCheckAnswerCorrect;\n    /**\n     * An event that is raised when users drag and drop survey elements while designing the survey in [Survey Creator](https://surveyjs.io/survey-creator/documentation/overview). Use this event to control drag and drop operations.\n     * @see isDesignMode\n     */\n    this.onDragDropAllow = this.addEvent();\n    this.onMatrixRowDragOver = this.addEvent();\n    /**\n     * An event this is raised before a survey element (usually page) is scrolled to the top. Use this event to cancel the scroll operation.\n     */\n    this.onScrollToTop = this.addEvent();\n    /**\n     * @deprecated Use the [`onScrollToTop`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onScrollToTop) event instead.\n     */\n    this.onScrollingElementToTop = this.onScrollToTop;\n    this.onLocaleChangedEvent = this.addEvent();\n    /**\n     * An event that allows you to add, delete, or modify actions in a question title.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/survey-titleactions/ (linkStyle))\n     * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n    */\n    this.onGetQuestionTitleActions = this.addEvent();\n    /**\n     * An event that allows you to add, delete, or modify actions in a panel title.\n     * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n     */\n    this.onGetPanelTitleActions = this.addEvent();\n    /**\n     * An event that allows you to add, delete, or modify actions in a page title.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/modify-titles-of-survey-elements/ (linkStyle))\n     * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n     */\n    this.onGetPageTitleActions = this.addEvent();\n    /**\n     * An event that allows you to add, delete, or modify actions in the footer of a [Panel](https://surveyjs.io/form-library/documentation/panelmodel). This panel may belong to a [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model) or be a standalone survey element.\n     * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n     */\n    this.onGetPanelFooterActions = this.addEvent();\n    /**\n     * An event that allows you to add, delete, or modify actions in rows of a [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/).\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/employee-information-form/ (linkStyle))\n     * @see [IAction](https://surveyjs.io/form-library/documentation/api-reference/iaction)\n     */\n    this.onGetMatrixRowActions = this.addEvent();\n    this.onElementContentVisibilityChanged = this.addEvent();\n    /**\n     * An event that is raised before an [Expression](https://surveyjs.io/form-library/documentation/api-reference/expression-model) question displays a value. Use this event to override the display value.\n     */\n    this.onGetExpressionDisplayValue = this.addEvent();\n    this.onCheckSingleInputPerPageMode = this.addEvent();\n    /**\n     * An event that is raised after the visibility of a popup is changed.\n     *\n     * This event can be raised for [Single-](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) and [Multi-Select Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) questions and [Rating Scale](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model) questions [rendered as drop-down menus](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#displayMode), and [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) questions that contain columns of the `\"dropdown\"` or `\"tagbox\"` [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#cellType).\n     */\n    this.onPopupVisibleChanged = this.addEvent();\n    /**\n     * An event that is raised when users open a drop-down menu.\n     *\n     * This event can be raised for [Single-](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) and [Multi-Select Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) questions, [Rating Scale](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model) questions [rendered as drop-down menus](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#displayMode), and [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list) questions that contain columns of the `\"dropdown\"` or `\"tagbox\"` [`cellType`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list#cellType). Handle this event to change the drop-down menu type for specific questions or device types.\n     */\n    this.onOpenDropdownMenu = this.addEvent();\n    this.onElementWrapperComponentName = this.addEvent();\n    this.onElementWrapperComponentData = this.addEvent();\n    /**\n     * An event that is raised when users add a custom choice option to a [Single-](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model) or [Multi-Select Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-tag-box-model) question. Handle this event to save the choice option in a data storage.\n     *\n     * For information on event handler parameters, refer to descriptions within the interface.\n     *\n     * To let users add their own choice options, enable the [`allowCustomChoices`](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model#allowCustomChoices) property for individual dropdown questions.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/dropdown-custom-choice-options/ (linkStyle))\n     */\n    this.onCreateCustomChoiceItem = this.addEvent();\n    /**\n     * A list of errors in a survey JSON schema.\n     * @see ensureUniqueNames\n     */\n    this.jsonErrors = null;\n    this.cssValue = null;\n    /**\n     * Specifies whether the [Complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page) should display the [survey header](https://surveyjs.io/form-library/examples/brand-your-survey-header/).\n     *\n     * Possible values:\n     *\n     * - `true` - Displays the survey header on the Complete page.\n     * - `false` - Hides the header when users reach the Complete page.\n     * - `\"auto\"` (default) - Displays a header with the basic view, but hides a header with the advanced view (see the [`headerView`](https://surveyjs.io/form-library/documentation/api-reference/itheme#headerView) property description).\n     *\n     * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n     */\n    this.showHeaderOnCompletePage = \"auto\";\n    this._isLazyRenderingSuspended = false;\n    /**\n     * Specifies whether to hide validation errors thrown by the Required validation in the UI.\n     *\n     * [Built-In Client-Side Validators](https://surveyjs.io/form-library/documentation/data-validation#built-in-client-side-validators (linkStyle))\n     * @see validationEnabled\n     * @see validationAllowSwitchPages\n     */\n    this.hideRequiredErrors = false;\n    //#endregion\n    this.cssVariables = {};\n    this._isMobile = false;\n    this._isCompact = false;\n    this.setValueOnExpressionCounter = 0;\n    this._isDesignMode = false;\n    /**\n     * Specifies whether respondents can switch the current page even if it contains validation errors.\n     *\n     * Default value: `false`\n     * @see checkErrorsMode\n     */\n    this.validationAllowSwitchPages = false;\n    /**\n     * Specifies whether respondents can end a survey with validation errors.\n     *\n     * Default value: `false`\n     * @see checkErrorsMode\n     */\n    this.validationAllowComplete = false;\n    this.isNavigationButtonPressed = false;\n    this.mouseDownPage = null;\n    this.isSmoothScrollEnabled = false;\n    /**\n     * An event that is raised when the survey's width or height is changed.\n     */\n    this.onResize = new EventBase();\n    this.isCurrentPageRendering = true;\n    this.isCurrentPageRendered = undefined;\n    this.skeletonHeight = undefined;\n    this.isTriggerIsRunning = false;\n    this.triggerValues = null;\n    this.triggerKeys = null;\n    this.conditionValues = null;\n    this.isValueChangedOnRunningCondition = false;\n    this.conditionRunnerCounter = 0;\n    this.conditionUpdateVisibleIndexes = false;\n    this.conditionNotifyElementsOnAnyValueOrVariableChanged = false;\n    this.isEndLoadingFromJson = null;\n    this.nofifyQuesitonHash = {};\n    this.questionHashes = {\n      names: {},\n      namesInsensitive: {},\n      valueNames: {},\n      valueNamesInsensitive: {}\n    };\n    this.setValueFromTriggerCounter = 0;\n    this.isMovingPage = false;\n    this.needRenderIcons = true;\n    this.skippedPages = [];\n    this.skeletonComponentName = \"sv-skeleton\";\n    this.taskManager = new SurveyTaskManagerModel();\n    this.questionErrorComponent = \"sv-question-error\";\n    this.onBeforeRunConstructor();\n    // if (DomDocumentHelper.isAvailable()) {\n    //   SurveyModel.stylesManager = new StylesManager();\n    // }\n    this.createHtmlLocString(\"completedHtml\", \"completingSurvey\");\n    this.createHtmlLocString(\"completedBeforeHtml\", \"completingSurveyBefore\", \"completed-before\");\n    this.createHtmlLocString(\"loadingHtml\", \"loadingSurvey\", \"loading\");\n    this.createLocalizableString(\"emptySurveyText\", this, true, \"emptySurvey\");\n    this.createLocalizableString(\"logo\", this, false);\n    this.createLocalizableString(\"startSurveyText\", this, false, true);\n    this.createLocalizableString(\"pagePrevText\", this, false, true);\n    this.createLocalizableString(\"pageNextText\", this, false, true);\n    this.createLocalizableString(\"completeText\", this, false, true);\n    this.createLocalizableString(\"previewText\", this, false, true);\n    this.createLocalizableString(\"editText\", this, false, true);\n    this.createLocalizableString(\"questionTitleTemplate\", this, true);\n    this.timerModelValue = new SurveyTimerModel(this);\n    this.timerModelValue.onTimerTick = page => {\n      this.doTimer(page);\n    };\n    this.createNewArray(\"pages\", value => {\n      if (value.isReadyForCleanChangedCallback) {\n        value.isReadyForCleanChangedCallback();\n      }\n      this.doOnPageAdded(value);\n    }, value => {\n      if (!value.isReadyForClean) {\n        value.isReadyForCleanChangedCallback = () => {\n          this.doOnPageRemoved(value);\n          value.isReadyForCleanChangedCallback = undefined;\n        };\n      } else {\n        this.doOnPageRemoved(value);\n      }\n    });\n    this.createNewArray(\"triggers\", value => {\n      value.setOwner(this);\n    });\n    this.createNewArray(\"calculatedValues\", value => {\n      value.setOwner(this);\n    });\n    this.createNewArray(\"completedHtmlOnCondition\", value => {\n      value.locOwner = this;\n    });\n    this.createNewArray(\"navigateToUrlOnCondition\", value => {\n      value.locOwner = this;\n    });\n    this.registerPropertyChangedHandlers([\"locale\"], () => {\n      this.onSurveyLocaleChanged();\n    });\n    this.registerPropertyChangedHandlers([\"firstPageIsStartPage\"], () => {\n      this.onFirstPageIsStartedChanged();\n    });\n    this.registerPropertyChangedHandlers([\"readOnly\"], () => {\n      this.onReadOnlyChanged();\n    });\n    this.registerPropertyChangedHandlers([\"progressBarType\"], () => {\n      this.updateProgressText();\n    });\n    this.registerPropertyChangedHandlers([\"questionStartIndex\", \"requiredMark\", \"questionTitlePattern\"], () => {\n      this.resetVisibleIndexes();\n    });\n    this.registerPropertyChangedHandlers([\"isLoading\", \"isCompleted\", \"isCompletedBefore\", \"readOnly\", \"isStartedState\", \"currentPage\", \"isShowingPreview\"], () => {\n      this.updateState();\n    });\n    this.registerPropertyChangedHandlers([\"state\", \"currentPage\", \"showPreviewBeforeComplete\"], () => {\n      this.onStateAndCurrentPageChanged();\n    });\n    this.registerPropertyChangedHandlers([\"logo\", \"logoPosition\"], () => {\n      this.resetHasLogo();\n    });\n    this.registerPropertyChangedHandlers([\"backgroundImage\"], () => {\n      this.resetPropertyValue(\"renderBackgroundImage\");\n    });\n    this.registerPropertyChangedHandlers([\"backgroundImage\", \"backgroundOpacity\", \"backgroundImageFit\", \"fitToContainer\", \"backgroundImageAttachment\"], () => {\n      this.resetPropertyValue(\"backgroundImageStyle\");\n    });\n    this.registerPropertyChangedHandlers([\"showPrevButton\", \"showCompleteButton\"], () => {\n      this.updateButtonsVisibility();\n    });\n    this.onGetQuestionNumber.onCallbacksChanged = () => {\n      this.resetVisibleIndexes();\n    };\n    this.onGetPanelNumber.onCallbacksChanged = () => {\n      this.resetVisibleIndexes();\n    };\n    this.onGetProgressText.onCallbacksChanged = () => {\n      this.updateProgressText();\n    };\n    this.onTextMarkdown.onCallbacksChanged = () => {\n      this.locStrsChanged();\n    };\n    this.onProcessHtml.onCallbacksChanged = () => {\n      this.locStrsChanged();\n    };\n    this.onGetQuestionTitle.onCallbacksChanged = () => {\n      this.locStrsChanged();\n    };\n    this.onUpdatePageCssClasses.onCallbacksChanged = () => {\n      this.currentPage && this.currentPage.updateElementCss();\n    };\n    this.onUpdatePanelCssClasses.onCallbacksChanged = () => {\n      this.currentPage && this.currentPage.updateElementCss();\n    };\n    this.onUpdateQuestionCssClasses.onCallbacksChanged = () => {\n      this.currentPage && this.currentPage.updateElementCss();\n    };\n    this.onShowingChoiceItem.onCallbacksChanged = () => {\n      this.rebuildQuestionChoices();\n    };\n    this.locTitle.onStringChanged.add(() => this.resetPropertyValue(\"titleIsEmpty\"));\n    this.onBeforeCreating();\n    if (jsonObj) {\n      if (typeof jsonObj === \"string\" || jsonObj instanceof String) {\n        jsonObj = JSON.parse(jsonObj);\n      }\n      if (jsonObj && jsonObj.clientId) {\n        this.clientId = jsonObj.clientId;\n      }\n      this.fromJSON(jsonObj);\n      if (this.surveyId) {\n        this.loadSurveyFromService(this.surveyId, this.clientId);\n      }\n    }\n    this.onCreating();\n    if (!!renderedElement) {\n      this.render(renderedElement);\n    }\n    this.updateCss();\n    this.setCalculatedWidthModeUpdater();\n    this.notifier = new Notifier(this.css.saveData);\n    this.notifier.addAction(this.createTryAgainAction(), \"error\");\n    this.onPopupVisibleChanged.add((_, opt) => {\n      if (opt.visible) {\n        this.onScrollCallback = () => {\n          opt.popup.hide();\n        };\n      } else {\n        this.onScrollCallback = undefined;\n      }\n    });\n    this.layoutElements.push({\n      id: \"timerpanel\",\n      template: \"survey-timerpanel\",\n      component: \"sv-timerpanel\",\n      data: this.timerModel\n    });\n    this.layoutElements.push({\n      id: \"progress-buttons\",\n      component: \"sv-progress-buttons\",\n      getData: () => this.progressBar,\n      processResponsiveness: width => this.progressBar.processResponsiveness && this.progressBar.processResponsiveness(width)\n    });\n    this.layoutElements.push({\n      id: \"progress-questions\",\n      component: \"sv-progress-questions\",\n      data: this\n    });\n    this.layoutElements.push({\n      id: \"progress-pages\",\n      component: \"sv-progress-pages\",\n      data: this\n    });\n    this.layoutElements.push({\n      id: \"progress-correctquestions\",\n      component: \"sv-progress-correctquestions\",\n      data: this\n    });\n    this.layoutElements.push({\n      id: \"progress-requiredquestions\",\n      component: \"sv-progress-requiredquestions\",\n      data: this\n    });\n    this.addLayoutElement({\n      id: \"toc-navigation\",\n      component: \"sv-navigation-toc\",\n      getData: () => this.tocModel,\n      processResponsiveness: width => this.tocModel.updateStickyTOCSize(this.rootElement)\n    });\n    this.layoutElements.push({\n      id: \"buttons-navigation\",\n      component: \"sv-action-bar\",\n      getData: () => this.navigationBar\n    });\n  }\n  get tocModel() {\n    if (!this.tocModelValue) {\n      this.tocModelValue = new TOCModel(this);\n    }\n    return this.tocModelValue;\n  }\n  get sjsVersion() {\n    return this.getPropertyValue(\"sjsVersion\");\n  }\n  set sjsVersion(val) {\n    this.setPropertyValue(\"sjsVersion\", val);\n  }\n  processClosedPopup(question, popupModel) {\n    throw new Error(\"Method not implemented.\");\n  }\n  createTryAgainAction() {\n    return {\n      id: \"save-again\",\n      title: this.getLocalizationString(\"saveAgainButton\"),\n      action: () => {\n        if (this.isCompleted) {\n          this.saveDataOnComplete();\n        } else {\n          this.doComplete();\n        }\n      }\n    };\n  }\n  createHtmlLocString(name, locName, reason) {\n    const res = this.createLocalizableString(name, this, false, locName);\n    if (reason) {\n      res.onGetTextCallback = str => {\n        return this.processHtml(str, reason);\n      };\n    }\n  }\n  getType() {\n    return \"survey\";\n  }\n  onPropertyValueChanged(name, oldValue, newValue) {\n    if (name === \"questionsOnPageMode\") {\n      this.onQuestionsOnPageModeChanged(oldValue);\n    }\n  }\n  /**\n   * Returns an array of all pages in the survey.\n   *\n   * To get an array of only visible pages, use the [`visiblePages`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#visiblePages) array.\n   * @see PageModel\n   */\n  get pages() {\n    return this.getPropertyValue(\"pages\");\n  }\n  render(element = null) {\n    if (this.renderCallback) {\n      this.renderCallback();\n    }\n  }\n  updateSurvey(newProps, oldProps) {\n    for (var key in newProps) {\n      if (key == \"model\" || key == \"children\") continue;\n      if (key.indexOf(\"on\") == 0 && this[key] && this[key].add) {\n        let funcBody = newProps[key];\n        let func = function (sender, options) {\n          funcBody(sender, options);\n        };\n        this[key].add(func);\n      } else {\n        this[key] = newProps[key];\n      }\n    }\n    if (newProps && newProps.data) this.onValueChanged.add((sender, options) => {\n      newProps.data[options.name] = options.value;\n    });\n  }\n  getCss() {\n    return this.css;\n  }\n  updateCompletedPageCss() {\n    this.containerCss = this.css.container;\n    this.completedCss = new CssClassBuilder().append(this.css.body).append(this.css.completedPage).toString(); // for completed page\n    this.completedBeforeCss = new CssClassBuilder().append(this.css.body).append(this.css.completedBeforePage).toString();\n    this.loadingBodyCss = new CssClassBuilder().append(this.css.body).append(this.css.bodyLoading).toString();\n  }\n  updateCss() {\n    this.rootCss = this.getRootCss();\n    this.updateNavigationCss();\n    this.updateCompletedPageCss();\n    this.updateWrapperFormCss();\n  }\n  /**\n   * Gets or sets an object in which keys are UI elements and values are CSS classes applied to them.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-survey-with-css/ (linkStyle))\n   */\n  get css() {\n    if (!this.cssValue) {\n      this.cssValue = {};\n      this.copyCssClasses(this.cssValue, surveyCss.getCss());\n    }\n    return this.cssValue;\n  }\n  set css(value) {\n    this.setCss(value);\n  }\n  setCss(value, needMerge = true) {\n    if (needMerge) {\n      this.mergeValues(value, this.css);\n    } else {\n      this.cssValue = value;\n    }\n    this.updateElementCss(false);\n  }\n  get cssTitle() {\n    return this.css.title;\n  }\n  get cssNavigationComplete() {\n    return this.getNavigationCss(this.cssSurveyNavigationButton, this.css.navigation.complete);\n  }\n  get cssNavigationPreview() {\n    return this.getNavigationCss(this.cssSurveyNavigationButton, this.css.navigation.preview);\n  }\n  get cssNavigationEdit() {\n    return this.getNavigationCss(this.css.navigationButton, this.css.navigation.edit);\n  }\n  get cssNavigationPrev() {\n    return this.getNavigationCss(this.cssSurveyNavigationButton, this.css.navigation.prev);\n  }\n  get cssNavigationStart() {\n    return this.getNavigationCss(this.cssSurveyNavigationButton, this.css.navigation.start);\n  }\n  get cssNavigationNext() {\n    return this.getNavigationCss(this.cssSurveyNavigationButton, this.css.navigation.next);\n  }\n  get cssSurveyNavigationButton() {\n    return new CssClassBuilder().append(this.css.navigationButton).append(this.css.bodyNavigationButton).toString();\n  }\n  get bodyCss() {\n    return new CssClassBuilder().append(this.css.body).append(this.css.bodyWithTimer, this.showTimer && this.state === \"running\").append(this.css.body + \"--\" + this.calculatedWidthMode).toString();\n  }\n  get bodyContainerCss() {\n    return this.css.bodyContainer;\n  }\n  insertAdvancedHeader(advHeader) {\n    advHeader.survey = this;\n    this.layoutElements.push({\n      id: \"advanced-header\",\n      container: \"header\",\n      component: \"sv-header\",\n      index: -100,\n      data: advHeader,\n      processResponsiveness: width => advHeader.processResponsiveness()\n    });\n  }\n  getNavigationCss(main, btn) {\n    return new CssClassBuilder().append(main).append(btn).toString();\n  }\n  /**\n   * Specifies whether to enable lazy rendering.\n   *\n   * In default mode, a survey renders the entire current page. With lazy rendering, the survey renders the page gradually as a user scrolls it. This helps reduce survey startup time and optimizes large surveys for low-end devices.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-lazy/ (linkStyle))\n   * @see [settings.lazyRender](https://surveyjs.io/form-library/documentation/api-reference/settings#lazyRender)\n   */\n  get lazyRenderEnabled() {\n    return this.lazyRenderEnabledValue === true;\n  }\n  set lazyRenderEnabled(val) {\n    if (this.lazyRenderEnabled === val) return;\n    this.lazyRenderEnabledValue = val;\n    const page = this.currentPage;\n    if (!!page) {\n      page.updateRows();\n    }\n  }\n  /**\n   * @deprecated Use the [`lazyRenderEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#lazyRenderEnabled) property instead.\n   */\n  get lazyRendering() {\n    return this.lazyRenderEnabled;\n  }\n  set lazyRendering(val) {\n    this.lazyRenderEnabled = val;\n  }\n  get isLazyRendering() {\n    return this.lazyRenderEnabled || settings.lazyRender.enabled;\n  }\n  get lazyRenderFirstBatchSize() {\n    return this.lazyRenderFirstBatchSizeValue || settings.lazyRender.firstBatchSize;\n  }\n  set lazyRenderFirstBatchSize(val) {\n    this.lazyRenderFirstBatchSizeValue = val;\n  }\n  get isLazyRenderingSuspended() {\n    return this._isLazyRenderingSuspended;\n  }\n  suspendLazyRendering() {\n    if (!this.isLazyRendering) return;\n    this._isLazyRenderingSuspended = true;\n  }\n  releaseLazyRendering() {\n    if (!this.isLazyRendering) return;\n    this._isLazyRenderingSuspended = false;\n  }\n  updateLazyRenderingRowsOnRemovingElements() {\n    var _a, _b;\n    if (!this.isLazyRendering) return;\n    var page = this.currentPage;\n    if (!!page) {\n      const htmlElement = (_b = this.rootElement || ((_a = this.creator) === null || _a === void 0 ? void 0 : _a.rootElement)) === null || _b === void 0 ? void 0 : _b.querySelector(`#${page.id}`);\n      activateLazyRenderingChecks(htmlElement);\n    }\n  }\n  /**\n   * A list of triggers in the survey.\n   *\n   * [Conditional Survey Logic (Triggers)](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers (linkStyle))\n   * @see runTriggers\n   * @see onTriggerExecuted\n   */\n  get triggers() {\n    return this.getPropertyValue(\"triggers\");\n  }\n  set triggers(val) {\n    this.setPropertyValue(\"triggers\", val);\n  }\n  /**\n   * An array of [calculated values](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#calculated-values).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/custom-variables-for-background-form-calculations/ (linkStyle))\n   */\n  get calculatedValues() {\n    return this.getPropertyValue(\"calculatedValues\");\n  }\n  set calculatedValues(val) {\n    this.setPropertyValue(\"calculatedValues\", val);\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  get surveyId() {\n    return this.getPropertyValue(\"surveyId\", \"\");\n  }\n  set surveyId(val) {\n    this.setPropertyValue(\"surveyId\", val);\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  get surveyPostId() {\n    return this.getPropertyValue(\"surveyPostId\", \"\");\n  }\n  set surveyPostId(val) {\n    this.setPropertyValue(\"surveyPostId\", val);\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  get clientId() {\n    return this.getPropertyValue(\"clientId\", \"\");\n  }\n  set clientId(val) {\n    this.setPropertyValue(\"clientId\", val);\n  }\n  /**\n   * A cookie name used to save information about survey completion.\n   *\n   * When this property has a value, the survey creates a cookie with the specified name on completion. This cookie helps ensure that users do not pass the same survey twice. On the second run, they will see the [Completed Before page](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completedBeforeHtml).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-prevent-duplicate-form-submissions/ (linkStyle))\n   * @see clientId\n   */\n  get cookieName() {\n    return this.getPropertyValue(\"cookieName\", \"\");\n  }\n  set cookieName(val) {\n    this.setPropertyValue(\"cookieName\", val);\n  }\n  /**\n   * Specifies whether to save survey results when respondents switch between pages. Handle the [`onPartialSend`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onPartialSend) event to implement the save operation.\n   *\n   * Alternatively, you can handle the [`onCurrentPageChanged`](#onCurrentPageChanged) and [`onValueChanged`](#onValueChanged) events, as shown in the following demo: [Continue an Incomplete Survey](https://surveyjs.io/form-library/examples/survey-editprevious/).\n   */\n  get partialSendEnabled() {\n    return this.getPropertyValue(\"partialSendEnabled\");\n  }\n  set partialSendEnabled(val) {\n    this.setPropertyValue(\"partialSendEnabled\", val);\n  }\n  /**\n   * @deprecated Use the [`partialSendEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#partialSendEnabled) property instead.\n   */\n  get sendResultOnPageNext() {\n    return this.partialSendEnabled;\n  }\n  set sendResultOnPageNext(val) {\n    this.partialSendEnabled = val;\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  get surveyShowDataSaving() {\n    return this.getPropertyValue(\"surveyShowDataSaving\");\n  }\n  set surveyShowDataSaving(val) {\n    this.setPropertyValue(\"surveyShowDataSaving\", val);\n  }\n  /**\n   * Specifies whether to focus the first question on the page on survey startup or when users switch between pages.\n   *\n   * Default value: `false` in v1.9.114 and later, `true` in earlier versions\n   * @see autoFocusFirstError\n   * @see focusFirstQuestion\n   * @see focusQuestion\n   */\n  get autoFocusFirstQuestion() {\n    return this.getPropertyValue(\"autoFocusFirstQuestion\");\n  }\n  set autoFocusFirstQuestion(val) {\n    this.setPropertyValue(\"autoFocusFirstQuestion\", val);\n  }\n  /**\n   * @deprecated Use the [`autoFocusFirstQuestion`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoFocusFirstQuestion) property instead.\n   */\n  get focusFirstQuestionAutomatic() {\n    return this.autoFocusFirstQuestion;\n  }\n  set focusFirstQuestionAutomatic(val) {\n    this.autoFocusFirstQuestion = val;\n  }\n  /**\n   * Specifies whether to focus the first question with a validation error on the current page.\n   *\n   * Default value: `true`\n   * @see validate\n   * @see autoFocusFirstQuestion\n   */\n  get autoFocusFirstError() {\n    return this.getPropertyValue(\"autoFocusFirstError\");\n  }\n  set autoFocusFirstError(val) {\n    this.setPropertyValue(\"autoFocusFirstError\", val);\n  }\n  /**\n   * @deprecated Use the [`autoFocusFirstError`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoFocusFirstError) property instead.\n   */\n  get focusOnFirstError() {\n    return this.autoFocusFirstError;\n  }\n  set focusOnFirstError(val) {\n    this.autoFocusFirstError = val;\n  }\n  /**\n   * Gets or sets the visibility of the Start, Next, Previous, and Complete navigation buttons.\n   *\n   * Possible values:\n   *\n   * - `true` (default) - Displays the navigation buttons.\n   * - `false` - Hides the navigation buttons. This setting may be useful if you [implement custom external navigation](https://surveyjs.io/form-library/examples/external-form-navigation-system/).\n   * @see navigationButtonsLocation\n   * @see autoAdvanceEnabled\n   * @see showPrevButton\n   * @see showCompleteButton\n   */\n  get showNavigationButtons() {\n    return this.getPropertyValue(\"showNavigationButtons\");\n  }\n  set showNavigationButtons(val) {\n    if (val === true || val === false) {\n      this.setPropertyValue(\"showNavigationButtons\", val);\n    } else if (val === \"none\") {\n      this.setPropertyValue(\"showNavigationButtons\", false);\n    } else if ([\"top\", \"bottom\", \"both\", \"topBottom\"].indexOf(val) > -1) {\n      this.setPropertyValue(\"showNavigationButtons\", true);\n      this.navigationButtonsLocation = val;\n    }\n  }\n  /**\n   * Gets or sets the position of the Start, Next, Previous, and Complete navigation buttons. Applies only if the [`showNavigationButtons`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showNavigationButtons) property is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"bottom\"` (default) - Displays the navigation buttons below survey content.\n   * - `\"top\"` - Displays the navigation buttons above survey content.\n   * - `\"topBottom\"` - Displays the navigation buttons above and below survey content.\n   * @see autoAdvanceEnabled\n   * @see showPrevButton\n   * @see showCompleteButton\n   */\n  get navigationButtonsLocation() {\n    return this.getPropertyValue(\"navigationButtonsLocation\");\n  }\n  set navigationButtonsLocation(val) {\n    this.setPropertyValue(\"navigationButtonsLocation\", val);\n  }\n  /**\n   * Specifies whether to display the Previous button. Set this property to `false` if respondents should not move backward along the survey.\n   * @see showNavigationButtons\n   * @see showCompleteButton\n   */\n  get showPrevButton() {\n    return this.getPropertyValue(\"showPrevButton\");\n  }\n  set showPrevButton(val) {\n    this.setPropertyValue(\"showPrevButton\", val);\n  }\n  /**\n   * Specifies whether to display the Complete button. Set this property to `false` if respondents should not complete the survey.\n   * @see showNavigationButtons\n   * @see showPrevButton\n   */\n  get showCompleteButton() {\n    return this.getPropertyValue(\"showCompleteButton\", true);\n  }\n  set showCompleteButton(val) {\n    this.setPropertyValue(\"showCompleteButton\", val);\n  }\n  /**\n   * Gets or sets the visibility of the table of contents.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/toc-feature/ (linkStyle))\n   * @see tocLocation\n   */\n  get showTOC() {\n    return this.getPropertyValue(\"showTOC\");\n  }\n  set showTOC(val) {\n    this.setPropertyValue(\"showTOC\", val);\n  }\n  /**\n   * Gets or sets the position of the table of contents. Applies only when the table of contents is visible.\n   *\n   * Possible values:\n   *\n   * - `\"left\"` (default)\n   * - `\"right\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/toc-feature/ (linkStyle))\n   * @see showTOC\n   */\n  get tocLocation() {\n    return this.getPropertyValue(\"tocLocation\");\n  }\n  set tocLocation(val) {\n    this.setPropertyValue(\"tocLocation\", val);\n  }\n  /**\n   * Specifies whether to display the [survey title](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#title).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/brand-your-survey-header/ (linkStyle))\n   * @see title\n   */\n  get showTitle() {\n    return this.getPropertyValue(\"showTitle\");\n  }\n  set showTitle(val) {\n    this.setPropertyValue(\"showTitle\", val);\n  }\n  /**\n   * Specifies whether to display [page titles](https://surveyjs.io/form-library/documentation/api-reference/page-model#title).\n   */\n  get showPageTitles() {\n    return this.getPropertyValue(\"showPageTitles\");\n  }\n  set showPageTitles(val) {\n    this.setPropertyValue(\"showPageTitles\", val);\n  }\n  /**\n   * Specifies whether to show the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   * @see onComplete\n   * @see navigateToUrl\n   */\n  get showCompletePage() {\n    return this.getPropertyValue(\"showCompletePage\");\n  }\n  set showCompletePage(val) {\n    this.setPropertyValue(\"showCompletePage\", val);\n  }\n  /**\n   * @deprecated Use the [`showCompletePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showCompletePage) property instead.\n   */\n  get showCompletedPage() {\n    return this.showCompletePage;\n  }\n  set showCompletedPage(val) {\n    this.showCompletePage = val;\n  }\n  /**\n   * A URL to which respondents should be navigated after survey completion.\n   * @see onNavigateToUrl\n   * @see navigateToUrlOnCondition\n   */\n  get navigateToUrl() {\n    return this.getPropertyValue(\"navigateToUrl\");\n  }\n  set navigateToUrl(val) {\n    this.setPropertyValue(\"navigateToUrl\", val);\n  }\n  /**\n   * An array of objects that allows you to navigate respondents to different URLs after survey completion.\n   *\n   * Each object should include the [`expression`](https://surveyjs.io/form-library/documentation/api-reference/urlconditionitem#url) and [`url`](https://surveyjs.io/form-library/documentation/api-reference/urlconditionitem#expression) properties. When `expression` evaluates to `true`, the survey navigates to the corresponding `url`. Refer to the following help topic for more information about expressions: [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n   * @see onNavigateToUrl\n   * @see navigateToUrl\n   */\n  get navigateToUrlOnCondition() {\n    return this.getPropertyValue(\"navigateToUrlOnCondition\");\n  }\n  set navigateToUrlOnCondition(val) {\n    this.setPropertyValue(\"navigateToUrlOnCondition\", val);\n  }\n  getNavigateToUrl() {\n    var item = this.getExpressionItemOnRunCondition(this.navigateToUrlOnCondition);\n    var url = !!item ? item.url : this.navigateToUrl;\n    if (!!url) {\n      url = this.processText(url, false);\n    }\n    return url;\n  }\n  navigateTo() {\n    var url = this.getNavigateToUrl();\n    var options = {\n      url: url,\n      allow: true\n    };\n    this.onNavigateToUrl.fire(this, options);\n    if (!options.url || !options.allow) return;\n    navigateToUrl(options.url);\n  }\n  /**\n   * Specifies one or multiple characters that designate required questions.\n   *\n   * Default value: `*`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/modify-question-title/ (linkStyle))\n   */\n  get requiredMark() {\n    return this.getPropertyValue(\"requiredMark\");\n  }\n  set requiredMark(val) {\n    this.setPropertyValue(\"requiredMark\", val);\n  }\n  /**\n   * @deprecated Use the [`requiredMark`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#requiredMark) property instead.\n   */\n  get requiredText() {\n    return this.requiredMark;\n  }\n  set requiredText(val) {\n    this.requiredMark = val;\n  }\n  beforeSettingQuestionErrors(question, errors) {\n    this.makeRequiredErrorsInvisible(errors);\n    this.onSettingQuestionErrors.fire(this, {\n      question: question,\n      errors: errors\n    });\n  }\n  makeRequiredErrorsInvisible(errors) {\n    if (!this.hideRequiredErrors) return;\n    for (var i = 0; i < errors.length; i++) {\n      var erType = errors[i].getErrorType();\n      if (erType == \"required\" || erType == \"requireoneanswer\") {\n        errors[i].visible = false;\n      }\n    }\n  }\n  /**\n   * Specifies the initial number or letter from which to start question numbering.\n   *\n   * [Question Numbers](https://surveyjs.io/form-library/documentation/design-survey/configure-question-titles#question-numbers (linkStyle))\n   */\n  get questionStartIndex() {\n    return this.getPropertyValue(\"questionStartIndex\", \"\");\n  }\n  set questionStartIndex(val) {\n    this.setPropertyValue(\"questionStartIndex\", val);\n  }\n  /**\n   * Specifies whether to store the \"Other\" option response in a separate property.\n   *\n   * Default value: `true`\n   *\n   * Respondents can leave comments when they select \"Other\" in choice-based questions, such as Dropdown or Checkboxes. Comment values are saved in a separate property. The property name is composed of the question `name` and [`commentSuffix`](#commentSuffix). However, you can use the question `name` as a key to store the comment value instead. Disable the `storeOthersAsComment` property in this case.\n   * @see maxCommentLength\n   */\n  get storeOthersAsComment() {\n    return this.getPropertyValue(\"storeOthersAsComment\");\n  }\n  set storeOthersAsComment(val) {\n    this.setPropertyValue(\"storeOthersAsComment\", val);\n  }\n  /**\n   * Specifies the maximum text length in textual questions ([Single-Line Input](https://surveyjs.io/form-library/examples/text-entry-question/), [Long Text](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/), [Multiple Textboxes](https://surveyjs.io/form-library/examples/multiple-text-box-question/)), measured in characters.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * You can override this setting for individual questions if you specify their [`maxLength`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maxLength) property.\n   * @see maxCommentLength\n   */\n  get maxTextLength() {\n    return this.getPropertyValue(\"maxTextLength\");\n  }\n  set maxTextLength(val) {\n    this.setPropertyValue(\"maxTextLength\", val);\n  }\n  /**\n   * Specifies the maximum text length for question comments. Applies to questions with the [`showCommentArea`](https://surveyjs.io/form-library/documentation/api-reference/question#showCommentArea) or [`showOtherItem`](https://surveyjs.io/form-library/documentation/api-reference/question#showOtherItem) property set to `true`.\n   *\n   * Default value: 0 (unlimited)\n   * @see maxTextLength\n   */\n  get maxCommentLength() {\n    return this.getPropertyValue(\"maxCommentLength\");\n  }\n  set maxCommentLength(val) {\n    this.setPropertyValue(\"maxCommentLength\", val);\n  }\n  /**\n   * @deprecated Use the [`maxCommentLength`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#maxCommentLength) property instead.\n   */\n  get maxOthersLength() {\n    return this.maxCommentLength;\n  }\n  set maxOthersLength(val) {\n    this.maxCommentLength = val;\n  }\n  /**\n   * Specifies whether the survey switches to the next page automatically after a user answers all questions on the current page.\n   *\n   * Default value: `false`\n   *\n   * If you enable this property, the survey is also completed automatically. Set the [`autoAdvanceAllowComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceAllowComplete) property to `false` if you want to disable this behavior.\n   *\n   * > If any of the following questions is answered last, the survey does not switch to the next page: Checkboxes, Yes/No (Boolean) (rendered as Checkbox), Long Text, Signature, Image Picker (with Multi Select), File Upload, Single-Select Matrix (not all rows are answered), Dynamic Matrix, Dynamic Panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/automatically-move-to-next-page-if-answer-selected/ (linkStyle))\n   * @see [`settings.autoAdvanceDelay`](https://surveyjs.io/form-library/documentation/api-reference/settings#autoAdvanceDelay)\n   */\n  get autoAdvanceEnabled() {\n    return this.getPropertyValue(\"autoAdvanceEnabled\");\n  }\n  set autoAdvanceEnabled(val) {\n    this.setPropertyValue(\"autoAdvanceEnabled\", val);\n  }\n  /**\n   * @deprecated Use the [`autoAdvanceEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) property instead.\n   */\n  get goNextPageAutomatic() {\n    return this.autoAdvanceEnabled;\n  }\n  set goNextPageAutomatic(val) {\n    this.autoAdvanceEnabled = val;\n  }\n  /**\n   * Specifies whether to complete the survey automatically after a user answers all questions on the last page. Applies only if the [`autoAdvanceEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) property is `true`.\n   *\n   * Default value: `true`\n   * @see [`settings.autoAdvanceDelay`](https://surveyjs.io/form-library/documentation/api-reference/settings#autoAdvanceDelay)\n   */\n  get autoAdvanceAllowComplete() {\n    return this.getPropertyValue(\"autoAdvanceAllowComplete\");\n  }\n  set autoAdvanceAllowComplete(val) {\n    this.setPropertyValue(\"autoAdvanceAllowComplete\", val);\n  }\n  /**\n   * @deprecated Use the [`autoAdvanceAllowComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceAllowComplete) property instead.\n   */\n  get allowCompleteSurveyAutomatic() {\n    return this.autoAdvanceAllowComplete;\n  }\n  set allowCompleteSurveyAutomatic(val) {\n    this.autoAdvanceAllowComplete = val;\n  }\n  /**\n   * Specifies when the survey validates answers.\n   *\n   * Possible values:\n   *\n   * - `\"onNextPage\"` (default) - Triggers validation before the survey is switched to the next page or completed.\n   * - `\"onValueChanged\"` - Triggers validation each time a question value is changed. [View Demo](https://surveyjs.io/form-library/examples/javascript-form-validation/)\n   * - `\"onComplete\"` - Triggers validation when a user clicks the Complete button. If previous pages contain errors, the survey switches to the page with the first error.\n   *\n   * > In SurveyJS Form Library v1.12.5 and earlier, the `\"onValueChanged\"` mode doesn't work with date input fields because of the way browsers process date values. In most browsers, the value is considered changed as soon as a user starts entering the date in a text input field. This means that a user may only enter the day without having the chance to enter the month and year before validation is triggered. For this reason, date input fields are validated before the survey is switched to the next page or completed. Starting with v1.12.6, `\"onValueChanged\"` works for date input fields as well as for input fields of other types.\n   *\n   * Refer to the following help topic for more information: [Data Validation](https://surveyjs.io/form-library/documentation/data-validation).\n   * @see validationEnabled\n   * @see validationAllowSwitchPages\n   * @see validationAllowComplete\n   * @see validate\n   */\n  get checkErrorsMode() {\n    return this.getPropertyValue(\"checkErrorsMode\");\n  }\n  set checkErrorsMode(val) {\n    this.setPropertyValue(\"checkErrorsMode\", val);\n  }\n  /**\n   * Specifies whether to trigger validation when a user focuses on an empty input field and then leaves it without making any changes. Applies only if [`checkErrorsMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#checkErrorsMode) is set to `\"onValueChanged\"`.\n   *\n   * Default value: `false`\n   *\n   * This property changes validation behavior for the following question types:\n   *\n   * - [Single-Line Input](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model)\n   * - [Long Text](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model)\n   * - [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model)\n   * @see validationEnabled\n   * @see validationAllowSwitchPages\n   * @see validationAllowComplete\n   * @see validate\n   */\n  get validateVisitedEmptyFields() {\n    return this.getPropertyValue(\"validateVisitedEmptyFields\");\n  }\n  set validateVisitedEmptyFields(val) {\n    this.setPropertyValue(\"validateVisitedEmptyFields\", val);\n  }\n  getValidateVisitedEmptyFields() {\n    return this.validateVisitedEmptyFields && this.isValidateOnValueChange;\n  }\n  /**\n   * Specifies whether to increase the height of [Long Text](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/) questions and other text areas to accommodate multi-line text content.\n   *\n   * Default value: `false`\n   *\n   * You can override this property for individual Long Text questions: [`autoGrow`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model#autoGrow).\n   * @see allowResizeComment\n   * @see commentAreaRows\n   */\n  get autoGrowComment() {\n    return this.getPropertyValue(\"autoGrowComment\");\n  }\n  set autoGrowComment(val) {\n    this.setPropertyValue(\"autoGrowComment\", val);\n  }\n  /**\n   * Specifies whether to display a resize handle for [Long Text](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/) questions and other text areas intended for multi-line text content.\n   *\n   * Default value: `true`\n   *\n   * You can override this property for individual Long Text questions: [`allowResize`](https://surveyjs.io/form-library/documentation/api-reference/comment-field-model#allowResize).\n   * @see autoGrowComment\n   * @see commentAreaRows\n   */\n  get allowResizeComment() {\n    return this.getPropertyValue(\"allowResizeComment\");\n  }\n  set allowResizeComment(val) {\n    this.setPropertyValue(\"allowResizeComment\", val);\n  }\n  /**\n   * Specifies the visible height of comment areas, measured in lines. Applies to the questions with the [`showCommentArea`](https://surveyjs.io/form-library/documentation/api-reference/question#showCommentArea) or [`showOtherItem`](https://surveyjs.io/form-library/documentation/api-reference/question#showOtherItem) property enabled.\n   *\n   * Default value: 2\n   *\n   * The value of this property is passed on to the `rows` attribute of the underlying `<textarea>` element.\n   * @see autoGrowComment\n   * @see allowResizeComment\n   */\n  get commentAreaRows() {\n    return this.getPropertyValue(\"commentAreaRows\");\n  }\n  set commentAreaRows(val) {\n    this.setPropertyValue(\"commentAreaRows\", val);\n  }\n  /**\n   * Specifies when to update the question value in questions with a text input field.\n   *\n   * Possible values:\n   *\n   * - `\"onBlur\"` (default) - Updates the value after the input field loses focus.\n   * - `\"onTyping\"` - Updates the value on every key press.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/set-question-value-dynamically/ (linkStyle))\n   *\n   * > Do not use the `\"onTyping\"` mode if your survey contains many expressions. Expressions are re-evaluated each time a question value is changed. In `\"onTyping\"` mode, the question value changes frequently. This may cause performance degradation.\n   *\n   * You can override this setting for individual questions: [`textUpdateMode`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#textUpdateMode).\n   */\n  get textUpdateMode() {\n    return this.getPropertyValue(\"textUpdateMode\");\n  }\n  set textUpdateMode(val) {\n    this.setPropertyValue(\"textUpdateMode\", val);\n  }\n  /**\n   * Specifies when to remove values of invisible questions from [survey results](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data).\n   *\n   * Possible values:\n   *\n   * - `\"onComplete\"` (default) - Clears invisible question values when the survey is complete.\n   * - `\"onHidden\"` - Clears a question value when the question becomes invisible. If the question is invisible initially, its value is removed on survey completion.\n   * - `\"onHiddenContainer\"` - Clears a question value when the question or its containter (page or panel) becomes invisible. If the question is invisible initially, its value is removed on survey completion.\n   * - `\"none\"` - Keeps invisible values in survey results.\n   * - `true` - Equivalent to `\"onComplete\"`.\n   * - `false` - Equivalent to `\"none\"`.\n   * @see [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility)\n   * @see onComplete\n   */\n  get clearInvisibleValues() {\n    return this.getPropertyValue(\"clearInvisibleValues\");\n  }\n  set clearInvisibleValues(val) {\n    if (val === true) val = \"onComplete\";\n    if (val === false) val = \"none\";\n    this.setPropertyValue(\"clearInvisibleValues\", val);\n  }\n  /**\n   * Removes values that cannot be assigned to a question, for example, choices unlisted in the `choices` array.\n   *\n   * Call this method after you assign new question values in code to ensure that they are acceptable.\n   *\n   * > This method does not remove values that fail validation. Call the [`validate()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#validate) method to validate newly assigned values.\n   * @param removeNonExistingRootKeys Pass `true` to remove values that do not correspond to any question or [calculated value](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#calculated-values).\n   */\n  clearIncorrectValues(removeNonExistingRootKeys = false) {\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].clearIncorrectValues();\n    }\n    if (!removeNonExistingRootKeys) return;\n    var data = this.data;\n    var hasChanges = false;\n    for (var key in data) {\n      if (!!this.getQuestionByValueName(key)) continue;\n      if (this.iscorrectValueWithPostPrefix(key, settings.commentSuffix) || this.iscorrectValueWithPostPrefix(key, settings.matrix.totalsSuffix)) continue;\n      var calcValue = this.getCalculatedValueByName(key);\n      if (!!calcValue && calcValue.includeIntoResult) continue;\n      hasChanges = true;\n      delete data[key];\n    }\n    if (hasChanges) {\n      this.data = data;\n    }\n  }\n  iscorrectValueWithPostPrefix(key, postPrefix) {\n    if (key.indexOf(postPrefix) !== key.length - postPrefix.length) return false;\n    return !!this.getQuestionByValueName(key.substring(0, key.indexOf(postPrefix)));\n  }\n  /**\n   * Specifies whether to keep values that cannot be assigned to questions, for example, choices unlisted in the `choices` array.\n   *\n   * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n   * @see clearIncorrectValues\n   */\n  get keepIncorrectValues() {\n    return this.getPropertyValue(\"keepIncorrectValues\");\n  }\n  set keepIncorrectValues(val) {\n    this.setPropertyValue(\"keepIncorrectValues\", val);\n  }\n  /**\n   * Specifies the survey's locale.\n   *\n   * Default value: `\"\"` (a default locale is used)\n   *\n   * [Localization & Globalization help topic](https://surveyjs.io/form-library/documentation/survey-localization (linkStyle))\n   *\n   * [Survey Localization demo](https://surveyjs.io/form-library/examples/survey-localization/ (linkStyle))\n   */\n  get locale() {\n    return this.getPropertyValueWithoutDefault(\"locale\") || surveyLocalization.currentLocale;\n  }\n  set locale(value) {\n    if (value === surveyLocalization.defaultLocale && !surveyLocalization.currentLocale) {\n      value = \"\";\n    }\n    this.setPropertyValue(\"locale\", value);\n  }\n  onSurveyLocaleChanged() {\n    this.notifyElementsOnAnyValueOrVariableChanged(\"locale\");\n    this.localeChanged();\n    this.onLocaleChangedEvent.fire(this, this.locale);\n  }\n  get localeDir() {\n    return surveyLocalization.localeDirections[this.locale];\n  }\n  /**\n   * Returns an array of locales whose translations are used in the survey.\n   *\n   * [Localization & Globalization help topic](https://surveyjs.io/form-library/documentation/survey-localization (linkStyle))\n   *\n   * [Survey Localization demo](https://surveyjs.io/form-library/examples/survey-localization/ (linkStyle))\n   */\n  getUsedLocales() {\n    var locs = new Array();\n    this.addUsedLocales(locs);\n    //Replace the default locale with the real one\n    var index = locs.indexOf(\"default\");\n    if (index > -1) {\n      var defaultLoc = surveyLocalization.defaultLocale;\n      //Remove the defaultLoc\n      var defIndex = locs.indexOf(defaultLoc);\n      if (defIndex > -1) {\n        locs.splice(defIndex, 1);\n      }\n      index = locs.indexOf(\"default\");\n      locs[index] = defaultLoc;\n    }\n    return locs;\n  }\n  localeChanged() {\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].localeChanged();\n    }\n  }\n  //ILocalizableOwner\n  getLocale() {\n    return this.locale;\n  }\n  locStrsChanged() {\n    if (this.isClearingUnsedValues) return;\n    super.locStrsChanged();\n    if (!this.currentPage) return;\n    if (this.isDesignMode) {\n      this.pages.forEach(page => page.locStrsChanged());\n    } else {\n      var page = this.activePage;\n      if (!!page) {\n        page.locStrsChanged();\n      }\n      const visPages = this.visiblePages;\n      for (var i = 0; i < visPages.length; i++) {\n        visPages[i].navigationLocStrChanged();\n      }\n    }\n    if (!this.isStartPageActive) {\n      this.updateProgressText();\n    }\n    if (!!this.navigationBarValue) {\n      this.navigationBar.locStrsChanged();\n    }\n  }\n  getMarkdownHtml(text, name, item) {\n    return this.getSurveyMarkdownHtml(this, text, name, item);\n  }\n  getRenderer(name) {\n    return this.getRendererForString(this, name);\n  }\n  getRendererContext(locStr) {\n    return this.getRendererContextForString(this, locStr);\n  }\n  getRendererForString(element, name) {\n    let renderAs = this.getBuiltInRendererForString(element, name);\n    renderAs = this.elementWrapperComponentNameCore(renderAs, element, \"string\", name);\n    const options = {\n      element: element,\n      name: name,\n      renderAs: renderAs\n    };\n    this.onTextRenderAs.fire(this, options);\n    return options.renderAs;\n  }\n  getRendererContextForString(element, locStr) {\n    return this.elementWrapperDataCore(locStr, element, \"string\");\n  }\n  getExpressionDisplayValue(question, value, displayValue) {\n    const options = {\n      question: question,\n      value: value,\n      displayValue: displayValue\n    };\n    this.onGetExpressionDisplayValue.fire(this, options);\n    return options.displayValue;\n  }\n  getBuiltInRendererForString(element, name) {\n    if (this.isDesignMode) return LocalizableString.editableRenderer;\n    return undefined;\n  }\n  getProcessedText(text) {\n    return this.processText(text, true);\n  }\n  getLocString(str) {\n    return this.getLocalizationString(str);\n  }\n  //ISurveyErrorOwner\n  getErrorCustomText(text, error) {\n    return this.getSurveyErrorCustomText(this, text, error);\n  }\n  getSurveyErrorCustomText(obj, text, error) {\n    const options = {\n      text: text,\n      name: error.getErrorType(),\n      obj: obj,\n      error: error\n    };\n    this.onErrorCustomText.fire(this, options);\n    return options.text;\n  }\n  getQuestionDisplayValue(question, displayValue) {\n    const options = {\n      question: question,\n      displayValue: displayValue\n    };\n    this.onGetQuestionDisplayValue.fire(this, options);\n    return options.displayValue;\n  }\n  /**\n   * A message that is displayed when a survey does not contain visible pages or questions.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  get emptySurveyText() {\n    return this.getLocalizableStringText(\"emptySurveyText\");\n  }\n  set emptySurveyText(val) {\n    this.setLocalizableStringText(\"emptySurveyText\", val);\n  }\n  //#region Title/Header options\n  /**\n   * An image URL or a Base64-encoded image to use as a survey logo.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logoPosition\n   * @see logoFit\n   */\n  get logo() {\n    return this.getLocalizableStringText(\"logo\");\n  }\n  set logo(value) {\n    this.setLocalizableStringText(\"logo\", value);\n  }\n  get locLogo() {\n    return this.getLocalizableString(\"logo\");\n  }\n  /**\n   * A logo width in CSS-accepted values.\n   *\n   * Default value: `auto` (the width is calculated automatically based on the [`logoHeight`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#logoHeight) value to keep the original aspect ratio)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logo\n   * @see logoPosition\n   * @see logoFit\n   */\n  get logoWidth() {\n    return this.getPropertyValue(\"logoWidth\");\n  }\n  set logoWidth(value) {\n    this.setPropertyValue(\"logoWidth\", value);\n  }\n  get renderedLogoWidth() {\n    return this.logoWidth ? getRenderedSize(this.logoWidth) : undefined;\n  }\n  get renderedStyleLogoWidth() {\n    return this.logoWidth ? getRenderedStyleSize(this.logoWidth) : undefined;\n  }\n  /**\n   * A logo height in CSS-accepted values.\n   *\n   * Default value: `40px`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logoWidth\n   * @see logo\n   * @see logoPosition\n   * @see logoFit\n   */\n  get logoHeight() {\n    return this.getPropertyValue(\"logoHeight\");\n  }\n  set logoHeight(value) {\n    this.setPropertyValue(\"logoHeight\", value);\n  }\n  get renderedLogoHeight() {\n    return this.logoHeight ? getRenderedSize(this.logoHeight) : undefined;\n  }\n  get renderedStyleLogoHeight() {\n    return this.logoHeight ? getRenderedStyleSize(this.logoHeight) : undefined;\n  }\n  /**\n   * A logo position relative to the [survey title](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#title).\n   *\n   * Possible values:\n   *\n   * - `\"left\"` (default) - Places the logo to the left of the survey title.\n   * - `\"right\"` - Places the logo to the right of the survey title.\n   * - `\"none\"` - Hides the logo.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logo\n   * @see logoFit\n   */\n  get logoPosition() {\n    return this.getPropertyValue(\"logoPosition\");\n  }\n  set logoPosition(value) {\n    this.setPropertyValue(\"logoPosition\", value);\n  }\n  get hasLogo() {\n    return this.getPropertyValue(\"hasLogo\", undefined, () => !!this.logo && this.logoPosition !== \"none\");\n  }\n  resetHasLogo() {\n    this.resetPropertyValue(\"hasLogo\");\n  }\n  get isLogoBefore() {\n    if (this.isDesignMode) return false;\n    return this.renderedHasLogo && (this.logoPosition === \"left\" || this.logoPosition === \"top\");\n  }\n  get isLogoAfter() {\n    if (this.isDesignMode) return this.renderedHasLogo;\n    return this.renderedHasLogo && (this.logoPosition === \"right\" || this.logoPosition === \"bottom\");\n  }\n  get logoClassNames() {\n    const logoClasses = {\n      left: \"sv-logo--left\",\n      right: \"sv-logo--right\",\n      top: \"sv-logo--top\",\n      bottom: \"sv-logo--bottom\"\n    };\n    return new CssClassBuilder().append(this.css.logo).append(logoClasses[this.logoPosition]).toString();\n  }\n  get titleIsEmpty() {\n    return this.getPropertyValue(\"titleIsEmpty\", undefined, () => this.locTitle.isEmpty);\n  }\n  get renderedHasTitle() {\n    if (this.isDesignMode) return this.isPropertyVisible(\"title\");\n    return !this.titleIsEmpty && this.showTitle;\n  }\n  get renderedHasDescription() {\n    if (this.isDesignMode) return this.isPropertyVisible(\"description\");\n    return !!this.hasDescription && this.showTitle;\n  }\n  get hasTitle() {\n    return this.renderedHasTitle;\n  }\n  get renderedHasLogo() {\n    if (this.isDesignMode) return this.isPropertyVisible(\"logo\");\n    return this.hasLogo;\n  }\n  get renderedHasHeader() {\n    return this.renderedHasTitle || this.renderedHasLogo;\n  }\n  /**\n   * Specifies how to resize a logo to fit it into its container.\n   *\n   * Possible values:\n   *\n   * - `\"contain\"` (default)\n   * - `\"cover\"`\n   * - `\"fill\"`\n   * - `\"none\"`\n   *\n   * Refer to the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property description for information on the possible values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-logo/ (linkStyle))\n   * @see logo\n   * @see logoPosition\n   */\n  get logoFit() {\n    return this.getPropertyValue(\"logoFit\");\n  }\n  set logoFit(val) {\n    this.setPropertyValue(\"logoFit\", val);\n  }\n  get themeVariables() {\n    return Object.assign({}, this.cssVariables);\n  }\n  setIsMobile(newVal = true) {\n    if (this._isMobile !== newVal) {\n      this._isMobile = newVal;\n      this.updateCss();\n      this.getAllQuestions().forEach(q => q.setIsMobile(newVal));\n    }\n  }\n  get isMobile() {\n    return this._isMobile && !this.isDesignMode;\n  }\n  set isCompact(newVal) {\n    if (newVal !== this._isCompact) {\n      this._isCompact = newVal;\n      this.updateElementCss();\n      this.triggerResponsiveness(true);\n    }\n  }\n  get isCompact() {\n    return this._isCompact;\n  }\n  isLogoImageChoosen() {\n    return this.locLogo.renderedHtml;\n  }\n  get titleMaxWidth() {\n    return \"\";\n  }\n  get renderBackgroundImage() {\n    return this.getPropertyValue(\"renderBackgroundImage\", undefined, () => wrapUrlForBackgroundImage(this.backgroundImage));\n  }\n  /**\n   * A value from 0 to 1 that specifies how transparent the [background image](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#backgroundImage) should be: 0 makes the image completely transparent, and 1 makes it opaque.\n   */\n  get backgroundOpacity() {\n    return this.getPropertyValue(\"backgroundOpacity\");\n  }\n  set backgroundOpacity(val) {\n    this.setPropertyValue(\"backgroundOpacity\", val);\n  }\n  get backgroundImageStyle() {\n    return this.getPropertyValue(\"backgroundImageStyle\", undefined, () => this.calcBackgroundImageStyle());\n  }\n  calcBackgroundImageStyle() {\n    return {\n      opacity: this.backgroundOpacity,\n      backgroundImage: this.renderBackgroundImage,\n      backgroundSize: this.backgroundImageFit,\n      backgroundAttachment: !this.fitToContainer ? this.backgroundImageAttachment : undefined\n    };\n  }\n  updateWrapperFormCss() {\n    this.wrapperFormCss = new CssClassBuilder().append(this.css.rootWrapper).append(this.css.rootWrapperHasImage, !!this.backgroundImage).append(this.css.rootWrapperFixed, !this.formScrollDisabled).toString();\n  }\n  /**\n   * HTML content displayed on the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/modify-survey-navigation-settings/ (linkStyle))\n   * @see showCompletePage\n   * @see completedHtmlOnCondition\n   */\n  get completedHtml() {\n    return this.getLocalizableStringText(\"completedHtml\");\n  }\n  set completedHtml(value) {\n    this.setLocalizableStringText(\"completedHtml\", value);\n  }\n  get locCompletedHtml() {\n    return this.getLocalizableString(\"completedHtml\");\n  }\n  /**\n   * An array of objects that allows you to specify different HTML content for the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   *\n   * Each object should include the [`expression`](https://surveyjs.io/form-library/documentation/api-reference/htmlconditionitem#expression) and [`html`](https://surveyjs.io/form-library/documentation/api-reference/htmlconditionitem#html) properties. When `expression` evaluates to `true`, the survey uses the corresponding HTML markup instead of [`completedHtml`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completedHtml). Refer to the following help topic for more information about expressions: [Expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/nps-question/ (linkStyle))\n   */\n  get completedHtmlOnCondition() {\n    return this.getPropertyValue(\"completedHtmlOnCondition\");\n  }\n  set completedHtmlOnCondition(val) {\n    this.setPropertyValue(\"completedHtmlOnCondition\", val);\n  }\n  /**\n   * Calculates a given [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) and returns a result value.\n   * @param expression An expression to calculate.\n   * @param callback A callback function that you can use to access the calculation result if the expression uses asynchronous functions.\n   */\n  runExpression(expression, callback) {\n    if (!expression) return null;\n    var values = this.getFilteredValues();\n    var properties = this.getFilteredProperties();\n    const exp = new ExpressionRunner(expression);\n    let onCompleteRes = undefined;\n    exp.onRunComplete = res => {\n      onCompleteRes = res;\n      callback && callback(res);\n    };\n    return exp.run(values, properties) || onCompleteRes;\n  }\n  get isSettingValueOnExpression() {\n    return this.setValueOnExpressionCounter > 0;\n  }\n  startSetValueOnExpression() {\n    this.setValueOnExpressionCounter++;\n  }\n  finishSetValueOnExpression() {\n    this.setValueOnExpressionCounter--;\n  }\n  /**\n   * Calculates a given [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) and returns `true` or `false`.\n   * @param expression An expression to calculate.\n   */\n  runCondition(expression) {\n    if (!expression) return false;\n    var values = this.getFilteredValues();\n    var properties = this.getFilteredProperties();\n    return new ConditionRunner(expression).run(values, properties);\n  }\n  /**\n   * Executes [all triggers](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#triggers), except [\"complete\"](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#complete).\n   *\n   * [Conditional Survey Logic (Triggers)](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-survey-logic-triggers (linkStyle))\n   * @see onTriggerExecuted\n   */\n  runTriggers() {\n    this.checkTriggers(this.getFilteredValues(), false);\n  }\n  get renderedCompletedHtml() {\n    var item = this.getExpressionItemOnRunCondition(this.completedHtmlOnCondition);\n    return !!item ? item.html : this.completedHtml;\n  }\n  getExpressionItemOnRunCondition(items) {\n    if (items.length == 0) return null;\n    var values = this.getFilteredValues();\n    var properties = this.getFilteredProperties();\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].runCondition(values, properties)) {\n        return items[i];\n      }\n    }\n    return null;\n  }\n  /**\n   * HTML content displayed to a user who has completed the survey before. To identify such users, the survey uses a [cookie name](#cookieName).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-prevent-duplicate-form-submissions/ (linkStyle))\n   * @see processedCompletedBeforeHtml\n   */\n  get completedBeforeHtml() {\n    return this.getLocalizableStringText(\"completedBeforeHtml\");\n  }\n  set completedBeforeHtml(value) {\n    this.setLocalizableStringText(\"completedBeforeHtml\", value);\n  }\n  get locCompletedBeforeHtml() {\n    return this.getLocalizableString(\"completedBeforeHtml\");\n  }\n  /**\n   * HTML content displayed while a survey JSON schema is [being loaded](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#beginLoading).\n   * @see processedLoadingHtml\n   */\n  get loadingHtml() {\n    return this.getLocalizableStringText(\"loadingHtml\");\n  }\n  set loadingHtml(value) {\n    this.setLocalizableStringText(\"loadingHtml\", value);\n  }\n  get locLoadingHtml() {\n    return this.getLocalizableString(\"loadingHtml\");\n  }\n  get navigationBar() {\n    if (!this.navigationBarValue) {\n      this.navigationBarValue = this.createNavigationBar();\n      this.updateNavigationCss();\n    }\n    return this.navigationBarValue;\n  }\n  /**\n   * Adds a custom navigation item similar to the Previous Page, Next Page, and Complete buttons. Accepts an object described in the [IAction](https://surveyjs.io/Documentation/Library?id=IAction) help section.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-changenavigation/ (linkStyle))\n  */\n  addNavigationItem(val) {\n    if (!val.component) {\n      val.component = \"sv-nav-btn\";\n    }\n    if (!val.innerCss) {\n      val.innerCss = this.cssSurveyNavigationButton;\n    }\n    return this.navigationBar.addAction(val);\n  }\n  removeNavigationItem(id) {\n    const action = this.navigationBar.getActionById(id);\n    if (action) {\n      const actions = this.navigationBar.actions;\n      actions.splice(actions.indexOf(action), 1);\n    }\n  }\n  /**\n   * Gets or sets a caption for the Start button.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see firstPageIsStartPage\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  get startSurveyText() {\n    return this.getLocalizableStringText(\"startSurveyText\");\n  }\n  set startSurveyText(newValue) {\n    this.setLocalizableStringText(\"startSurveyText\", newValue);\n  }\n  get locStartSurveyText() {\n    return this.getLocalizableString(\"startSurveyText\");\n  }\n  /**\n   * Gets or sets a caption for the Previous button.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  get pagePrevText() {\n    return this.getLocalizableStringText(\"pagePrevText\");\n  }\n  set pagePrevText(newValue) {\n    this.setLocalizableStringText(\"pagePrevText\", newValue);\n  }\n  get locPagePrevText() {\n    return this.getLocalizableString(\"pagePrevText\");\n  }\n  /**\n   * Gets or sets a caption for the Next button.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  get pageNextText() {\n    return this.getLocalizableStringText(\"pageNextText\");\n  }\n  set pageNextText(newValue) {\n    this.setLocalizableStringText(\"pageNextText\", newValue);\n  }\n  get locPageNextText() {\n    return this.getLocalizableString(\"pageNextText\");\n  }\n  /**\n   * Gets or sets a caption for the Complete button.\n   * @see [Localization & Globalization](https://surveyjs.io/form-library/documentation/survey-localization)\n   */\n  get completeText() {\n    return this.getLocalizableStringText(\"completeText\");\n  }\n  set completeText(newValue) {\n    this.setLocalizableStringText(\"completeText\", newValue);\n  }\n  get locCompleteText() {\n    return this.getLocalizableString(\"completeText\");\n  }\n  /**\n   * Gets or sets a caption for the Preview button.\n   * @see showPreviewBeforeComplete\n   * @see showPreview\n   * @see editText\n   */\n  get previewText() {\n    return this.getLocalizableStringText(\"previewText\");\n  }\n  set previewText(newValue) {\n    this.setLocalizableStringText(\"previewText\", newValue);\n  }\n  get locPreviewText() {\n    return this.getLocalizableString(\"previewText\");\n  }\n  /**\n   * Gets or sets a caption for the Edit button displayed when the survey shows a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page).\n   * @see showPreviewBeforeComplete\n   * @see cancelPreview\n   * @see previewText\n   */\n  get editText() {\n    return this.getLocalizableStringText(\"editText\");\n  }\n  set editText(newValue) {\n    this.setLocalizableStringText(\"editText\", newValue);\n  }\n  get locEditText() {\n    return this.getLocalizableString(\"editText\");\n  }\n  getElementTitleTagName(element, tagName) {\n    if (this.onGetTitleTagName.isEmpty) return tagName;\n    const options = {\n      element: element,\n      tagName: tagName\n    };\n    this.onGetTitleTagName.fire(this, options);\n    return options.tagName;\n  }\n  /**\n   * Specifies a pattern for question titles.\n   *\n   * Refer to the following help topic for more information: [Title Pattern](https://surveyjs.io/form-library/documentation/design-survey/configure-question-titles#title-pattern).\n   */\n  get questionTitlePattern() {\n    return this.getPropertyValue(\"questionTitlePattern\", \"numTitleRequire\");\n  }\n  set questionTitlePattern(val) {\n    if (val !== \"numRequireTitle\" && val !== \"requireNumTitle\" && val != \"numTitle\") {\n      val = \"numTitleRequire\";\n    }\n    this.setPropertyValue(\"questionTitlePattern\", val);\n  }\n  getQuestionTitlePatternOptions() {\n    const res = new Array();\n    const title = this.getLocalizationString(\"questionTitlePatternText\");\n    const num = !!this.questionStartIndex ? this.questionStartIndex : \"1.\";\n    res.push({\n      value: \"numTitleRequire\",\n      text: num + \" \" + title + \" \" + this.requiredMark\n    });\n    res.push({\n      value: \"numRequireTitle\",\n      text: num + \" \" + this.requiredMark + \" \" + title\n    });\n    // res.push({\n    //   value: \"requireNumTitle\",\n    //   text: this.requiredMark + \" \" + num + \" \" + title\n    // });\n    res.push({\n      value: \"numTitle\",\n      text: num + \" \" + title\n    });\n    return res;\n  }\n  get questionTitleTemplate() {\n    return this.getLocalizableStringText(\"questionTitleTemplate\");\n  }\n  set questionTitleTemplate(value) {\n    this.setLocalizableStringText(\"questionTitleTemplate\", value);\n    this.questionTitlePattern = this.getNewTitlePattern(value);\n    this.questionStartIndex = this.getNewQuestionTitleElement(value, \"no\", this.questionStartIndex, \"1\");\n    this.requiredMark = this.getNewQuestionTitleElement(value, \"require\", this.requiredMark, \"*\");\n  }\n  getNewTitlePattern(template) {\n    if (!!template) {\n      var strs = [];\n      while (template.indexOf(\"{\") > -1) {\n        template = template.substring(template.indexOf(\"{\") + 1);\n        var ind = template.indexOf(\"}\");\n        if (ind < 0) break;\n        strs.push(template.substring(0, ind));\n        template = template.substring(ind + 1);\n      }\n      if (strs.length > 1) {\n        if (strs[0] == \"require\") return \"requireNumTitle\";\n        if (strs[1] == \"require\" && strs.length == 3) return \"numRequireTitle\";\n        if (strs.indexOf(\"require\") < 0) return \"numTitle\";\n      }\n      if (strs.length == 1 && strs[0] == \"title\") {\n        return \"numTitle\";\n      }\n    }\n    return \"numTitleRequire\";\n  }\n  getNewQuestionTitleElement(template, name, currentValue, defaultValue) {\n    name = \"{\" + name + \"}\";\n    if (!template || template.indexOf(name) < 0) return currentValue;\n    var ind = template.indexOf(name);\n    var prefix = \"\";\n    var postfix = \"\";\n    var i = ind - 1;\n    for (; i >= 0; i--) {\n      if (template[i] == \"}\") break;\n    }\n    if (i < ind - 1) {\n      prefix = template.substring(i + 1, ind);\n    }\n    ind += name.length;\n    i = ind;\n    for (; i < template.length; i++) {\n      if (template[i] == \"{\") break;\n    }\n    if (i > ind) {\n      postfix = template.substring(ind, i);\n    }\n    i = 0;\n    while (i < prefix.length && prefix.charCodeAt(i) < 33) i++;\n    prefix = prefix.substring(i);\n    i = postfix.length - 1;\n    while (i >= 0 && postfix.charCodeAt(i) < 33) i--;\n    postfix = postfix.substring(0, i + 1);\n    if (!prefix && !postfix) return currentValue;\n    var value = !!currentValue ? currentValue : defaultValue;\n    return prefix + value + postfix;\n  }\n  get locQuestionTitleTemplate() {\n    return this.getLocalizableString(\"questionTitleTemplate\");\n  }\n  getUpdatedQuestionTitle(question, title) {\n    if (this.onGetQuestionTitle.isEmpty) return title;\n    const options = {\n      question: question,\n      title: title\n    };\n    this.onGetQuestionTitle.fire(this, options);\n    return options.title;\n  }\n  getUpdatedQuestionNo(question, no) {\n    if (this.onGetQuestionNumber.isEmpty) return no;\n    const options = {\n      question: question,\n      number: no,\n      no: no\n    };\n    this.onGetQuestionNumber.fire(this, options);\n    return options.no === no ? options.number : options.no;\n  }\n  getUpdatedPanelNo(panel, no) {\n    if (this.onGetPanelNumber.isEmpty) return no;\n    const options = {\n      panel: panel,\n      number: no\n    };\n    this.onGetPanelNumber.fire(this, options);\n    return options.number;\n  }\n  getUpdatedPageNo(page, no) {\n    if (this.onGetPageNumber.isEmpty) return no;\n    const options = {\n      page: page,\n      number: no\n    };\n    this.onGetPageNumber.fire(this, options);\n    return options.number;\n  }\n  /**\n   * Specifies whether page titles contain page numbers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-number-pages-and-questions/ (linkStyle))\n   * @see onGetPageNumber\n   */\n  get showPageNumbers() {\n    return this.getPropertyValue(\"showPageNumbers\");\n  }\n  set showPageNumbers(value) {\n    if (value === this.showPageNumbers) return;\n    this.setPropertyValue(\"showPageNumbers\", value);\n    this.updateVisibleIndexes();\n  }\n  /**\n   * Specifies whether to display survey element numbers and how to calculate them.\n   *\n   * Possible values:\n   *\n   * - `true` or `\"on\"` - Numbers survey elements in order, regardless of their nesting level.\n   * - `\"recursive\"` - Applies recursive numbering to elements nested in panels (for example, 1 -> 1.1 -> 1.1.1, etc.).\n   * - `\"onpage\"` - Starts numbering on each page from scratch.\n   * - `false` or `\"off\"` - Hides question numbers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/how-to-number-pages-and-questions/ (linkStyle))\n   *\n   * If you want to hide the number of an individual question, disable its [`showNumber`](https://surveyjs.io/form-library/documentation/api-reference/question#showNumber) property.\n   * @see onGetQuestionNumber\n   */\n  get showQuestionNumbers() {\n    return this.getPropertyValue(\"showQuestionNumbers\");\n  }\n  set showQuestionNumbers(value) {\n    if (value === true) {\n      value = \"on\";\n    }\n    if (value === false) {\n      value = \"off\";\n    }\n    value = value.toLowerCase();\n    value = value === \"onpage\" ? \"onPage\" : value;\n    if (value === this.showQuestionNumbers) return;\n    this.setPropertyValue(\"showQuestionNumbers\", value);\n    this.updateVisibleIndexes();\n  }\n  get progressBar() {\n    if (!this.progressBarValue) {\n      this.progressBarValue = new ProgressButtons(this);\n    }\n    return this.progressBarValue;\n  }\n  /**\n   * Specifies the visibility of the progress bar.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/navigation-default/ (linkStyle))\n   * @see progressBarLocation\n   * @see progressBarType\n   * @see progressValue\n   */\n  get showProgressBar() {\n    return this.getPropertyValue(\"showProgressBar\");\n  }\n  set showProgressBar(newValue) {\n    this.setShowProgressBar(newValue);\n  }\n  setShowProgressBar(newValue) {\n    if (newValue === \"off\") {\n      newValue = false;\n    }\n    if (newValue === true || newValue === false) {\n      this.setPropertyValue(\"showProgressBar\", newValue);\n    } else {\n      this.setPropertyValue(\"showProgressBar\", true);\n      this.progressBarLocation = newValue;\n    }\n  }\n  /**\n   * Specifies the alignment of the progress bar. Applies only if the [`showProgressBar`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showProgressBar) property is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"aboveHeader\"` - Displays the progress bar above the survey header.\n   * - `\"belowHeader\"` - Displays the progress bar below the survey header.\n   * - `\"bottom\"` - Displays the progress bar below survey content.\n   * - `\"topBottom\"` - Displays the progress bar above and below survey content.\n   * - `\"auto\"` (default) - Displays the progress bar below the survey header if the header has a [background image](https://surveyjs.io/form-library/documentation/api-reference/iheader#backgroundImage) or color. Otherwise, the progress bar is displayed above the header.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/navigation-default/ (linkStyle))\n   * @see showProgressBar\n   * @see progressBarType\n   * @see progressValue\n   */\n  get progressBarLocation() {\n    return this.getPropertyValue(\"progressBarLocation\");\n  }\n  set progressBarLocation(newValue) {\n    this.setPropertyValue(\"progressBarLocation\", newValue.toLowerCase());\n  }\n  /**\n   * Specifies the type of information displayed by the progress bar. Applies only when [`showProgressBar`](#showProgressBar) is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"pages\"` (default) - The number of completed pages.\n   * - `\"questions\"` - The number of answered questions.\n   * - `\"requiredQuestions\"` - The number of answered [required questions](https://surveyjs.io/form-library/documentation/api-reference/question#isRequired).\n   * - `\"correctQuestions\"` - The number of correct questions in a [quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * - `\"buttons\"` - *(Obsolete)* Use the `\"pages\"` property value with the [`progressBarShowPageTitles`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarShowPageTitles) property set to `true` instead.\n   *\n   * > When `progressBarType` is set to `\"pages\"`, you can also enable the [`progressBarShowPageNumbers`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarShowPageNumbers) and [`progressBarShowPageTitles`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#progressBarShowPageTitles) properties if you want to display page numbers and titles in the progress bar.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/navigation-buttons/ (linkStyle))\n   * @see progressValue\n   */\n  get progressBarType() {\n    return this.getPropertyValue(\"progressBarType\");\n  }\n  set progressBarType(newValue) {\n    if (newValue === \"correctquestion\") newValue = \"correctQuestion\";\n    if (newValue === \"requiredquestion\") newValue = \"requiredQuestion\";\n    // if (newValue === \"buttons\") {\n    //   newValue = \"pages\";\n    //   this.progressBarShowPageTitles = true;\n    // }\n    this.setPropertyValue(\"progressBarType\", newValue);\n  }\n  get progressBarComponentName() {\n    let actualProgressBarType = this.progressBarType;\n    if (!settings.legacyProgressBarView && surveyCss.currentType === \"default\") {\n      if (isStrCiEqual(actualProgressBarType, \"pages\")) {\n        actualProgressBarType = \"buttons\";\n      }\n    }\n    return \"progress-\" + actualProgressBarType;\n  }\n  get isShowProgressBarOnTop() {\n    if (!this.canShowProgressBar()) return false;\n    if (!this.showProgressBar) return false;\n    return [\"auto\", \"aboveheader\", \"belowheader\", \"topbottom\", \"top\", \"both\"].indexOf(this.progressBarLocation) !== -1;\n  }\n  get isShowProgressBarOnBottom() {\n    if (!this.canShowProgressBar()) return false;\n    if (!this.showProgressBar) return false;\n    return this.progressBarLocation === \"bottom\" || this.progressBarLocation === \"both\" || this.progressBarLocation === \"topbottom\";\n  }\n  getProgressTypeComponent() {\n    return \"sv-progress-\" + this.progressBarType.toLowerCase();\n  }\n  getProgressCssClasses(container = \"\") {\n    return new CssClassBuilder().append(this.css.progress).append(this.css.progressTop, this.isShowProgressBarOnTop && (!container || container == \"header\")).append(this.css.progressBottom, this.isShowProgressBarOnBottom && (!container || container == \"footer\")).toString();\n  }\n  canShowProgressBar() {\n    return !this.isShowingPreview || !this.showPreviewBeforeComplete || this.previewMode != \"allQuestions\";\n  }\n  get processedTitle() {\n    return this.locTitle.renderedHtml;\n  }\n  /**\n   * Gets or sets question title location relative to the input field: `\"top\"`, `\"bottom\"`, or `\"left\"`.\n   *\n   * > Certain question types (Matrix, Multiple Text) do not support the `\"left\"` value. For them, the `\"top\"` value is used.\n   *\n   * You can override this setting if you specify the `questionTitleLocation` property for an [individual page](https://surveyjs.io/form-library/documentation/pagemodel#questionTitleLocation) or [panel](https://surveyjs.io/form-library/documentation/panelmodel#questionTitleLocation) or set the `titleLocation` property for a [specific question](https://surveyjs.io/form-library/documentation/question#titleLocation).\n   */\n  get questionTitleLocation() {\n    return this.getPropertyValue(\"questionTitleLocation\");\n  }\n  set questionTitleLocation(value) {\n    this.setPropertyValue(\"questionTitleLocation\", value.toLowerCase());\n    if (!this.isLoadingFromJson) {\n      this.updateElementCss(true);\n    }\n  }\n  updateElementCss(reNew) {\n    if (!!this.startPage) {\n      this.startPage.updateElementCss(reNew);\n    }\n    var pages = this.visiblePages;\n    for (var i = 0; i < pages.length; i++) {\n      pages[i].updateElementCss(reNew);\n    }\n    this.updateCss();\n  }\n  /**\n   * Specifies the error message position.\n   *\n   * Possible values:\n   *\n   * - `\"top\"` (default) - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   *\n   * You can override this setting if you specify the `questionErrorLocation` property for an [individual page](https://surveyjs.io/form-library/documentation/pagemodel#questionErrorLocation) or [panel](https://surveyjs.io/form-library/documentation/panelmodel#questionErrorLocation) or set the `errorLocation` property for a [specific question](https://surveyjs.io/form-library/documentation/question#errorLocation).\n   */\n  get questionErrorLocation() {\n    return this.getPropertyValue(\"questionErrorLocation\");\n  }\n  set questionErrorLocation(value) {\n    this.setPropertyValue(\"questionErrorLocation\", value.toLowerCase());\n  }\n  /**\n   * Specifies where to display question descriptions.\n   *\n   * Possible values:\n   *\n   * - `\"underTitle\"` (default) - Displays descriptions under question titles.\n   * - `\"underInput\"` - Displays descriptions under the interactive area.\n   *\n   * You can override this setting for individual questions if you specify their [`descriptionLocation`](https://surveyjs.io/form-library/documentation/api-reference/question#descriptionLocation) property.\n   *\n   */\n  get questionDescriptionLocation() {\n    return this.getPropertyValue(\"questionDescriptionLocation\");\n  }\n  set questionDescriptionLocation(value) {\n    this.setPropertyValue(\"questionDescriptionLocation\", value);\n  }\n  /**\n   * @deprecated Use the [`readOnly`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#readOnly) property.\n   */\n  get mode() {\n    return this.readOnly ? \"display\" : \"edit\";\n  }\n  set mode(value) {\n    value = value.toLowerCase();\n    if (value == this.mode) return;\n    if (value != \"edit\" && value != \"display\") return;\n    this.readOnly = value == \"display\";\n  }\n  /**\n   * Enables the read-only mode. If you set this property to `true`, users cannot take the survey.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/prevent-form-editing-with-read-only-mode/ (linkStyle))\n   */\n  get readOnly() {\n    return this.getPropertyValue(\"readOnly\");\n  }\n  set readOnly(val) {\n    this.setPropertyValue(\"readOnly\", val);\n  }\n  onReadOnlyChanged() {\n    for (var i = 0; i < this.pages.length; i++) {\n      var page = this.pages[i];\n      page.setPropertyValue(\"isReadOnly\", page.isReadOnly);\n    }\n    this.updateButtonsVisibility();\n    this.updateCss();\n  }\n  /**\n   * Gets or sets an object with survey results. You can set this property with an object of the following structure:\n   *\n   * ```js\n   * {\n   *   question1Name: question1Value,\n   *   question2Name: question2Value,\n   *   // ...\n   * }\n   * ```\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/auto-populate-form-fields/ (linkStyle))\n   *\n   * When you set the `data` property in code, the new object overrides the old object that may contain default question values and entered data. If you want to *merge* the new and old objects, call the [`mergeData(newDataObj)`](https://surveyjs.io/form-library/documentation/surveymodel#mergeData) method.\n   *\n   * If you assign a new object while a respondent takes the survey, set the [`currentPageNo`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPageNo) property to 0 to start the survey from the beginning. This will also cause the survey to re-evaluate the [`visibleIf`](https://surveyjs.io/form-library/documentation/api-reference/question#visibleIf), [`enableIf`](https://surveyjs.io/form-library/documentation/api-reference/question#enableIf), and other [expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions).\n   * @see setValue\n   * @see getValue\n   */\n  get data() {\n    var result = {};\n    var keys = this.getValuesKeys();\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var dataValue = this.getDataValueCore(this.valuesHash, key);\n      if (dataValue !== undefined) {\n        result[key] = dataValue;\n      }\n    }\n    this.setCalculatedValuesIntoResult(result);\n    return result;\n  }\n  set data(data) {\n    this.valuesHash = {};\n    this.setDataCore(data, !data);\n  }\n  /**\n   * Merges a specified data object with the object from the [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data) property.\n   *\n   * Refer to the following help topic for more information: [Populate Form Fields | Multiple Question Values](https://surveyjs.io/form-library/documentation/design-survey/pre-populate-form-fields#multiple-question-values).\n   *\n   * @param data A data object to merge. It should have the following structure: `{ questionName: questionValue, ... }`\n   * @see setValue\n   */\n  mergeData(data) {\n    if (!data) return;\n    const newData = this.data;\n    this.mergeValues(data, newData);\n    this.setDataCore(newData);\n  }\n  setDataCore(data, clearData = false) {\n    if (clearData) {\n      this.valuesHash = {};\n    }\n    if (data) {\n      for (var key in data) {\n        const dataKey = typeof key === \"string\" ? key.trim() : key;\n        this.setDataValueCore(this.valuesHash, dataKey, data[key]);\n      }\n    }\n    this.updateAllQuestionsValue(clearData);\n    this.notifyAllQuestionsOnValueChanged();\n    this.notifyElementsOnAnyValueOrVariableChanged(\"\");\n    this.runConditions();\n    this.updateAllQuestionsValue(clearData);\n  }\n  get isSurvey() {\n    return true;\n  }\n  /**\n   * Returns an object with survey results.\n   *\n   * If you want to get a survey results object that mirrors the survey structure, call the `getData()` method with an object that has the `includePages` and `includePanels` properties enabled. Without this object, the `getData()` method returns the [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data) property value.\n   *\n   * ```js\n   * import { Model } from \"survey-core\";\n   *\n   * const surveyJson = { ... };\n   * const survey = new Model(surveyJson);\n   * survey.getData({ includePages: true, includePanels: true });\n   * ```\n   */\n  getData(options) {\n    const opt = options || {\n      includePages: false,\n      includePanels: false\n    };\n    if (!opt.includePages && !opt.includePanels) return this.data;\n    return this.getStructuredData(!!opt.includePages, !opt.includePanels ? opt.includePages ? 1 : 0 : -1);\n  }\n  getStructuredData(includePages = true, level = -1) {\n    if (level === 0) return this.data;\n    const data = {};\n    this.pages.forEach(p => {\n      if (includePages) {\n        const pageValues = {};\n        if (p.collectValues(pageValues, level - 1)) {\n          data[p.name] = pageValues;\n        }\n      } else {\n        p.collectValues(data, level);\n      }\n    });\n    return data;\n  }\n  setStructuredData(data, doMerge = false) {\n    if (!data) return;\n    const res = {};\n    for (let key in data) {\n      const q = this.getQuestionByValueName(key);\n      if (q) {\n        res[key] = data[key];\n      } else {\n        let panel = this.getPageByName(key);\n        if (!panel) {\n          panel = this.getPanelByName(key);\n        }\n        if (panel) {\n          this.collectDataFromPanel(panel, res, data[key]);\n        }\n      }\n    }\n    if (doMerge) {\n      this.mergeData(res);\n    } else {\n      this.data = res;\n    }\n  }\n  collectDataFromPanel(panel, output, data) {\n    for (let key in data) {\n      let el = panel.getElementByName(key);\n      if (!el) continue;\n      if (el.isPanel) {\n        this.collectDataFromPanel(el, output, data[key]);\n      } else {\n        output[key] = data[key];\n      }\n    }\n  }\n  get editingObj() {\n    return this.editingObjValue;\n  }\n  set editingObj(val) {\n    if (this.editingObj == val) return;\n    this.unConnectEditingObj();\n    this.editingObjValue = val;\n    if (this.isDisposed) return;\n    if (!val) {\n      var questions = this.getAllQuestions();\n      for (var i = 0; i < questions.length; i++) {\n        questions[i].unbindValue();\n      }\n    }\n    if (!!this.editingObj) {\n      this.setDataCore({});\n      this.onEditingObjPropertyChanged = (sender, options) => {\n        if (!Serializer.hasOriginalProperty(this.editingObj, options.name)) return;\n        if (options.name === \"locale\") {\n          this.setDataCore({});\n        }\n        this.updateOnSetValue(options.name, this.editingObj[options.name], options.oldValue);\n      };\n      this.editingObj.onPropertyChanged.add(this.onEditingObjPropertyChanged);\n    }\n  }\n  unConnectEditingObj() {\n    if (!!this.editingObj && !this.editingObj.isDisposed) {\n      this.editingObj.onPropertyChanged.remove(this.onEditingObjPropertyChanged);\n    }\n  }\n  get isEditingSurveyElement() {\n    return !!this.editingObj;\n  }\n  setCalculatedValuesIntoResult(result) {\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      var calValue = this.calculatedValues[i];\n      if (calValue.includeIntoResult && !!calValue.name && this.getVariable(calValue.name) !== undefined) {\n        result[calValue.name] = this.getVariable(calValue.name);\n      }\n    }\n  }\n  getAllValues() {\n    return this.data;\n  }\n  /**\n   * Returns survey results as an array of objects in which the question name, title, value, and other parameters are stored as individual properties.\n   *\n   * If a question can have more than one value (Matrix, Multiple Text), its object enables the `isNode` flag and stores information about these values in the `data` property. Refer to the following help topic for more information: [Access Full Survey Results](https://surveyjs.io/form-library/documentation/handle-survey-results-access#access-full-survey-results).\n   *\n   * If you want to skip empty answers, pass an object with the `includeEmpty` property set to `false`.\n   */\n  getPlainData(options) {\n    if (!options) {\n      options = {\n        includeEmpty: true,\n        includeQuestionTypes: false,\n        includeValues: false\n      };\n    }\n    const result = [];\n    const questionValueNames = [];\n    this.getAllQuestions().forEach(question => {\n      var resultItem = question.getPlainData(options);\n      if (!!resultItem) {\n        result.push(resultItem);\n        questionValueNames.push(question.valueName || question.name);\n      }\n    });\n    if (!!options.includeValues) {\n      const keys = this.getValuesKeys();\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (questionValueNames.indexOf(key) == -1) {\n          var dataValue = this.getDataValueCore(this.valuesHash, key);\n          if (!!dataValue) {\n            result.push({\n              name: key,\n              title: key,\n              value: dataValue,\n              displayValue: dataValue,\n              isNode: false,\n              getString: val => typeof val === \"object\" ? JSON.stringify(val) : val\n            });\n          }\n        }\n      }\n    }\n    return result;\n  }\n  getFilteredValues() {\n    const values = {};\n    for (var key in this.variablesHash) values[key] = this.variablesHash[key];\n    this.addCalculatedValuesIntoFilteredValues(values);\n    if (!this.isDesignMode) {\n      const keys = this.getValuesKeys();\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        values[key] = this.getDataValueCore(this.valuesHash, key);\n      }\n      this.getAllQuestions().forEach(q => {\n        if (q.hasFilteredValue) {\n          values[q.getFilteredName()] = q.getFilteredValue();\n        }\n      });\n    }\n    return values;\n  }\n  addCalculatedValuesIntoFilteredValues(values) {\n    var caclValues = this.calculatedValues;\n    for (var i = 0; i < caclValues.length; i++) values[caclValues[i].name] = caclValues[i].value;\n  }\n  getFilteredProperties() {\n    return {\n      survey: this\n    };\n  }\n  getValuesKeys() {\n    if (!this.editingObj) return Object.keys(this.valuesHash);\n    var props = Serializer.getPropertiesByObj(this.editingObj);\n    var res = [];\n    for (var i = 0; i < props.length; i++) {\n      res.push(props[i].name);\n    }\n    return res;\n  }\n  getDataValueCore(valuesHash, key) {\n    if (!!this.editingObj) return Serializer.getObjPropertyValue(this.editingObj, key);\n    return this.getDataFromValueHash(valuesHash, key);\n  }\n  setDataValueCore(valuesHash, key, value) {\n    if (!!this.editingObj) {\n      Serializer.setObjPropertyValue(this.editingObj, key, value);\n    } else {\n      this.setDataToValueHash(valuesHash, key, value);\n    }\n  }\n  deleteDataValueCore(valuesHash, key) {\n    if (!!this.editingObj) {\n      this.editingObj[key] = null;\n    } else {\n      this.deleteDataFromValueHash(valuesHash, key);\n    }\n  }\n  getDataFromValueHash(valuesHash, key) {\n    if (!!this.valueHashGetDataCallback) return this.valueHashGetDataCallback(valuesHash, key);\n    return valuesHash[key];\n  }\n  setDataToValueHash(valuesHash, key, value) {\n    if (!!this.valueHashSetDataCallback) {\n      this.valueHashSetDataCallback(valuesHash, key, value);\n    } else {\n      valuesHash[key] = value;\n    }\n  }\n  deleteDataFromValueHash(valuesHash, key) {\n    if (!!this.valueHashDeleteDataCallback) {\n      this.valueHashDeleteDataCallback(valuesHash, key);\n    } else {\n      delete valuesHash[key];\n    }\n  }\n  /**\n   * An object with all comment values.\n   * @see Question.showCommentArea\n   * @see storeOthersAsComment\n   */\n  get comments() {\n    var result = {};\n    var keys = this.getValuesKeys();\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (key.indexOf(this.commentSuffix) > 0) {\n        result[key] = this.getDataValueCore(this.valuesHash, key);\n      }\n    }\n    return result;\n  }\n  /**\n   * Returns an array of visible pages without the start page.\n   *\n   * To get an array of all pages, use the [`pages`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#pages) property. If all pages are visible, the `pages` and `visiblePages` arrays are identical.\n   * @see [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility)\n   */\n  get visiblePages() {\n    if (this.isDesignMode) return this.pages;\n    if (!!this.pageContainerValue && (this.isShowingPreview || this.isSinglePage)) return [this.pageContainerValue];\n    var result = new Array();\n    for (var i = 0; i < this.pages.length; i++) {\n      if (this.isPageInVisibleList(this.pages[i])) {\n        result.push(this.pages[i]);\n      }\n    }\n    return result;\n  }\n  isPageInVisibleList(page) {\n    return this.isDesignMode || page.isVisible && !page.isStartPage;\n  }\n  /**\n   * Returns `true` if the survey contains zero pages.\n   * @see emptySurveyText\n   */\n  get isEmpty() {\n    return this.pages.length == 0;\n  }\n  get PageCount() {\n    return this.pageCount;\n  }\n  /**\n   * Returns a total number of survey pages.\n   *\n   * To get the number of visible pages, use the [`visiblePageCount`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#visiblePageCount) property.\n   * @see pages\n   */\n  get pageCount() {\n    return this.pages.length;\n  }\n  /**\n   * Returns the number of visible survey pages.\n   *\n   * To get a total number of survey pages, use the [`pageCount`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#pageCount) property.\n   * @see visiblePages\n   * @see [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility)\n   */\n  get visiblePageCount() {\n    return this.visiblePages.length;\n  }\n  /**\n   * Returns the start page. Applies only if the [`firstPageIsStartPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#firstPageIsStartPage) property is set to `true`.\n   *\n   * Refer to the following help topic for more information: [Start Page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * @see firstPageIsStartPage\n   * @see activePage\n   */\n  get startPage() {\n    var page = this.firstPageIsStartPage && this.pages.length > 1 ? this.pages[0] : null;\n    if (!!page) {\n      page.onFirstRendering();\n    }\n    return page;\n  }\n  /**\n   * @deprecated Use the [`startPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#startPage) property instead.\n   */\n  get startedPage() {\n    return this.startPage;\n  }\n  /**\n   * Gets or sets the current page.\n   *\n   * If you want to change the current page, set this property to a `PageModel` object. You can get this object in different ways. For example, you can call the [`getPageByName()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#getPageByName) method to obtain a `PageModel` object with a specific name:\n   *\n   * ```js\n   * survey.currentPage = survey.getPageByName(\"my-page-name\");\n   * ```\n   *\n   * Alternative ways to change the current page are listed below:\n   *\n   * - Set the [`currentPageNo`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPageNo) property to the index of the required page.\n   * - Assign a required page name to the [`currentElementName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentElementName) property.\n   * - Assign a required page to the [`currentElement`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentElement) property.\n   *\n   * The `currentPage` property does not return the start page even if it is current. Use the [`activePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#activePage) property instead if your survey contains a start page.\n   */\n  get currentPage() {\n    return this.getPropertyValue(\"currentPage\", null);\n  }\n  set currentPage(value) {\n    if (this.isLoadingFromJson) return;\n    var newPage = this.getPageByObject(value);\n    if (!!value && !newPage) return;\n    if (!newPage && this.isCurrentPageAvailable) return;\n    var vPages = this.visiblePages;\n    if (newPage != null && vPages.indexOf(newPage) < 0) return;\n    if (newPage == this.currentPage) return;\n    const curEl = this.currentSingleElement;\n    if (!this.isShowingPreview && !!curEl && newPage !== curEl.page) {\n      this.currentSingleElement = newPage.getFirstVisibleElement();\n      return;\n    }\n    var oldValue = this.currentPage;\n    if (!this.isShowingPreview && !curEl && !this.currentPageChanging(newPage, oldValue)) return;\n    this.setPropertyValue(\"currentPage\", newPage);\n    if (!!newPage) {\n      newPage.onFirstRendering();\n      newPage.updateCustomWidgets();\n    }\n    this.locStrsChanged();\n    if (!this.isShowingPreview) {\n      this.currentPageChanged(newPage, oldValue);\n    }\n  }\n  /**\n   * Specifies the current page, panel, or question (depends on the [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) value) using its [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   *\n   * The following table illustrates the dependency between `questionsOnPageMode` values and the types of survey elements that the `currentElementName` property can specify:\n   *\n   * | `questionsOnPageMode` | Survey element |\n   * | --------------------- | -------------- |\n   * | `\"standard\"` or `\"singlePage\"` | Page |\n   * | `\"questionPerPage\"` | Question or Panel |\n   * | `\"inputPerPage\"` | Question |\n   * @see currentElement\n   */\n  get currentElementName() {\n    var _a;\n    return ((_a = this.currentElement) === null || _a === void 0 ? void 0 : _a.name) || \"\";\n  }\n  set currentElementName(val) {\n    if (!!val) {\n      this.currentElement = this.getElementByName(val);\n    }\n  }\n  /**\n   * Gets or sets the current page, panel, or question (depends on the [`questionsOnPageMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#questionsOnPageMode) value).\n   *\n   * The following table illustrates the dependency between `questionsOnPageMode` values and the types of survey elements that the `currentElement` property can contain:\n   *\n   * | `questionsOnPageMode` | Survey element |\n   * | --------------------- | -------------- |\n   * | `\"standard\"` or `\"singlePage\"` | Page |\n   * | `\"questionPerPage\"` | Question or Panel |\n   * | `\"inputPerPage\"` | Question |\n   */\n  get currentElement() {\n    return this.currentSingleElement || this.currentPage;\n  }\n  set currentElement(val) {\n    if (val) {\n      if (val.isPage) {\n        this.currentPage = val;\n      } else {\n        const page = val.page;\n        if (!!page && !this.isSingleVisibleQuestion) {\n          this.currentPage = page;\n        } else {\n          this.currentSingleElement = val;\n        }\n      }\n    }\n  }\n  /**\n   * Returns a page, panel, or question with a specified [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   * @param name A survey element name.\n   * @returns A survey element with the specified name.\n   * @see currentElementName\n   */\n  getElementByName(name) {\n    if (!name) return null;\n    return this.getPageByName(name) || this.getPanelByName(name) || this.getQuestionByName(name);\n  }\n  tryNavigateToPage(page /*, serverValidationRes?: (res: boolean)=> void*/) {\n    if (!this.performValidationOnPageChanging(page)) return false;\n    const index = this.visiblePages.indexOf(page);\n    const res = index < this.currentPageNo || !this.doServerValidation(false, false, page);\n    if (res) {\n      this.currentPage = page;\n    }\n    return res;\n  }\n  performValidationOnPageChanging(page) {\n    if (this.isDesignMode) return false;\n    if (this.canGoTroughValidation()) return true;\n    const index = this.visiblePages.indexOf(page);\n    if (index < 0 || index >= this.visiblePageCount) return false;\n    if (index === this.currentPageNo) return false;\n    if (index < this.currentPageNo || this.checkErrorsMode === \"onComplete\" || this.validationAllowSwitchPages) return true;\n    if (!this.validateCurrentPage()) return false;\n    for (let i = this.currentPageNo + 1; i < index; i++) {\n      const page = this.visiblePages[i];\n      if (!page.validate(true, true)) return false;\n      page.passed = true;\n    }\n    return true;\n  }\n  updateCurrentPage() {\n    if (this.isCurrentPageAvailable) return;\n    this.currentPage = this.firstVisiblePage;\n  }\n  get isCurrentPageAvailable() {\n    const page = this.currentPage;\n    return !!page && this.isPageInVisibleList(page) && this.isPageExistsInSurvey(page);\n  }\n  isPageExistsInSurvey(page) {\n    if (this.pages.indexOf(page) > -1) return true;\n    return !!this.onContainsPageCallback && this.onContainsPageCallback(page);\n  }\n  /**\n   * Returns [`startPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#startPage) if the survey currently displays a start page; otherwise, returns [`currentPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPage).\n   * @see startPage\n   * @see currentPage\n   * @see firstPageIsStartPage\n   */\n  get activePage() {\n    return this.getPropertyValue(\"activePage\");\n  }\n  /**\n   * A Boolean value that indicates whether the [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page) is currently displayed.\n   */\n  get isStartPageActive() {\n    return this.state === \"starting\";\n  }\n  /**\n   * @deprecated Use the [`isStartPageActive`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#isStartPageActive) property instead.\n   */\n  get isShowStartingPage() {\n    return this.isStartPageActive;\n  }\n  /**\n   * Specifies which part of a matrix row responds to a drag gesture in [Dynamic Matrix](https://surveyjs.io/form-library/examples/questiontype-matrixdynamic/) questions.\n   *\n   * Possible values:\n   *\n   * - `\"entireItem\"` (default) - Users can use the entire matrix row as a drag handle.\n   * - `\"icon\"` - Users can only use a drag icon as a drag handle.\n   */\n  get matrixDragHandleArea() {\n    return this.getPropertyValue(\"matrixDragHandleArea\", \"entireItem\");\n  }\n  set matrixDragHandleArea(val) {\n    this.setPropertyValue(\"matrixDragHandleArea\", val);\n  }\n  get isShowingPage() {\n    return this.state == \"running\" || this.state == \"preview\" || this.isStartPageActive;\n  }\n  updateActivePage() {\n    const newPage = this.isStartPageActive ? this.startPage : this.currentPage;\n    if (newPage !== this.activePage) {\n      this.setPropertyValue(\"activePage\", newPage);\n    }\n  }\n  onStateAndCurrentPageChanged() {\n    this.updateActivePage();\n    this.updateButtonsVisibility();\n  }\n  getPageByObject(value) {\n    if (!value) return null;\n    if (value.getType && value.getType() == \"page\") return value;\n    if (typeof value === \"string\" || value instanceof String) return this.getPageByName(String(value));\n    if (!isNaN(value)) {\n      var index = Number(value);\n      var vPages = this.visiblePages;\n      if (value < 0 || value >= vPages.length) return null;\n      return vPages[index];\n    }\n    return value;\n  }\n  /**\n   * A zero-based index of the current page in the [`visiblePages`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#visiblePages) array.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-editprevious/ (linkStyle))\n   * @see visiblePages\n   */\n  get currentPageNo() {\n    return this.visiblePages.indexOf(this.currentPage);\n  }\n  set currentPageNo(value) {\n    var vPages = this.visiblePages;\n    if (value < 0 || value >= vPages.length) return;\n    this.currentPage = vPages[value];\n  }\n  /**\n   * Specifies the sort order of questions in the survey.\n   *\n   * Possible values:\n   *\n   * - `\"initial\"` (default) - Preserves the original order of questions.\n   * - `\"random\"` - Displays questions in random order.\n   *\n   * You can override this property for individual pages and panels.\n   * @see PageModel.questionOrder\n   * @see PanelModel.questionOrder\n   */\n  get questionOrder() {\n    return this.getPropertyValue(\"questionOrder\");\n  }\n  set questionOrder(val) {\n    this.setPropertyValue(\"questionOrder\", val);\n  }\n  /**\n   * @deprecated Use the [`questionOrder`](#questionOrder) property instead.\n   */\n  get questionsOrder() {\n    return this.questionOrder;\n  }\n  set questionsOrder(val) {\n    this.questionOrder = val;\n  }\n  /**\n   * Focuses the first question on the current page.\n   * @see focusQuestion\n   * @see autoFocusFirstQuestion\n   */\n  focusFirstQuestion() {\n    if (this.focusingQuestionInfo) return;\n    var page = this.activePage;\n    if (page) {\n      page.scrollToTop();\n      page.focusFirstQuestion();\n    }\n  }\n  scrollToTopOnPageChange(doScroll = true) {\n    var page = this.activePage;\n    if (!page) return;\n    if (doScroll) {\n      page.scrollToTop();\n    }\n    if (this.isCurrentPageRendering && this.autoFocusFirstQuestion && !this.focusingQuestionInfo) {\n      page.focusFirstQuestion();\n      this.isCurrentPageRendering = false;\n    }\n  }\n  /**\n   * Returns the current survey state.\n   *\n   * Possible values:\n   *\n   * - `\"loading\"` - The survey is being loaded from a JSON schema.\n   * - `\"empty\"` - The survey has no elements to display.\n   * - `\"starting\"` - The survey displays a [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * - `\"running\"` - A respondent is taking the survey.\n   * - `\"preview\"` - A respondent is [previewing](https://surveyjs.io/form-library/examples/survey-showpreview/) answers before submitting them.\n   * - `\"completed\"` - A respondent has completed the survey and submitted the results.\n   */\n  get state() {\n    return this.getPropertyValue(\"state\", \"empty\");\n  }\n  updateState() {\n    this.setPropertyValue(\"state\", this.calcState());\n  }\n  calcState() {\n    if (this.isLoading) return \"loading\";\n    if (this.isCompleted) return \"completed\";\n    if (this.isCompletedBefore) return \"completedbefore\";\n    if (!this.isDesignMode && this.isEditMode && this.isStartedState && this.startPage) return \"starting\";\n    if (this.isShowingPreview) return this.currentPage ? \"preview\" : \"empty\";\n    return this.currentPage ? \"running\" : \"empty\";\n  }\n  get isCompleted() {\n    return this.getPropertyValue(\"isCompleted\", false);\n  }\n  set isCompleted(val) {\n    this.setPropertyValue(\"isCompleted\", val);\n  }\n  get isShowingPreview() {\n    return this.getPropertyValue(\"isShowingPreview\", false);\n  }\n  set isShowingPreview(val) {\n    if (this.isShowingPreview == val) return;\n    this.setPropertyValue(\"isShowingPreview\", val);\n    this.onShowingPreviewChanged();\n  }\n  get isStartedState() {\n    return this.getPropertyValue(\"isStartedState\", false);\n  }\n  set isStartedState(val) {\n    this.setPropertyValue(\"isStartedState\", val);\n  }\n  get isCompletedBefore() {\n    return this.getPropertyValue(\"isCompletedBefore\", false);\n  }\n  set isCompletedBefore(val) {\n    this.setPropertyValue(\"isCompletedBefore\", val);\n  }\n  get isLoading() {\n    return this.getPropertyValue(\"isLoading\", false);\n  }\n  set isLoading(val) {\n    this.setPropertyValue(\"isLoading\", val);\n  }\n  /**\n   * Displays the [Loading page](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#loadingHtml).\n   * @see endLoading\n   */\n  beginLoading() {\n    this.isLoading = true;\n  }\n  /**\n   * Stops displaying the [Loading page](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#loadingHtml).\n   * @see beginLoading\n   */\n  endLoading() {\n    this.isLoading = false;\n  }\n  get completedState() {\n    return this.getPropertyValue(\"completedState\", \"\");\n  }\n  get completedStateText() {\n    return this.getPropertyValue(\"completedStateText\", \"\");\n  }\n  setCompletedState(value, text) {\n    this.setPropertyValue(\"completedState\", value);\n    if (!text) {\n      if (value == \"saving\") text = this.getLocalizationString(\"savingData\");\n      if (value == \"error\") text = this.getLocalizationString(\"savingDataError\");\n      if (value == \"success\") text = this.getLocalizationString(\"savingDataSuccess\");\n    }\n    this.setPropertyValue(\"completedStateText\", text);\n    if (this.state === \"completed\" && this.showCompletePage && !!this.completedState) {\n      this.notify(this.completedStateText, this.completedState, value === \"error\");\n    }\n  }\n  /**\n   * Displays a toast notification with a specified message.\n   *\n   * Depending on the `type` argument, a survey can display the following notification types:\n   *\n   * ![Toast notification types in SurveyJS Form Library](https://surveyjs.io//Content/Images/docs/notification-types.png)\n   * @param message A message to display.\n   * @param type A notification type: `\"info\"` (default), `\"success\"`, or `\"error\"`.\n   * @param showActions For internal use.\n   */\n  notify(message, type, showActions = false) {\n    this.notifier.showActions = showActions;\n    this.notifier.notify(message, type, showActions);\n  }\n  /**\n   * Resets the survey [`state`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#state) and, optionally, [`data`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#data). If `state` is `\"completed\"`, it becomes `\"running\"`.\n   * @param clearData *(Optional)* Specifies whether to clear survey data. Default value: `true`.\n   * @param goToFirstPage *(Optional)* Specifies whether to switch the survey to the first page. Default value: `true`.\n   */\n  clear(clearData = true, goToFirstPage = true) {\n    this.isCompleted = false;\n    this.isCompletedBefore = false;\n    this.isLoading = false;\n    this.completedByTriggers = undefined;\n    this.skippedPages = [];\n    if (clearData) {\n      this.setDataCore(null, true);\n    }\n    this.timerModel.spent = 0;\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].timeSpent = 0;\n      this.pages[i].setWasShown(false);\n      this.pages[i].passed = false;\n    }\n    this.onFirstPageIsStartedChanged();\n    if (goToFirstPage) {\n      this.currentPage = this.firstVisiblePage;\n      if (this.currentSingleElement) {\n        const questions = this.getSingleElements();\n        this.currentSingleElement = questions.length > 0 ? questions[0] : undefined;\n      }\n    }\n    if (clearData) {\n      this.updateValuesWithDefaults();\n    }\n  }\n  mergeValues(src, dest) {\n    mergeValues(src, dest);\n  }\n  updateValuesWithDefaults() {\n    if (this.isDesignMode || this.isLoading) return;\n    for (var i = 0; i < this.pages.length; i++) {\n      var questions = this.pages[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        questions[j].updateValueWithDefaults();\n      }\n    }\n  }\n  updateCustomWidgets(page) {\n    if (!page) return;\n    page.updateCustomWidgets();\n  }\n  currentPageChanging(newValue, oldValue, newQuestion, oldQuestion) {\n    const options = this.createPageChangeEventOptions(newValue, oldValue, newQuestion, oldQuestion);\n    return this.currentPageChangingFromOptions(options);\n  }\n  currentPageChangingFromOptions(options) {\n    options.allow = true;\n    options.allowChanging = true;\n    this.onCurrentPageChanging.fire(this, options);\n    const allow = options.allowChanging && options.allow;\n    if (allow && options.newCurrentPage !== options.oldCurrentPage) {\n      this.isCurrentPageRendering = true;\n    }\n    return allow;\n  }\n  currentPageChanged(newValue, oldValue) {\n    this.notifyQuestionsOnHidingContent(oldValue);\n    if (oldValue && !oldValue.isDisposed && !oldValue.passed) {\n      if (oldValue.validate(false)) {\n        oldValue.passed = true;\n      }\n    }\n    if (this.isCurrentPageRendered === true) {\n      this.isCurrentPageRendered = false;\n    }\n    if (!this.currentSingleElement) {\n      const options = this.createPageChangeEventOptions(newValue, oldValue);\n      this.onCurrentPageChanged.fire(this, options);\n    }\n  }\n  notifyQuestionsOnHidingContent(page) {\n    if (page && !page.isDisposed) {\n      page.questions.forEach(q => q.onHidingContent());\n    }\n  }\n  createPageChangeEventOptions(newValue, oldValue, newQuestion, oldQuestion) {\n    const diff = !!newValue && !!oldValue ? newValue.visibleIndex - oldValue.visibleIndex : 0;\n    let qDiff = diff;\n    if (qDiff === 0 && !!oldQuestion && !!newQuestion) {\n      qDiff = newValue.elements.indexOf(newQuestion) - newValue.elements.indexOf(oldQuestion);\n    }\n    return {\n      oldCurrentQuestion: oldQuestion,\n      newCurrentQuestion: newQuestion,\n      oldCurrentPage: oldValue,\n      newCurrentPage: newValue,\n      isNextPage: diff === 1,\n      isPrevPage: diff === -1,\n      isGoingForward: qDiff > 0,\n      isGoingBackward: qDiff < 0,\n      isAfterPreview: this.changeCurrentPageFromPreview === true\n    };\n  }\n  getProgress() {\n    if (this.currentPage == null) return 0;\n    if (this.progressBarType !== \"pages\") {\n      var info = this.getProgressInfo();\n      if (this.progressBarType === \"requiredQuestions\") {\n        return info.requiredQuestionCount >= 1 ? Math.ceil(info.requiredAnsweredQuestionCount * 100 / info.requiredQuestionCount) : 100;\n      }\n      return info.questionCount >= 1 ? Math.ceil(info.answeredQuestionCount * 100 / info.questionCount) : 100;\n    }\n    const visPages = this.visiblePages;\n    var index = visPages.indexOf(this.currentPage);\n    return Math.ceil(index * 100 / visPages.length);\n  }\n  get isNavigationButtonsShowing() {\n    if (this.isDesignMode) return \"none\";\n    var page = this.activePage;\n    if (!page) return \"none\";\n    if (page.navigationButtonsVisibility === \"hide\") {\n      return \"none\";\n    }\n    if (page.navigationButtonsVisibility === \"show\") {\n      return !this.showNavigationButtons ? \"bottom\" : this.navigationButtonsLocation;\n    }\n    return !this.showNavigationButtons ? \"none\" : this.navigationButtonsLocation;\n  }\n  get isNavigationButtonsShowingOnTop() {\n    return this.getIsNavigationButtonsShowingOn(\"top\");\n  }\n  get isNavigationButtonsShowingOnBottom() {\n    return this.getIsNavigationButtonsShowingOn(\"bottom\");\n  }\n  getIsNavigationButtonsShowingOn(buttonPosition) {\n    var res = this.isNavigationButtonsShowing;\n    return res == \"both\" || res == \"topBottom\" || res == buttonPosition;\n  }\n  get isEditMode() {\n    return !this.readOnly;\n  }\n  get isDisplayMode() {\n    return this.readOnly && !this.isDesignMode || this.state == \"preview\";\n  }\n  get isUpdateValueTextOnTyping() {\n    return this.textUpdateMode == \"onTyping\";\n  }\n  /**\n   * Indicates whether the survey is being designed in [Survey Creator](https://surveyjs.io/survey-creator/documentation/overview).\n   */\n  get isDesignMode() {\n    return this._isDesignMode;\n  }\n  setDesignMode(value) {\n    if (!!this._isDesignMode != !!value) {\n      this._isDesignMode = !!value;\n      this.onQuestionsOnPageModeChanged(\"standard\");\n    }\n  }\n  /**\n   * Specifies whether to show all survey elements, regardless of their visibility.\n   *\n   * Default value: `false`\n   */\n  get showInvisibleElements() {\n    return this.getPropertyValue(\"showInvisibleElements\", false);\n  }\n  set showInvisibleElements(val) {\n    var visPages = this.visiblePages;\n    this.setPropertyValue(\"showInvisibleElements\", val);\n    if (this.isLoadingFromJson) return;\n    this.runConditions();\n    this.updateAllElementsVisibility(visPages);\n  }\n  updateAllElementsVisibility(visPages) {\n    for (var i = 0; i < this.pages.length; i++) {\n      var page = this.pages[i];\n      page.updateElementVisibility();\n      if (visPages.indexOf(page) > -1 != page.isVisible) {\n        this.onPageVisibleChanged.fire(this, {\n          page: page,\n          visible: page.isVisible\n        });\n      }\n    }\n  }\n  get areInvisibleElementsShowing() {\n    return this.isDesignMode || this.showInvisibleElements;\n  }\n  get areEmptyElementsHidden() {\n    return this.isShowingPreview && this.showPreviewBeforeComplete && this.previewMode == \"answeredQuestions\" && this.isAnyQuestionAnswered;\n  }\n  get isAnyQuestionAnswered() {\n    const questions = this.getAllQuestions(true);\n    for (let i = 0; i < questions.length; i++) {\n      if (!questions[i].isEmpty()) return true;\n    }\n    return false;\n  }\n  /**\n   * Indicates whether the browser has a cookie with a specified [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName). If this property's value is `true`, the respondent has passed the survey previously.\n   * @see setCookie\n   * @see deleteCookie\n   */\n  get hasCookie() {\n    if (!this.cookieName) return false;\n    var cookies = DomDocumentHelper.getCookie();\n    return cookies && cookies.indexOf(this.cookieName + \"=true\") > -1;\n  }\n  /**\n   * Sets a cookie with a specified [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName) in the browser. If the `cookieName` property value is defined, this method is automatically called on survey completion.\n   * @see hasCookie\n   * @see deleteCookie\n   */\n  setCookie() {\n    if (!this.cookieName) return;\n    DomDocumentHelper.setCookie(this.cookieName + \"=true; expires=Fri, 31 Dec 9999 0:0:0 GMT\");\n  }\n  /**\n   * Deletes a cookie with a specified [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName) from the browser.\n   * @see hasCookie\n   * @see setCookie\n   */\n  deleteCookie() {\n    if (!this.cookieName) return;\n    DomDocumentHelper.setCookie(this.cookieName + \"=;\");\n  }\n  /**\n   * @deprecated Use the [`validationEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#validationEnabled) property instead.\n   */\n  get ignoreValidation() {\n    return !this.validationEnabled;\n  }\n  set ignoreValidation(val) {\n    this.validationEnabled = !val;\n  }\n  /**\n   * Switches the survey to the next page.\n   *\n   * This method returns a Boolean value that indicates whether the page was successfully switched. `false` is returned if the current page is the last page or if it contains validation errors.\n   * @returns `true` if the page was successfully switched; `false` otherwise.\n   * @see isLastPage\n   * @see prevPage\n   * @see completeLastPage\n   */\n  nextPage() {\n    if (this.currentSingleElement) return this.performNext();\n    if (this.isLastPage) return false;\n    return this.doCurrentPageComplete(false);\n  }\n  performNext() {\n    const q = this.currentSingleElement;\n    if (!q) return this.nextPage();\n    this.resetNavigationButton();\n    if (this.isSingleVisibleInput) {\n      if (!q.validateSingleInput()) return false;\n      if (q.nextSingleInput()) {\n        this.updateButtonsVisibility();\n        return true;\n      }\n    }\n    if (this.validationEnabled && !q.validate(true)) return false;\n    this.sendPartialResult();\n    const questions = this.getSingleElements();\n    const index = questions.indexOf(q);\n    if (index < 0 || index === questions.length - 1) return false;\n    let keys = {};\n    if (q.isQuestion) {\n      keys[q.name] = q.value;\n    } else {\n      if (q.isPanel) {\n        keys = q.getValue();\n      }\n    }\n    this.checkTriggers(keys, true, false, true, q.name);\n    if (q === this.currentSingleElement) {\n      this.currentSingleElement = questions[index + 1];\n    }\n    return true;\n  }\n  performPrevious() {\n    return this.prevPage();\n  }\n  hasErrorsOnNavigate(doComplete) {\n    if (this.canGoTroughValidation()) return false;\n    const skipValidation = doComplete && this.validationAllowComplete || !doComplete && this.validationAllowSwitchPages;\n    const func = hasErrors => {\n      if (!hasErrors || skipValidation) {\n        this.doCurrentPageCompleteCore(doComplete);\n      }\n    };\n    if (this.isValidateOnComplete) {\n      if (!this.isLastPage) return false;\n      return this.validate(true, this.autoFocusFirstError, func, true) !== true && !skipValidation;\n    }\n    return this.validateCurrentPage(func) !== true && !skipValidation;\n  }\n  canGoTroughValidation() {\n    return !this.isEditMode || !this.validationEnabled;\n  }\n  checkForAsyncQuestionValidation(questions, func) {\n    this.clearAsyncValidationQuesitons();\n    for (var i = 0; i < questions.length; i++) {\n      if (questions[i].isRunningValidators) {\n        let q = questions[i];\n        q.onCompletedAsyncValidators = hasErrors => {\n          this.onCompletedAsyncQuestionValidators(q, func, hasErrors);\n        };\n        this.asyncValidationQuesitons.push(questions[i]);\n      }\n    }\n    return this.asyncValidationQuesitons.length > 0;\n  }\n  clearAsyncValidationQuesitons() {\n    if (!!this.asyncValidationQuesitons) {\n      var asynQuestions = this.asyncValidationQuesitons;\n      for (var i = 0; i < asynQuestions.length; i++) {\n        asynQuestions[i].onCompletedAsyncValidators = null;\n      }\n    }\n    this.asyncValidationQuesitons = [];\n  }\n  onCompletedAsyncQuestionValidators(question, func, hasErrors) {\n    if (hasErrors) {\n      this.clearAsyncValidationQuesitons();\n      func(true);\n      if (this.autoFocusFirstError && !!question && !!question.page && question.page === this.currentPage) {\n        const questions = this.currentPage.questions;\n        for (let i = 0; i < questions.length; i++) {\n          if (questions[i] !== question && questions[i].errors.length > 0) return;\n        }\n        question.focus(true);\n      }\n      return;\n    }\n    var asynQuestions = this.asyncValidationQuesitons;\n    for (var i = 0; i < asynQuestions.length; i++) {\n      if (asynQuestions[i].isRunningValidators) return;\n    }\n    func(false);\n  }\n  get isCurrentPageHasErrors() {\n    return this.checkIsCurrentPageHasErrors();\n  }\n  /**\n   * Returns `true` if the current page does not contain errors.\n   * @see currentPage\n   */\n  get isCurrentPageValid() {\n    return !this.checkIsCurrentPageHasErrors();\n  }\n  hasCurrentPageErrors(onAsyncValidation) {\n    return this.hasPageErrors(undefined, onAsyncValidation);\n  }\n  /**\n   * Validates all questions on the current page and returns `false` if the validation fails.\n   *\n   * If you use validation expressions and at least one of them calls an async function, the `validateCurrentPage` method returns `undefined`. In this case, you should pass a callback function as the `onAsyncValidation` parameter. The function's `hasErrors` Boolean parameter will contain the validation result.\n   * @param onAsyncValidation *(Optional)* Pass a callback function. It accepts a Boolean `hasErrors` parameter that equals `true` if the validation fails or `false` otherwise.\n   * @see currentPage\n   * @see validate\n   * @see validateCurrentPage\n   */\n  validateCurrentPage(onAsyncValidation) {\n    return this.validatePage(undefined, onAsyncValidation);\n  }\n  hasPageErrors(page, onAsyncValidation) {\n    const res = this.validatePage(page, onAsyncValidation);\n    if (res === undefined) return res;\n    return !res;\n  }\n  /**\n   * Validates all questions on a specified page and returns `false` if the validation fails.\n   *\n   * If you use validation expressions and at least one of them calls an async function, the `validatePage` method returns `undefined`. In this case, you should pass a callback function as the `onAsyncValidation` parameter. The function's `hasErrors` Boolean parameter will contain the validation result.\n   * @param page Pass the `PageModel` that you want to validate. You can pass `undefined` to validate the [`activePage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#activePage).\n   * @param onAsyncValidation *(Optional)* Pass a callback function. It accepts a Boolean `hasErrors` parameter that equals `true` if the validation fails or `false` otherwise.\n   * @see validate\n   * @see validateCurrentPage\n   */\n  validatePage(page, onAsyncValidation) {\n    if (!page) {\n      page = this.activePage;\n    }\n    if (!page) return true;\n    if (this.checkIsPageHasErrors(page)) return false;\n    if (!onAsyncValidation) return true;\n    return this.checkForAsyncQuestionValidation(page.questions, hasErrors => onAsyncValidation(hasErrors)) ? undefined : true;\n  }\n  hasErrors(fireCallback = true, focusOnFirstError = false, onAsyncValidation) {\n    const res = this.validate(fireCallback, focusOnFirstError, onAsyncValidation);\n    if (res === undefined) return res;\n    return !res;\n  }\n  /**\n   * Validates all questions and returns `false` if the validation fails.\n   *\n   * If you use validation expressions and at least one of them calls an async function, the `validate` method returns `undefined`. In this case, you should pass a callback function as the `onAsyncValidation` parameter. The function's `hasErrors` Boolean parameter will contain the validation result.\n   * @param fireCallback *(Optional)* Pass `false` if you do not want to show validation errors in the UI.\n   * @param focusFirstError *(Optional)* Pass `true` if you want to focus the first question with a validation error. The survey will be switched to the page that contains this question if required.\n   * @param onAsyncValidation *(Optional)* Pass a callback function. It accepts a Boolean `hasErrors` parameter that equals `true` if the validation fails or `false` otherwise.\n   * @see validateCurrentPage\n   * @see validatePage\n   */\n  validate(fireCallback = true, focusFirstError = false, onAsyncValidation, changeCurrentPage) {\n    if (!!onAsyncValidation) {\n      fireCallback = true;\n    }\n    var visPages = this.visiblePages;\n    var res = true;\n    const rec = {\n      fireCallback: fireCallback,\n      focusOnFirstError: focusFirstError,\n      firstErrorQuestion: null,\n      result: false\n    };\n    for (var i = 0; i < visPages.length; i++) {\n      if (!visPages[i].validate(fireCallback, focusFirstError, rec)) {\n        res = false;\n      }\n    }\n    if (!!rec.firstErrorQuestion && (focusFirstError || changeCurrentPage)) {\n      if (focusFirstError) {\n        rec.firstErrorQuestion.focus(true);\n      } else {\n        this.currentPage = rec.firstErrorQuestion.page;\n      }\n    }\n    if (!res || !onAsyncValidation) return res;\n    return this.checkForAsyncQuestionValidation(this.getAllQuestions(), hasErrors => onAsyncValidation(hasErrors)) ? undefined : true;\n  }\n  ensureUniqueNames(element = null) {\n    if (element == null) {\n      for (var i = 0; i < this.pages.length; i++) {\n        this.ensureUniqueName(this.pages[i]);\n      }\n    } else {\n      this.ensureUniqueName(element);\n    }\n  }\n  ensureUniqueName(element) {\n    if (element.isPage) {\n      this.ensureUniquePageName(element);\n    }\n    if (element.isPanel) {\n      this.ensureUniquePanelName(element);\n    }\n    if (element.isPage || element.isPanel) {\n      var elements = element.elements;\n      for (var i = 0; i < elements.length; i++) {\n        this.ensureUniqueNames(elements[i]);\n      }\n    } else {\n      this.ensureUniqueQuestionName(element);\n    }\n  }\n  ensureUniquePageName(element) {\n    return this.ensureUniqueElementName(element, name => {\n      return this.getPageByName(name);\n    });\n  }\n  ensureUniquePanelName(element) {\n    return this.ensureUniqueElementName(element, name => {\n      return this.getPanelByName(name);\n    });\n  }\n  ensureUniqueQuestionName(element) {\n    return this.ensureUniqueElementName(element, name => {\n      return this.getQuestionByName(name);\n    });\n  }\n  ensureUniqueElementName(element, getElementByName) {\n    var existingElement = getElementByName(element.name);\n    if (!existingElement || existingElement == element) return;\n    var newName = this.getNewName(element.name);\n    while (!!getElementByName(newName)) {\n      var newName = this.getNewName(element.name);\n    }\n    element.name = newName;\n  }\n  getNewName(name) {\n    var pos = name.length;\n    while (pos > 0 && name[pos - 1] >= \"0\" && name[pos - 1] <= \"9\") {\n      pos--;\n    }\n    var base = name.substring(0, pos);\n    var num = 0;\n    if (pos < name.length) {\n      num = parseInt(name.substring(pos));\n    }\n    num++;\n    return base + num;\n  }\n  checkIsCurrentPageHasErrors(isFocuseOnFirstError = undefined) {\n    return this.checkIsPageHasErrors(this.activePage, isFocuseOnFirstError);\n  }\n  checkIsPageHasErrors(page, isFocuseOnFirstError = undefined) {\n    if (isFocuseOnFirstError === undefined) {\n      isFocuseOnFirstError = this.focusOnFirstError;\n    }\n    if (!page) return true;\n    const res = !page.validate(true, isFocuseOnFirstError);\n    this.fireValidatedErrorsOnPage(page);\n    return res;\n  }\n  fireValidatedErrorsOnPage(page) {\n    if (this.onValidatePage.isEmpty || !page) return;\n    const questionsOnPage = this.getNestedQuestionsByQuestionArray(page.questions, true);\n    var questions = new Array();\n    var errors = new Array();\n    for (var i = 0; i < questionsOnPage.length; i++) {\n      var q = questionsOnPage[i];\n      if (q.errors.length > 0) {\n        questions.push(q);\n        for (var j = 0; j < q.errors.length; j++) {\n          errors.push(q.errors[j]);\n        }\n      }\n    }\n    this.onValidatePage.fire(this, {\n      questions: questions,\n      errors: errors,\n      page: page\n    });\n  }\n  /**\n   * Switches the survey to the previous page.\n   *\n   * This method returns a Boolean value that indicates whether the page was successfully switched. `false` is returned if the current page is the first page.\n   * @returns `true` if the page was successfully switched; `false` otherwise.\n   * @see isFirstPage\n   * @see nextPage\n   */\n  prevPage() {\n    if (this.isFirstPage || this.state === \"starting\") return false;\n    this.resetNavigationButton();\n    const curElement = this.currentSingleElement;\n    if (this.doSkipOnPrevPage(curElement)) return true;\n    if (curElement) return this.prevPageSingleElement(curElement);\n    const vPages = this.visiblePages;\n    const index = vPages.indexOf(this.currentPage);\n    this.currentPage = vPages[index - 1];\n    return true;\n  }\n  doSkipOnPrevPage(curElement) {\n    const toEl = curElement || this.currentPage;\n    const skipped = this.skippedPages.find(sp => sp.to === toEl);\n    let elTo = undefined;\n    if (!!skipped) {\n      this.skippedPages.splice(this.skippedPages.indexOf(skipped), 1);\n      const el = skipped.from;\n      if (!el.isDisposed && el.isVisible) {\n        elTo = el;\n      }\n    }\n    if (!!elTo) {\n      if (!!curElement) {\n        this.currentSingleElement = elTo;\n      } else {\n        this.currentPage = elTo;\n      }\n    }\n    return !!elTo;\n  }\n  prevPageSingleElement(curElement) {\n    if (this.isSingleVisibleInput) {\n      if (curElement.prevSingleInput()) {\n        this.updateButtonsVisibility();\n        return true;\n      }\n    }\n    const questions = this.getSingleElements();\n    const index = questions.indexOf(curElement);\n    if (index === 0) return false;\n    this.currentSingleElement = questions[index - 1];\n    return true;\n  }\n  /**\n   * Completes the survey if it currently displays the last page and the page contains no validation errors. If both these conditions are met, this method returns `true`; otherwise, `false`.\n   *\n   * If you want to complete the survey regardless of the current page and validation errors, use the [`doComplete()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completeLastPage) event.\n   * @see isCurrentPageValid\n   * @see nextPage\n   */\n  tryComplete() {\n    if (this.isValidateOnComplete) {\n      this.cancelPreview();\n    }\n    let res = this.doCurrentPageComplete(true);\n    if (res) {\n      this.cancelPreview();\n    }\n    return res;\n  }\n  /**\n   * @deprecated Use the [`tryComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#tryComplete) method instead.\n   */\n  completeLastPage() {\n    return this.tryComplete();\n  }\n  navigationMouseDown() {\n    this.isNavigationButtonPressed = true;\n    return true;\n  }\n  resetNavigationButton() {\n    this.isNavigationButtonPressed = false;\n  }\n  nextPageUIClick() {\n    if (!!this.mouseDownPage && this.mouseDownPage !== this.activePage) return false;\n    this.mouseDownPage = null;\n    return this.performNext();\n  }\n  nextPageMouseDown() {\n    this.mouseDownPage = this.activePage;\n    return this.navigationMouseDown();\n  }\n  /**\n   * Displays a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page). Returns `false` if the preview cannot be displayed because of validation errors.\n   * @see cancelPreview\n   * @see showPreviewBeforeComplete\n   * @see onShowingPreview\n   * @see state\n   */\n  showPreview() {\n    this.resetNavigationButton();\n    if (!this.isValidateOnComplete) {\n      if (this.hasErrorsOnNavigate(true)) return false;\n      if (this.doServerValidation(true, true)) return false;\n    }\n    this.showPreviewCore();\n    return this.isShowingPreview;\n  }\n  showPreviewCore() {\n    var options = {\n      allowShowPreview: true,\n      allow: true\n    };\n    this.onShowingPreview.fire(this, options);\n    this.isShowingPreview = options.allowShowPreview && options.allow;\n  }\n  /**\n   * Cancels a [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page) and switches the survey to the page specified by the `currentPage` parameter.\n   * @param currentPage A new current page. If you do not specify this parameter, the survey displays the last page.\n   * @see showPreview\n   * @see showPreviewBeforeComplete\n   * @see state\n   */\n  cancelPreview(currentPage = null) {\n    var _a;\n    if (!this.isShowingPreview) return;\n    this.gotoPageFromPreview = currentPage;\n    this.isShowingPreview = false;\n    const page = (_a = this.currentSingleElement) === null || _a === void 0 ? void 0 : _a.page;\n    if (!!page) {\n      page.updateRows();\n      this.currentPage = page;\n    }\n  }\n  cancelPreviewByPage(panel) {\n    this.cancelPreview(panel);\n  }\n  doCurrentPageComplete(doComplete) {\n    if (this.isValidatingOnServer) return false;\n    this.resetNavigationButton();\n    if (this.hasErrorsOnNavigate(doComplete)) return false;\n    return this.doCurrentPageCompleteCore(doComplete);\n  }\n  doCurrentPageCompleteCore(doComplete) {\n    if (this.doServerValidation(doComplete)) return false;\n    if (doComplete) {\n      this.currentPage.passed = true;\n      return this.doComplete(this.canBeCompletedByTrigger, this.completedTrigger);\n    }\n    this.doNextPage();\n    return true;\n  }\n  get isSinglePage() {\n    return this.questionsOnPageMode == \"singlePage\";\n  }\n  set isSinglePage(val) {\n    this.questionsOnPageMode = val ? \"singlePage\" : \"standard\";\n  }\n  get isSingleVisibleQuestion() {\n    return !this.isDesignMode && (this.isSingleVisibleQuestionVal(this.questionsOnPageMode) || this.isSingleVisibleInput);\n  }\n  get isSingleVisibleInput() {\n    return !this.isDesignMode && this.questionsOnPageMode == \"inputPerPage\";\n  }\n  isSingleVisibleQuestionVal(val) {\n    return val === \"questionPerPage\" || val === \"questionOnPage\";\n  }\n  /**\n   * Specifies how to distribute survey elements between pages.\n   *\n   * Possible values:\n   *\n   * - `\"singlePage\"` - Combines all survey pages into a single page.\n   * - `\"questionPerPage\"` - Displays each question on a separate page.\n   * - `\"inputPerPage\"` - Displays each input field on a separate page. Complex questions&mdash;such as [Single-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model), [Multi-Select Matrix](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-with-dropdown-list), [Dynamic Matrix](https://surveyjs.io/form-library/documentation/api-reference/dynamic-matrix-table-question-model), [Dynamic Panel](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model), and [Multiple Textboxes](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model)&mdash;are split so that each input field appears on its own page. [View Demo](https://surveyjs.io/form-library/examples/loop-and-merge/)\n   * - `\"standard\"` (default) - Retains the original structure specified in the JSON schema.\n   */\n  get questionsOnPageMode() {\n    return this.getPropertyValue(\"questionsOnPageMode\");\n  }\n  set questionsOnPageMode(val) {\n    this.setPropertyValue(\"questionsOnPageMode\", val);\n  }\n  /**\n   * Gets or sets a Boolean value that specifies whether the first page is a start page.\n   *\n   * Refer to the following help topic for more information: [Start Page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * @see startPage\n   * @see activePage\n   */\n  get firstPageIsStartPage() {\n    return this.getPropertyValue(\"firstPageIsStartPage\");\n  }\n  set firstPageIsStartPage(val) {\n    this.setPropertyValue(\"firstPageIsStartPage\", val);\n  }\n  /**\n   * @deprecated Use the [`firstPageIsStartPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#firstPageIsStartPage) property instead.\n   */\n  get firstPageIsStarted() {\n    return this.firstPageIsStartPage;\n  }\n  set firstPageIsStarted(val) {\n    this.firstPageIsStartPage = val;\n  }\n  isPageStarted(page) {\n    return this.firstPageIsStartPage && this.pages.length > 1 && this.pages[0] === page;\n  }\n  /**\n   * Specifies whether to show a preview of given answers before they are submitted.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-preview/ (linkStyle))\n   * @see previewMode\n   * @see showPreview\n   * @see cancelPreview\n   */\n  get showPreviewBeforeComplete() {\n    return this.getPropertyValue(\"showPreviewBeforeComplete\");\n  }\n  set showPreviewBeforeComplete(val) {\n    this.setShowPreviewBeforeComplete(val);\n  }\n  setShowPreviewBeforeComplete(val) {\n    if (val === undefined || val === \"noPreview\" || val === false) {\n      this.setPropertyValue(\"showPreviewBeforeComplete\", false);\n    } else {\n      this.setPropertyValue(\"showPreviewBeforeComplete\", true);\n      if (val === \"showAllQuestions\") this.previewMode = \"allQuestions\";\n      if (val === \"showAnsweredQuestions\") this.previewMode = \"answeredQuestions\";\n    }\n  }\n  /**\n   * Specifies whether the [preview of given answers](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#preview-page) includes all or only answered questions.\n   *\n   * Possible values:\n   *\n   * - `\"allQuestions\"` (default)\n   * - `\"answeredQuestions\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/survey-preview/ (linkStyle))\n   */\n  get previewMode() {\n    return this.getPropertyValue(\"previewMode\");\n  }\n  set previewMode(val) {\n    this.setPropertyValue(\"previewMode\", val);\n  }\n  onFirstPageIsStartedChanged() {\n    this.isStartedState = this.firstPageIsStartPage && this.pages.length > 1;\n    this.pageVisibilityChanged(this.pages[0], !this.isStartedState);\n  }\n  onShowingPreviewChanged() {\n    this.updatePagesContainer();\n  }\n  createRootPage(name, pages) {\n    const container = Serializer.createClass(\"page\");\n    container.name = name;\n    container.isPageContainer = true;\n    pages.forEach(page => {\n      if (!page.isStartPage) {\n        container.addElement(page);\n      }\n    });\n    return container;\n  }\n  disposeContainerPage() {\n    let cPage = this.pageContainerValue;\n    const elements = [].concat(cPage.elements);\n    elements.forEach(el => cPage.removeElement(el));\n    cPage.dispose();\n    this.pageContainerValue = undefined;\n  }\n  updatePagesContainer() {\n    if (this.isDesignMode) return;\n    this.getAllQuestions().forEach(q => q.updateElementVisibility());\n    this.setPropertyValue(\"currentPage\", undefined);\n    const singleName = \"single-page\";\n    const previewName = \"preview-page\";\n    let rootPage = undefined;\n    if (this.isSinglePage) {\n      const cPage = this.pageContainerValue;\n      if (cPage && cPage.name === previewName) {\n        rootPage = cPage.elements[0];\n        this.disposeContainerPage();\n      } else {\n        rootPage = this.createRootPage(singleName, this.pages);\n      }\n    }\n    if (this.isShowingPreview) {\n      rootPage = this.createRootPage(previewName, rootPage ? [rootPage] : this.pages);\n    }\n    if (rootPage) {\n      rootPage.setSurveyImpl(this);\n      this.pageContainerValue = rootPage;\n      this.currentPage = rootPage;\n      if (!!this.currentSingleElementValue) {\n        this.visiblePages.forEach(page => page.updateRows());\n      }\n    }\n    if (!this.isSinglePage && !this.isShowingPreview) {\n      this.disposeContainerPage();\n      let curPage = this.gotoPageFromPreview;\n      this.gotoPageFromPreview = null;\n      if (Helpers.isValueEmpty(curPage) && this.visiblePageCount > 0) {\n        curPage = this.visiblePages[this.visiblePageCount - 1];\n      }\n      if (!!curPage) {\n        this.changeCurrentPageFromPreview = true;\n        this.currentPage = curPage;\n        this.changeCurrentPageFromPreview = false;\n      }\n    }\n    if (!this.currentPage && this.visiblePageCount > 0) {\n      this.currentPage = this.visiblePages[0];\n    }\n    if (this.isShowingPreview) {\n      this.pages.forEach(page => {\n        page.onFirstRendering();\n      });\n    }\n    this.pages.forEach(page => {\n      if (page.wasRendered) {\n        page.updateElementCss(true);\n      }\n    });\n    this.updateButtonsVisibility();\n  }\n  getSingleElements(includeEl) {\n    const res = new Array();\n    const pages = this.pages;\n    const isSingleInput = this.isSingleVisibleInput;\n    for (var i = 0; i < pages.length; i++) {\n      const p = pages[i];\n      if (!p.isStartPage && p.isVisible) {\n        const els = [];\n        if (isSingleInput) {\n          p.addQuestionsToList(els, true);\n        } else {\n          p.elements.forEach(el => els.push(el));\n        }\n        els.forEach(el => {\n          if (el === includeEl || el.isVisible) res.push(el);\n        });\n      }\n    }\n    return res;\n  }\n  get currentSingleElement() {\n    return !this.isShowingPreview ? this.currentSingleElementValue : undefined;\n  }\n  set currentSingleElement(val) {\n    const oldVal = this.currentSingleElement;\n    if (val !== oldVal && !this.isCompleted) {\n      const valQuestion = (val === null || val === void 0 ? void 0 : val.isQuestion) ? val : undefined;\n      const oldValQuestion = (oldVal === null || oldVal === void 0 ? void 0 : oldVal.isQuestion) ? oldVal : undefined;\n      const page = val === null || val === void 0 ? void 0 : val.page;\n      const options = !!page && !!oldVal ? this.createPageChangeEventOptions(page, oldVal.page, valQuestion, oldValQuestion) : undefined;\n      if (!!options && !this.currentPageChangingFromOptions(options)) return;\n      this.currentSingleElementValue = val;\n      if (!!val) {\n        if (this.isSingleVisibleInput && val.isQuestion) {\n          val.onSetAsSingleInput();\n        }\n        page.updateRows();\n        if (page !== this.currentPage) {\n          this.currentPage = page;\n        } else {\n          if (!!valQuestion && this.autoFocusFirstQuestion) {\n            valQuestion.focus();\n          }\n        }\n        this.updateButtonsVisibility();\n        if (!!options) {\n          this.onCurrentPageChanged.fire(this, options);\n        }\n      } else {\n        this.visiblePages.forEach(page => page.updateRows());\n      }\n    }\n  }\n  get currentSingleQuestion() {\n    const res = this.currentSingleElement;\n    return !!res && res.isQuestion ? res : undefined;\n  }\n  set currentSingleQuestion(val) {\n    this.currentSingleElement = val;\n  }\n  supportsNestedSingleInput(question) {\n    const options = {\n      question: question,\n      enabled: true\n    };\n    this.onCheckSingleInputPerPageMode.fire(this, options);\n    return options.enabled;\n  }\n  changeCurrentSingleElementOnVisibilityChanged() {\n    const el = this.currentSingleElement;\n    if (!el || el.isVisible) return;\n    const els = this.getSingleElements(el);\n    const index = els.indexOf(el);\n    const newEl = index > 0 ? els[index - 1] : index < els.length - 1 ? els[index + 1] : undefined;\n    this.currentSingleElement = newEl;\n  }\n  onQuestionsOnPageModeChanged(oldValue) {\n    if (this.isShowingPreview || this.isDesignMode) return;\n    this.skippedPages = [];\n    this.currentSingleElement = undefined;\n    if (oldValue === \"singlePage\") {\n      this.updatePagesContainer();\n    }\n    if (oldValue === \"inputPerPage\") {\n      this.getAllQuestions().forEach(q => q.resetSingleInput());\n    }\n    if (this.isSinglePage) {\n      this.updatePagesContainer();\n    }\n    this.setupSingleInputNavigationActions();\n    if (this.isSingleVisibleQuestion) {\n      const els = this.getSingleElements();\n      if (els.length > 0) {\n        this.currentSingleElement = els[0];\n      }\n    }\n  }\n  setupSingleInputNavigationActions() {\n    const actionAddId = \"sv-singleinput-add\";\n    if (this.isSingleVisibleInput) {\n      const addItem = () => {\n        this.currentSingleQuestion.singleInputAddItem(true);\n        this.resetNavigationButton();\n      };\n      this.addNavigationItem({\n        id: actionAddId,\n        visible: false,\n        action: () => addItem()\n      });\n    } else {\n      this.removeNavigationItem(actionAddId);\n    }\n  }\n  getPageStartIndex() {\n    return this.firstPageIsStartPage && this.pages.length > 0 ? 1 : 0;\n  }\n  /**\n   * Indicates whether the [current page](#currentPage) is the first page.\n   *\n   * > If the survey displays the [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page), this property contains `false`. Use the [`isStartPageActive`](#isStartPageActive) property to find out whether the start page is currently displayed.\n   */\n  get isFirstPage() {\n    return this.getPropertyValue(\"isFirstPage\");\n  }\n  /**\n   * Indicates whether the [current page](#currentPage) is the last page.\n   */\n  get isLastPage() {\n    return this.getPropertyValue(\"isLastPage\");\n  }\n  updateNavigationElements() {\n    this.updateButtonsVisibility();\n  }\n  updateButtonsVisibility() {\n    this.updateIsFirstLastPageState();\n    this.setPropertyValue(\"isShowPrevButton\", this.calcIsShowPrevButton());\n    this.setPropertyValue(\"isShowNextButton\", this.calcIsShowNextButton());\n    this.setPropertyValue(\"isCompleteButtonVisible\", this.calcIsCompleteButtonVisible());\n    this.setPropertyValue(\"isPreviewButtonVisible\", this.calcIsPreviewButtonVisible());\n    this.setPropertyValue(\"isCancelPreviewButtonVisible\", this.calcIsCancelPreviewButtonVisible());\n    this.updateSingleInputActions();\n  }\n  updateSingleInputActions() {\n    if (!this.isSingleVisibleInput) return;\n    const q = this.currentSingleQuestion;\n    if (!q) return;\n    const addBtn = this.navigationBar.getActionById(\"sv-singleinput-add\");\n    if (addBtn) {\n      addBtn.title = q.getSingleInputAddText();\n      addBtn.visible = !!addBtn.title;\n    }\n  }\n  get isShowPrevButton() {\n    return this.getPropertyValue(\"isShowPrevButton\");\n  }\n  get isShowNextButton() {\n    return this.getPropertyValue(\"isShowNextButton\");\n  }\n  get isCompleteButtonVisible() {\n    return this.getPropertyValue(\"isCompleteButtonVisible\");\n  }\n  get isPreviewButtonVisible() {\n    return this.getPropertyValue(\"isPreviewButtonVisible\");\n  }\n  get isCancelPreviewButtonVisible() {\n    return this.getPropertyValue(\"isCancelPreviewButtonVisible\");\n  }\n  get isFirstElement() {\n    return this.getPropertyValue(\"isFirstElement\");\n  }\n  get isLastElement() {\n    return this.getPropertyValue(\"isLastElement\");\n  }\n  updateIsFirstLastPageState() {\n    const curPage = this.currentPage;\n    let fVal = undefined;\n    let lVal = undefined;\n    const q = this.currentSingleElement;\n    if (!!q) {\n      let isFirstInput = true;\n      let isLastInput = true;\n      if (this.isSingleVisibleInput) {\n        const inputState = q.getSingleInputElementPos();\n        if (inputState !== 0) {\n          isFirstInput = inputState === -1;\n          isLastInput = inputState === 1;\n        }\n      }\n      const questions = this.getSingleElements();\n      const index = questions.indexOf(q);\n      if (index >= 0) {\n        fVal = isFirstInput && index === 0;\n        lVal = isLastInput && index === questions.length - 1;\n      }\n    }\n    this.setPropertyValue(\"isFirstPage\", !!curPage && curPage === this.firstVisiblePage && (!q || fVal === true));\n    this.setPropertyValue(\"isLastPage\", !!curPage && curPage === this.lastVisiblePage && (!q || lVal === true));\n    this.setPropertyValue(\"isFirstElement\", fVal);\n    this.setPropertyValue(\"isLastElement\", lVal);\n  }\n  get isLastPageOrElement() {\n    return this.isLastElement !== undefined ? this.isLastElement : this.isLastPage;\n  }\n  get isFirstPageOrElement() {\n    return this.isFirstElement !== undefined ? this.isFirstElement : this.isFirstPage;\n  }\n  calcIsShowPrevButton() {\n    if (this.isFirstPageOrElement || !this.showPrevButton || this.state !== \"running\") return false;\n    if (this.isFirstElement !== undefined) return true;\n    const page = this.visiblePages[this.currentPageNo - 1];\n    return page && page.getMaxTimeToFinish() <= 0;\n  }\n  calcIsShowNextButton() {\n    return this.state === \"running\" && !this.isLastPageOrElement && !this.canBeCompletedByTrigger;\n  }\n  calcIsCompleteButtonVisible() {\n    const state = this.state;\n    return this.isEditMode && (this.state === \"running\" && (this.isLastPageOrElement && !this.showPreviewBeforeComplete || this.canBeCompletedByTrigger) || state === \"preview\") && this.showCompleteButton;\n  }\n  calcIsPreviewButtonVisible() {\n    return this.isEditMode && this.showPreviewBeforeComplete && this.state == \"running\" && this.isLastPageOrElement;\n  }\n  calcIsCancelPreviewButtonVisible() {\n    return this.isEditMode && this.showPreviewBeforeComplete && this.state == \"preview\";\n  }\n  get firstVisiblePage() {\n    if (this.visiblePageCount === 1) return this.visiblePages[0];\n    const pages = this.pages;\n    for (let i = 0; i < pages.length; i++) {\n      if (this.isPageInVisibleList(pages[i])) return pages[i];\n    }\n    return null;\n  }\n  get lastVisiblePage() {\n    if (this.visiblePageCount === 1) return this.visiblePages[0];\n    const pages = this.pages;\n    for (let i = pages.length - 1; i >= 0; i--) {\n      if (this.isPageInVisibleList(pages[i])) return pages[i];\n    }\n    return null;\n  }\n  /**\n   * Completes the survey.\n   *\n   * When you call this method, Form Library performs the following actions:\n   *\n   * 1. Saves a cookie if the [`cookieName`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#cookieName) property is set.\n   * 1. Switches the survey [`state`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#state) to `\"completed\"`.\n   * 1. Raises the [`onComplete`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onComplete) event.\n   * 1. Navigates the user to a URL specified by the [`navigateToUrl`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#navigateToUrl) or [`navigateToUrlOnCondition`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#navigateToUrlOnCondition) property.\n   *\n   * The `doComplete()` method completes the survey regardless of validation errors and the current page. If you need to ensure that survey results are valid and full, call the [`completeLastPage()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#completeLastPage) method instead.\n   *\n   * @param isCompleteOnTrigger For internal use.\n   * @param completeTrigger For internal use.\n   * @returns `false` if survey completion is cancelled within the [`onCompleting`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCompleting) event handler; otherwise, `true`.\n   */\n  doComplete(isCompleteOnTrigger = false, completeTrigger) {\n    if (this.isCompleted) return;\n    if (!this.checkOnCompletingEvent(isCompleteOnTrigger, completeTrigger)) {\n      this.isCompleted = false;\n      return false;\n    }\n    this.checkOnPageTriggers(true);\n    this.stopTimer();\n    this.notifyQuestionsOnHidingContent(this.currentPage);\n    this.isCompleted = true;\n    this.clearUnusedValues();\n    this.saveDataOnComplete(isCompleteOnTrigger, completeTrigger);\n    this.setCookie();\n    return true;\n  }\n  saveDataOnComplete(isCompleteOnTrigger = false, completeTrigger) {\n    let previousCookie = this.hasCookie;\n    const showSaveInProgress = text => {\n      savingDataStarted = true;\n      this.setCompletedState(\"saving\", text);\n    };\n    const showSaveError = text => {\n      this.setCompletedState(\"error\", text);\n    };\n    const showSaveSuccess = text => {\n      this.setCompletedState(\"success\", text);\n      this.navigateTo();\n    };\n    const clearSaveMessages = text => {\n      this.setCompletedState(\"\", \"\");\n    };\n    var savingDataStarted = false;\n    var onCompleteOptions = {\n      isCompleteOnTrigger: isCompleteOnTrigger,\n      completeTrigger: completeTrigger,\n      showSaveInProgress: showSaveInProgress,\n      showSaveError: showSaveError,\n      showSaveSuccess: showSaveSuccess,\n      clearSaveMessages: clearSaveMessages,\n      //Obsolete functions\n      showDataSaving: showSaveInProgress,\n      showDataSavingError: showSaveError,\n      showDataSavingSuccess: showSaveSuccess,\n      showDataSavingClear: clearSaveMessages\n    };\n    this.onComplete.fire(this, onCompleteOptions);\n    if (!previousCookie && this.surveyPostId) {\n      this.sendResult();\n    }\n    if (!savingDataStarted) {\n      this.navigateTo();\n    }\n  }\n  checkOnCompletingEvent(isCompleteOnTrigger, completeTrigger) {\n    var options = {\n      allowComplete: true,\n      allow: true,\n      isCompleteOnTrigger: isCompleteOnTrigger,\n      completeTrigger: completeTrigger\n    };\n    this.onCompleting.fire(this, options);\n    return options.allowComplete && options.allow;\n  }\n  /**\n   * Starts the survey. Applies only if the survey has a [start page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#start-page).\n   * @see firstPageIsStartPage\n   * @see completeLastPage\n   */\n  start() {\n    if (!this.firstPageIsStartPage) return false;\n    this.isCurrentPageRendering = true;\n    if (this.checkIsPageHasErrors(this.startPage, true)) return false;\n    this.isStartedState = false;\n    this.notifyQuestionsOnHidingContent(this.pages[0]);\n    this.startTimerFromUI();\n    this.onStarted.fire(this, {});\n    this.updateVisibleIndexes();\n    this.currentPageNo = 0;\n    if (!!this.currentPage) {\n      this.currentPage.locStrsChanged();\n    }\n    return true;\n  }\n  /**\n   * Indicates whether the current page is being [validated on a server](#onServerValidateQuestions).\n   */\n  get isValidatingOnServer() {\n    return this.getPropertyValue(\"isValidatingOnServer\", false);\n  }\n  setIsValidatingOnServer(val) {\n    if (val == this.isValidatingOnServer) return;\n    this.setPropertyValue(\"isValidatingOnServer\", val);\n    this.onIsValidatingOnServerChanged();\n  }\n  createServerValidationOptions(doComplete, isPreview, page) {\n    var self = this;\n    const options = {\n      data: {},\n      errors: {},\n      survey: this,\n      complete: function () {\n        self.completeServerValidation(options, isPreview, page);\n      }\n    };\n    if (doComplete && this.isValidateOnComplete) {\n      options.data = this.data;\n    } else {\n      var questions = this.activePage.questions;\n      for (var i = 0; i < questions.length; i++) {\n        var question = questions[i];\n        if (!question.visible) continue;\n        var value = this.getValue(question.getValueName());\n        if (!this.isValueEmpty(value)) options.data[question.getValueName()] = value;\n      }\n    }\n    return options;\n  }\n  onIsValidatingOnServerChanged() {}\n  doServerValidation(doComplete, isPreview = false, page) {\n    if (!this.onServerValidateQuestions || this.onServerValidateQuestions.isEmpty) return false;\n    if (!doComplete && this.isValidateOnComplete) return false;\n    this.setIsValidatingOnServer(true);\n    const isFunc = typeof this.onServerValidateQuestions === \"function\";\n    this.serverValidationEventCount = !isFunc ? this.onServerValidateQuestions.length : 1;\n    if (isFunc) {\n      this.onServerValidateQuestions(this, this.createServerValidationOptions(doComplete, isPreview, page));\n    } else {\n      this.onServerValidateQuestions.fireByCreatingOptions(this, () => {\n        return this.createServerValidationOptions(doComplete, isPreview, page);\n      });\n    }\n    return true;\n  }\n  completeServerValidation(options, isPreview, page) {\n    if (this.serverValidationEventCount > 1) {\n      this.serverValidationEventCount--;\n      if (!!options && !!options.errors && Object.keys(options.errors).length === 0) return;\n    }\n    this.serverValidationEventCount = 0;\n    this.setIsValidatingOnServer(false);\n    if (!options && !options.survey) return;\n    var self = options.survey;\n    var hasErrors = false;\n    if (options.errors) {\n      var hasToFocus = this.autoFocusFirstError;\n      for (var name in options.errors) {\n        var question = self.getQuestionByName(name);\n        if (question && question[\"errors\"]) {\n          hasErrors = true;\n          question.addError(new CustomError(options.errors[name], this));\n          if (hasToFocus) {\n            hasToFocus = false;\n            if (!!question.page) {\n              this.currentPage = question.page;\n            }\n            question.focus(true);\n          }\n        }\n      }\n      this.fireValidatedErrorsOnPage(this.currentPage);\n    }\n    if (!hasErrors) {\n      if (isPreview) {\n        this.showPreviewCore();\n      } else {\n        if (page) {\n          this.currentPage = page;\n        } else {\n          if (self.isLastPage) self.doComplete();else self.doNextPage();\n        }\n      }\n    }\n  }\n  doNextPage() {\n    var curPage = this.currentPage;\n    this.checkOnPageTriggers(false);\n    this.sendPartialResult();\n    if (!this.isCompleted) {\n      if (curPage === this.currentPage) {\n        var vPages = this.visiblePages;\n        var index = vPages.indexOf(this.currentPage);\n        this.currentPage = vPages[index + 1];\n      }\n    } else {\n      this.doComplete(true);\n    }\n  }\n  setCompleted(trigger) {\n    this.doComplete(true, trigger);\n  }\n  sendPartialResult() {\n    if (this.partialSendEnabled && !this.isCompleted) {\n      this.sendResult(this.surveyPostId, this.clientId, true);\n    }\n  }\n  canBeCompleted(trigger, isCompleted) {\n    var _a;\n    if (!settings.triggers.changeNavigationButtonsOnComplete) return;\n    const prevCanBeCompleted = this.canBeCompletedByTrigger;\n    if (!this.completedByTriggers) this.completedByTriggers = {};\n    if (isCompleted) {\n      this.completedByTriggers[trigger.id] = {\n        trigger: trigger,\n        pageId: (_a = this.currentPage) === null || _a === void 0 ? void 0 : _a.id\n      };\n    } else {\n      delete this.completedByTriggers[trigger.id];\n    }\n    if (prevCanBeCompleted !== this.canBeCompletedByTrigger) {\n      this.updateButtonsVisibility();\n    }\n  }\n  get canBeCompletedByTrigger() {\n    var _a;\n    if (!this.completedByTriggers) return false;\n    const keys = Object.keys(this.completedByTriggers);\n    if (keys.length === 0) return false;\n    const id = (_a = this.currentPage) === null || _a === void 0 ? void 0 : _a.id;\n    if (!id) return true;\n    for (let i = 0; i < keys.length; i++) {\n      if (id === this.completedByTriggers[keys[i]].pageId) return true;\n    }\n    return false;\n  }\n  get completedTrigger() {\n    if (!this.canBeCompletedByTrigger) return undefined;\n    const key = Object.keys(this.completedByTriggers)[0];\n    return this.completedByTriggers[key].trigger;\n  }\n  /**\n   * Returns HTML content displayed on the [complete page](https://surveyjs.io/form-library/documentation/design-survey/create-a-multi-page-survey#complete-page).\n   *\n   * To specify HTML content, use the [`completedHtml`](#completedHtml) property.\n   */\n  get processedCompletedHtml() {\n    var html = this.renderedCompletedHtml;\n    return !!html ? this.processHtml(html, \"completed\") : \"\";\n  }\n  /**\n   * Returns HTML content displayed to a user who has completed the survey before. To identify such users, the survey uses a [cookie name](#cookieName).\n   *\n   * To specify HTML content, use the [`completedBeforeHtml`](#completedBeforeHtml) property.\n   */\n  get processedCompletedBeforeHtml() {\n    return this.locCompletedBeforeHtml.textOrHtml;\n  }\n  /**\n   * Returns HTML content displayed while a survey JSON schema is [being loaded](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#beginLoading).\n   *\n   * To specify HTML content, use the [`loadingHtml`](#loadingHtml) property.\n   */\n  get processedLoadingHtml() {\n    return this.locLoadingHtml.textOrHtml;\n  }\n  getProgressInfo() {\n    var pages = this.isDesignMode ? this.pages : this.visiblePages;\n    return SurveyElement.getProgressInfoByElements(pages, false);\n  }\n  get progressBarAriaLabel() {\n    return getLocaleString(\"progressbar\", this.getLocale());\n  }\n  /**\n   * Returns text displayed by the progress bar (for instance, \"Page 2 of 3\" or \"Answered 3/8 questions\"). Handle the [`onGetProgressText`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetProgressText) event to change this text.\n   * @see progressValue\n   * @see showProgressBar\n   * @see progressBarType\n   */\n  get progressText() {\n    return this.progressBar.progressText;\n  }\n  /**\n   * Returns a percentage value that indicates user progress in the survey.\n   * @see showProgressBar\n   * @see progressBarType\n   * @see progressText\n   */\n  get progressValue() {\n    return this.getPropertyValue(\"progressValue\", undefined, () => this.getProgress());\n  }\n  updateProgressText(onValueChanged = false) {\n    if (this.isShowingPreview) return;\n    if (onValueChanged && this.progressBarType == \"pages\" && this.onGetProgressText.isEmpty) return;\n    if (this.progressBarValue) {\n      this.progressBarValue.resetProgressText();\n    }\n    this.resetPropertyValue(\"progressValue\");\n  }\n  getProgressText() {\n    if (!this.isDesignMode && this.currentPage == null) return \"\";\n    const options = {\n      questionCount: 0,\n      answeredQuestionCount: 0,\n      requiredQuestionCount: 0,\n      requiredAnsweredQuestionCount: 0,\n      text: \"\"\n    };\n    var type = this.progressBarType.toLowerCase();\n    if (type === \"questions\" || type === \"requiredquestions\" || type === \"correctquestions\" || !this.onGetProgressText.isEmpty) {\n      var info = this.getProgressInfo();\n      options.questionCount = info.questionCount;\n      options.answeredQuestionCount = info.answeredQuestionCount;\n      options.requiredQuestionCount = info.requiredQuestionCount;\n      options.requiredAnsweredQuestionCount = info.requiredAnsweredQuestionCount;\n    }\n    options.text = this.getProgressTextCore(options);\n    this.onGetProgressText.fire(this, options);\n    return options.text;\n  }\n  getProgressTextCore(info) {\n    var type = this.progressBarType.toLowerCase();\n    if (type === \"questions\") {\n      return this.getLocalizationFormatString(\"questionsProgressText\", info.answeredQuestionCount, info.questionCount);\n    }\n    if (type === \"requiredquestions\") {\n      return this.getLocalizationFormatString(\"questionsProgressText\", info.requiredAnsweredQuestionCount, info.requiredQuestionCount);\n    }\n    if (type === \"correctquestions\") {\n      var correctAnswersCount = this.getCorrectedAnswerCount();\n      return this.getLocalizationFormatString(\"questionsProgressText\", correctAnswersCount, info.questionCount);\n    }\n    var vPages = this.isDesignMode ? this.pages : this.visiblePages;\n    var index = vPages.indexOf(this.currentPage) + 1;\n    return this.getLocalizationFormatString(\"progressText\", index, vPages.length);\n  }\n  getRootCss() {\n    return new CssClassBuilder().append(this.css.root).append(this.css.rootProgress + \"--\" + this.progressBarType).append(this.css.rootMobile, this.isMobile).append(this.css.rootAnimationDisabled, !settings.animationEnabled).append(this.css.rootReadOnly, this.readOnly && !this.isDesignMode).append(this.css.rootCompact, this.isCompact).append(this.css.rootFitToContainer, this.fitToContainer).toString();\n  }\n  afterRenderSurvey(htmlElement) {\n    if (!DomWindowHelper.isAvailable()) return;\n    this.destroyResizeObserver();\n    if (Array.isArray(htmlElement)) {\n      htmlElement = SurveyElement.GetFirstNonTextElement(htmlElement);\n    }\n    let observedElement = htmlElement;\n    const cssVariables = this.css.variables;\n    if (!!cssVariables) {\n      const mobileWidth = Number.parseFloat(DomDocumentHelper.getComputedStyle(observedElement).getPropertyValue(cssVariables.mobileWidth));\n      if (!!mobileWidth) {\n        let isProcessed = false;\n        this.resizeObserver = new ResizeObserver(entries => {\n          DomWindowHelper.requestAnimationFrame(() => {\n            if (isProcessed || !isContainerVisible(observedElement)) {\n              isProcessed = false;\n            } else {\n              isProcessed = this.processResponsiveness(observedElement.offsetWidth, mobileWidth, observedElement.offsetHeight);\n            }\n          });\n        });\n        this.resizeObserver.observe(observedElement);\n      }\n    }\n    this.onAfterRenderSurvey.fire(this, {\n      survey: this,\n      htmlElement: htmlElement\n    });\n    this.rootElement = htmlElement;\n    this.scrollerElement = htmlElement.getElementsByClassName(\"sv-scroll__scroller\")[0];\n    this.addScrollEventListener();\n  }\n  beforeDestroySurveyElement() {\n    this.destroyResizeObserver();\n    this.removeScrollEventListener();\n    this.rootElement = undefined;\n    this.scrollerElement = undefined;\n  }\n  processResponsiveness(width, mobileWidth, height) {\n    const isMobile = width < mobileWidth;\n    const isMobileChanged = this.isMobile !== isMobile;\n    this.setIsMobile(isMobile);\n    this.layoutElements.forEach(layoutElement => layoutElement.processResponsiveness && layoutElement.processResponsiveness(width));\n    const options = {\n      height,\n      width\n    };\n    this.onResize.fire(this, options);\n    // this.setResponsiveStartWidth(width);\n    return isMobileChanged;\n  }\n  triggerResponsiveness(hard) {\n    this.getAllQuestions().forEach(question => {\n      question.triggerResponsiveness(hard);\n    });\n  }\n  destroyResizeObserver() {\n    if (!!this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = undefined;\n    }\n  }\n  updateQuestionCssClasses(question, cssClasses) {\n    this.onUpdateQuestionCssClasses.fire(this, {\n      question: question,\n      cssClasses: cssClasses\n    });\n  }\n  updatePanelCssClasses(panel, cssClasses) {\n    this.onUpdatePanelCssClasses.fire(this, {\n      panel: panel,\n      cssClasses: cssClasses\n    });\n  }\n  updatePageCssClasses(page, cssClasses) {\n    this.onUpdatePageCssClasses.fire(this, {\n      page: page,\n      cssClasses: cssClasses\n    });\n  }\n  updateChoiceItemCss(question, options) {\n    options.question = question;\n    this.onUpdateChoiceItemCss.fire(this, options);\n  }\n  afterRenderPage(htmlElement) {\n    if (!this.isDesignMode && !this.focusingQuestionInfo) {\n      const doScroll = this.isCurrentPageRendered === false;\n      setTimeout(() => this.scrollToTopOnPageChange(doScroll), 1);\n    }\n    this.focusQuestionInfo();\n    this.isCurrentPageRendered = true;\n    if (this.onAfterRenderPage.isEmpty) return;\n    this.onAfterRenderPage.fire(this, {\n      page: this.activePage,\n      htmlElement: htmlElement\n    });\n  }\n  afterRenderHeader(htmlElement) {\n    if (this.onAfterRenderHeader.isEmpty) return;\n    this.onAfterRenderHeader.fire(this, {\n      htmlElement: htmlElement\n    });\n  }\n  afterRenderQuestion(question, htmlElement) {\n    this.onAfterRenderQuestion.fire(this, {\n      question: question,\n      htmlElement: htmlElement\n    });\n  }\n  afterRenderQuestionInput(question, htmlElement) {\n    if (this.onAfterRenderQuestionInput.isEmpty) return;\n    let id = question.inputId;\n    const {\n      root\n    } = settings.environment;\n    if (!!id && (!htmlElement || htmlElement.id !== id) && typeof root !== \"undefined\") {\n      let el = root.getElementById(id);\n      if (!!el) {\n        htmlElement = el;\n      }\n    }\n    this.onAfterRenderQuestionInput.fire(this, {\n      question: question,\n      htmlElement: htmlElement\n    });\n  }\n  afterRenderPanel(panel, htmlElement) {\n    this.onAfterRenderPanel.fire(this, {\n      panel: panel,\n      htmlElement: htmlElement\n    });\n  }\n  whenQuestionFocusIn(question) {\n    this.onFocusInQuestion.fire(this, {\n      question: question\n    });\n  }\n  whenPanelFocusIn(panel) {\n    this.onFocusInPanel.fire(this, {\n      panel: panel\n    });\n  }\n  rebuildQuestionChoices() {\n    this.getAllQuestions().forEach(q => q.surveyChoiceItemVisibilityChange());\n  }\n  canChangeChoiceItemsVisibility() {\n    return !this.onShowingChoiceItem.isEmpty;\n  }\n  getChoiceItemVisibility(question, item, val) {\n    const options = {\n      question: question,\n      item: item,\n      visible: val\n    };\n    this.onShowingChoiceItem.fire(this, options);\n    return options.visible;\n  }\n  loadQuestionChoices(options) {\n    this.onChoicesLazyLoad.fire(this, options);\n  }\n  getChoiceDisplayValue(options) {\n    if (this.onGetChoiceDisplayValue.isEmpty) {\n      options.setItems(null);\n    } else {\n      this.onGetChoiceDisplayValue.fire(this, options);\n    }\n  }\n  matrixBeforeRowAdded(options) {\n    this.onMatrixRowAdding.fire(this, options);\n  }\n  matrixRowAdded(question, row) {\n    this.onMatrixRowAdded.fire(this, {\n      question: question,\n      row: row\n    });\n  }\n  matrixColumnAdded(question, column) {\n    this.onMatrixColumnAdded.fire(this, {\n      question: question,\n      column: column\n    });\n  }\n  multipleTextItemAdded(question, item) {\n    this.onMultipleTextItemAdded.fire(this, {\n      question: question,\n      item: item\n    });\n  }\n  getQuestionByValueNameFromArray(valueName, name, index) {\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!questions) return;\n    for (var i = 0; i < questions.length; i++) {\n      var res = questions[i].getQuestionFromArray(name, index);\n      if (!!res) return res;\n    }\n    return null;\n  }\n  matrixRowRemoved(question, rowIndex, row) {\n    this.onMatrixRowRemoved.fire(this, {\n      question: question,\n      rowIndex: rowIndex,\n      row: row\n    });\n  }\n  matrixRowRemoving(question, rowIndex, row) {\n    var options = {\n      question: question,\n      rowIndex: rowIndex,\n      row: row,\n      allow: true\n    };\n    this.onMatrixRowRemoving.fire(this, options);\n    return options.allow;\n  }\n  matrixAllowRemoveRow(question, rowIndex, row) {\n    const options = {\n      question: question,\n      rowIndex: rowIndex,\n      row: row,\n      allow: true\n    };\n    this.onMatrixRenderRemoveButton.fire(this, options);\n    return options.allow;\n  }\n  matrixDetailPanelVisibleChanged(question, rowIndex, row, visible) {\n    const options = {\n      question: question,\n      rowIndex: rowIndex,\n      row: row,\n      visible: visible,\n      detailPanel: row.detailPanel\n    };\n    this.onMatrixDetailPanelVisibleChanged.fire(this, options);\n  }\n  matrixCellCreating(question, options) {\n    options.question = question;\n    this.onMatrixCellCreating.fire(this, options);\n  }\n  matrixCellCreated(question, options) {\n    options.question = question;\n    this.onMatrixCellCreated.fire(this, options);\n  }\n  matrixAfterCellRender(options) {\n    var _a;\n    const evt = this.onAfterRenderMatrixCell;\n    if (!evt.isEmpty) {\n      options.question = (_a = options.cellQuestion) === null || _a === void 0 ? void 0 : _a.parentQuestion;\n      evt.fire(this, options);\n    }\n  }\n  matrixCellValueChanged(question, options) {\n    options.question = question;\n    this.onMatrixCellValueChanged.fire(this, options);\n  }\n  matrixCellValueChanging(question, options) {\n    options.question = question;\n    this.onMatrixCellValueChanging.fire(this, options);\n  }\n  get isValidateOnValueChanging() {\n    return this.checkErrorsMode === \"onValueChanging\";\n  }\n  get isValidateOnValueChanged() {\n    return this.checkErrorsMode === \"onValueChanged\";\n  }\n  get isValidateOnValueChange() {\n    return this.isValidateOnValueChanged || this.isValidateOnValueChanging;\n  }\n  get isValidateOnComplete() {\n    return this.checkErrorsMode === \"onComplete\" || this.validationAllowSwitchPages && !this.validationAllowComplete;\n  }\n  matrixCellValidate(question, options) {\n    options.question = question;\n    this.onMatrixCellValidate.fire(this, options);\n    return options.error ? new CustomError(options.error, this) : null;\n  }\n  dynamicPanelAdded(question, panelIndex, panel, updateIndexes) {\n    if (!this.isLoadingFromJson && updateIndexes) {\n      this.updateVisibleIndexes(question.page);\n    }\n    this.onDynamicPanelAdded.fire(this, {\n      question: question,\n      panel: panel,\n      panelIndex: panelIndex\n    });\n  }\n  dynamicPanelRemoved(question, panelIndex, panel, updateIndexes) {\n    var questions = !!panel ? panel.questions : [];\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearOnDeletingContainer();\n    }\n    if (updateIndexes) {\n      this.updateVisibleIndexes(question.page);\n    }\n    this.onDynamicPanelRemoved.fire(this, {\n      question: question,\n      panelIndex: panelIndex,\n      panel: panel\n    });\n  }\n  dynamicPanelRemoving(question, panelIndex, panel) {\n    const options = {\n      question: question,\n      panelIndex: panelIndex,\n      panel: panel,\n      allow: true\n    };\n    this.onDynamicPanelRemoving.fire(this, options);\n    return options.allow;\n  }\n  dynamicPanelItemValueChanged(question, options) {\n    options.question = question;\n    this.onDynamicPanelValueChanged.fire(this, options);\n  }\n  dynamicPanelItemValueChanging(question, options) {\n    options.question = question;\n    this.onDynamicPanelValueChanging.fire(this, options);\n  }\n  dynamicPanelGetTabTitle(question, options) {\n    options.question = question;\n    this.onGetDynamicPanelTabTitle.fire(this, options);\n  }\n  dynamicPanelCurrentIndexChanged(question, options) {\n    options.question = question;\n    this.onDynamicPanelCurrentIndexChanged.fire(this, options);\n  }\n  dragAndDropAllow(options) {\n    this.onDragDropAllow.fire(this, options);\n    return options.allow;\n  }\n  elementContentVisibilityChanged(element) {\n    if (this.currentPage) {\n      this.currentPage.ensureRowsVisibility();\n    }\n    this.onElementContentVisibilityChanged.fire(this, {\n      element\n    });\n  }\n  getUpdatedPanelFooterActions(panel, actions, question) {\n    const options = {\n      question: question,\n      panel: panel,\n      actions: actions\n    };\n    this.onGetPanelFooterActions.fire(this, options);\n    return options.actions;\n  }\n  getUpdatedElementTitleActions(element, titleActions) {\n    if (element.isPage) return this.getUpdatedPageTitleActions(element, titleActions);\n    if (element.isPanel) return this.getUpdatedPanelTitleActions(element, titleActions);\n    return this.getUpdatedQuestionTitleActions(element, titleActions);\n  }\n  getTitleActionsResult(titleActions, options) {\n    if (titleActions != options.actions) return options.actions;\n    if (titleActions != options.titleActions) return options.titleActions;\n    return titleActions;\n  }\n  getUpdatedQuestionTitleActions(question, titleActions) {\n    const options = {\n      question: question,\n      actions: titleActions,\n      titleActions: titleActions\n    };\n    this.onGetQuestionTitleActions.fire(this, options);\n    return this.getTitleActionsResult(titleActions, options);\n  }\n  getUpdatedPanelTitleActions(panel, titleActions) {\n    const options = {\n      panel: panel,\n      actions: titleActions,\n      titleActions: titleActions\n    };\n    this.onGetPanelTitleActions.fire(this, options);\n    return this.getTitleActionsResult(titleActions, options);\n  }\n  getUpdatedPageTitleActions(page, titleActions) {\n    var options = {\n      page: page,\n      actions: titleActions,\n      titleActions: titleActions\n    };\n    this.onGetPageTitleActions.fire(this, options);\n    return this.getTitleActionsResult(titleActions, options);\n  }\n  getUpdatedMatrixRowActions(question, row, actions) {\n    const options = {\n      question: question,\n      actions: actions,\n      row: row\n    };\n    this.onGetMatrixRowActions.fire(this, options);\n    return options.actions;\n  }\n  scrollElementToTop(element, question, page, id, scrollIfVisible, scrollIntoViewOptions, passedRootElement, onScolledCallback) {\n    const options = {\n      element: element,\n      question: question,\n      page: page,\n      elementId: id,\n      cancel: false,\n      allow: true\n    };\n    this.onScrollToTop.fire(this, options);\n    if (!options.cancel && options.allow) {\n      const elementPage = this.getPageByElement(element);\n      const {\n        rootElement\n      } = settings.environment;\n      const surveyRootElement = this.rootElement || passedRootElement || rootElement;\n      if (this.isLazyRendering && !!elementPage) {\n        let elementsToRenderBefore = 1;\n        if (!!this.skeletonHeight && !!surveyRootElement && typeof surveyRootElement.getBoundingClientRect === \"function\") {\n          elementsToRenderBefore = surveyRootElement.getBoundingClientRect().height / this.skeletonHeight - 1;\n        }\n        elementPage.forceRenderElement(element, () => {\n          const htmlElement = surveyRootElement === null || surveyRootElement === void 0 ? void 0 : surveyRootElement.querySelector(`#${options.elementId}`);\n          this.suspendLazyRendering();\n          SurveyElement.ScrollElementToTop(htmlElement, scrollIfVisible, scrollIntoViewOptions, () => {\n            this.releaseLazyRendering();\n            const pageRootElement = surveyRootElement.querySelector(`#${elementPage.id}`);\n            activateLazyRenderingChecks(pageRootElement);\n            onScolledCallback && onScolledCallback();\n          });\n        }, elementsToRenderBefore);\n      } else {\n        if (element.isPage && !this.isSinglePage && !this.isDesignMode && this.rootElement) {\n          const elementToScroll = surveyRootElement.querySelector(classesToSelector(this.css.rootWrapper));\n          SurveyElement.ScrollElementToViewCore(elementToScroll, false, scrollIfVisible, scrollIntoViewOptions, onScolledCallback);\n        } else {\n          const htmlElement = surveyRootElement === null || surveyRootElement === void 0 ? void 0 : surveyRootElement.querySelector(`#${options.elementId}`);\n          this.suspendLazyRendering();\n          SurveyElement.ScrollElementToTop(htmlElement, scrollIfVisible, scrollIntoViewOptions, () => {\n            this.releaseLazyRendering();\n            activateLazyRenderingChecks(htmlElement);\n            onScolledCallback && onScolledCallback();\n          });\n        }\n      }\n    }\n  }\n  /**\n   * Opens a dialog window for users to select files.\n   * @param input A [file input HTML element](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement).\n   * @param callback A callback function that you can use to process selected files. Accepts an array of JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/File\" target=\"_blank\">File</a> objects.\n   * @see onOpenFileChooser\n   * @see onUploadFile\n   */\n  chooseFiles(input, callback, context) {\n    if (this.onOpenFileChooser.isEmpty) {\n      chooseFiles(input, callback);\n    } else {\n      this.onOpenFileChooser.fire(this, {\n        input: input,\n        element: context && context.element || this.survey,\n        elementType: context && context.elementType,\n        item: context && context.item,\n        propertyName: context && context.propertyName,\n        callback: callback,\n        context: context\n      });\n    }\n  }\n  /**\n   * Uploads files to a server.\n   *\n   * The following code shows how to call this method:\n   *\n   * ```js\n   * const question = survey.getQuestionByName(\"myFileQuestion\");\n   * survey.uploadFiles(\n   *   question,\n   *   question.name,\n   *   question.value,\n   *   (data, errors) => {\n   *     // ...\n   *   }\n   * );\n   * ```\n   * @param question A [File Upload question instance](https://surveyjs.io/form-library/documentation/api-reference/file-model) or [Signature Pad question instance](https://surveyjs.io/form-library/documentation/api-reference/signature-pad-model).\n   * @param name The File Upload question's [`name`](https://surveyjs.io/form-library/documentation/api-reference/file-model#name) or Signature Pad question's [`name`](https://surveyjs.io/form-library/documentation/api-reference/signature-pad-model#name).\n   * @param files An array of JavaScript <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/File\" target=\"_blank\">File</a> objects that represent files to upload.\n   * @param callback A callback function that allows you to access successfully uploaded files as the first argument. If any files fail to upload, the second argument contains an array of error messages.\n   * @see onUploadFiles\n   * @see downloadFile\n   */\n  uploadFiles(question, name, files, callback) {\n    if (this.onUploadFiles.isEmpty) {\n      callback(\"error\", this.getLocString(\"noUploadFilesHandler\"));\n    } else {\n      this.taskManager.runTask(\"file\", done => {\n        this.onUploadFiles.fire(this, {\n          question: question,\n          name: name,\n          files: files || [],\n          callback: (status, data) => {\n            callback(status, data);\n            done();\n          }\n        });\n      });\n    }\n    if (this.surveyPostId) {\n      this.uploadFilesCore(name, files, callback);\n    }\n  }\n  downloadFile(question, questionName, fileValue, callback) {\n    if (this.onDownloadFile.isEmpty) {\n      !!callback && callback(\"skipped\", fileValue.content || fileValue);\n    }\n    this.onDownloadFile.fire(this, {\n      question: question,\n      name: questionName,\n      content: fileValue.content || fileValue,\n      fileValue: fileValue,\n      callback: callback\n    });\n  }\n  clearFiles(question, name, value, fileName, callback) {\n    if (this.onClearFiles.isEmpty) {\n      !!callback && callback(\"success\", value);\n    }\n    this.onClearFiles.fire(this, {\n      question: question,\n      name: name,\n      value: value,\n      fileName: fileName,\n      callback: callback\n    });\n  }\n  updateChoicesFromServer(question, choices, serverResult) {\n    var options = {\n      question: question,\n      choices: choices,\n      serverResult: serverResult\n    };\n    this.onChoicesLoaded.fire(this, options);\n    return options.choices;\n  }\n  loadedChoicesFromServer(question) {\n    this.locStrsChanged();\n  }\n  uploadFilesCore(name, files, uploadingCallback) {\n    this.reportWarningOnUsingService();\n  }\n  getPage(index) {\n    return this.pages[index];\n  }\n  /**\n   * Adds an existing page to the survey.\n   * @param page A page to add.\n   * @param index An index at which to insert the page. If you do not specify this parameter, the page will be added to the end.\n   * @see addNewPage\n   * @see createNewPage\n   */\n  addPage(page, index = -1) {\n    if (page == null) return;\n    if (index < 0 || index >= this.pages.length) {\n      this.pages.push(page);\n    } else {\n      this.pages.splice(index, 0, page);\n    }\n  }\n  /**\n   * Creates a new page and adds it to the survey.\n   *\n   * If you want to switch a survey to the newly added page, assign its index to the [`currentPageNo`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPageNo) property or assign the entire page to the [`currentPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#currentPage) property.\n   *\n   * @param name A page name. If you do not specify this parameter, it will be generated automatically.\n   * @param index An index at which to insert the page. If you do not specify this parameter, the page will be added to the end.\n   * @returns The created and added page.\n   * @see addPage\n   * @see createNewPage\n   */\n  addNewPage(name = null, index = -1) {\n    var page = this.createNewPage(name);\n    this.addPage(page, index);\n    return page;\n  }\n  /**\n   * Removes a page from the survey.\n   *\n   * Pass a `PageModel` object to this method. You can get this object in different ways. For example, you can call the [`getPageByName()`](#getPageByName) method to obtain a `PageModel` object with a specific name or use the [`currentPage`](#currentPage) property to access and delete the current page, as shown in the code below.\n   *\n   * ```js\n   * // Delete the current page\n   * survey.removePage(survey.currentPage);\n   * ```\n   * @param page A page to remove.\n   * @see addNewPage\n   */\n  removePage(page) {\n    var index = this.pages.indexOf(page);\n    if (index < 0) return;\n    this.pages.splice(index, 1);\n    if (this.currentPage == page) {\n      this.currentPage = this.pages.length > 0 ? this.pages[0] : null;\n    }\n  }\n  /**\n   * Returns a question with a specified [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   * @param name A question name.\n   * @returns A question with the specified name.\n   * @see getAllQuestions\n   * @see getQuestionByValueName\n   */\n  getQuestionByName(name, caseInsensitive = false) {\n    if (!name) return null;\n    if (caseInsensitive) {\n      name = name.toLowerCase();\n    }\n    var hash = !!caseInsensitive ? this.questionHashes.namesInsensitive : this.questionHashes.names;\n    var res = hash[name];\n    if (!res) return null;\n    return res[0];\n  }\n  findQuestionByName(name) {\n    return this.getQuestionByName(name);\n  }\n  getEditingSurveyElement() {\n    return this.editingObjValue;\n  }\n  /**\n   * Returns a question with a specified [`valueName`](https://surveyjs.io/form-library/documentation/api-reference/question#valueName).\n   *\n   * > Since `valueName` does not have to be unique, multiple questions can have the same `valueName` value. In this case, the `getQuestionByValueName()` method returns the first such question. If you need to get all questions with the same `valueName`, call the `getQuestionsByValueName()` method.\n   * @param valueName A question's `valueName` property value.\n   * @returns A question with a specified `valueName`.\n   * @see getAllQuestions\n   * @see getQuestionByName\n   */\n  getQuestionByValueName(valueName, caseInsensitive = false) {\n    var res = this.getQuestionsByValueName(valueName, caseInsensitive);\n    return !!res ? res[0] : null;\n  }\n  /**\n   * Returns all questions with a specified [`valueName`](https://surveyjs.io/form-library/documentation/api-reference/question#valueName). If a question's `valueName` is undefined, its [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name) property is used.\n   * @param valueName A question's `valueName` property value.\n   * @returns An array of questions with a specified `valueName`.\n   * @see getAllQuestions\n   * @see getQuestionByName\n   */\n  getQuestionsByValueName(valueName, caseInsensitive = false) {\n    var hash = !!caseInsensitive ? this.questionHashes.valueNamesInsensitive : this.questionHashes.valueNames;\n    var res = hash[valueName];\n    if (!res) return null;\n    return res;\n  }\n  getCalculatedValueByName(name) {\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      if (name == this.calculatedValues[i].name) return this.calculatedValues[i];\n    }\n    return null;\n  }\n  getQuestionsByNames(names, caseInsensitive = false) {\n    var result = [];\n    if (!names) return result;\n    for (var i = 0; i < names.length; i++) {\n      if (!names[i]) continue;\n      var question = this.getQuestionByName(names[i], caseInsensitive);\n      if (question) result.push(question);\n    }\n    return result;\n  }\n  /**\n   * Returns a page to which a specified survey element (question or panel) belongs.\n   * @param element A question or panel instance.\n   */\n  getPageByElement(element) {\n    for (var i = 0; i < this.pages.length; i++) {\n      var page = this.pages[i];\n      if (page.containsElement(element)) return page;\n    }\n    return null;\n  }\n  /**\n   * Returns a page to which a specified question belongs.\n   * @param question A question instance.\n   */\n  getPageByQuestion(question) {\n    return this.getPageByElement(question);\n  }\n  /**\n   * Returns a page with a specified name.\n   * @param name A page [name](https://surveyjs.io/form-library/documentation/api-reference/page-model#name).\n   * @returns A page with the specified name.\n   */\n  getPageByName(name) {\n    for (var i = 0; i < this.pages.length; i++) {\n      if (this.pages[i].name == name) return this.pages[i];\n    }\n    return null;\n  }\n  getPagesByNames(names) {\n    var result = [];\n    if (!names) return result;\n    for (var i = 0; i < names.length; i++) {\n      if (!names[i]) continue;\n      var page = this.getPageByName(names[i]);\n      if (page) result.push(page);\n    }\n    return result;\n  }\n  /**\n   * Returns a list of all [questions](https://surveyjs.io/form-library/documentation/api-reference/question) in the survey.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible questions.\n   * @param includeDesignTime For internal use.\n   * @param includeNested A Boolean value that specifies whether to include nested questions, such as questions within matrix cells.\n   * @returns An array of questions.\n   * @see getQuestionByName\n   */\n  getAllQuestions(visibleOnly = false, includeDesignTime = false, includeNested = false) {\n    if (includeNested) {\n      includeDesignTime = false;\n      const pages = visibleOnly ? this.visiblePages : this.pages;\n      pages.forEach(page => page.onFirstRendering());\n    }\n    var res = [];\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].addQuestionsToList(res, visibleOnly, includeDesignTime);\n    }\n    if (!includeNested) return res;\n    return this.getNestedQuestionsByQuestionArray(res, visibleOnly);\n  }\n  getNestedQuestionsByQuestionArray(res, visibleOnly) {\n    const res2 = [];\n    res.forEach(q => {\n      q.getNestedQuestions(visibleOnly, true, true).forEach(nQ => res2.push(nQ));\n    });\n    return res2;\n  }\n  /**\n   * Returns an array of quiz questions. A question counts if it is visible, has an input field, and specifies [`correctAnswer`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#correctAnswer).\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns An array of quiz questions.\n   * @see getQuizQuestionCount\n   */\n  getQuizQuestions() {\n    var result = new Array();\n    var startIndex = this.getPageStartIndex();\n    for (var i = startIndex; i < this.pages.length; i++) {\n      if (!this.pages[i].isVisible) continue;\n      var questions = this.pages[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        var q = questions[j];\n        if (q.quizQuestionCount > 0) {\n          result.push(q);\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Returns a [panel](https://surveyjs.io/form-library/documentation/api-reference/panel-model) with a specified [`name`](https://surveyjs.io/form-library/documentation/api-reference/panel-model#name).\n   * @param name A panel name.\n   * @returns A panel with the specified name.\n   * @see getAllPanels\n   */\n  getPanelByName(name, caseInsensitive = false) {\n    var panels = this.getAllPanels();\n    if (caseInsensitive) name = name.toLowerCase();\n    for (var i = 0; i < panels.length; i++) {\n      var panelName = panels[i].name;\n      if (caseInsensitive) panelName = panelName.toLowerCase();\n      if (panelName == name) return panels[i];\n    }\n    return null;\n  }\n  /**\n   * Returns a list of all [panels](https://surveyjs.io/form-library/documentation/api-reference/panel-model) in the survey.\n   * @param visibleOnly A Boolean value that specifies whether to include only visible panels.\n   * @param includeDesignTime For internal use.\n   * @returns An array of panels.\n   * @see getPanelByName\n   */\n  getAllPanels(visibleOnly = false, includeDesignTime = false) {\n    var result = new Array();\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].addPanelsIntoList(result, visibleOnly, includeDesignTime);\n    }\n    return result;\n  }\n  /**\n   * Creates and returns a new page but does not add it to the survey.\n   *\n   * Call the [`addPage(page)`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#addPage) method to add the created page to the survey later or the [`addNewPage(name, index)`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#addNewPage) method to create _and_ add a page to the survey.\n   * @see addPage\n   * @see addNewPage\n   */\n  createNewPage(name) {\n    const page = Serializer.createClass(\"page\");\n    page.name = name;\n    return page;\n  }\n  getValueChangeReason() {\n    if (this.isSettingValueOnExpression) return \"expression\";\n    return this.isSettingValueFromTrigger ? \"trigger\" : undefined;\n  }\n  questionOnValueChanging(valueName, newValue, questionValueName) {\n    if (!!this.editingObj) {\n      const prop = Serializer.findProperty(this.editingObj.getType(), valueName);\n      if (!!prop) newValue = prop.settingValue(this.editingObj, newValue);\n    }\n    if (this.onValueChanging.isEmpty) return newValue;\n    var options = {\n      name: valueName,\n      question: this.getQuestionByValueName(questionValueName || valueName),\n      value: this.getUnbindValue(newValue),\n      oldValue: this.getValue(valueName),\n      reason: this.getValueChangeReason()\n    };\n    this.onValueChanging.fire(this, options);\n    return options.value;\n  }\n  updateQuestionValue(valueName, newValue) {\n    if (this.isLoadingFromJson) return;\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!!questions) {\n      for (var i = 0; i < questions.length; i++) {\n        var qValue = questions[i].value;\n        if (qValue === newValue && Array.isArray(qValue) && !!this.editingObj || !this.isTwoValueEquals(qValue, newValue)) {\n          questions[i].updateValueFromSurvey(newValue, false);\n        }\n      }\n    }\n  }\n  checkQuestionErrorOnValueChanged(question) {\n    if (!this.isNavigationButtonPressed && (this.isValidateOnValueChanged || question.getAllErrors().length > 0)) {\n      this.checkQuestionErrorOnValueChangedCore(question);\n    }\n  }\n  checkQuestionErrorOnValueChangedCore(question) {\n    var oldErrorCount = question.getAllErrors().length;\n    var res = !question.validate(true, {\n      isOnValueChanged: !this.isValidateOnValueChanging\n    });\n    if (!!question.page && this.isValidateOnValueChange && (oldErrorCount > 0 || question.getAllErrors().length > 0)) {\n      this.fireValidatedErrorsOnPage(question.page);\n    }\n    return res;\n  }\n  checkErrorsOnValueChanging(valueName, newValue) {\n    if (this.isLoadingFromJson) return false;\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!questions) return false;\n    var res = false;\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      if (!this.isTwoValueEquals(q.valueForSurvey, newValue)) {\n        q.value = newValue;\n      }\n      if (this.checkQuestionErrorOnValueChangedCore(q)) res = true;\n      res = res || q.errors.length > 0;\n    }\n    return res;\n  }\n  fireOnValueChanged(name, value, question) {\n    this.onValueChanged.fire(this, {\n      name: name,\n      question: question,\n      value: value,\n      reason: this.getValueChangeReason()\n    });\n  }\n  notifyQuestionOnValueChanged(valueName, newValue, questionName) {\n    if (this.isLoadingFromJson) return;\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!!questions) {\n      for (var i = 0; i < questions.length; i++) {\n        var question = questions[i];\n        this.checkQuestionErrorOnValueChanged(question);\n        question.onSurveyValueChanged(newValue);\n      }\n    }\n    this.updateProgressText(true);\n    this.fireOnValueChanged(valueName, newValue, !!questionName ? this.getQuestionByName(questionName) : undefined);\n    if (this.isDisposed) return;\n    this.checkElementsBindings(valueName, newValue);\n    this.notifyElementsOnAnyValueOrVariableChanged(valueName, questionName);\n  }\n  checkElementsBindings(valueName, newValue) {\n    this.isRunningElementsBindings = true;\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].checkBindings(valueName, newValue);\n    }\n    this.isRunningElementsBindings = false;\n    if (this.updateVisibleIndexAfterBindings) {\n      this.updateVisibleIndexes();\n      this.updateVisibleIndexAfterBindings = false;\n    }\n  }\n  notifyElementsOnAnyValueOrVariableChanged(name, questionName) {\n    if (this.isEndLoadingFromJson === \"processing\") return;\n    if (this.isRunningConditions) {\n      this.conditionNotifyElementsOnAnyValueOrVariableChanged = true;\n      return;\n    }\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].onAnyValueChanged(name, questionName);\n    }\n    if (!this.isEndLoadingFromJson) {\n      this.locStrsChanged();\n    }\n  }\n  updateAllQuestionsValue(clearData) {\n    var questions = this.getAllQuestions();\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      var valName = q.getValueName();\n      q.updateValueFromSurvey(this.getValue(valName), clearData);\n      if (q.requireUpdateCommentValue) {\n        q.updateCommentFromSurvey(this.getComment(valName));\n      }\n    }\n  }\n  notifyAllQuestionsOnValueChanged() {\n    var questions = this.getAllQuestions();\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].onSurveyValueChanged(this.getValue(questions[i].getValueName()));\n    }\n  }\n  checkOnPageTriggers(isOnComplete) {\n    var questions = this.getCurrentPageQuestions(true);\n    var values = {};\n    for (var i = 0; i < questions.length; i++) {\n      var question = questions[i];\n      var name = question.getValueName();\n      values[name] = this.getValue(name);\n    }\n    this.addCalculatedValuesIntoFilteredValues(values);\n    this.checkTriggers(values, true, isOnComplete);\n  }\n  getCurrentPageQuestions(includeInvsible = false) {\n    var result = [];\n    var page = this.currentPage;\n    if (!page) return result;\n    for (var i = 0; i < page.questions.length; i++) {\n      var question = page.questions[i];\n      if (!includeInvsible && !question.visible || !question.name) continue;\n      result.push(question);\n    }\n    return result;\n  }\n  checkTriggers(key, isOnNextPage, isOnComplete = false, isOnNavigation = false, name) {\n    if (this.isCompleted || this.triggers.length == 0 || this.isDisplayMode) return;\n    if (this.isTriggerIsRunning) {\n      this.triggerValues = this.getFilteredValues();\n      for (var k in key) {\n        this.triggerKeys[k] = key[k];\n      }\n      return;\n    }\n    let isQuestionInvalid = false;\n    if (!isOnComplete && name && this.hasRequiredValidQuestionTrigger) {\n      const question = this.getQuestionByValueName(name);\n      isQuestionInvalid = question && !question.validate(false);\n    }\n    this.isTriggerIsRunning = true;\n    this.triggerKeys = key;\n    this.triggerValues = this.getFilteredValues();\n    var properties = this.getFilteredProperties();\n    let prevCanBeCompleted = this.canBeCompletedByTrigger;\n    for (let i = 0; i < this.triggers.length; i++) {\n      const trigger = this.triggers[i];\n      if (isQuestionInvalid && trigger.requireValidQuestion) continue;\n      const options = {\n        isOnNextPage: isOnNextPage,\n        isOnComplete: isOnComplete,\n        isOnNavigation: isOnNavigation,\n        keys: this.triggerKeys,\n        values: this.triggerValues,\n        properties: properties\n      };\n      trigger.checkExpression(options);\n    }\n    if (prevCanBeCompleted !== this.canBeCompletedByTrigger) {\n      this.updateButtonsVisibility();\n    }\n    this.isTriggerIsRunning = false;\n  }\n  checkTriggersAndRunConditions(name, newValue, oldValue) {\n    var triggerKeys = {};\n    triggerKeys[name] = {\n      newValue: newValue,\n      oldValue: oldValue\n    };\n    this.runConditionOnValueChanged(name, newValue);\n    this.checkTriggers(triggerKeys, false, false, false, name);\n  }\n  get hasRequiredValidQuestionTrigger() {\n    for (let i = 0; i < this.triggers.length; i++) {\n      if (this.triggers[i].requireValidQuestion) return true;\n    }\n    return false;\n  }\n  doElementsOnLoad() {\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].onSurveyLoad();\n    }\n  }\n  get isRunningConditions() {\n    return !!this.conditionValues;\n  }\n  /**\n   * Recalculates all [expressions](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) in the survey.\n   */\n  runExpressions() {\n    this.runConditions();\n  }\n  runConditions() {\n    if (this.isCompleted || this.isEndLoadingFromJson === \"processing\" || this.isRunningConditions) return;\n    this.conditionValues = this.getFilteredValues();\n    var properties = this.getFilteredProperties();\n    var oldCurrentPageIndex = this.pages.indexOf(this.currentPage);\n    this.runConditionsCore(properties);\n    this.checkIfNewPagesBecomeVisible(oldCurrentPageIndex);\n    this.conditionValues = null;\n    if (this.isValueChangedOnRunningCondition && this.conditionRunnerCounter < settings.maxConditionRunCountOnValueChanged) {\n      this.isValueChangedOnRunningCondition = false;\n      this.conditionRunnerCounter++;\n      this.runConditions();\n    } else {\n      this.isValueChangedOnRunningCondition = false;\n      this.conditionRunnerCounter = 0;\n      if (this.conditionUpdateVisibleIndexes) {\n        this.conditionUpdateVisibleIndexes = false;\n        this.updateVisibleIndexes();\n      }\n      if (this.conditionNotifyElementsOnAnyValueOrVariableChanged) {\n        this.conditionNotifyElementsOnAnyValueOrVariableChanged = false;\n        this.notifyElementsOnAnyValueOrVariableChanged(\"\");\n      }\n    }\n  }\n  runConditionOnValueChanged(name, value) {\n    if (this.isRunningConditions) {\n      this.conditionValues[name] = value;\n      if (this.questionTriggersKeys) {\n        this.questionTriggersKeys[name] = value;\n      }\n      this.isValueChangedOnRunningCondition = true;\n    } else {\n      this.questionTriggersKeys = {};\n      this.questionTriggersKeys[name] = value;\n      this.runConditions();\n      this.runQuestionsTriggers(name, value);\n      this.questionTriggersKeys = undefined;\n    }\n  }\n  runConditionsCore(properties) {\n    var pages = this.pages;\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      this.calculatedValues[i].resetCalculation();\n    }\n    for (var i = 0; i < this.calculatedValues.length; i++) {\n      this.calculatedValues[i].doCalculation(this.calculatedValues, this.conditionValues, properties);\n    }\n    super.runConditionCore(this.conditionValues, properties);\n    for (let i = 0; i < pages.length; i++) {\n      pages[i].runCondition(this.conditionValues, properties);\n    }\n  }\n  runQuestionsTriggers(name, value) {\n    if (this.isDisplayMode || this.isDesignMode) return;\n    const questions = this.getAllQuestions();\n    questions.forEach(q => {\n      q.runTriggers(name, value, this.questionTriggersKeys);\n    });\n  }\n  checkIfNewPagesBecomeVisible(oldCurrentPageIndex) {\n    var newCurrentPageIndex = this.pages.indexOf(this.currentPage);\n    if (newCurrentPageIndex <= oldCurrentPageIndex + 1) return;\n    for (var i = oldCurrentPageIndex + 1; i < newCurrentPageIndex; i++) {\n      if (this.pages[i].isVisible) {\n        this.currentPage = this.pages[i];\n        break;\n      }\n    }\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  sendResult(postId = null, clientId = null, isPartial = false) {\n    if (!this.isEditMode) return;\n    if (isPartial && this.onPartialSend) {\n      this.onPartialSend.fire(this, null);\n    }\n    if (!postId && this.surveyPostId) {\n      postId = this.surveyPostId;\n    }\n    if (!postId) return;\n    if (clientId) {\n      this.clientId = clientId;\n    }\n    if (isPartial && !this.clientId) return;\n    this.reportWarningOnUsingService();\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  getResult(resultId, questionName) {\n    this.reportWarningOnUsingService();\n  }\n  /**\n   * @deprecated Self-hosted Form Library [no longer supports integration with SurveyJS Demo Service](https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service).\n   */\n  loadSurveyFromService(surveyId = null, clientId = null) {\n    if (surveyId) {\n      this.surveyId = surveyId;\n    }\n    if (clientId) {\n      this.clientId = clientId;\n    }\n    this.reportWarningOnUsingService();\n  }\n  reportWarningOnUsingService() {\n    ConsoleWarnings.warn(\"Self-hosted Form Library no longer supports integration with SurveyJS Demo Service. Learn more: https://surveyjs.io/stay-updated/release-notes/v2.0.0#form-library-removes-apis-for-integration-with-surveyjs-demo-service\");\n  }\n  loadSurveyFromServiceJson(json) {\n    if (!json) return;\n    this.fromJSON(json);\n    this.notifyAllQuestionsOnValueChanged();\n    this.onLoadSurveyFromService();\n    this.onLoadedSurveyFromService.fire(this, {});\n  }\n  onLoadingSurveyFromService() {}\n  onLoadSurveyFromService() {}\n  resetVisibleIndexes() {\n    var questions = this.getAllQuestions(true);\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].setVisibleIndex(-1);\n    }\n    this.updateVisibleIndexes();\n  }\n  updateVisibleIndexes(page) {\n    if (this.isLoadingFromJson || !!this.isEndLoadingFromJson) return;\n    if (this.isRunningConditions && this.onQuestionVisibleChanged.isEmpty && this.onPageVisibleChanged.isEmpty) {\n      //Run update visible index only one time on finishing running conditions\n      this.conditionUpdateVisibleIndexes = true;\n      return;\n    }\n    if (this.isRunningElementsBindings) {\n      this.updateVisibleIndexAfterBindings = true;\n      return;\n    }\n    this.updatePageVisibleIndexes();\n    this.updatePageElementsVisibleIndexes(page);\n    this.updateProgressText(true);\n  }\n  updatePageElementsVisibleIndexes(page) {\n    if (this.showQuestionNumbers == \"onPage\") {\n      var visPages = !!page ? [page] : this.visiblePages;\n      for (var i = 0; i < visPages.length; i++) {\n        visPages[i].setVisibleIndex(0);\n      }\n    } else {\n      let index = this.getStartVisibleIndex();\n      const pages = this.pages;\n      for (let i = 0; i < pages.length; i++) {\n        index += pages[i].setVisibleIndex(index);\n      }\n    }\n  }\n  getStartVisibleIndex() {\n    const val = this.showQuestionNumbers;\n    return val === \"on\" || val === \"recursive\" ? 0 : -1;\n  }\n  updatePageVisibleIndexes() {\n    this.updateButtonsVisibility();\n    var index = 0;\n    for (var i = 0; i < this.pages.length; i++) {\n      const page = this.pages[i];\n      const isPageVisible = page.isVisible && (i > 0 || !page.isStartPage);\n      page.visibleIndex = isPageVisible ? index++ : -1;\n      page.num = isPageVisible ? page.visibleIndex + 1 : -1;\n    }\n  }\n  fromJSON(json, options) {\n    if (!json) return;\n    this.resetHasLogo();\n    this.resetPropertyValue(\"titleIsEmpty\");\n    this.questionHashesClear();\n    this.jsonErrors = null;\n    this.sjsVersion = undefined;\n    const jsonConverter = new JsonObject();\n    jsonConverter.toObject(json, this, options);\n    if (jsonConverter.errors.length > 0) {\n      this.jsonErrors = jsonConverter.errors;\n    }\n    this.onStateAndCurrentPageChanged();\n    this.endLoading();\n    this.updateState();\n    if (!!this.sjsVersion && !!settings.version) {\n      if (Helpers.compareVerions(this.sjsVersion, settings.version) > 0) {\n        ConsoleWarnings.warn(\"The version of the survey JSON schema (v\" + this.sjsVersion + \") is newer than your current Form Library version (\" + settings.version + \"). Please update the Form Library to make sure that all survey features work as expected.\");\n      }\n    }\n  }\n  startLoadingFromJson(json) {\n    super.startLoadingFromJson(json);\n    if (json && json.locale) {\n      this.locale = json.locale;\n    }\n  }\n  setJsonObject(jsonObj) {\n    this.fromJSON(jsonObj);\n  }\n  endLoadingFromJson() {\n    this.isEndLoadingFromJson = \"processing\";\n    this.onFirstPageIsStartedChanged();\n    super.endLoadingFromJson();\n    if (this.hasCookie) {\n      this.isCompletedBefore = true;\n    }\n    this.doElementsOnLoad();\n    this.onQuestionsOnPageModeChanged(\"standard\");\n    this.isEndLoadingFromJson = \"conditions\";\n    this.runConditions();\n    this.notifyElementsOnAnyValueOrVariableChanged(\"\");\n    this.isEndLoadingFromJson = null;\n    this.updateVisibleIndexes();\n    this.updateCurrentPage();\n    this.setCalculatedWidthModeUpdater();\n    this.onEndLoadingFromJson.fire(this, {});\n  }\n  updateNavigationCss() {\n    const val = this.navigationBarValue;\n    if (!!val) {\n      val.cssClasses = this.css.actionBar;\n      val.containerCss = this.css.footer;\n      !!this.updateNavigationItemCssCallback && this.updateNavigationItemCssCallback();\n    }\n  }\n  createNavigationBar() {\n    const res = new ActionContainer();\n    res.setItems(this.createNavigationActions());\n    res.locOwner = this;\n    return res;\n  }\n  createNavigationActions() {\n    const defaultComponent = \"sv-nav-btn\";\n    const navStart = new Action({\n      id: \"sv-nav-start\",\n      visible: new ComputedUpdater(() => this.isStartPageActive),\n      visibleIndex: 10,\n      locTitle: this.locStartSurveyText,\n      action: () => this.start(),\n      component: defaultComponent\n    });\n    const navPrev = new Action({\n      id: \"sv-nav-prev\",\n      visible: new ComputedUpdater(() => this.isShowPrevButton),\n      visibleIndex: 20,\n      data: {\n        mouseDown: () => this.navigationMouseDown()\n      },\n      locTitle: this.locPagePrevText,\n      action: () => this.performPrevious(),\n      component: defaultComponent\n    });\n    const navNext = new Action({\n      id: \"sv-nav-next\",\n      visible: new ComputedUpdater(() => this.isShowNextButton),\n      visibleIndex: 30,\n      data: {\n        mouseDown: () => this.nextPageMouseDown()\n      },\n      locTitle: this.locPageNextText,\n      action: () => this.nextPageUIClick(),\n      component: defaultComponent\n    });\n    const navPreview = new Action({\n      id: \"sv-nav-preview\",\n      visible: new ComputedUpdater(() => this.isPreviewButtonVisible),\n      visibleIndex: 40,\n      data: {\n        mouseDown: () => this.navigationMouseDown()\n      },\n      locTitle: this.locPreviewText,\n      action: () => this.showPreview(),\n      component: defaultComponent\n    });\n    const navComplete = new Action({\n      id: \"sv-nav-complete\",\n      visible: new ComputedUpdater(() => this.isCompleteButtonVisible),\n      visibleIndex: 50,\n      data: {\n        mouseDown: () => this.navigationMouseDown()\n      },\n      locTitle: this.locCompleteText,\n      action: () => this.taskManager.waitAndExecute(() => this.tryComplete()),\n      component: defaultComponent\n    });\n    this.updateNavigationItemCssCallback = () => {\n      navStart.innerCss = this.cssNavigationStart;\n      navPrev.innerCss = this.cssNavigationPrev;\n      navNext.innerCss = this.cssNavigationNext;\n      navPreview.innerCss = this.cssNavigationPreview;\n      navComplete.innerCss = this.cssNavigationComplete;\n    };\n    return [navStart, navPrev, navNext, navPreview, navComplete];\n  }\n  onBeforeRunConstructor() {}\n  onBeforeCreating() {}\n  onCreating() {}\n  getProcessedTextValue(textValue) {\n    this.getProcessedTextValueCore(textValue);\n    if (!this.onProcessDynamicText.isEmpty) {\n      var wasEmpty = this.isValueEmpty(textValue.value);\n      this.onProcessDynamicText.fire(this, textValue);\n      textValue.isExists = textValue.isExists || wasEmpty && !this.isValueEmpty(textValue.value);\n    }\n  }\n  getBuiltInVariableValue(name) {\n    if (name === \"pageno\") {\n      var page = this.currentPage;\n      return page != null ? this.visiblePages.indexOf(page) + 1 : 0;\n    }\n    if (name === \"pagecount\") {\n      return this.visiblePageCount;\n    }\n    if (name === \"correctedanswers\" || name === \"correctanswers\" || name === \"correctedanswercount\") {\n      return this.getCorrectedAnswerCount();\n    }\n    if (name === \"incorrectedanswers\" || name === \"incorrectanswers\" || name === \"incorrectedanswercount\") {\n      return this.getInCorrectedAnswerCount();\n    }\n    if (name === \"questioncount\") {\n      return this.getQuizQuestionCount();\n    }\n    return undefined;\n  }\n  getProcessedTextValueCore(textValue) {\n    var name = textValue.name.toLocaleLowerCase();\n    if ([\"no\", \"require\", \"title\"].indexOf(name) !== -1) {\n      return;\n    }\n    const builtInVar = this.getBuiltInVariableValue(name);\n    if (builtInVar !== undefined) {\n      textValue.isExists = true;\n      textValue.value = builtInVar;\n      return;\n    }\n    if (name === \"locale\") {\n      textValue.isExists = true;\n      textValue.value = !!this.locale ? this.locale : surveyLocalization.defaultLocale;\n      return;\n    }\n    var variable = this.getVariable(name);\n    if (variable !== undefined) {\n      textValue.isExists = true;\n      textValue.value = variable;\n      return;\n    }\n    var question = this.getFirstName(name);\n    if (question) {\n      const questionUseDisplayText = question.useDisplayValuesInDynamicTexts;\n      textValue.isExists = true;\n      const firstName = question.getValueName().toLowerCase();\n      name = firstName + name.substring(firstName.length);\n      name = name.toLocaleLowerCase();\n      var values = {};\n      values[firstName] = textValue.returnDisplayValue && questionUseDisplayText ? question.getDisplayValue(false, undefined) : question.value;\n      textValue.value = new ProcessValue().getValue(name, values);\n      return;\n    }\n    this.getProcessedValuesWithoutQuestion(textValue);\n  }\n  getProcessedValuesWithoutQuestion(textValue) {\n    var value = this.getValue(textValue.name);\n    if (value !== undefined) {\n      textValue.isExists = true;\n      textValue.value = value;\n      return;\n    }\n    const processor = new ProcessValue();\n    const firstName = processor.getFirstName(textValue.name);\n    if (firstName === textValue.name) return;\n    const data = {};\n    let val = this.getValue(firstName);\n    if (Helpers.isValueEmpty(val)) {\n      val = this.getVariable(firstName);\n    }\n    if (Helpers.isValueEmpty(val)) return;\n    data[firstName] = val;\n    textValue.value = processor.getValue(textValue.name, data);\n    textValue.isExists = processor.hasValue(textValue.name, data);\n  }\n  getFirstName(name) {\n    name = name.toLowerCase();\n    var question;\n    do {\n      question = this.getQuestionByValueName(name, true);\n      name = this.reduceFirstName(name);\n    } while (!question && !!name);\n    return question;\n  }\n  reduceFirstName(name) {\n    var pos1 = name.lastIndexOf(\".\");\n    var pos2 = name.lastIndexOf(\"[\");\n    if (pos1 < 0 && pos2 < 0) return \"\";\n    var pos = Math.max(pos1, pos2);\n    return name.substring(0, pos);\n  }\n  clearUnusedValues() {\n    this.isClearingUnsedValues = true;\n    var questions = this.getAllQuestions();\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearUnusedValues();\n    }\n    this.clearInvisibleQuestionValues();\n    this.isClearingUnsedValues = false;\n  }\n  hasVisibleQuestionByValueName(valueName) {\n    var questions = this.getQuestionsByValueName(valueName);\n    if (!questions) return false;\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      if (q.isVisible && q.isParentVisible && !q.parentQuestion) return true;\n    }\n    return false;\n  }\n  questionsByValueName(valueName) {\n    var questions = this.getQuestionsByValueName(valueName);\n    return !!questions ? questions : [];\n  }\n  clearInvisibleQuestionValues() {\n    const reason = this.clearInvisibleValues === \"none\" ? \"none\" : \"onComplete\";\n    const questions = this.getAllQuestions();\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].clearValueIfInvisible(reason);\n    }\n  }\n  /**\n   * Returns a variable value.\n   *\n   * [Variables help topic](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables (linkStyle))\n   * @param name A variable name.\n   * @return A variable value.\n   * @see setVariable\n   * @see getVariableNames\n   */\n  getVariable(name) {\n    if (!name) return null;\n    name = name.toLowerCase();\n    var res = this.variablesHash[name];\n    if (!this.isValueEmpty(res)) return res;\n    if (name.indexOf(\".\") > -1 || name.indexOf(\"[\") > -1) {\n      if (new ProcessValue().hasValue(name, this.variablesHash)) return new ProcessValue().getValue(name, this.variablesHash);\n    }\n    return res;\n  }\n  /**\n   * Sets a variable value.\n   *\n   * [Variables help topic](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables (linkStyle))\n   * @param name A variable name.\n   * @param newValue A new variable value.\n   * @see getVariable\n   * @see getVariableNames\n   */\n  setVariable(name, newValue) {\n    if (!name) return;\n    const oldValue = this.getVariable(name);\n    if (!!this.valuesHash) {\n      delete this.valuesHash[name];\n    }\n    name = name.toLowerCase();\n    this.variablesHash[name] = newValue;\n    this.notifyElementsOnAnyValueOrVariableChanged(name);\n    if (!Helpers.isTwoValueEquals(oldValue, newValue)) {\n      this.checkTriggersAndRunConditions(name, newValue, oldValue);\n      this.onVariableChanged.fire(this, {\n        name: name,\n        value: newValue\n      });\n    }\n  }\n  /**\n   * Returns the names of all variables in the survey.\n   *\n   * [Variables help topic](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#variables (linkStyle))\n   * @returns An array of variable names.\n   * @see getVariable\n   * @see setVariable\n   */\n  getVariableNames() {\n    var res = [];\n    for (var key in this.variablesHash) {\n      res.push(key);\n    }\n    return res;\n  }\n  //ISurvey data\n  getUnbindValue(value) {\n    if (!!this.editingObj) return value;\n    return Helpers.getUnbindValue(value);\n  }\n  /**\n   * Returns a value (answer) for a question with a specified `name`.\n   * @param name A question name.\n   * @returns A question value (answer).\n   * @see data\n   * @see setValue\n   */\n  getValue(name) {\n    if (!name || name.length == 0) return null;\n    var value = this.getDataValueCore(this.valuesHash, name);\n    return this.getUnbindValue(value);\n  }\n  /**\n   * Sets a question value (answer).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/create-a-scored-quiz/ (linkStyle))\n   *\n   * > This method executes all triggers and reevaluates conditions (`visibleIf`, `requiredId`, and others). It also switches the survey to the next page if the [`autoAdvanceEnabled`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#autoAdvanceEnabled) property is enabled and all questions on the current page have correct answers.\n   * @param name A question name.\n   * @param newValue A new question value.\n   * @param locNotification For internal use.\n   * @param allowNotifyValueChanged For internal use.\n   * @see data\n   * @see getValue\n   */\n  setValue(name, newQuestionValue, locNotification = false, allowNotifyValueChanged = true, questionName) {\n    var newValue = newQuestionValue;\n    if (allowNotifyValueChanged) {\n      newValue = this.questionOnValueChanging(name, newQuestionValue);\n    }\n    if (this.isValidateOnValueChanging && this.checkErrorsOnValueChanging(name, newValue)) return;\n    if (!this.editingObj && this.isValueEqual(name, newValue) && this.isTwoValueEquals(newValue, newQuestionValue)) return;\n    var oldValue = this.getValue(name);\n    if (this.isValueEmpyOnSetValue(name, newValue)) {\n      this.deleteDataValueCore(this.valuesHash, name);\n    } else {\n      newValue = this.getUnbindValue(newValue);\n      this.setDataValueCore(this.valuesHash, name, newValue);\n    }\n    this.updateOnSetValue(name, newValue, oldValue, locNotification, allowNotifyValueChanged, questionName);\n  }\n  isValueEmpyOnSetValue(name, val) {\n    if (!this.isValueEmpty(val, false)) return false;\n    if (!this.editingObj || val === null || val === undefined) return true;\n    return this.editingObj.getDefaultPropertyValue(name) === val;\n  }\n  updateOnSetValue(name, newValue, oldValue, locNotification = false, allowNotifyValueChanged = true, questionName) {\n    this.updateQuestionValue(name, newValue);\n    if (locNotification === true || this.isDisposed || this.isRunningElementsBindings) return;\n    questionName = questionName || name;\n    this.nofifyQuesitonHash[name] = true;\n    this.checkTriggersAndRunConditions(name, newValue, oldValue);\n    if (this.nofifyQuesitonHash[name]) {\n      if (allowNotifyValueChanged) {\n        this.notifyQuestionOnValueChanged(name, newValue, questionName);\n      }\n      if (locNotification !== \"text\") {\n        this.tryGoNextPageAutomatic(name);\n      }\n      delete this.nofifyQuesitonHash[name];\n    }\n  }\n  isValueEqual(name, newValue) {\n    if (newValue === \"\" || newValue === undefined) newValue = null;\n    var oldValue = this.getValue(name);\n    if (oldValue === \"\" || oldValue === undefined) oldValue = null;\n    if (newValue === null || oldValue === null) return newValue === oldValue;\n    return this.isTwoValueEquals(newValue, oldValue);\n  }\n  doOnPageAdded(page) {\n    page.setSurveyImpl(this);\n    if (!page.name) page.name = this.generateNewName(this.pages, \"page\");\n    this.questionHashesPanelAdded(page);\n    this.updateVisibleIndexes();\n    if (!!this.runningPages) return;\n    if (!this.isLoadingFromJson) {\n      this.updateProgressText();\n      this.updateCurrentPage();\n    }\n    if (this.canFireAddPage()) {\n      var options = {\n        page: page\n      };\n      this.onPageAdded.fire(this, options);\n    }\n  }\n  canFireAddPage() {\n    return !this.isMovingPage;\n  }\n  doOnPageRemoved(page) {\n    page.setSurveyImpl(null);\n    if (!!this.runningPages) return;\n    if (page === this.currentPage) {\n      this.updateCurrentPage();\n    }\n    this.updateVisibleIndexes();\n    this.updateProgressText();\n    this.updateLazyRenderingRowsOnRemovingElements();\n  }\n  generateNewName(elements, baseName) {\n    var keys = {};\n    for (var i = 0; i < elements.length; i++) keys[elements[i][\"name\"]] = true;\n    var index = 1;\n    while (keys[baseName + index]) index++;\n    return baseName + index;\n  }\n  tryGoNextPageAutomatic(name) {\n    if (!!this.isEndLoadingFromJson || !this.autoAdvanceEnabled || !this.currentPage) return;\n    const question = this.getQuestionByValueName(name);\n    if (!question || !!question && (!question.visible || !question.supportAutoAdvance())) return;\n    if (!question.validate(false) && !question.supportGoNextPageError()) return;\n    if (!!this.currentSingleElement) {\n      const curQuestion = this.currentSingleElement;\n      const goNextQuestion = () => {\n        if (curQuestion !== this.currentSingleElement) return;\n        if (!this.isLastElement) {\n          this.performNext();\n        } else {\n          if (this.autoAdvanceAllowComplete) {\n            this.tryCompleteOrShowPreview();\n          }\n        }\n      };\n      surveyTimerFunctions.safeTimeOut(goNextQuestion, settings.autoAdvanceDelay);\n    }\n    var questions = this.getCurrentPageQuestions();\n    if (questions.indexOf(question) < 0) return;\n    for (var i = 0; i < questions.length; i++) {\n      if (questions[i].hasInput && questions[i].isEmpty()) return;\n    }\n    if (this.isLastPage && (this.autoAdvanceEnabled !== true || !this.autoAdvanceAllowComplete)) return;\n    if (this.checkIsCurrentPageHasErrors(false)) return;\n    const curPage = this.currentPage;\n    const goNextPage = () => {\n      if (curPage !== this.currentPage) return;\n      if (!this.isLastPage) {\n        this.nextPage();\n      } else {\n        this.tryCompleteOrShowPreview();\n      }\n    };\n    surveyTimerFunctions.safeTimeOut(goNextPage, settings.autoAdvanceDelay);\n  }\n  tryCompleteOrShowPreview() {\n    if (this.showPreviewBeforeComplete) {\n      this.showPreview();\n    } else {\n      this.tryComplete();\n    }\n  }\n  /**\n   * Returns a comment value from a question with a specified `name`.\n   * @param name A question name.\n   * @returns A comment.\n   * @see setComment\n   */\n  getComment(name) {\n    const res = this.getValue(name + this.commentSuffix);\n    return res || \"\";\n  }\n  /**\n   * Sets a comment value to a question with a specified `name`.\n   * @param name A question name.\n   * @param newValue A new comment value.\n   * @param locNotification For internal use.\n   * @see getComment\n   */\n  setComment(name, newValue, locNotification = false) {\n    if (!newValue) newValue = \"\";\n    if (this.isTwoValueEquals(newValue, this.getComment(name))) return;\n    const commentName = name + this.commentSuffix;\n    newValue = this.questionOnValueChanging(commentName, newValue, name);\n    if (this.isValueEmpty(newValue)) {\n      this.deleteDataValueCore(this.valuesHash, commentName);\n    } else {\n      this.setDataValueCore(this.valuesHash, commentName, newValue);\n    }\n    var questions = this.getQuestionsByValueName(name);\n    if (!!questions) {\n      for (var i = 0; i < questions.length; i++) {\n        questions[i].updateCommentFromSurvey(newValue);\n        this.checkQuestionErrorOnValueChanged(questions[i]);\n      }\n    }\n    if (!locNotification) {\n      this.checkTriggersAndRunConditions(name, this.getValue(name), undefined);\n    }\n    if (locNotification !== \"text\") {\n      this.tryGoNextPageAutomatic(name);\n    }\n    var question = this.getQuestionByValueName(name);\n    if (question) {\n      this.fireOnValueChanged(commentName, newValue, question);\n      question.comment = newValue;\n      if (question.comment != newValue) {\n        question.comment = newValue;\n      }\n    }\n  }\n  /**\n   * Deletes an answer from survey results.\n   * @param {string} name An object property that stores the answer to delete. Pass a question's [`valueName`](https://surveyjs.io/form-library/documentation/api-reference/question#valueName) or [`name`](https://surveyjs.io/form-library/documentation/api-reference/question#name).\n   */\n  clearValue(name) {\n    this.setValue(name, null);\n    this.setComment(name, null);\n  }\n  /**\n   * Specifies whether to remove disabled choices from the value in [Dropdown](https://surveyjs.io/form-library/documentation/api-reference/dropdown-menu-model), [Checkboxes](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model), and [Radio Button Group](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model) questions.\n   *\n   * Default value: `false`\n   *\n   * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n   */\n  get clearDisabledChoices() {\n    return this.getPropertyValue(\"clearDisabledChoices\", false);\n  }\n  set clearDisabledChoices(val) {\n    this.setPropertyValue(\"clearDisabledChoices\", val);\n  }\n  /**\n   * @deprecated Use the [`clearDisabledChoices`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#clearDisabledChoices) property instead.\n   */\n  get clearValueOnDisableItems() {\n    return this.clearDisabledChoices;\n  }\n  set clearValueOnDisableItems(val) {\n    this.clearDisabledChoices = val;\n  }\n  getQuestionClearIfInvisible(questionClearIf) {\n    if (this.isShowingPreview || this.runningPages) return \"none\";\n    if (questionClearIf !== \"default\") return questionClearIf;\n    return this.clearInvisibleValues;\n  }\n  questionVisibilityChanged(question, newValue, resetIndexes) {\n    if (resetIndexes) {\n      this.updateVisibleIndexes(question.page);\n    }\n    if (!newValue) {\n      this.changeCurrentSingleElementOnVisibilityChanged();\n    }\n    this.onQuestionVisibleChanged.fire(this, {\n      question: question,\n      name: question.name,\n      visible: newValue\n    });\n  }\n  pageVisibilityChanged(page, newValue) {\n    if (this.isLoadingFromJson) return;\n    if (newValue && !this.currentPage || page === this.currentPage) {\n      this.updateCurrentPage();\n    }\n    this.updateVisibleIndexes();\n    if (!newValue) {\n      this.changeCurrentSingleElementOnVisibilityChanged();\n    }\n    const el = this.currentSingleElement;\n    const curPage = this.currentPage;\n    if (!!el && !!curPage && el.page !== curPage) {\n      this.currentSingleElement = curPage.getFirstVisibleElement();\n    }\n    this.onPageVisibleChanged.fire(this, {\n      page: page,\n      visible: newValue\n    });\n  }\n  panelVisibilityChanged(panel, newValue) {\n    if (!!panel.page) {\n      this.updateVisibleIndexes(panel.page);\n      if (!newValue) {\n        this.changeCurrentSingleElementOnVisibilityChanged();\n      }\n    }\n    this.onPanelVisibleChanged.fire(this, {\n      panel: panel,\n      visible: newValue\n    });\n  }\n  questionCreated(question) {\n    this.onQuestionCreated.fire(this, {\n      question: question\n    });\n  }\n  questionAdded(question, index, parentPanel, rootPanel) {\n    if (!question.name) {\n      question.name = this.generateNewName(this.getAllQuestions(false, true), \"question\");\n    }\n    if (!!question.page) {\n      this.questionHashesAdded(question);\n    }\n    if (!this.isLoadingFromJson) {\n      if (!this.currentPage) {\n        this.updateCurrentPage();\n      }\n      this.updateVisibleIndexes(question.page);\n      this.setCalculatedWidthModeUpdater();\n    }\n    if (this.canFireAddElement()) {\n      this.onQuestionAdded.fire(this, {\n        question: question,\n        name: question.name,\n        index: index,\n        parent: parentPanel,\n        page: rootPanel,\n        parentPanel: parentPanel,\n        rootPanel: rootPanel\n      });\n    }\n  }\n  canFireAddElement() {\n    return !this.isMovingQuestion;\n  }\n  questionRemoved(question) {\n    this.questionHashesRemoved(question, question.name, question.getValueName());\n    this.updateVisibleIndexes(question.page);\n    this.onQuestionRemoved.fire(this, {\n      question: question,\n      name: question.name\n    });\n    this.updateLazyRenderingRowsOnRemovingElements();\n  }\n  questionRenamed(question, oldName, oldValueName) {\n    this.questionHashesRemoved(question, oldName, oldValueName);\n    this.questionHashesAdded(question);\n  }\n  questionHashesClear() {\n    this.questionHashes.names = {};\n    this.questionHashes.namesInsensitive = {};\n    this.questionHashes.valueNames = {};\n    this.questionHashes.valueNamesInsensitive = {};\n  }\n  questionHashesPanelAdded(panel) {\n    if (this.isLoadingFromJson) return;\n    var questions = panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      this.questionHashesAdded(questions[i]);\n    }\n  }\n  questionHashesAdded(question) {\n    this.questionHashAddedCore(this.questionHashes.names, question, question.name);\n    this.questionHashAddedCore(this.questionHashes.namesInsensitive, question, question.name.toLowerCase());\n    this.questionHashAddedCore(this.questionHashes.valueNames, question, question.getValueName());\n    this.questionHashAddedCore(this.questionHashes.valueNamesInsensitive, question, question.getValueName().toLowerCase());\n  }\n  questionHashesRemoved(question, name, valueName) {\n    if (!!name) {\n      this.questionHashRemovedCore(this.questionHashes.names, question, name);\n      this.questionHashRemovedCore(this.questionHashes.namesInsensitive, question, name.toLowerCase());\n    }\n    if (!!valueName) {\n      this.questionHashRemovedCore(this.questionHashes.valueNames, question, valueName);\n      this.questionHashRemovedCore(this.questionHashes.valueNamesInsensitive, question, valueName.toLowerCase());\n    }\n  }\n  questionHashAddedCore(hash, question, name) {\n    var res = hash[name];\n    if (!!res) {\n      var res = hash[name];\n      if (res.indexOf(question) < 0) {\n        res.push(question);\n      }\n    } else {\n      hash[name] = [question];\n    }\n  }\n  questionHashRemovedCore(hash, question, name) {\n    var res = hash[name];\n    if (!res) return;\n    var index = res.indexOf(question);\n    if (index > -1) {\n      res.splice(index, 1);\n    }\n    if (res.length == 0) {\n      delete hash[name];\n    }\n  }\n  panelAdded(panel, index, parentPanel, rootPanel) {\n    if (!panel.name) {\n      panel.name = this.generateNewName(this.getAllPanels(false, true), \"panel\");\n    }\n    this.questionHashesPanelAdded(panel);\n    this.updateVisibleIndexes(panel.page);\n    if (this.canFireAddElement()) {\n      this.onPanelAdded.fire(this, {\n        panel: panel,\n        name: panel.name,\n        index: index,\n        parent: parentPanel,\n        page: rootPanel,\n        parentPanel: parentPanel,\n        rootPanel: rootPanel\n      });\n    }\n  }\n  panelRemoved(panel) {\n    this.updateVisibleIndexes(panel.page);\n    this.onPanelRemoved.fire(this, {\n      panel: panel,\n      name: panel.name\n    });\n    this.updateLazyRenderingRowsOnRemovingElements();\n  }\n  validateQuestion(question, errors, fireCallback) {\n    if (!this.onValidateQuestion.isEmpty) {\n      var options = {\n        name: question.name,\n        question: question,\n        value: question.value,\n        errors: errors,\n        error: null\n      };\n      this.onValidateQuestion.fire(this, options);\n      if (options.error) {\n        errors.push(new CustomError(options.error, this));\n      }\n    }\n    if (fireCallback) {\n      this.beforeSettingQuestionErrors(question, errors);\n    }\n  }\n  validatePanel(panel, errors, fireCallback) {\n    if (panel.isPanel && !this.onValidatePanel.isEmpty) {\n      const options = {\n        name: panel.name,\n        panel: panel,\n        error: null,\n        errors: errors\n      };\n      this.onValidatePanel.fire(this, options);\n      if (options.error) {\n        errors.push(new CustomError(options.error, this));\n      }\n    }\n    if (fireCallback) {\n      this.makeRequiredErrorsInvisible(errors);\n    }\n  }\n  processHtml(html, reason) {\n    if (!reason) reason = \"\";\n    var options = {\n      html: html,\n      reason: reason\n    };\n    this.onProcessHtml.fire(this, options);\n    return this.processText(options.html, true);\n  }\n  processText(text, returnDisplayValue) {\n    return this.processTextEx({\n      text: text,\n      returnDisplayValue: returnDisplayValue,\n      doEncoding: false\n    }).text;\n  }\n  processTextEx(params) {\n    const doEncoding = params.doEncoding === undefined ? settings.web.encodeUrlParams : params.doEncoding;\n    let text = params.text;\n    if (params.runAtDesign || !this.isDesignMode) {\n      text = this.textPreProcessor.process(text, params.returnDisplayValue === true, doEncoding, params.replaceUndefinedValues);\n    }\n    const res = {\n      text: text,\n      hasAllValuesOnLastRun: true\n    };\n    res.hasAllValuesOnLastRun = this.textPreProcessor.hasAllValuesOnLastRun;\n    return res;\n  }\n  get textPreProcessor() {\n    if (!this.textPreProcessorValue) {\n      this.textPreProcessorValue = new TextPreProcessor();\n      this.textPreProcessorValue.onProcess = textValue => {\n        this.getProcessedTextValue(textValue);\n      };\n    }\n    return this.textPreProcessorValue;\n  }\n  getSurveyMarkdownHtml(element, text, name, item) {\n    const options = {\n      element: element,\n      text: text,\n      name: name,\n      item: item,\n      html: null\n    };\n    this.onTextMarkdown.fire(this, options);\n    return options.html;\n  }\n  getCorrectedAnswerCount() {\n    return this.getCorrectAnswerCount();\n  }\n  /**\n   * Returns the number of correct answers in a quiz.\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns The number of correct answers in a quiz.\n   * @see getQuizQuestionCount\n   * @see getIncorrectAnswerCount\n   */\n  getCorrectAnswerCount() {\n    return this.getCorrectedAnswerCountCore(true);\n  }\n  /**\n   * Returns the number of quiz questions. A question counts if it is visible, has an input field, and specifies [`correctAnswer`](https://surveyjs.io/form-library/documentation/api-reference/checkbox-question-model#correctAnswer).\n   *\n   * This number may be different from `getQuizQuestions().length` because certain question types (for instance, matrix-like types) include more than one question.\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns The number of quiz questions.\n   * @see getQuizQuestions\n   */\n  getQuizQuestionCount() {\n    var questions = this.getQuizQuestions();\n    var res = 0;\n    for (var i = 0; i < questions.length; i++) {\n      res += questions[i].quizQuestionCount;\n    }\n    return res;\n  }\n  getInCorrectedAnswerCount() {\n    return this.getIncorrectAnswerCount();\n  }\n  getInCorrectAnswerCount() {\n    return this.getIncorrectAnswerCount();\n  }\n  /**\n   * Returns the number of incorrect answers in a quiz.\n   *\n   * For more information about quizzes, refer to the following tutorial: [Create a Quiz](https://surveyjs.io/form-library/documentation/design-survey/create-a-quiz).\n   * @returns The number of incorrect answers in a quiz.\n   * @see getCorrectAnswerCount\n   */\n  getIncorrectAnswerCount() {\n    return this.getCorrectedAnswerCountCore(false);\n  }\n  onCorrectQuestionAnswer(question, options) {\n    if (this.onIsAnswerCorrect.isEmpty) return;\n    options.question = question;\n    this.onIsAnswerCorrect.fire(this, options);\n  }\n  getCorrectedAnswerCountCore(isCorrect) {\n    var questions = this.getQuizQuestions();\n    var counter = 0;\n    for (let i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      const correctCount = q.correctAnswerCount;\n      if (isCorrect) {\n        counter += correctCount;\n      } else {\n        counter += q.quizQuestionCount - correctCount;\n      }\n    }\n    return counter;\n  }\n  getCorrectedAnswers() {\n    return this.getCorrectedAnswerCount();\n  }\n  getInCorrectedAnswers() {\n    return this.getInCorrectedAnswerCount();\n  }\n  /**\n   * @deprecated Use the [`showTimer`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTimer) and [`timerLocation`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timerLocation) properties instead.\n   */\n  get showTimerPanel() {\n    if (!this.showTimer) return \"none\";\n    return this.timerLocation;\n  }\n  set showTimerPanel(val) {\n    this.showTimer = val !== \"none\";\n    if (this.showTimer) {\n      this.timerLocation = val;\n    }\n  }\n  /**\n   * Specifies the timer's visibility. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: `false`\n   *\n   * If you set this property to `true`, the timer starts automatically when the survey begins. To specify time limits, use the [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimit) and [`timeLimitPerPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimitPerPage) properties.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   *\n   * The timer displays information about time spent on an individual page and the entire survey. If you want to display only the page timer or the survey timer, set the [`timerInfoMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timerInfoMode) property to `\"page\"` or `\"survey\"`.\n   *\n   * You can enable the timer without displaying it. In this case, you need to specify the required time limits and use the [`startTimer()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#startTimer) and [`stopTimer()`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#stopTimer) methods to control the timer.\n   * @see timerLocation\n   * @see timeSpent\n   * @see onTimerTick\n   */\n  get showTimer() {\n    return this.getPropertyValue(\"showTimer\");\n  }\n  set showTimer(val) {\n    this.setPropertyValue(\"showTimer\", val);\n  }\n  /**\n   * Specifies the timer's position relative to the survey. Applies only if the [`showTimer`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTimer) property is set to `true`.\n   *\n   * Possible values:\n   *\n   * - `\"top\"` (default) - Displays the timer at the top of the survey.\n   * - `\"bottom\"` - Displays the timer at the bottom of the survey.\n   * @see onTimerTick\n   */\n  get timerLocation() {\n    return this.getPropertyValue(\"timerLocation\");\n  }\n  set timerLocation(val) {\n    this.setPropertyValue(\"timerLocation\", val);\n  }\n  get isTimerPanelShowingOnTop() {\n    return this.showTimer && this.timerLocation === \"top\";\n  }\n  get isTimerPanelShowingOnBottom() {\n    return this.showTimer && this.timerLocation === \"bottom\";\n  }\n  /**\n   * Specifies whether the timer panel displays timers for the current page, the entire survey, or both. Applies only if the timer panel is [visible](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#showTimer).\n   *\n   * Possible values:\n   *\n   * - `\"survey\"` - Displays only the survey timer.\n   * - `\"page\"` - Displays only the page timer.\n   * - `\"combined\"` (default) - Displays both the survey and page timers.\n   * @see timeSpent\n   * @see onTimerTick\n   * @see startTimer\n   * @see stopTimer\n   */\n  get timerInfoMode() {\n    return this.getTimerInfoVal(this.getPropertyValue(\"timerInfoMode\"));\n  }\n  set timerInfoMode(val) {\n    this.setPropertyValue(\"timerInfoMode\", val);\n  }\n  getTimerInfoVal(val) {\n    return val === \"all\" ? \"combined\" : val;\n  }\n  /**\n   * @deprecated Use the [`timerInfoMode`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timerInfoMode) property instead.\n   */\n  get showTimerPanelMode() {\n    const res = this.timerInfoMode;\n    return res === \"combined\" ? \"all\" : res;\n  }\n  set showTimerPanelMode(val) {\n    this.timerInfoMode = this.getTimerInfoVal(val);\n  }\n  updateGridColumns() {\n    this.pages.forEach(page => page.updateGridColumns());\n  }\n  /**\n    * Specifies how to calculate the survey width.\n    *\n    * Possible values:\n    *\n    * - `\"static\"` - A survey has a [fixed width](#width).\n    * - `\"responsive\"` - A survey occupies all available horizontal space and stretches or shrinks horizontally to fit in the screen size.\n    * - `\"auto\"` (default) - Survey width depends on a question type and corresponds to the `\"static\"` or `\"responsive\"` mode.\n  */\n  // `custom/precise` - The survey width is specified by the width property. // in-future\n  get widthMode() {\n    return this.getPropertyValue(\"widthMode\");\n  }\n  set widthMode(val) {\n    this.setPropertyValue(\"widthMode\", val);\n  }\n  setCalculatedWidthModeUpdater() {\n    if (this.isLoadingFromJson) return;\n    if (this.calculatedWidthModeUpdater) this.calculatedWidthModeUpdater.dispose();\n    this.calculatedWidthModeUpdater = new ComputedUpdater(() => this.calculateWidthMode());\n    this.calculatedWidthMode = this.calculatedWidthModeUpdater;\n  }\n  calculateWidthMode() {\n    if (this.widthMode == \"auto\") {\n      let isResponsive = false;\n      if (this.questionsOnPageMode != \"inputPerPage\") {\n        this.pages.forEach(page => {\n          if (page.needResponsiveWidth()) isResponsive = true;\n        });\n      }\n      return isResponsive ? \"responsive\" : \"static\";\n    }\n    return this.widthMode;\n  }\n  /**\n   * A survey width in CSS values.\n   *\n   * Default value: `undefined` (the survey inherits the width from its container)\n   * @see onResize\n   */\n  get width() {\n    return this.getPropertyValue(\"width\");\n  }\n  set width(val) {\n    this.setPropertyValue(\"width\", val);\n  }\n  get renderedWidth() {\n    const isStaticWidth = this.getPropertyValue(\"calculatedWidthMode\") == \"static\";\n    let width = this.getPropertyValue(\"width\");\n    if (this.isScaled && this.responsiveStartWidth > 1) {\n      let initialWidth = this.responsiveStartWidth;\n      try {\n        width = width || this.staticStartWidth;\n        initialWidth = !isNaN(width) ? width : parseFloat(width.toString().replace(\"px\", \"\"));\n      } catch (e) {}\n      return (isStaticWidth ? initialWidth : this.responsiveStartWidth) * this.widthScale / 100 + \"px\";\n    }\n    if (width && !isNaN(width)) width = width + \"px\";\n    return isStaticWidth && width || undefined;\n  }\n  setStaticStartWidth(width) {\n    this.staticStartWidth = width;\n  }\n  setResponsiveStartWidth(width) {\n    this.responsiveStartWidth = width;\n  }\n  get isScaled() {\n    return Math.abs(this.widthScale - 100) > 0.001;\n  }\n  get timerInfo() {\n    return this.getTimerInfo();\n  }\n  get timerClock() {\n    let major;\n    let minor;\n    if (!!this.currentPage) {\n      let {\n        spent,\n        limit,\n        minorSpent,\n        minorLimit\n      } = this.getTimerInfo();\n      if (limit > 0) major = this.getDisplayClockTime(limit - spent);else {\n        major = this.getDisplayClockTime(spent);\n      }\n      if (minorSpent !== undefined) {\n        if (minorLimit > 0) {\n          minor = this.getDisplayClockTime(minorLimit - minorSpent);\n        } else {\n          minor = this.getDisplayClockTime(minorSpent);\n        }\n      }\n    }\n    return {\n      majorText: major,\n      minorText: minor\n    };\n  }\n  get timerInfoText() {\n    const options = {\n      text: this.getTimerInfoText()\n    };\n    this.onTimerPanelInfoText.fire(this, options);\n    var loc = new LocalizableString(this, true);\n    loc.text = options.text;\n    return loc.textOrHtml;\n  }\n  getTimerInfo() {\n    let page = this.currentPage;\n    if (!page) return {\n      spent: 0,\n      limit: 0\n    };\n    let pageSpent = page.timeSpent;\n    let surveySpent = this.timeSpent;\n    let pageLimitSec = page.getMaxTimeToFinish();\n    let surveyLimit = this.timeLimit;\n    if (this.timerInfoMode == \"page\") {\n      return {\n        spent: pageSpent,\n        limit: pageLimitSec\n      };\n    }\n    if (this.timerInfoMode == \"survey\") {\n      return {\n        spent: surveySpent,\n        limit: surveyLimit\n      };\n    } else {\n      if (pageLimitSec > 0 && surveyLimit > 0) {\n        return {\n          spent: pageSpent,\n          limit: pageLimitSec,\n          minorSpent: surveySpent,\n          minorLimit: surveyLimit\n        };\n      } else if (pageLimitSec > 0) {\n        return {\n          spent: pageSpent,\n          limit: pageLimitSec,\n          minorSpent: surveySpent\n        };\n      } else if (surveyLimit > 0) {\n        return {\n          spent: surveySpent,\n          limit: surveyLimit,\n          minorSpent: pageSpent\n        };\n      } else {\n        return {\n          spent: pageSpent,\n          minorSpent: surveySpent\n        };\n      }\n    }\n  }\n  getTimerInfoText() {\n    var page = this.currentPage;\n    if (!page) return \"\";\n    var pageSpent = this.getDisplayTime(page.timeSpent);\n    var surveySpent = this.getDisplayTime(this.timeSpent);\n    var pageLimitSec = page.getMaxTimeToFinish();\n    var pageLimit = this.getDisplayTime(pageLimitSec);\n    var surveyLimit = this.getDisplayTime(this.timeLimit);\n    if (this.timerInfoMode == \"page\") return this.getTimerInfoPageText(page, pageSpent, pageLimit);\n    if (this.timerInfoMode == \"survey\") return this.getTimerInfoSurveyText(surveySpent, surveyLimit);\n    if (this.timerInfoMode == \"combined\") {\n      if (pageLimitSec <= 0 && this.timeLimit <= 0) {\n        return this.getLocalizationFormatString(\"timerSpentAll\", pageSpent, surveySpent);\n      }\n      if (pageLimitSec > 0 && this.timeLimit > 0) {\n        return this.getLocalizationFormatString(\"timerLimitAll\", pageSpent, pageLimit, surveySpent, surveyLimit);\n      }\n      let pageText = this.getTimerInfoPageText(page, pageSpent, pageLimit);\n      let surveyText = this.getTimerInfoSurveyText(surveySpent, surveyLimit);\n      return pageText + \" \" + surveyText;\n    }\n    return \"\";\n  }\n  getTimerInfoPageText(page, pageSpent, pageLimit) {\n    return !!page && page.getMaxTimeToFinish() > 0 ? this.getLocalizationFormatString(\"timerLimitPage\", pageSpent, pageLimit) : this.getLocalizationFormatString(\"timerSpentPage\", pageSpent, pageLimit);\n  }\n  getTimerInfoSurveyText(surveySpent, surveyLimit) {\n    const strName = this.timeLimit > 0 ? \"timerLimitSurvey\" : \"timerSpentSurvey\";\n    return this.getLocalizationFormatString(strName, surveySpent, surveyLimit);\n  }\n  getDisplayClockTime(val) {\n    if (val < 0) {\n      val = 0;\n    }\n    const min = Math.floor(val / 60);\n    const sec = val % 60;\n    let secStr = sec.toString();\n    if (sec < 10) {\n      secStr = \"0\" + secStr;\n    }\n    return `${min}:${secStr}`;\n  }\n  getDisplayTime(val) {\n    const min = Math.floor(val / 60);\n    const sec = val % 60;\n    let res = \"\";\n    if (min > 0) {\n      res += min + \" \" + this.getLocalizationString(\"timerMin\");\n    }\n    if (res && sec == 0) return res;\n    if (res) res += \" \";\n    return res + sec + \" \" + this.getLocalizationString(\"timerSec\");\n  }\n  get timerModel() {\n    return this.timerModelValue;\n  }\n  /**\n   * Starts a timer that calculates how many seconds a respondent has spent on the survey. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   * @see stopTimer\n   * @see timeLimit\n   * @see timeLimitPerPage\n   * @see timeSpent\n   * @see onTimerTick\n   */\n  startTimer() {\n    if (this.isEditMode) {\n      this.timerModel.start();\n    }\n  }\n  startTimerFromUI() {\n    if (this.showTimer && this.state === \"running\") {\n      this.startTimer();\n    }\n  }\n  /**\n   * Stops the timer. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   * @see startTimer\n   * @see timeLimit\n   * @see timeLimitPerPage\n   * @see timeSpent\n   * @see onTimerTick\n   */\n  stopTimer() {\n    this.timerModel.stop();\n  }\n  /**\n   * A time period that a respondent has spent on the survey so far; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Assign a number to this property if you need to start the quiz timer from a specific time (for instance, if you want to continue an interrupted quiz).\n   *\n   * You can also find out how many seconds a respondent has spent on an individual survey page. To do this, use the [`timeSpent`](https://surveyjs.io/form-library/documentation/api-reference/page-model#timeSpent) property of a [`PageModel`](https://surveyjs.io/form-library/documentation/api-reference/page-model) object.\n   * @see timeLimit\n   * @see timeLimitPerPage\n   * @see startTimer\n   */\n  get timeSpent() {\n    return this.timerModel.spent;\n  }\n  set timeSpent(val) {\n    this.timerModel.spent = val;\n  }\n  /**\n   * A time period that a respondent has to complete the survey; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: 0 (time is unlimited)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see timeLimitPerPage\n   * @see startTimer\n   * @see timeSpent\n   */\n  get timeLimit() {\n    return this.getPropertyValue(\"timeLimit\", 0);\n  }\n  set timeLimit(val) {\n    this.setPropertyValue(\"timeLimit\", val);\n  }\n  /**\n   * @deprecated Use the [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimit) property instead.\n   */\n  get maxTimeToFinish() {\n    return this.timeLimit;\n  }\n  set maxTimeToFinish(val) {\n    this.timeLimit = val;\n  }\n  /**\n   * A time period that a respondent has to complete each survey page; measured in seconds. Applies only to [quiz surveys](https://surveyjs.io/form-library/documentation/design-survey-create-a-quiz).\n   *\n   * Default value: 0 (time is unlimited)\n   *\n   * You can also use `PageModel`'s [`timeLimit`](https://surveyjs.io/form-library/documentation/api-reference/page-model#timeLimit) property to specify a time period for an individual survey page.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/make-quiz-javascript/ (linkStyle))\n   * @see timeLimit\n   * @see startTimer\n   * @see timeSpent\n   */\n  get timeLimitPerPage() {\n    return this.getPropertyValue(\"timeLimitPerPage\", 0);\n  }\n  set timeLimitPerPage(val) {\n    this.setPropertyValue(\"timeLimitPerPage\", val);\n  }\n  /**\n   * @deprecated Use the [`timeLimitPerPage`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#timeLimitPerPage) property instead.\n   */\n  get maxTimeToFinishPage() {\n    return this.timeLimitPerPage;\n  }\n  set maxTimeToFinishPage(val) {\n    this.timeLimitPerPage = val;\n  }\n  doTimer(page) {\n    this.onTimerTick.fire(this, {});\n    if (this.timeLimit > 0 && this.timeLimit <= this.timeSpent) {\n      this.timeSpent = this.timeLimit;\n      this.tryComplete();\n    }\n    if (page) {\n      var pageLimit = page.getMaxTimeToFinish();\n      if (pageLimit > 0 && pageLimit == page.timeSpent) {\n        if (this.isLastPage) {\n          this.tryComplete();\n        } else {\n          this.nextPage();\n        }\n      }\n    }\n  }\n  get inSurvey() {\n    return true;\n  }\n  //ISurveyImplementor\n  getSurveyData() {\n    return this;\n  }\n  getSurvey() {\n    return this;\n  }\n  getTextProcessor() {\n    return this;\n  }\n  //ISurveyTriggerOwner\n  getObjects(pages, questions) {\n    var result = [];\n    Array.prototype.push.apply(result, this.getPagesByNames(pages));\n    Array.prototype.push.apply(result, this.getQuestionsByNames(questions));\n    return result;\n  }\n  setTriggerValue(name, value, isVariable) {\n    if (!name) return;\n    if (isVariable) {\n      this.setVariable(name, value);\n    } else {\n      var question = this.getQuestionByName(name);\n      this.startSetValueFromTrigger();\n      if (!!question) {\n        question.value = value;\n      } else {\n        var processor = new ProcessValue();\n        var firstName = processor.getFirstName(name);\n        if (firstName == name) {\n          this.setValue(name, value);\n        } else {\n          if (!this.getQuestionByName(firstName)) return;\n          var data = this.getUnbindValue(this.getFilteredValues());\n          processor.setValue(data, name, value);\n          this.setValue(firstName, data[firstName]);\n        }\n      }\n      this.finishSetValueFromTrigger();\n    }\n  }\n  copyTriggerValue(name, fromName, copyDisplayValue) {\n    if (!name || !fromName) return;\n    let value;\n    if (copyDisplayValue) {\n      value = this.processText(\"{\" + fromName + \"}\", true);\n    } else {\n      const processor = new ProcessValue();\n      value = processor.getValue(fromName, this.getFilteredValues());\n    }\n    this.setTriggerValue(name, Helpers.getUnbindValue(value), false);\n  }\n  triggerExecuted(trigger) {\n    this.onTriggerExecuted.fire(this, {\n      trigger: trigger\n    });\n  }\n  get isSettingValueFromTrigger() {\n    return this.setValueFromTriggerCounter > 0;\n  }\n  startSetValueFromTrigger() {\n    this.setValueFromTriggerCounter++;\n  }\n  finishSetValueFromTrigger() {\n    this.setValueFromTriggerCounter--;\n  }\n  startMovingQuestion() {\n    this.isMovingQuestion = true;\n  }\n  stopMovingQuestion() {\n    this.isMovingQuestion = false;\n  }\n  get isQuestionDragging() {\n    return this.isMovingQuestion;\n  }\n  startMovingPage() {\n    this.isMovingPage = true;\n  }\n  stopMovingPage() {\n    this.isMovingPage = false;\n  }\n  /**\n   * Focuses a question with a specified name. Switches the current page if needed.\n   * @param name A question name.\n   * @returns `false` if the survey does not contain a question with the specified name or this question is hidden; otherwise, `true`.\n   * @see focusFirstQuestion\n   * @see autoFocusFirstQuestion\n   */\n  focusQuestion(name) {\n    return this.focusQuestionByInstance(this.getQuestionByName(name, true));\n  }\n  focusQuestionByInstance(question, onError = false) {\n    var _a;\n    if (!question || !question.isVisible || !question.page) return false;\n    const oldQuestion = (_a = this.focusingQuestionInfo) === null || _a === void 0 ? void 0 : _a.question;\n    if (oldQuestion === question) return false;\n    this.focusingQuestionInfo = {\n      question: question,\n      onError: onError\n    };\n    const curElement = this.currentSingleElement;\n    this.skippedPages.push({\n      from: curElement || this.currentPage,\n      to: curElement ? question : question.page\n    });\n    const isNeedWaitForPageRendered = this.activePage !== question.page && !question.page.isStartPage;\n    if (isNeedWaitForPageRendered) {\n      this.currentPage = question.page;\n    }\n    if (this.isSingleVisibleQuestion && !this.isDesignMode) {\n      this.currentSingleElement = question;\n    }\n    if (!isNeedWaitForPageRendered) {\n      this.focusQuestionInfo();\n    }\n    return true;\n  }\n  focusQuestionInfo() {\n    var _a;\n    const question = (_a = this.focusingQuestionInfo) === null || _a === void 0 ? void 0 : _a.question;\n    if (!!question && !question.isDisposed) {\n      question.focus(this.focusingQuestionInfo.onError);\n    }\n    this.focusingQuestionInfo = undefined;\n  }\n  questionEditFinishCallback(question, event) {\n    const enterKeyAction = this.enterKeyAction || settings.enterKeyAction;\n    if (enterKeyAction == \"loseFocus\") event.target.blur();\n    if (enterKeyAction == \"moveToNextEditor\") {\n      const allQuestions = this.currentPage.questions;\n      const questionIndex = allQuestions.indexOf(question);\n      if (questionIndex > -1 && questionIndex < allQuestions.length - 1) {\n        allQuestions[questionIndex + 1].focus();\n      } else {\n        event.target.blur();\n      }\n    }\n  }\n  elementWrapperComponentNameCore(componentName, element, wrapperName, reason, item) {\n    if (this.onElementWrapperComponentName.isEmpty) return componentName;\n    const options = {\n      componentName: componentName,\n      element: element,\n      wrapperName: wrapperName,\n      reason: reason,\n      item: item\n    };\n    this.onElementWrapperComponentName.fire(this, options);\n    return options.componentName;\n  }\n  elementWrapperDataCore(data, element, wrapperName, reason, item) {\n    if (this.onElementWrapperComponentData.isEmpty) return data;\n    const options = {\n      data: data,\n      element: element,\n      wrapperName: wrapperName,\n      reason: reason,\n      item: item\n    };\n    this.onElementWrapperComponentData.fire(this, options);\n    return options.data;\n  }\n  getElementWrapperComponentName(element, reason) {\n    const res = reason === \"logo-image\" ? \"sv-logo-image\" : SurveyModel.TemplateRendererComponentName;\n    return this.elementWrapperComponentNameCore(res, element, \"component\", reason);\n  }\n  getQuestionContentWrapperComponentName(element) {\n    return this.elementWrapperComponentNameCore(SurveyModel.TemplateRendererComponentName, element, \"content-component\");\n  }\n  getRowWrapperComponentName(row) {\n    return this.elementWrapperComponentNameCore(SurveyModel.TemplateRendererComponentName, row, \"row\");\n  }\n  getItemValueWrapperComponentName(item, question) {\n    return this.elementWrapperComponentNameCore(SurveyModel.TemplateRendererComponentName, question, \"itemvalue\", undefined, item);\n  }\n  getElementWrapperComponentData(element, reason) {\n    return this.elementWrapperDataCore(element, element, \"component\", reason);\n  }\n  getRowWrapperComponentData(row) {\n    return this.elementWrapperDataCore(row, row, \"row\");\n  }\n  getItemValueWrapperComponentData(item, question) {\n    return this.elementWrapperDataCore(item, question, \"itemvalue\", undefined, item);\n  }\n  getMatrixCellTemplateData(cell) {\n    const res = cell.question;\n    return this.elementWrapperDataCore(res, res, \"cell\");\n  }\n  searchText(text) {\n    if (!!text) text = text.toLowerCase();\n    var res = [];\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].searchText(text, res);\n    }\n    return res;\n  }\n  getSkeletonComponentName(element) {\n    return this.skeletonComponentName;\n  }\n  /**\n   * Adds an element to the survey layout.\n   *\n   * This method accepts an object with the following layout element properties:\n   *\n   * - `id`: `string` | `\"timerpanel\"` | `\"progress-buttons\"` | `\"progress-questions\"` | `\"progress-pages\"` | `\"progress-correctquestions\"` | `\"progress-requiredquestions\"` | `\"toc-navigation\"` | `\"buttons-navigation\"`\\\n   * A layout element identifier. You can use possible values to access and relocate or customize predefined layout elements.\n   *\n   * - `container`: `\"header\"` | `\"footer\"` | `\"left\"` | `\"right\"` | `\"contentTop\"` | `\"contentBottom\"`\\\n   * A layout container that holds the element. If you want to display the element within multiple containers, set this property to an array of possible values.\n   *\n   * - `component`: `string`\\\n   * The name of the component that renders the layout element.\n   *\n   * - `data`: `any`\\\n   * Data passed as props to `component`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/progress-bar-with-percentage/ (linkStyle))\n   * @param layoutElement A layout element configuration.\n   * @returns The configuration of the previous layout element with the same `id`.\n   */\n  addLayoutElement(layoutElement) {\n    const existingLayoutElement = this.removeLayoutElement(layoutElement.id);\n    this.layoutElements.push(layoutElement);\n    return existingLayoutElement;\n  }\n  findLayoutElement(layoutElementId) {\n    const layoutElement = this.layoutElements.filter(a => a.id === layoutElementId)[0];\n    return layoutElement;\n  }\n  removeLayoutElement(layoutElementId) {\n    const layoutElement = this.findLayoutElement(layoutElementId);\n    if (!!layoutElement) {\n      const layoutElementIndex = this.layoutElements.indexOf(layoutElement);\n      this.layoutElements.splice(layoutElementIndex, 1);\n    }\n    return layoutElement;\n  }\n  getContainerContent(container) {\n    const containerLayoutElements = new Array();\n    for (let layoutElement of this.layoutElements) {\n      if (this.mode !== \"display\" && isStrCiEqual(layoutElement.id, \"timerpanel\")) {\n        if (container === \"header\") {\n          if (this.isTimerPanelShowingOnTop && !this.isStartPageActive) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n        if (container === \"footer\") {\n          if (this.isTimerPanelShowingOnBottom && !this.isStartPageActive) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n      } else if (this.state === \"running\" && isStrCiEqual(layoutElement.id, this.progressBarComponentName)) {\n        if (this.questionsOnPageMode != \"singlePage\" || this.progressBarType == \"questions\") {\n          const headerLayoutElement = this.findLayoutElement(\"advanced-header\");\n          const advHeader = headerLayoutElement && headerLayoutElement.data;\n          let isBelowHeader = !advHeader || advHeader.hasBackground;\n          if (isStrCiEqual(this.progressBarLocation, \"aboveHeader\")) {\n            isBelowHeader = false;\n          }\n          if (isStrCiEqual(this.progressBarLocation, \"belowHeader\")) {\n            isBelowHeader = true;\n          }\n          if (this.showTOC && !(advHeader && advHeader.hasBackground) && this.isShowProgressBarOnTop && !this.isStartPageActive) {\n            if (container === \"center\") {\n              if (!isBelowHeader) {\n                layoutElement.index = -150;\n              } else {\n                delete layoutElement.index;\n              }\n              containerLayoutElements.push(layoutElement);\n            }\n          } else {\n            if (container === \"header\" && !isBelowHeader) {\n              layoutElement.index = -150;\n              if (this.isShowProgressBarOnTop && !this.isStartPageActive) {\n                containerLayoutElements.push(layoutElement);\n              }\n            }\n            if (container === \"center\" && isBelowHeader) {\n              if (!!layoutElement.index) {\n                delete layoutElement.index;\n              }\n              if (this.isShowProgressBarOnTop && !this.isStartPageActive) {\n                containerLayoutElements.push(layoutElement);\n              }\n            }\n          }\n          if (container === \"footer\") {\n            if (this.isShowProgressBarOnBottom && !this.isStartPageActive) {\n              containerLayoutElements.push(layoutElement);\n            }\n          }\n        }\n      } else if (isStrCiEqual(layoutElement.id, \"buttons-navigation\")) {\n        if (container === \"contentTop\") {\n          if (this.isNavigationButtonsShowingOnTop) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n        if (container === \"contentBottom\") {\n          if (this.isNavigationButtonsShowingOnBottom) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n      } else if (this.state === \"running\" && isStrCiEqual(layoutElement.id, \"toc-navigation\") && this.showTOC) {\n        if (container === \"left\") {\n          if ([\"left\", \"both\"].indexOf(this.tocLocation) !== -1) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n        if (container === \"right\") {\n          if ([\"right\", \"both\"].indexOf(this.tocLocation) !== -1) {\n            containerLayoutElements.push(layoutElement);\n          }\n        }\n      } else if (isStrCiEqual(layoutElement.id, \"advanced-header\")) {\n        if (this.state === \"running\" || this.state === \"starting\" || this.showHeaderOnCompletePage === true && this.state === \"completed\") {\n          const advHeader = layoutElement && layoutElement.data;\n          if (this.showTOC && !(advHeader && advHeader.hasBackground)) {\n            if (container === \"contentTop\") {\n              containerLayoutElements.push(layoutElement);\n            }\n          } else {\n            if (layoutElement.container === container) {\n              containerLayoutElements.push(layoutElement);\n            }\n          }\n        }\n      } else {\n        if (Array.isArray(layoutElement.container) && layoutElement.container.indexOf(container) !== -1 || layoutElement.container === container) {\n          containerLayoutElements.push(layoutElement);\n        }\n      }\n    }\n    containerLayoutElements.sort((a, b) => (a.index || 0) - (b.index || 0));\n    containerLayoutElements.forEach(el => {\n      if (!!el.getData) {\n        el.data = el.getData();\n      }\n    });\n    return containerLayoutElements;\n  }\n  processPopupVisiblityChanged(question, popup, visible) {\n    this.onPopupVisibleChanged.fire(this, {\n      question,\n      popup,\n      visible\n    });\n  }\n  processOpenDropdownMenu(question, options) {\n    const newOptions = Object.assign({\n      question\n    }, options);\n    this.onOpenDropdownMenu.fire(this, newOptions);\n    options.menuType = newOptions.menuType;\n  }\n  getCssTitleExpandableSvg() {\n    return null;\n  }\n  createCustomChoiceItem(options) {\n    this.onCreateCustomChoiceItem.fire(this, options);\n  }\n  /**\n   * Applies a specified theme to the survey.\n   *\n   * [Themes & Styles](https://surveyjs.io/form-library/documentation/manage-default-themes-and-styles (linkStyle))\n   * @param theme An [`ITheme`](https://surveyjs.io/form-library/documentation/api-reference/itheme) object with theme settings.\n   */\n  applyTheme(theme) {\n    if (!theme) return;\n    Object.keys(theme).forEach(key => {\n      if (key === \"header\") {\n        return;\n      }\n      if (key === \"isPanelless\") {\n        this.isCompact = theme[key];\n      } else {\n        this[key] = theme[key];\n      }\n    });\n    if (\"header\" in theme && !theme.headerView) {\n      this.headerView = \"advanced\";\n    }\n    if (this.headerView !== \"basic\") {\n      this.removeLayoutElement(\"advanced-header\");\n      const advHeader = new Cover();\n      advHeader.fromTheme(theme);\n      this.insertAdvancedHeader(advHeader);\n    }\n    this.themeChanged(theme);\n  }\n  themeChanged(theme) {\n    this.getAllQuestions().forEach(q => q.themeChanged(theme));\n  }\n  /**\n   * Disposes of the survey model.\n   *\n   * Call this method to release resources if your application contains multiple survey models or if you re-create a survey model at runtime.\n   */\n  dispose() {\n    this.unConnectEditingObj();\n    this.removeScrollEventListener();\n    this.destroyResizeObserver();\n    this.rootElement = undefined;\n    if (this.layoutElements) {\n      for (var i = 0; i < this.layoutElements.length; i++) {\n        if (!!this.layoutElements[i].data && this.layoutElements[i].data !== this && this.layoutElements[i].data.dispose) {\n          this.layoutElements[i].data.dispose();\n        }\n      }\n      this.layoutElements.splice(0, this.layoutElements.length);\n    }\n    super.dispose();\n    this.editingObj = null;\n    if (!this.pages) return;\n    this.currentPage = null;\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].setSurveyImpl(undefined);\n      this.pages[i].dispose();\n    }\n    this.pages.splice(0, this.pages.length);\n    if (this.disposeCallback) {\n      this.disposeCallback();\n    }\n  }\n  // private _lastScrollTop = 0;\n  _isElementShouldBeSticky(selector) {\n    var _a;\n    if (!selector) return false;\n    const topStickyContainer = (_a = this.scrollerElement) === null || _a === void 0 ? void 0 : _a.querySelector(selector);\n    if (!!topStickyContainer) {\n      // const scrollDirection = this.rootElement.scrollTop > this._lastScrollTop ? \"down\" : \"up\";\n      // this._lastScrollTop = this.rootElement.scrollTop;\n      return !!this.scrollerElement && this.scrollerElement.scrollTop > 0 && topStickyContainer.getBoundingClientRect().y <= this.scrollerElement.getBoundingClientRect().y;\n    }\n    return false;\n  }\n  get rootScrollDisabled() {\n    return !(this.fitToContainer && this.formScrollDisabled);\n  }\n  get formScrollDisabled() {\n    return !this.backgroundImage || this.backgroundImageAttachment !== \"fixed\";\n  }\n  onScroll() {\n    if (!!this.rootElement) {\n      if (this._isElementShouldBeSticky(\".sv-components-container-center\")) {\n        this.rootElement.classList && this.rootElement.classList.add(\"sv-root--sticky-top\");\n      } else {\n        this.rootElement.classList && this.rootElement.classList.remove(\"sv-root--sticky-top\");\n      }\n      if (!!this.tocModel) {\n        this.tocModel.updateStickyTOCSize(this.rootElement);\n      }\n    }\n    if (this.onScrollCallback) {\n      this.onScrollCallback();\n    }\n  }\n  addScrollEventListener() {\n    this.scrollHandler = () => {\n      this.onScroll();\n    };\n    this.rootElement.addEventListener(\"scroll\", this.scrollHandler);\n    if (!!this.rootElement.getElementsByTagName(\"form\")[0]) {\n      this.rootElement.getElementsByTagName(\"form\")[0].addEventListener(\"scroll\", this.scrollHandler);\n    }\n    if (!!this.scrollerElement) {\n      this.scrollerElement.addEventListener(\"scroll\", this.scrollHandler);\n    }\n  }\n  removeScrollEventListener() {\n    if (!!this.rootElement && !!this.scrollHandler) {\n      this.rootElement.removeEventListener(\"scroll\", this.scrollHandler);\n      if (!!this.rootElement.getElementsByTagName(\"form\")[0]) {\n        this.rootElement.getElementsByTagName(\"form\")[0].removeEventListener(\"scroll\", this.scrollHandler);\n      }\n      if (!!this.scrollerElement) {\n        this.scrollerElement.removeEventListener(\"scroll\", this.scrollHandler);\n      }\n    }\n  }\n}\nSurveyModel.TemplateRendererComponentName = \"sv-template-renderer\";\n// private static stylesManager: StylesManager = null;\nSurveyModel.platform = \"unknown\";\n__decorate([property()], SurveyModel.prototype, \"completedCss\", void 0);\n__decorate([property()], SurveyModel.prototype, \"completedBeforeCss\", void 0);\n__decorate([property()], SurveyModel.prototype, \"loadingBodyCss\", void 0);\n__decorate([property()], SurveyModel.prototype, \"containerCss\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    target.updateCss();\n  }\n})], SurveyModel.prototype, \"fitToContainer\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (newValue === \"basic\") {\n      target.removeLayoutElement(\"advanced-header\");\n    } else {\n      const layoutElement = target.findLayoutElement(\"advanced-header\");\n      if (!layoutElement) {\n        const advHeader = new Cover();\n        target.insertAdvancedHeader(advHeader);\n      }\n    }\n  }\n})], SurveyModel.prototype, \"headerView\", void 0);\n__decorate([property()], SurveyModel.prototype, \"showBrandInfo\", void 0);\n__decorate([property()], SurveyModel.prototype, \"enterKeyAction\", void 0);\n__decorate([property()], SurveyModel.prototype, \"lazyRenderFirstBatchSizeValue\", void 0);\n__decorate([property({\n  defaultValue: {}\n})], SurveyModel.prototype, \"cssVariables\", void 0);\n__decorate([property()], SurveyModel.prototype, \"_isMobile\", void 0);\n__decorate([property()], SurveyModel.prototype, \"_isCompact\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    target.updateCss();\n  }\n})], SurveyModel.prototype, \"backgroundImage\", void 0);\n__decorate([property()], SurveyModel.prototype, \"backgroundImageFit\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    target.updateCss();\n  }\n})], SurveyModel.prototype, \"backgroundImageAttachment\", void 0);\n__decorate([property()], SurveyModel.prototype, \"wrapperFormCss\", void 0);\n__decorate([property({\n  getDefaultValue: self => {\n    return self.progressBarType === \"buttons\";\n  }\n})], SurveyModel.prototype, \"progressBarShowPageTitles\", void 0);\n__decorate([property()], SurveyModel.prototype, \"progressBarShowPageNumbers\", void 0);\n__decorate([property()], SurveyModel.prototype, \"progressBarInheritWidthFrom\", void 0);\n__decorate([property({\n  defaultValue: true\n})], SurveyModel.prototype, \"validationEnabled\", void 0);\n__decorate([property()], SurveyModel.prototype, \"rootCss\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    target.updateGridColumns();\n  }\n})], SurveyModel.prototype, \"gridLayoutEnabled\", void 0);\n__decorate([property()], SurveyModel.prototype, \"calculatedWidthMode\", void 0);\n__decorate([property({\n  defaultValue: 100,\n  onSet(val, target, prevVal) {\n    target.pages.forEach(p => p.updateRootStyle());\n  }\n})], SurveyModel.prototype, \"widthScale\", void 0);\n__decorate([property()], SurveyModel.prototype, \"staticStartWidth\", void 0);\n__decorate([property()], SurveyModel.prototype, \"responsiveStartWidth\", void 0);\n__decorate([propertyArray()], SurveyModel.prototype, \"layoutElements\", void 0);\nfunction isStrCiEqual(a, b) {\n  if (!a) return false;\n  if (!b) return false;\n  return a.toUpperCase() === b.toUpperCase();\n}\nSerializer.addClass(\"survey\", [{\n  name: \"locale\",\n  choices: () => {\n    return surveyLocalization.getLocales(true);\n  },\n  onGetValue: obj => {\n    return obj.locale == surveyLocalization.defaultLocale ? null : obj.locale;\n  }\n}, {\n  name: \"title\",\n  serializationProperty: \"locTitle\",\n  dependsOn: \"locale\"\n}, {\n  name: \"description:text\",\n  serializationProperty: \"locDescription\",\n  dependsOn: \"locale\"\n}, {\n  name: \"logo:file\",\n  serializationProperty: \"locLogo\"\n}, {\n  name: \"logoWidth\",\n  default: \"auto\",\n  minValue: 0\n}, {\n  name: \"logoHeight\",\n  default: \"40px\",\n  minValue: 0\n}, {\n  name: \"logoFit\",\n  default: \"contain\",\n  choices: [\"none\", \"contain\", \"cover\", \"fill\"]\n}, {\n  name: \"logoPosition\",\n  default: \"left\",\n  choices: [\"none\", \"left\", \"right\", \"top\", \"bottom\"]\n}, {\n  name: \"autoFocusFirstQuestion:boolean\",\n  alternativeName: \"focusFirstQuestionAutomatic\"\n}, {\n  name: \"autoFocusFirstError:boolean\",\n  default: true,\n  alternativeName: \"focusOnFirstError\"\n}, {\n  name: \"completedHtml:html\",\n  serializationProperty: \"locCompletedHtml\"\n}, {\n  name: \"completedBeforeHtml:html\",\n  serializationProperty: \"locCompletedBeforeHtml\"\n}, {\n  name: \"completedHtmlOnCondition:htmlconditions\",\n  className: \"htmlconditionitem\",\n  isArray: true\n}, {\n  name: \"loadingHtml:html\",\n  serializationProperty: \"locLoadingHtml\"\n}, {\n  name: \"pages:surveypages\",\n  className: \"page\",\n  isArray: true,\n  onSerializeValue: obj => {\n    return obj.originalPages || obj.pages;\n  }\n}, {\n  name: \"elements\",\n  alternativeName: \"questions\",\n  baseClassName: \"question\",\n  visible: false,\n  isLightSerializable: false,\n  onGetValue: function (obj) {\n    return null;\n  },\n  onSetValue: function (obj, value, jsonConverter) {\n    obj.pages.splice(0, obj.pages.length);\n    var page = obj.addNewPage(\"\");\n    jsonConverter.toObject({\n      questions: value\n    }, page, jsonConverter === null || jsonConverter === void 0 ? void 0 : jsonConverter.options);\n  }\n}, {\n  name: \"triggers:triggers\",\n  baseClassName: \"surveytrigger\",\n  classNamePart: \"trigger\"\n}, {\n  name: \"calculatedValues:calculatedvalues\",\n  className: \"calculatedvalue\",\n  isArray: true\n}, {\n  name: \"sjsVersion\",\n  visible: false\n}, {\n  name: \"surveyId\",\n  visible: false\n}, {\n  name: \"surveyPostId\",\n  visible: false\n}, {\n  name: \"surveyShowDataSaving:boolean\",\n  visible: false\n}, \"cookieName\", {\n  name: \"partialSendEnabled:boolean\",\n  alternativeName: \"sendResultOnPageNext\"\n}, {\n  name: \"showNavigationButtons:boolean\",\n  default: true\n}, {\n  name: \"navigationButtonsLocation\",\n  default: \"bottom\",\n  choices: [\"top\", \"bottom\", \"topBottom\"]\n}, {\n  name: \"showPrevButton:boolean\",\n  default: true,\n  visibleIf: obj => {\n    return obj.showNavigationButtons !== \"none\";\n  }\n}, {\n  name: \"showTitle:boolean\",\n  default: true\n}, {\n  name: \"showPageTitles:boolean\",\n  default: true\n}, {\n  name: \"showCompletePage:boolean\",\n  default: true,\n  alternativeName: \"showCompletedPage\"\n}, \"navigateToUrl\", {\n  name: \"navigateToUrlOnCondition:urlconditions\",\n  className: \"urlconditionitem\",\n  isArray: true\n}, {\n  name: \"questionOrder\",\n  alternativeName: \"questionsOrder\",\n  default: \"initial\",\n  choices: [\"initial\", \"random\"]\n}, {\n  name: \"matrixDragHandleArea\",\n  visible: false,\n  default: \"entireItem\",\n  choices: [\"entireItem\", \"icon\"]\n}, \"showPageNumbers:boolean\", {\n  name: \"showQuestionNumbers\",\n  default: \"off\",\n  choices: [\"on\", \"onPage\", \"recursive\", \"off\"]\n}, {\n  name: \"questionTitleLocation\",\n  default: \"top\",\n  choices: [\"top\", \"bottom\", \"left\"]\n}, {\n  name: \"questionDescriptionLocation\",\n  default: \"underTitle\",\n  choices: [\"underInput\", \"underTitle\"]\n}, {\n  name: \"questionErrorLocation\",\n  default: \"top\",\n  choices: [\"top\", \"bottom\"]\n}, {\n  name: \"showProgressBar:boolean\",\n  default: false,\n  onSetValue: (obj, value, jsonConv) => {\n    obj && obj.setShowProgressBar(value);\n  }\n}, {\n  name: \"progressBarLocation\",\n  default: \"auto\",\n  choices: [\"auto\", \"aboveheader\", \"belowheader\", \"bottom\", \"topbottom\"],\n  visibleIf: obj => {\n    return obj.showProgressBar;\n  }\n}, {\n  name: \"progressBarType\",\n  default: \"pages\",\n  choices: [\"pages\", \"questions\", \"requiredQuestions\", \"correctQuestions\"],\n  visibleIf: obj => {\n    return obj.showProgressBar;\n  }\n}, {\n  name: \"progressBarShowPageTitles:switch\",\n  category: \"navigation\",\n  visibleIf: obj => {\n    return obj.showProgressBar && obj.progressBarType === \"pages\";\n  }\n}, {\n  name: \"progressBarShowPageNumbers:switch\",\n  default: false,\n  category: \"navigation\",\n  visibleIf: obj => {\n    return obj.showProgressBar && obj.progressBarType === \"pages\";\n  }\n}, {\n  name: \"progressBarInheritWidthFrom\",\n  default: \"container\",\n  choices: [\"container\", \"survey\"],\n  category: \"navigation\",\n  visibleIf: obj => {\n    return obj.showProgressBar && obj.progressBarType === \"pages\";\n  }\n}, {\n  name: \"showTOC:switch\",\n  default: false\n}, {\n  name: \"tocLocation\",\n  default: \"left\",\n  choices: [\"left\", \"right\"],\n  dependsOn: [\"showTOC\"],\n  visibleIf: survey => {\n    return !!survey && survey.showTOC;\n  }\n}, {\n  name: \"readOnly:boolean\",\n  default: false\n}, {\n  name: \"mode\",\n  default: \"edit\",\n  choices: [\"edit\", \"display\"],\n  visible: false\n}, {\n  name: \"storeOthersAsComment:boolean\",\n  default: true\n}, {\n  name: \"maxTextLength:number\",\n  default: 0,\n  minValue: 0\n}, {\n  name: \"maxCommentLength:number\",\n  default: 0,\n  minValue: 0,\n  alternativeName: \"maxOthersLength\"\n}, {\n  name: \"autoAdvanceEnabled:boolean\",\n  alternativeName: \"goNextPageAutomatic\",\n  onSetValue: function (obj, value) {\n    if (value !== \"autogonext\") {\n      value = Helpers.isTwoValueEquals(value, true);\n    }\n    if (value === \"autogonext\") {\n      value = true;\n    }\n    obj.setPropertyValue(\"autoAdvanceEnabled\", value);\n  }\n}, {\n  name: \"autoAdvanceAllowComplete:boolean\",\n  default: true,\n  alternativeName: \"allowCompleteSurveyAutomatic\",\n  visibleIf: obj => obj.autoAdvanceEnabled === true\n}, {\n  name: \"clearInvisibleValues\",\n  default: \"onComplete\",\n  choices: [\"none\", \"onComplete\", \"onHidden\", \"onHiddenContainer\"]\n}, {\n  name: \"checkErrorsMode\",\n  default: \"onNextPage\",\n  choices: [\"onNextPage\", \"onValueChanged\", \"onComplete\"]\n}, {\n  name: \"validateVisitedEmptyFields:boolean\",\n  dependsOn: \"checkErrorsMode\",\n  visibleIf: obj => obj.checkErrorsMode === \"onValueChanged\"\n}, {\n  name: \"textUpdateMode\",\n  default: \"onBlur\",\n  choices: [\"onBlur\", \"onTyping\"]\n}, {\n  name: \"autoGrowComment:boolean\",\n  default: false\n}, {\n  name: \"allowResizeComment:boolean\",\n  default: true\n}, {\n  name: \"commentAreaRows:number\",\n  minValue: 1\n}, {\n  name: \"startSurveyText\",\n  serializationProperty: \"locStartSurveyText\",\n  visibleIf: obj => {\n    return obj.firstPageIsStartPage;\n  }\n}, {\n  name: \"pagePrevText\",\n  serializationProperty: \"locPagePrevText\",\n  visibleIf: obj => {\n    return obj.showNavigationButtons !== \"none\" && obj.showPrevButton;\n  }\n}, {\n  name: \"pageNextText\",\n  serializationProperty: \"locPageNextText\",\n  visibleIf: obj => {\n    return obj.showNavigationButtons !== \"none\";\n  }\n}, {\n  name: \"completeText\",\n  serializationProperty: \"locCompleteText\",\n  visibleIf: obj => {\n    return obj.showNavigationButtons !== \"none\";\n  }\n}, {\n  name: \"previewText\",\n  serializationProperty: \"locPreviewText\",\n  visibleIf: obj => {\n    return obj.showPreviewBeforeComplete;\n  }\n}, {\n  name: \"editText\",\n  serializationProperty: \"locEditText\",\n  visibleIf: obj => {\n    return obj.showPreviewBeforeComplete;\n  }\n}, {\n  name: \"requiredMark\",\n  default: \"*\",\n  alternativeName: \"requiredText\"\n}, {\n  name: \"questionStartIndex\",\n  dependsOn: [\"showQuestionNumbers\"],\n  visibleIf: survey => {\n    return !survey || survey.showQuestionNumbers !== \"off\";\n  }\n}, {\n  name: \"questionTitlePattern\",\n  default: \"numTitleRequire\",\n  dependsOn: [\"questionStartIndex\", \"requiredMark\"],\n  choices: obj => {\n    if (!obj) return [];\n    return obj.getQuestionTitlePatternOptions();\n  }\n}, {\n  name: \"questionTitleTemplate\",\n  visible: false,\n  isSerializable: false,\n  serializationProperty: \"locQuestionTitleTemplate\"\n}, {\n  name: \"firstPageIsStartPage:boolean\",\n  default: false,\n  alternativeName: \"firstPageIsStarted\"\n}, {\n  name: \"isSinglePage:boolean\",\n  default: false,\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"questionsOnPageMode\",\n  default: \"standard\",\n  choices: [\"standard\", \"singlePage\", \"questionPerPage\", \"inputPerPage\"]\n}, {\n  name: \"showPreviewBeforeComplete:boolean\",\n  default: false,\n  onSetValue: (obj, value, jsonConv) => {\n    obj && obj.setShowPreviewBeforeComplete(value);\n  }\n}, {\n  name: \"previewMode\",\n  default: \"allQuestions\",\n  choices: [\"allQuestions\", \"answeredQuestions\"],\n  visibleIf: obj => {\n    return obj.showPreviewBeforeComplete;\n  }\n}, {\n  name: \"showTimer:boolean\"\n}, {\n  name: \"timeLimit:number\",\n  alternativeName: \"maxTimeToFinish\",\n  default: 0,\n  minValue: 0,\n  enableIf: obj => obj.showTimer\n}, {\n  name: \"timeLimitPerPage:number\",\n  alternativeName: \"maxTimeToFinishPage\",\n  default: 0,\n  minValue: 0,\n  enableIf: obj => obj.showTimer\n}, {\n  name: \"timerLocation\",\n  default: \"top\",\n  choices: [\"top\", \"bottom\"],\n  enableIf: obj => obj.showTimer\n}, {\n  name: \"timerInfoMode\",\n  alternativeName: \"showTimerPanelMode\",\n  default: \"combined\",\n  choices: [\"page\", \"survey\", \"combined\"],\n  enableIf: obj => obj.showTimer\n}, {\n  name: \"showTimerPanel\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"widthMode\",\n  default: \"auto\",\n  choices: [\"auto\", \"static\", \"responsive\"]\n}, {\n  name: \"gridLayoutEnabled:boolean\",\n  default: false\n}, {\n  name: \"width\",\n  visibleIf: obj => {\n    return obj.widthMode === \"static\";\n  }\n}, {\n  name: \"fitToContainer:boolean\",\n  default: true,\n  visible: false\n}, {\n  name: \"headerView\",\n  default: \"basic\",\n  choices: [\"basic\", \"advanced\"],\n  visible: false\n}, {\n  name: \"backgroundImage:file\",\n  visible: false\n}, {\n  name: \"backgroundImageFit\",\n  default: \"cover\",\n  choices: [\"auto\", \"contain\", \"cover\"],\n  visible: false\n}, {\n  name: \"backgroundImageAttachment\",\n  default: \"scroll\",\n  choices: [\"scroll\", \"fixed\"],\n  visible: false\n}, {\n  name: \"backgroundOpacity:number\",\n  minValue: 0,\n  maxValue: 1,\n  default: 1,\n  visible: false\n}, {\n  name: \"showBrandInfo:boolean\",\n  default: false,\n  visible: false\n}]);\n\n/**\n * A base class for multiple-choice question types ([Checkboxes](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Dropdown](https://surveyjs.io/form-library/documentation/questiondropdownmodel), [Radio Button Group](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), etc.).\n */\nclass QuestionSelectBase extends Question {\n  get waitingChoicesByURL() {\n    return !this.isChoicesLoaded && this.hasChoicesUrl;\n  }\n  get selectedItemValues() {\n    return this.getPropertyValue(\"selectedItemValues\");\n  }\n  set selectedItemValues(val) {\n    this.setPropertyValue(\"selectedItemValues\", val);\n  }\n  constructor(name) {\n    super(name);\n    this.isSettingDefaultValue = false;\n    this.isSettingComment = false;\n    this.isRunningChoices = false;\n    this.isFirstLoadChoicesFromUrl = true;\n    this.isUpdatingChoicesDependedQuestions = false;\n    this._renderedChoices = [];\n    this.renderedChoicesAnimation = new AnimationGroup(this.getRenderedChoicesAnimationOptions(), val => {\n      this._renderedChoices = val;\n      this.renderedChoicesChangedCallback && this.renderedChoicesChangedCallback();\n    }, () => this._renderedChoices);\n    this.headItemsCount = 0;\n    this.footItemsCount = 0;\n    this.prevIsOtherSelected = false;\n    this.otherItemValue = this.createItemValue(\"other\");\n    this.noneItemValue = this.createNoneItem(settings.noneItemValue, \"noneText\", \"noneItemText\");\n    this.refuseItemValue = this.createNoneItem(settings.refuseItemValue, \"refuseText\", \"refuseItemText\");\n    this.dontKnowItemValue = this.createNoneItem(settings.dontKnowItemValue, \"dontKnowText\", \"dontKnowItemText\");\n    this.createItemValues(\"choices\");\n    this.registerPropertyChangedHandlers([\"choices\"], () => {\n      if (!this.filterItems()) {\n        this.onVisibleChoicesChanged();\n      }\n    });\n    this.createItemValues(\"customChoices\");\n    this.registerPropertyChangedHandlers([\"customChoices\"], () => {\n      this.onVisibleChoicesChanged();\n    });\n    this.registerPropertyChangedHandlers([\"choicesFromQuestion\", \"choicesFromQuestionMode\", \"choiceValuesFromQuestion\", \"choiceTextsFromQuestion\", \"showNoneItem\", \"showRefuseItem\", \"showDontKnowItem\", \"isUsingRestful\", \"isMessagePanelVisible\"], () => {\n      this.onVisibleChoicesChanged();\n    });\n    this.registerPropertyChangedHandlers([\"hideIfChoicesEmpty\"], () => {\n      this.onVisibleChanged();\n    });\n    this.registerPropertyChangedHandlers([\"selecteditemValues\"], newVal => {\n      this.onSelectedItemValuesChangedHandler(newVal);\n    });\n    this.createNewArray(\"visibleChoices\", () => this.updateRenderedChoices(), () => this.updateRenderedChoices());\n    this.setNewRestfulProperty();\n    var locOtherText = this.createLocalizableString(\"otherText\", this.otherItemValue, true, \"otherItemText\");\n    this.createLocalizableString(\"otherErrorText\", this, true, \"otherRequiredError\");\n    this.createLocalizableString(\"otherPlaceholder\", this, false, true);\n    this.otherItemValue.locOwner = this;\n    this.otherItemValue.setLocText(locOtherText);\n    this.choicesByUrl.createItemValue = value => {\n      return this.createItemValue(value);\n    };\n    this.choicesByUrl.beforeSendRequestCallback = () => {\n      this.onBeforeSendRequest();\n    };\n    this.choicesByUrl.getResultCallback = items => {\n      this.onLoadChoicesFromUrl(items);\n    };\n    this.choicesByUrl.updateResultCallback = (items, serverResult) => {\n      if (this.survey) {\n        return this.survey.updateChoicesFromServer(this, items, serverResult);\n      }\n      return items;\n    };\n  }\n  getType() {\n    return \"selectbase\";\n  }\n  dispose() {\n    super.dispose();\n    const q = this.getQuestionWithChoices();\n    if (!!q) {\n      q.removeDependedQuestion(this);\n    }\n  }\n  get otherTextAreaModel() {\n    if (!this.otherTextAreaModelValue) {\n      this.otherTextAreaModelValue = new TextAreaModel(this.getOtherTextAreaOptions());\n    }\n    return this.otherTextAreaModelValue;\n  }\n  getOtherTextAreaOptions() {\n    const options = {\n      question: this,\n      id: () => this.otherId,\n      propertyNames: [\"otherValue\", \"comment\"],\n      className: () => this.cssClasses.other,\n      placeholder: () => this.otherPlaceholder,\n      isDisabledAttr: () => this.isInputReadOnly || false,\n      rows: () => this.commentAreaRows,\n      maxLength: () => this.getOthersMaxLength(),\n      autoGrow: () => this.survey && this.survey.autoGrowComment,\n      ariaRequired: () => this.ariaRequired || this.a11y_input_ariaRequired,\n      ariaLabel: () => this.ariaLabel || this.a11y_input_ariaLabel,\n      getTextValue: () => {\n        return this.otherValue;\n      },\n      onTextAreaChange: e => {\n        this.onOtherValueChange(e);\n      },\n      onTextAreaInput: e => {\n        this.onOtherValueInput(e);\n      }\n    };\n    return options;\n  }\n  resetDependedQuestion() {\n    this.choicesFromQuestion = \"\";\n  }\n  get otherId() {\n    return this.id + \"_other\";\n  }\n  getCommentElementsId() {\n    return [this.commentId, this.otherId];\n  }\n  getItemValueType() {\n    return \"itemvalue\";\n  }\n  createItemValue(value, text) {\n    const res = Serializer.createClass(this.getItemValueType(), {\n      value: value\n    });\n    res.locOwner = this;\n    if (!!text) res.text = text;\n    return res;\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    if (!rec || rec.isOnValueChanged !== true) {\n      this.clearIncorrectValues();\n    }\n    return super.hasErrors(fireCallback, rec);\n  }\n  get isUsingCarryForward() {\n    return !!this.carryForwardQuestionType;\n  }\n  get carryForwardQuestionType() {\n    return this.getPropertyValue(\"carryForwardQuestionType\");\n  }\n  setCarryForwardQuestionType(selBaseQuestion, arrayQuestion) {\n    const mode = selBaseQuestion ? \"select\" : arrayQuestion ? \"array\" : undefined;\n    this.setPropertyValue(\"carryForwardQuestionType\", mode);\n  }\n  get isUsingRestful() {\n    return this.getPropertyValueWithoutDefault(\"isUsingRestful\") || false;\n  }\n  updateIsUsingRestful() {\n    this.setPropertyValueDirectly(\"isUsingRestful\", this.hasChoicesUrl);\n  }\n  supportGoNextPageError() {\n    return !this.isOtherSelected || !!this.otherValue;\n  }\n  isLayoutTypeSupported(layoutType) {\n    return true;\n  }\n  localeChanged() {\n    super.localeChanged();\n    if (this.choicesOrder !== \"none\") {\n      this.updateVisibleChoices();\n      this.onVisibleChoicesChanged();\n    }\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    if (!!this.choicesFromUrl) {\n      ItemValue.locStrsChanged(this.choicesFromUrl);\n      ItemValue.locStrsChanged(this.visibleChoices);\n    }\n    if (this.isUsingCarryForward) {\n      ItemValue.locStrsChanged(this.visibleChoices);\n    }\n  }\n  updatePrevOtherErrorValue(val) {\n    const oldVal = this.otherValue;\n    if (val !== oldVal) {\n      this.prevOtherErrorValue = oldVal;\n    }\n  }\n  get otherValue() {\n    if (!this.showCommentArea) return this.comment;\n    return this.otherValueCore;\n  }\n  set otherValue(val) {\n    this.updatePrevOtherErrorValue(val);\n    if (!this.showCommentArea) {\n      this.comment = val;\n    } else {\n      this.setOtherValueInternally(val);\n    }\n  }\n  get otherValueCore() {\n    return this.getPropertyValue(\"otherValue\");\n  }\n  set otherValueCore(val) {\n    this.setPropertyValue(\"otherValue\", val);\n  }\n  /**\n   * Returns the \"Other\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showOtherItem\n   */\n  get otherItem() {\n    return this.otherItemValue;\n  }\n  /**\n   * Returns `true` if the \"Other\" choice item is selected.\n   * @see showOtherItem\n   */\n  get isOtherSelected() {\n    return this.hasOther && this.getHasOther(this.renderedValue);\n  }\n  get isNoneSelected() {\n    return this.showNoneItem && this.getIsItemValue(this.renderedValue, this.noneItem);\n  }\n  /**\n   * Specifies whether to display the \"None\" choice item.\n   *\n   * When users select the \"None\" item in multi-select questions, all other items become unselected.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/ (linkStyle))\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   * @see noneItem\n   * @see noneText\n   * @see [settings.noneItemValue](https://surveyjs.io/form-library/documentation/api-reference/settings#noneItemValue)\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get showNoneItem() {\n    return this.getPropertyValue(\"showNoneItem\");\n  }\n  set showNoneItem(val) {\n    this.setPropertyValue(\"showNoneItem\", val);\n  }\n  get hasNone() {\n    return this.showNoneItem;\n  }\n  set hasNone(val) {\n    this.showNoneItem = val;\n  }\n  /**\n   * Returns the \"None\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showNoneItem\n   */\n  get noneItem() {\n    return this.noneItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"None\" choice item.\n   * @see showNoneItem\n   */\n  get noneText() {\n    return this.getLocalizableStringText(\"noneText\");\n  }\n  set noneText(val) {\n    this.setLocalizableStringText(\"noneText\", val);\n  }\n  get locNoneText() {\n    return this.getLocalizableString(\"noneText\");\n  }\n  /**\n   * Specifies whether to display the \"Refuse to answer\" choice item.\n   *\n   * When users select the \"Refuse to answer\" item in multi-select questions, all other items become unselected.\n   * @see refuseItem\n   * @see refuseItemText\n   * @see [settings.refuseItemValue](https://surveyjs.io/form-library/documentation/api-reference/settings#refuseItemValue)\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get showRefuseItem() {\n    return this.getPropertyValue(\"showRefuseItem\");\n  }\n  set showRefuseItem(val) {\n    this.setPropertyValue(\"showRefuseItem\", val);\n  }\n  /**\n   * Returns the \"Refuse to answer\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showRefuseItem\n   */\n  get refuseItem() {\n    return this.refuseItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"Refuse to answer\" choice item.\n   * @see showRefuseItem\n   */\n  get refuseText() {\n    return this.getLocalizableStringText(\"refuseText\");\n  }\n  set refuseText(val) {\n    this.setLocalizableStringText(\"refuseText\", val);\n  }\n  get locRefuseText() {\n    return this.getLocalizableString(\"refuseText\");\n  }\n  /**\n   * Specifies whether to display the \"Don't know\" choice item.\n   *\n   * When users select the \"Don't know\" item in multi-select questions, all other items become unselected.\n   * @see dontKnowItem\n   * @see dontKnowItemText\n   * @see [settings.dontKnowItemValue](https://surveyjs.io/form-library/documentation/api-reference/settings#dontKnowItemValue)\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get showDontKnowItem() {\n    return this.getPropertyValue(\"showDontKnowItem\");\n  }\n  set showDontKnowItem(val) {\n    this.setPropertyValue(\"showDontKnowItem\", val);\n  }\n  /**\n   * Returns the \"Don't know\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showDontKnowItem\n   */\n  get dontKnowItem() {\n    return this.dontKnowItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"Don't know\" choice item.\n   * @see showDontKnowItem\n   */\n  get dontKnowText() {\n    return this.getLocalizableStringText(\"dontKnowText\");\n  }\n  set dontKnowText(val) {\n    this.setLocalizableStringText(\"dontKnowText\", val);\n  }\n  get locDontKnowText() {\n    return this.getLocalizableString(\"dontKnowText\");\n  }\n  createNoneItem(defaultValue, name, locName) {\n    const item = this.createItemValue(defaultValue);\n    item.isExclusive = true;\n    const locStr = this.createLocalizableString(name, item, true, locName);\n    item.locOwner = this;\n    item.setLocText(locStr);\n    return item;\n  }\n  /**\n   * A Boolean expression that is evaluated against each choice item. If the expression evaluates to `false`, the choice item becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current choice item in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see choicesEnableIf\n   */\n  get choicesVisibleIf() {\n    return this.getPropertyValue(\"choicesVisibleIf\", \"\");\n  }\n  set choicesVisibleIf(val) {\n    this.setPropertyValue(\"choicesVisibleIf\", val);\n    this.filterItems();\n  }\n  /**\n   * A Boolean expression that is evaluated against each choice item. If the expression evaluates to `false`, the choice item becomes read-only.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{item}` placeholder to reference the current choice item in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey-conditional-logic#conditional-visibility).\n   * @see enableIf\n   * @see choicesVisibleIf\n   */\n  get choicesEnableIf() {\n    return this.getPropertyValue(\"choicesEnableIf\", \"\");\n  }\n  set choicesEnableIf(val) {\n    this.setPropertyValue(\"choicesEnableIf\", val);\n    this.filterItems();\n  }\n  surveyChoiceItemVisibilityChange() {\n    this.filterItems();\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    this.runItemsEnableCondition(values, properties);\n    this.runItemsCondition(values, properties);\n    this.choices.forEach(item => {\n      item.runConditionCore(values, properties);\n    });\n  }\n  isTextValue() {\n    return true; //for comments and others\n  }\n  setDefaultValue() {\n    this.isSettingDefaultValue = !this.isValueEmpty(this.defaultValue) && this.hasUnknownValue(this.defaultValue);\n    this.prevOtherValue = undefined;\n    const prevComment = this.comment;\n    super.setDefaultValue();\n    this.isSettingDefaultValue = false;\n    if (this.comment && this.getStoreOthersAsComment() && prevComment !== this.comment) {\n      this.setValueCore(this.setOtherValueIntoValue(this.value));\n      this.setCommentIntoData(this.comment);\n    }\n  }\n  getIsMultipleValue() {\n    return false;\n  }\n  convertDefaultValue(val) {\n    if (val == null || val == undefined) return val;\n    if (this.getIsMultipleValue()) {\n      if (!Array.isArray(val)) return [val];\n    } else {\n      if (Array.isArray(val) && val.length > 0) return val[0];\n    }\n    return val;\n  }\n  filterItems() {\n    if (this.isLoadingFromJson || !this.data || this.areInvisibleElementsShowing) return false;\n    var values = this.getDataFilteredValues();\n    var properties = this.getDataFilteredProperties();\n    this.runItemsEnableCondition(values, properties);\n    return this.runItemsCondition(values, properties);\n  }\n  runItemsCondition(values, properties) {\n    this.setConditionalChoicesRunner();\n    var hasChanges = this.runConditionsForItems(values, properties);\n    if (!!this.filteredChoicesValue && this.filteredChoicesValue.length === this.activeChoices.length) {\n      this.filteredChoicesValue = undefined;\n    }\n    if (hasChanges) {\n      this.onVisibleChoicesChanged();\n      this.clearIncorrectValues();\n    }\n    return hasChanges;\n  }\n  runItemsEnableCondition(values, properties) {\n    this.setConditionalEnableChoicesRunner();\n    var hasChanged = ItemValue.runEnabledConditionsForItems(this.activeChoices, this.conditionChoicesEnableIfRunner, values, properties, (item, val) => {\n      return val && this.onEnableItemCallBack(item);\n    });\n    if (hasChanged) {\n      this.clearDisabledValues();\n    }\n    this.onAfterRunItemsEnableCondition();\n  }\n  onAfterRunItemsEnableCondition() {}\n  onEnableItemCallBack(item) {\n    return true;\n  }\n  onSelectedItemValuesChangedHandler(newValue) {\n    var _a;\n    (_a = this.survey) === null || _a === void 0 ? void 0 : _a.loadedChoicesFromServer(this);\n  }\n  getItemIfChoicesNotContainThisValue(value, text) {\n    if (this.waitingChoicesByURL) {\n      return this.createItemValue(value, text);\n    } else {\n      return null;\n    }\n  }\n  getSingleSelectedItem() {\n    const selectedItemValues = this.selectedItemValues;\n    if (this.isEmpty()) return null;\n    const itemValue = ItemValue.getItemByValue(this.visibleChoices, this.value);\n    this.onGetSingleSelectedItem(itemValue);\n    if (!itemValue && (!selectedItemValues || this.value != selectedItemValues.id)) {\n      this.updateSelectedItemValues();\n    }\n    return itemValue || selectedItemValues || (this.isOtherSelected ? this.otherItem : this.getItemIfChoicesNotContainThisValue(this.value));\n  }\n  onGetSingleSelectedItem(selectedItemByValue) {}\n  getMultipleSelectedItems() {\n    return [];\n  }\n  setConditionalChoicesRunner() {\n    if (this.choicesVisibleIf) {\n      if (!this.conditionChoicesVisibleIfRunner) {\n        this.conditionChoicesVisibleIfRunner = new ConditionRunner(this.choicesVisibleIf);\n      }\n      this.conditionChoicesVisibleIfRunner.expression = this.choicesVisibleIf;\n    } else {\n      this.conditionChoicesVisibleIfRunner = null;\n    }\n  }\n  setConditionalEnableChoicesRunner() {\n    if (this.choicesEnableIf) {\n      if (!this.conditionChoicesEnableIfRunner) {\n        this.conditionChoicesEnableIfRunner = new ConditionRunner(this.choicesEnableIf);\n      }\n      this.conditionChoicesEnableIfRunner.expression = this.choicesEnableIf;\n    } else {\n      this.conditionChoicesEnableIfRunner = null;\n    }\n  }\n  canSurveyChangeItemVisibility() {\n    return !!this.survey && this.survey.canChangeChoiceItemsVisibility();\n  }\n  changeItemVisibility() {\n    return this.canSurveyChangeItemVisibility() ? (item, val) => this.survey.getChoiceItemVisibility(this, item, val) : null;\n  }\n  runConditionsForItems(values, properties) {\n    this.filteredChoicesValue = [];\n    const calcVisibility = this.changeItemVisibility();\n    return ItemValue.runConditionsForItems(this.activeChoices, this.getFilteredChoices(), this.areInvisibleElementsShowing ? null : this.conditionChoicesVisibleIfRunner, values, properties, !this.survey || !this.survey.areInvisibleElementsShowing, (item, val) => {\n      return !!calcVisibility ? calcVisibility(item, val) : val;\n    });\n  }\n  getHasOther(val) {\n    return this.getIsItemValue(val, this.otherItem);\n  }\n  getIsItemValue(val, item) {\n    return val === item.value;\n  }\n  get validatedValue() {\n    return this.rendredValueToDataCore(this.value);\n  }\n  createRestful() {\n    return new ChoicesRestful();\n  }\n  setNewRestfulProperty() {\n    this.setPropertyValue(\"choicesByUrl\", this.createRestful());\n    this.choicesByUrl.owner = this;\n    this.choicesByUrl.loadingOwner = this;\n  }\n  get autoOtherMode() {\n    return this.getPropertyValue(\"autoOtherMode\");\n  }\n  set autoOtherMode(val) {\n    this.setPropertyValue(\"autoOtherMode\", val);\n  }\n  getQuestionComment() {\n    if (this.showCommentArea) return super.getQuestionComment();\n    if (!!this.otherValueCore) return this.otherValueCore;\n    if (this.hasComment || this.getStoreOthersAsComment()) return super.getQuestionComment();\n    return this.otherValueCore;\n  }\n  selectOtherValueFromComment(val) {\n    if (val) {\n      this.prevIsOtherSelected = true;\n    }\n    this.value = val ? this.otherItem.value : undefined;\n  }\n  setQuestionComment(newValue) {\n    this.updatePrevOtherErrorValue(newValue);\n    if (this.showCommentArea) {\n      super.setQuestionComment(newValue);\n      return;\n    }\n    this.onUpdateCommentOnAutoOtherMode(newValue);\n    if (this.getStoreOthersAsComment()) super.setQuestionComment(newValue);else {\n      this.setOtherValueInternally(newValue);\n    }\n    this.updateChoicesDependedQuestions();\n  }\n  onUpdateCommentOnAutoOtherMode(newValue) {\n    if (!this.autoOtherMode) return;\n    this.prevOtherValue = undefined;\n    const isSelected = this.isOtherSelected;\n    if (!isSelected && !!newValue || isSelected && !newValue) {\n      this.selectOtherValueFromComment(!!newValue);\n    }\n  }\n  setOtherValueInternally(newValue) {\n    if (!this.isSettingComment && newValue != this.otherValueCore) {\n      this.isSettingComment = true;\n      this.otherValueCore = newValue;\n      if (this.isOtherSelected && !this.isRenderedValueSetting) {\n        this.value = this.getValueOnSettingOther(newValue);\n      }\n      this.isSettingComment = false;\n    }\n  }\n  getValueOnSettingOther(otherValue) {\n    const val = this.rendredValueToData(this.renderedValue);\n    if (this.showCommentArea || this.getStoreOthersAsComment()) return val;\n    const item = ItemValue.getItemByValue(this.visibleChoices, otherValue);\n    if (!item || item === this.otherItem) return val;\n    this.otherValueCore = \"\";\n    if (!Array.isArray(val)) return otherValue;\n    const index = val.indexOf(this.otherItem.value);\n    if (index > -1) {\n      val.splice(index, 1);\n    }\n    if (val.indexOf(otherValue) < 0) {\n      val.push(otherValue);\n    }\n    return val;\n  }\n  clearValue(keepComment) {\n    super.clearValue(keepComment);\n    this.prevOtherValue = undefined;\n    this.selectedItemValues = undefined;\n  }\n  updateCommentFromSurvey(newValue) {\n    super.updateCommentFromSurvey(newValue);\n    this.prevOtherValue = undefined;\n  }\n  get renderedValue() {\n    return this.getPropertyValue(\"renderedValue\", null);\n  }\n  set renderedValue(val) {\n    if (this.isReadOnlyAttr) return;\n    this.setPropertyValue(\"renderedValue\", val);\n    var val = this.rendredValueToData(val);\n    if (!this.isTwoValueEquals(val, this.value)) {\n      this.value = val;\n    }\n  }\n  setQuestionValue(newValue, updateIsAnswered = true, updateComment = true) {\n    if (this.isLoadingFromJson || this.isTwoValueEquals(this.value, newValue)) return;\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.setPropertyValue(\"renderedValue\", this.rendredValueFromData(newValue));\n    this.updateChoicesDependedQuestions();\n    if (this.hasComment || !updateComment) return;\n    var isOtherSel = this.isOtherSelected;\n    if (isOtherSel && !!this.prevOtherValue) {\n      var oldOtherValue = this.prevOtherValue;\n      this.prevOtherValue = undefined;\n      this.otherValue = oldOtherValue;\n    }\n    if (!isOtherSel && !!this.otherValue) {\n      if (this.getStoreOthersAsComment() && !this.autoOtherMode) {\n        this.prevOtherValue = this.otherValue;\n      }\n      this.makeCommentEmpty = true;\n      this.otherValueCore = \"\";\n      this.setPropertyValue(\"comment\", \"\");\n    }\n  }\n  setValueCore(newValue) {\n    super.setValueCore(newValue);\n    if (this.makeCommentEmpty) {\n      this.setCommentIntoData(\"\");\n      this.makeCommentEmpty = false;\n    }\n  }\n  setNewValue(newValue) {\n    newValue = this.valueFromData(newValue);\n    if (!this.choicesByUrl.isRunning && !this.choicesByUrl.isWaitingForParameters || !this.isValueEmpty(newValue)) {\n      this.cachedValueForUrlRequests = newValue;\n    }\n    super.setNewValue(newValue);\n  }\n  valueFromData(val) {\n    let choiceitem = ItemValue.getItemByValue(this.activeChoices, val);\n    if (!!choiceitem) {\n      return choiceitem.value;\n    }\n    return super.valueFromData(val);\n  }\n  rendredValueFromData(val) {\n    if (this.getStoreOthersAsComment()) return val;\n    return this.renderedValueFromDataCore(val);\n  }\n  rendredValueToData(val) {\n    if (this.getStoreOthersAsComment()) return val;\n    return this.rendredValueToDataCore(val);\n  }\n  renderedValueFromDataCore(val) {\n    if (!this.hasUnknownValue(val, true, false)) return this.valueFromData(val);\n    this.otherValue = val;\n    return this.otherItem.value;\n  }\n  rendredValueToDataCore(val) {\n    if (val == this.otherItem.value && this.needConvertRenderedOtherToDataValue()) {\n      val = this.otherValue;\n    }\n    return val;\n  }\n  needConvertRenderedOtherToDataValue() {\n    let val = this.otherValue;\n    if (!val) return false;\n    val = val.trim();\n    if (!val) return false;\n    return this.hasUnknownValue(val, true, false);\n  }\n  getIsQuestionReady() {\n    return super.getIsQuestionReady() && !this.waitingChoicesByURL && !this.waitingGetChoiceDisplayValueResponse;\n  }\n  updateSelectedItemValues() {\n    if (this.waitingGetChoiceDisplayValueResponse || !this.survey || this.isEmpty()) return;\n    const value = this.value;\n    const valueArray = Array.isArray(value) ? value : [value];\n    const hasItemWithoutValues = valueArray.some(val => !ItemValue.getItemByValue(this.choices, val));\n    if (hasItemWithoutValues && (this.choicesLazyLoadEnabled || this.hasChoicesUrl)) {\n      this.waitingGetChoiceDisplayValueResponse = true;\n      this.updateIsReady();\n      this.survey.getChoiceDisplayValue({\n        question: this,\n        values: valueArray,\n        setItems: (displayValues, ...customValues) => {\n          this.waitingGetChoiceDisplayValueResponse = false;\n          if (!displayValues || !displayValues.length) {\n            this.updateIsReady();\n            return;\n          }\n          const items = displayValues.map((displayValue, index) => this.createItemValue(valueArray[index], displayValue));\n          this.setCustomValuesIntoItems(items, customValues);\n          if (Array.isArray(value)) {\n            this.selectedItemValues = items;\n          } else {\n            this.selectedItemValues = items[0];\n          }\n          this.updateIsReady();\n        }\n      });\n    }\n  }\n  setCustomValuesIntoItems(items, customValues) {\n    if (!Array.isArray(customValues) || customValues.length === 0) return;\n    customValues.forEach(customValue => {\n      const vals = customValue.values;\n      const propName = customValue.propertyName;\n      if (Array.isArray(vals)) {\n        for (let i = 0; i < items.length && i < vals.length; i++) {\n          items[i][propName] = vals[i];\n        }\n      }\n    });\n  }\n  hasUnknownValue(val, includeOther = false, isFilteredChoices = true, checkEmptyValue = false) {\n    if (!Array.isArray(val)) return this.hasUnknownValueItem(val, includeOther, isFilteredChoices, checkEmptyValue);\n    for (let i = 0; i < val.length; i++) {\n      if (this.hasUnknownValueItem(val, includeOther, isFilteredChoices, checkEmptyValue)) return true;\n    }\n    return false;\n  }\n  hasUnknownValueItem(val, includeOther = false, isFilteredChoices = true, checkEmptyValue = false) {\n    if (!checkEmptyValue && this.isValueEmpty(val)) return false;\n    if (includeOther && val == this.otherItem.value) return false;\n    if (this.showNoneItem && val == this.noneItem.value) return false;\n    if (this.showRefuseItem && val == this.refuseItem.value) return false;\n    if (this.showDontKnowItem && val == this.dontKnowItem.value) return false;\n    var choices = isFilteredChoices ? this.getFilteredChoices() : this.activeChoices;\n    return ItemValue.getItemByValue(choices, val) == null;\n  }\n  isValueDisabled(val) {\n    var itemValue = ItemValue.getItemByValue(this.getFilteredChoices(), val);\n    return !!itemValue && !itemValue.isEnabled;\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.updateVisibleChoices();\n  }\n  /**\n   * An array of choice items that were added by a user. Applies only if the [`allowCustomChoices`](#allowCustomChoices) is set to `true` for this question.\n   *\n   * > Custom choices will only be stored temporarily for the duration of the current browser session. If you want to save them in a database or another data storage, handle the [`onCreateCustomChoiceItem`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onCreateCustomChoiceItem) event.\n   * @hidefor QuestionImagePickerModel, QuestionRadiogroupModel, QuestionRankingModel, QuestionCheckboxModel\n   */\n  get customChoices() {\n    return this.getPropertyValue(\"customChoices\");\n  }\n  set customChoices(val) {\n    this.setPropertyValue(\"customChoices\", val);\n  }\n  /**\n   * Configures access to a RESTful service that returns choice items. Refer to the [`ChoicesRestful`](https://surveyjs.io/form-library/documentation/choicesrestful) class description for more information. You can also specify additional application-wide settings using the [`settings.web`](https://surveyjs.io/form-library/documentation/api-reference/settings#web) object.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/dropdown-menu-load-data-from-restful-service/ (linkStyle))\n   * @see choices\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get choicesByUrl() {\n    return this.getPropertyValue(\"choicesByUrl\");\n  }\n  set choicesByUrl(val) {\n    if (!val) return;\n    this.setNewRestfulProperty();\n    this.choicesByUrl.fromJSON(val.toJSON());\n  }\n  /**\n   * Gets or sets choice items. This property accepts an array of objects with the following structure:\n   *\n   * ```js\n   * {\n   *   \"value\": any, // A unique value to be saved in the survey results.\n   *   \"text\": String, // A display text. This property supports Markdown. When `text` is undefined, `value` is used.\n   *   \"imageLink\": String // A link to the image or video that represents this choice value. Applies only to Image Picker questions.\n   *   \"customProperty\": any // Any property that you find useful.\n   * }\n   * ```\n   *\n   * To enable Markdown support for the `text` property, implement Markdown-to-HTML conversion in the [`onTextMarkdown`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * If you add custom properties, refer to the following help topic to learn how to serialize them into JSON: [Add Custom Properties to Property Grid](https://surveyjs.io/survey-creator/documentation/property-grid#add-custom-properties-to-the-property-grid).\n   *\n   * If you need to specify only the `value` property, you can set the `choices` property to an array of primitive values, for example, `[ \"item1\", \"item2\", \"item3\" ]`. These values are both saved in survey results and used as display text.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/ (linkStyle))\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/add-ranking-question-to-form/ (linkStyle))\n   *\n   * [Image Picker Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n   *\n   * [Conditionally Display Choice Options](https://surveyjs.io/form-library/examples/how-to-conditionally-display-choice-options/ (linkStyle))\n   * @see choicesByUrl\n   * @see choicesFromQuestion\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get choices() {\n    return this.getPropertyValue(\"choices\");\n  }\n  set choices(newValue) {\n    this.setPropertyValue(\"choices\", newValue);\n  }\n  /**\n   * Copies choice items from a specified question. Accepts a question name.\n   *\n   * If you specify this property, the [`choices`](#choices), [`choicesVisibleIf`](#choicesVisibleIf), [`choicesEnableIf`](#choicesEnableIf), and [`choicesOrder`](#choicesEnableIf) properties do not apply because their values are copied.\n   *\n   * In addition, you can specify the [`choicesFromQuestionMode`](#choicesFromQuestionMode) property if you do not want to copy all choice items.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/carry-forward-responses/ (linkStyle))\n   */\n  get choicesFromQuestion() {\n    return this.getPropertyValue(\"choicesFromQuestion\");\n  }\n  set choicesFromQuestion(val) {\n    var question = this.getQuestionWithChoices();\n    this.isLockVisibleChoices = !!question && question.name === val;\n    if (!!question && question.name !== val) {\n      question.removeDependedQuestion(this);\n      if (this.isInDesignMode && !this.isLoadingFromJson && !!val) {\n        this.setPropertyValue(\"choicesFromQuestion\", undefined);\n      }\n    }\n    this.setPropertyValue(\"choicesFromQuestion\", val);\n    this.isLockVisibleChoices = false;\n  }\n  /**\n   * Specifies which choice items to copy from another question. Applies only when the [`choicesFromQuestion`](#choicesFromQuestion) property is specified.\n   *\n   * Possible values:\n   *\n   * - `\"all\"` (default) - Copies all choice items.\n   * - `\"selected\"` - Copies only selected choice items.\n   * - `\"unselected\"` - Copies only unselected choice items.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/carry-forward-responses/ (linkStyle))\n   *\n   * > Use the [`visibleChoices`](#visibleChoices) property to access copied choice items in code.\n   */\n  get choicesFromQuestionMode() {\n    return this.getPropertyValue(\"choicesFromQuestionMode\");\n  }\n  set choicesFromQuestionMode(val) {\n    this.setPropertyValue(\"choicesFromQuestionMode\", val);\n  }\n  /**\n   * Specifies which matrix column or dynamic panel question supplies choice values. Use this property to construct choice items based on cell values in Dynamic Matrix and question values in Dynamic Panel.\n   *\n   * Each choice item consists of a value saved in survey results and a text displayed in the UI. To construct a choice item, assign the `name` of a Dynamic Matrix or Dynamic Panel to the [`choicesFromQuestion`](#choicesFromQuestion) property and specify which dynamic panel question or matrix column supplies values and which provides texts. Use the `choiceValuesFromQuestion` and [`choiceTextsFromQuestion`](#choiceTextsFromQuestion) properties for this purpose. If a choice text is empty, a choice value is used as a display text and saved in survey results.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/pipe-answers-from-dynamic-matrix-or-panel/ (linkStyle))\n   */\n  get choiceValuesFromQuestion() {\n    return this.getPropertyValue(\"choiceValuesFromQuestion\");\n  }\n  set choiceValuesFromQuestion(val) {\n    this.setPropertyValue(\"choiceValuesFromQuestion\", val);\n  }\n  /**\n   * Specifies which matrix column or dynamic panel question supplies choice texts. Use this property to construct choice items based on cell values in Dynamic Matrix and question values in Dynamic Panel.\n   *\n   * Each choice item consists of a value saved in survey results and a text displayed in the UI. To construct a choice item, assign the `name` of a Dynamic Matrix or Dynamic Panel to the [`choicesFromQuestion`](#choicesFromQuestion) property and specify which dynamic panel question or matrix column supplies values and which provides texts. Use the [`choiceValuesFromQuestion`](#choiceValuesFromQuestion) and `choiceTextsFromQuestion` properties for this purpose. If a choice text is empty, a choice value is used as a display text and saved in survey results.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/pipe-answers-from-dynamic-matrix-or-panel/ (linkStyle))\n   */\n  get choiceTextsFromQuestion() {\n    return this.getPropertyValue(\"choiceTextsFromQuestion\");\n  }\n  set choiceTextsFromQuestion(val) {\n    this.setPropertyValue(\"choiceTextsFromQuestion\", val);\n  }\n  /**\n   * Specifies whether to hide the question if no choice items are visible.\n   *\n   * This property is useful if you show or hide choice items at runtime based on a [condition](https://surveyjs.io/form-library/documentation/questionselectbase#choicesVisibleIf).\n   */\n  get hideIfChoicesEmpty() {\n    return this.getPropertyValue(\"hideIfChoicesEmpty\");\n  }\n  set hideIfChoicesEmpty(val) {\n    this.setPropertyValue(\"hideIfChoicesEmpty\", val);\n  }\n  /**\n   * Specifies whether to keep values that cannot be assigned to this question, for example, choices unlisted in the `choices` array.\n   *\n   * > This property cannot be specified in the survey JSON schema. Use dot notation to specify it.\n   * @see clearIncorrectValues\n   */\n  get keepIncorrectValues() {\n    return this.getPropertyValue(\"keepIncorrectValues\", false);\n  }\n  set keepIncorrectValues(val) {\n    this.setPropertyValue(\"keepIncorrectValues\", val);\n  }\n  get storeOthersAsComment() {\n    return this.getPropertyValue(\"storeOthersAsComment\");\n  }\n  set storeOthersAsComment(val) {\n    this.setPropertyValue(\"storeOthersAsComment\", val);\n  }\n  /**\n   * Specifies the sort order of choice items.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default) - Preserves the original order of choice items.\n   * - `\"asc\"`- Sorts choice items in ascending order.\n   * - `\"desc\"`- Sorts choice items in ascending order.\n   * - `\"random\"` - Displays choice items in random order.\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get choicesOrder() {\n    return this.getPropertyValue(\"choicesOrder\");\n  }\n  set choicesOrder(val) {\n    val = val.toLowerCase();\n    if (val == this.choicesOrder) return;\n    this.setPropertyValue(\"choicesOrder\", val);\n    this.onVisibleChoicesChanged();\n  }\n  /**\n   * Gets or sets a caption for the \"Other\" choice item.\n   * @see showOtherItem\n   */\n  get otherText() {\n    return this.getLocalizableStringText(\"otherText\");\n  }\n  set otherText(val) {\n    this.setLocalizableStringText(\"otherText\", val);\n    this.onVisibleChoicesChanged();\n  }\n  get locOtherText() {\n    return this.getLocalizableString(\"otherText\");\n  }\n  /**\n   * Displays the \"Select All\", \"None\", and \"Other\" choices on individual rows.\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   * @see showNoneItem\n   * @see showOtherItem\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get separateSpecialChoices() {\n    return this.getPropertyValue(\"separateSpecialChoices\");\n  }\n  set separateSpecialChoices(val) {\n    this.setPropertyValue(\"separateSpecialChoices\", val);\n  }\n  /**\n   * A placeholder for the comment area. Applies when the `showOtherItem` or `showCommentArea` property is `true`.\n   * @see showOtherItem\n   * @see showCommentArea\n   */\n  get otherPlaceholder() {\n    return this.getLocalizableStringText(\"otherPlaceholder\");\n  }\n  set otherPlaceholder(val) {\n    this.setLocalizableStringText(\"otherPlaceholder\", val);\n  }\n  get locOtherPlaceholder() {\n    return this.getLocalizableString(\"otherPlaceholder\");\n  }\n  get otherPlaceHolder() {\n    return this.otherPlaceholder;\n  }\n  set otherPlaceHolder(newValue) {\n    this.otherPlaceholder = newValue;\n  }\n  /**\n   * Gets or sets an error message displayed when users select the \"Other\" choice item but leave the comment area empty.\n   * @see showOtherItem\n   */\n  get otherErrorText() {\n    return this.getLocalizableStringText(\"otherErrorText\");\n  }\n  set otherErrorText(val) {\n    this.setLocalizableStringText(\"otherErrorText\", val);\n  }\n  get locOtherErrorText() {\n    return this.getLocalizableString(\"otherErrorText\");\n  }\n  /**\n   * An array of visible choice items. Includes the \"Select All\", \"Other\", and \"None\" choice items if they are visible. Items are sorted according to the `choicesOrder` value.\n   * @see showNoneItem\n   * @see showOtherItem\n   * @see choicesOrder\n   * @see choices\n   * @see enabledChoices\n   */\n  get visibleChoices() {\n    return this.getPropertyValue(\"visibleChoices\");\n  }\n  /**\n   * An array of choice items with which users can interact. Includes the \"Select All\", \"Other\", and \"None\" choice items if they are not disabled. Items are sorted according to the `choicesOrder` value.\n   * @see showNoneItem\n   * @see showOtherItem\n   * @see choicesOrder\n   * @see choices\n   * @see visibleChoices\n   */\n  get enabledChoices() {\n    var res = [];\n    var items = this.visibleChoices;\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].isEnabled) res.push(items[i]);\n    }\n    return res;\n  }\n  updateVisibleChoices() {\n    if (this.isLoadingFromJson || this.isDisposed) return;\n    var calcValue = this.calcVisibleChoices();\n    var newValue = new Array();\n    (calcValue || []).forEach(choice => newValue.push(choice));\n    const oldValue = this.visibleChoices;\n    if (!this.isTwoValueEquals(oldValue, newValue) || this.choicesLazyLoadEnabled) {\n      this.setArrayPropertyDirectly(\"visibleChoices\", newValue);\n      this.updateRenderedChoices();\n    }\n  }\n  calcVisibleChoices() {\n    let res = new Array();\n    this.customChoices.forEach(choice => res.push(choice));\n    this.getFilteredChoices().forEach(choice => res.push(choice));\n    res = this.sortArrayByChoicesOrder(res);\n    this.addToVisibleChoices(res, this.isAddDefaultItems);\n    return res;\n  }\n  setCanShowOptionItemCallback(func) {\n    this.canShowOptionItemCallback = func;\n    if (!!func) {\n      this.onVisibleChoicesChanged();\n    }\n  }\n  get newItem() {\n    return this.newItemValue;\n  }\n  addToVisibleChoices(items, isAddAll) {\n    this.headItemsCount = 0;\n    this.footItemsCount = 0;\n    if (!this.isEmptyActiveChoicesInDesign) {\n      this.addNewItemToVisibleChoices(items, isAddAll);\n    }\n    const dict = new Array();\n    this.addNonChoicesItems(dict, isAddAll);\n    dict.sort((a, b) => {\n      if (a.index === b.index) return 0;\n      return a.index < b.index ? -1 : 1;\n    });\n    for (let i = 0; i < dict.length; i++) {\n      const rec = dict[i];\n      if (rec.index < 0) {\n        items.splice(i, 0, rec.item);\n        this.headItemsCount++;\n      } else {\n        items.push(rec.item);\n        this.footItemsCount++;\n      }\n    }\n  }\n  addNewItemToVisibleChoices(items, isAddAll) {\n    if (!isAddAll) return;\n    if (!this.newItemValue) {\n      this.newItemValue = this.createItemValue(\"newitem\"); //TODO\n      this.newItemValue.isGhost = true;\n      this.newItemValue.registerFunctionOnPropertyValueChanged(\"isVisible\", () => {\n        this.updateVisibleChoices();\n      });\n    }\n    if (this.newItemValue.isVisible && !this.isUsingCarryForward && this.canShowOptionItem(this.newItemValue, isAddAll, false)) {\n      this.footItemsCount = 1;\n      items.push(this.newItemValue);\n    }\n  }\n  addNonChoicesItems(dict, isAddAll) {\n    if (this.supportNone()) {\n      this.addNonChoiceItem(dict, this.noneItem, isAddAll, this.showNoneItem, settings.specialChoicesOrder.noneItem);\n    }\n    if (this.supportRefuse()) {\n      this.addNonChoiceItem(dict, this.refuseItem, isAddAll, this.showRefuseItem, settings.specialChoicesOrder.refuseItem);\n    }\n    if (this.supportDontKnow()) {\n      this.addNonChoiceItem(dict, this.dontKnowItem, isAddAll, this.showDontKnowItem, settings.specialChoicesOrder.dontKnowItem);\n    }\n    if (this.supportOther()) {\n      this.addNonChoiceItem(dict, this.otherItem, isAddAll, this.hasOther, settings.specialChoicesOrder.otherItem);\n    }\n  }\n  addNonChoiceItem(dict, item, isAddAll, showItem, order) {\n    if (this.canShowOptionItem(item, isAddAll, showItem)) {\n      order.forEach(val => dict.push({\n        index: val,\n        item: item\n      }));\n    }\n  }\n  canShowOptionItem(item, isAddAll, hasItem) {\n    let res = isAddAll && (!!this.canShowOptionItemCallback ? this.canShowOptionItemCallback(item) : true) || hasItem;\n    if (this.canSurveyChangeItemVisibility()) {\n      const calc = this.changeItemVisibility();\n      return calc(item, res);\n    }\n    return res;\n  }\n  isItemInList(item) {\n    if (item === this.otherItem) return this.hasOther;\n    if (item === this.noneItem) return this.showNoneItem;\n    if (item === this.refuseItem) return this.showRefuseItem;\n    if (item === this.dontKnowItem) return this.showDontKnowItem;\n    if (item === this.newItemValue) return false;\n    return true;\n  }\n  get isAddDefaultItems() {\n    return settings.showDefaultItemsInCreator && this.isInDesignMode && !this.customWidget;\n  }\n  getPlainData(options = {\n    includeEmpty: true,\n    includeQuestionTypes: false\n  }) {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      var values = Array.isArray(this.value) ? this.value : [this.value];\n      questionPlainData.isNode = true;\n      questionPlainData.data = (questionPlainData.data || []).concat(values.map((dataValue, index) => {\n        var choice = ItemValue.getItemByValue(this.visibleChoices, dataValue);\n        var choiceDataItem = {\n          name: index,\n          title: this.getLocalizationString(\"choices_Choice\"),\n          value: dataValue,\n          displayValue: this.getChoicesDisplayValue(this.visibleChoices, dataValue),\n          getString: val => typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: false\n        };\n        if (!!choice) {\n          (options.calculations || []).forEach(calculation => {\n            choiceDataItem[calculation.propertyName] = choice[calculation.propertyName];\n          });\n        }\n        if (this.isOtherSelected && this.otherItemValue === choice) {\n          choiceDataItem.isOther = true;\n          choiceDataItem.displayValue = this.otherValue;\n        }\n        return choiceDataItem;\n      }));\n    }\n    return questionPlainData;\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!this.useDisplayValuesInDynamicTexts) return value;\n    return this.getChoicesDisplayValue(this.visibleChoices, value);\n  }\n  getDisplayValueEmpty() {\n    return ItemValue.getTextOrHtmlByValue(this.visibleChoices, undefined);\n  }\n  getChoicesDisplayValue(items, val) {\n    if (val == this.otherItemValue.value) return this.otherValue ? this.otherValue : this.locOtherText.textOrHtml;\n    const selItem = this.getSingleSelectedItem();\n    if (!!selItem && this.isTwoValueEquals(selItem.value, val)) return selItem.locText.textOrHtml;\n    var str = ItemValue.getTextOrHtmlByValue(items, val);\n    return str == \"\" && val ? val : str;\n  }\n  getDisplayArrayValue(keysAsText, value, onGetValueCallback) {\n    var items = this.visibleChoices;\n    var strs = [];\n    const vals = [];\n    for (var i = 0; i < value.length; i++) {\n      vals.push(!onGetValueCallback ? value[i] : onGetValueCallback(i));\n    }\n    if (Helpers.isTwoValueEquals(this.value, vals)) {\n      this.getMultipleSelectedItems().forEach((item, index) => strs.push(this.getItemDisplayValue(item, vals[index])));\n    }\n    if (strs.length === 0) {\n      for (var i = 0; i < vals.length; i++) {\n        let valStr = this.getChoicesDisplayValue(items, vals[i]);\n        if (valStr) {\n          strs.push(valStr);\n        }\n      }\n    }\n    return strs.join(settings.choicesSeparator);\n  }\n  getItemDisplayValue(item, val) {\n    if (item === this.otherItem) {\n      if (this.hasOther && this.showCommentArea && !!val) {\n        return val;\n      }\n      if (this.comment) {\n        return this.comment;\n      }\n    }\n    return item.locText.textOrHtml;\n  }\n  getFilteredChoices() {\n    return this.filteredChoicesValue ? this.filteredChoicesValue : this.activeChoices;\n  }\n  get activeChoices() {\n    const question = this.getCarryForwardQuestion();\n    if (this.carryForwardQuestionType === \"select\") {\n      question.addDependedQuestion(this);\n      return this.getChoicesFromSelectQuestion(question);\n    }\n    if (this.carryForwardQuestionType === \"array\") {\n      question.addDependedQuestion(this);\n      return this.getChoicesFromArrayQuestion(question);\n    }\n    if (this.isEmptyActiveChoicesInDesign) return [];\n    return this.choicesFromUrl ? this.choicesFromUrl : this.getChoices();\n  }\n  get isMessagePanelVisible() {\n    return this.getPropertyValue(\"isMessagePanelVisible\", false);\n  }\n  set isMessagePanelVisible(val) {\n    this.setPropertyValue(\"isMessagePanelVisible\", val);\n  }\n  get isEmptyActiveChoicesInDesign() {\n    return this.isInDesignMode && (this.hasChoicesUrl || this.isMessagePanelVisible);\n  }\n  getCarryForwardQuestion(data) {\n    const question = this.findCarryForwardQuestion(data);\n    const selBaseQuestion = this.getQuestionWithChoicesCore(question);\n    const arrayQuestion = !selBaseQuestion ? this.getQuestionWithArrayValue(question) : null;\n    this.setCarryForwardQuestionType(!!selBaseQuestion, !!arrayQuestion);\n    return !!selBaseQuestion || !!arrayQuestion ? question : null;\n  }\n  getIsReadyDependsOn() {\n    const res = super.getIsReadyDependsOn();\n    if (this.carryForwardQuestion) {\n      res.push(this.carryForwardQuestion);\n    }\n    return res;\n  }\n  getQuestionWithChoices() {\n    return this.getQuestionWithChoicesCore(this.findCarryForwardQuestion());\n  }\n  findCarryForwardQuestion(data) {\n    var _a;\n    if (!data) {\n      data = this.data || ((_a = this.parentQuestion) === null || _a === void 0 ? void 0 : _a.data);\n    }\n    this.carryForwardQuestion = null;\n    if (this.choicesFromQuestion && data) {\n      this.carryForwardQuestion = data.findQuestionByName(this.choicesFromQuestion);\n    }\n    return this.carryForwardQuestion;\n  }\n  getQuestionWithChoicesCore(question) {\n    if (!!question && !!question.visibleChoices && Serializer.isDescendantOf(question.getType(), \"selectbase\") && question !== this) return question;\n    return null;\n  }\n  getQuestionWithArrayValue(question) {\n    return !!question && question.isValueArray ? question : null;\n  }\n  getChoicesFromArrayQuestion(question) {\n    if (this.isInDesignMode) return [];\n    const val = question.value;\n    if (!Array.isArray(val)) return [];\n    const res = [];\n    for (var i = 0; i < val.length; i++) {\n      const obj = val[i];\n      if (!Helpers.isValueObject(obj)) continue;\n      const key = this.getValueKeyName(obj);\n      if (!!key && !this.isValueEmpty(obj[key])) {\n        const text = !!this.choiceTextsFromQuestion ? obj[this.choiceTextsFromQuestion] : undefined;\n        res.push(this.createItemValue(obj[key], text));\n      }\n    }\n    return res;\n  }\n  getValueKeyName(obj) {\n    if (this.choiceValuesFromQuestion) return this.choiceValuesFromQuestion;\n    const keys = Object.keys(obj);\n    return keys.length > 0 ? keys[0] : undefined;\n  }\n  getChoicesFromSelectQuestion(question) {\n    if (this.isInDesignMode) return [];\n    const res = [];\n    var isSelected = this.choicesFromQuestionMode == \"selected\" ? true : this.choicesFromQuestionMode == \"unselected\" ? false : undefined;\n    const choices = question.visibleChoices;\n    for (var i = 0; i < choices.length; i++) {\n      if (question.isBuiltInChoice(choices[i])) continue;\n      if (isSelected === undefined) {\n        res.push(this.copyChoiceItem(choices[i]));\n        continue;\n      }\n      var itemsSelected = question.isItemSelected(choices[i]);\n      if (itemsSelected && isSelected || !itemsSelected && !isSelected) {\n        res.push(this.copyChoiceItem(choices[i]));\n      }\n    }\n    if (this.choicesFromQuestionMode === \"selected\" && !this.showOtherItem && question.isOtherSelected && !!question.comment) {\n      res.push(this.createItemValue(question.otherItem.value, question.comment));\n    }\n    return res;\n  }\n  copyChoiceItem(item) {\n    const res = this.createItemValue(item.value);\n    res.setData(item);\n    return res;\n  }\n  get hasActiveChoices() {\n    var choices = this.visibleChoices;\n    if (!choices || choices.length == 0) {\n      this.onVisibleChoicesChanged();\n      choices = this.visibleChoices;\n    }\n    for (var i = 0; i < choices.length; i++) {\n      if (!this.isBuiltInChoice(choices[i])) return true;\n    }\n    return false;\n  }\n  isBuiltInChoice(item) {\n    return [this.otherItem, this.noneItem, this.refuseItem, this.dontKnowItem, this.newItemValue].indexOf(item) > -1;\n  }\n  isNoneItem(item) {\n    return item.isExclusive === true;\n  }\n  getChoices() {\n    return this.choices;\n  }\n  /**\n   * Specifies whether to display the \"Other\" choice item.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/create-dropdown-menu-in-javascript/ (linkStyle))\n   *\n   * [Checkboxes Demo](https://surveyjs.io/form-library/examples/create-checkboxes-question-in-javascript/ (linkStyle))\n   *\n   * [Radio Button Group Demo](https://surveyjs.io/form-library/examples/single-select-radio-button-group/ (linkStyle))\n   * @see otherText\n   * @see otherItem\n   * @see otherErrorText\n   * @see showCommentArea\n   * @see [settings.specialChoicesOrder](https://surveyjs.io/form-library/documentation/api-reference/settings#specialChoicesOrder)\n   */\n  get showOtherItem() {\n    return this.getPropertyValue(\"showOtherItem\", false);\n  }\n  set showOtherItem(val) {\n    if (!this.supportOther() || this.showOtherItem == val) return;\n    this.setPropertyValue(\"showOtherItem\", val);\n    this.onVisibleChoicesChanged();\n  }\n  get hasOther() {\n    return this.showOtherItem;\n  }\n  set hasOther(val) {\n    this.showOtherItem = val;\n  }\n  get requireUpdateCommentValue() {\n    return this.hasComment || this.showOtherItem;\n  }\n  supportOther() {\n    return this.isSupportProperty(\"showOtherItem\");\n  }\n  supportNone() {\n    return this.isSupportProperty(\"showNoneItem\");\n  }\n  supportRefuse() {\n    return this.isSupportProperty(\"showRefuseItem\");\n  }\n  supportDontKnow() {\n    return this.isSupportProperty(\"showDontKnowItem\");\n  }\n  isSupportProperty(propName) {\n    return !this.isDesignMode || this.getPropertyByName(propName).visible;\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (!this.hasOther || !this.isOtherSelected || this.otherValue || isOnValueChanged && !this.prevOtherErrorValue) return;\n    const otherEmptyError = new OtherEmptyError(this.otherErrorText, this);\n    otherEmptyError.onUpdateErrorTextCallback = err => {\n      err.text = this.otherErrorText;\n    };\n    errors.push(otherEmptyError);\n  }\n  setSurveyImpl(value, isLight) {\n    this.isRunningChoices = true;\n    super.setSurveyImpl(value, isLight);\n    this.isRunningChoices = false;\n    this.runChoicesByUrl();\n    if (this.isAddDefaultItems) {\n      this.updateVisibleChoices();\n    }\n  }\n  setSurveyCore(value) {\n    super.setSurveyCore(value);\n    if (!!value && !!this.choicesFromQuestion) {\n      this.onVisibleChoicesChanged();\n    }\n  }\n  getStoreOthersAsComment() {\n    if (this.isSettingDefaultValue) return false;\n    if (this.showCommentArea) return false;\n    return this.storeOthersAsComment === true || this.storeOthersAsComment == \"default\" && (this.survey != null ? this.survey.storeOthersAsComment : true) || this.hasChoicesUrl && !this.choicesFromUrl;\n  }\n  onSurveyLoad() {\n    this.runChoicesByUrl();\n    this.onVisibleChoicesChanged();\n    super.onSurveyLoad();\n  }\n  onAnyValueChanged(name, questionName) {\n    super.onAnyValueChanged(name, questionName);\n    if (name != this.getValueName()) {\n      this.runChoicesByUrl();\n    }\n    const chQuestion = this.choicesFromQuestion;\n    if (!!name && chQuestion && (name === chQuestion || questionName === chQuestion)) {\n      this.onVisibleChoicesChanged();\n      this.clearIncorrectValues();\n    }\n  }\n  updateValueFromSurvey(newValue, clearData) {\n    var newComment = \"\";\n    if (this.hasOther && this.activeChoices.length > 0 && !this.isRunningChoices && !this.choicesByUrl.isRunning && this.getStoreOthersAsComment()) {\n      if (this.hasUnknownValue(newValue) && !this.getHasOther(newValue)) {\n        newComment = this.getCommentFromValue(newValue);\n        newValue = this.setOtherValueIntoValue(newValue);\n      } else {\n        if (this.data) {\n          newComment = this.data.getComment(this.getValueName());\n        }\n      }\n    }\n    super.updateValueFromSurvey(newValue, clearData);\n    if ((this.isRunningChoices || this.choicesByUrl.isRunning) && !this.isEmpty()) {\n      this.cachedValueForUrlRequests = this.value;\n    }\n    if (!!newComment) {\n      this.setNewComment(newComment);\n    }\n  }\n  getCommentFromValue(newValue) {\n    return newValue;\n  }\n  setOtherValueIntoValue(newValue) {\n    return this.otherItem.value;\n  }\n  onOtherValueInput(event) {\n    if (this.isInputTextUpdate) {\n      if (event.target) {\n        this.otherValue = event.target.value;\n      }\n    } else {\n      this.updateCommentElements();\n    }\n  }\n  onOtherValueChange(event) {\n    this.otherValue = event.target.value;\n    if (this.otherValue !== event.target.value) {\n      event.target.value = this.otherValue;\n    }\n  }\n  runChoicesByUrl() {\n    this.updateIsUsingRestful();\n    if (!this.choicesByUrl || this.isLoadingFromJson || this.isRunningChoices || this.isInDesignMode) return;\n    var processor = this.surveyImpl ? this.surveyImpl.getTextProcessor() : this.textProcessor;\n    if (!processor) processor = this.survey;\n    if (!processor) return;\n    this.updateIsReady();\n    this.isRunningChoices = true;\n    this.choicesByUrl.run(processor);\n    this.isRunningChoices = false;\n  }\n  onBeforeSendRequest() {\n    if (settings.web.disableQuestionWhileLoadingChoices === true && !this.isReadOnly) {\n      this.enableOnLoadingChoices = true;\n      this.readOnly = true;\n    }\n  }\n  onLoadChoicesFromUrl(array) {\n    if (this.enableOnLoadingChoices) {\n      this.readOnly = false;\n    }\n    const errors = [];\n    if (!this.isReadOnly) {\n      if (this.choicesByUrl && this.choicesByUrl.error) {\n        errors.push(this.choicesByUrl.error);\n      }\n    }\n    var newChoices = null;\n    var checkCachedValuesOnExisting = true;\n    if (this.isFirstLoadChoicesFromUrl && !this.cachedValueForUrlRequests && this.defaultValue) {\n      this.cachedValueForUrlRequests = this.defaultValue;\n      checkCachedValuesOnExisting = false;\n    }\n    if (this.isValueEmpty(this.cachedValueForUrlRequests)) {\n      this.cachedValueForUrlRequests = this.value;\n    }\n    var cachedValues = this.createCachedValueForUrlRequests(this.cachedValueForUrlRequests, checkCachedValuesOnExisting);\n    if (array && (array.length > 0 || this.choicesByUrl.allowEmptyResponse)) {\n      newChoices = new Array();\n      ItemValue.setData(newChoices, array);\n    }\n    if (!!newChoices) {\n      for (var i = 0; i < newChoices.length; i++) {\n        newChoices[i].locOwner = this;\n      }\n    }\n    this.setChoicesFromUrl(newChoices, errors, cachedValues);\n  }\n  canAvoidSettChoicesFromUrl(newChoices) {\n    if (this.isFirstLoadChoicesFromUrl) return false;\n    const chocesAreEmpty = !newChoices || Array.isArray(newChoices) && newChoices.length === 0;\n    if (chocesAreEmpty && !this.isEmpty()) return false;\n    return Helpers.isTwoValueEquals(this.choicesFromUrl, newChoices);\n  }\n  setChoicesFromUrl(newChoices, errors, cachedValues) {\n    if (this.canAvoidSettChoicesFromUrl(newChoices)) return;\n    this.isFirstLoadChoicesFromUrl = false;\n    this.choicesFromUrl = newChoices;\n    this.filterItems();\n    this.onVisibleChoicesChanged();\n    if (newChoices) {\n      var newValue = this.updateCachedValueForUrlRequests(cachedValues, newChoices);\n      if (!!newValue && !this.isReadOnly) {\n        var hasChanged = !this.isTwoValueEquals(this.value, newValue.value);\n        try {\n          if (!this.isValueEmpty(newValue.value)) {\n            this.allowNotifyValueChanged = false;\n            this.setQuestionValue(undefined, true, false);\n          }\n          this.allowNotifyValueChanged = hasChanged;\n          if (hasChanged) {\n            this.value = newValue.value;\n          } else {\n            this.setQuestionValue(newValue.value);\n          }\n        } finally {\n          this.allowNotifyValueChanged = true;\n        }\n      }\n    }\n    if (!this.isReadOnly && !newChoices && !this.isFirstLoadChoicesFromUrl) {\n      this.value = null;\n    }\n    this.errors = errors;\n    this.choicesLoaded();\n  }\n  createCachedValueForUrlRequests(val, checkOnExisting) {\n    if (this.isValueEmpty(val)) return null;\n    if (Array.isArray(val)) {\n      var res = [];\n      for (var i = 0; i < val.length; i++) {\n        res.push(this.createCachedValueForUrlRequests(val[i], true));\n      }\n      return res;\n    }\n    var isExists = checkOnExisting ? !this.hasUnknownValue(val) : true;\n    return {\n      value: val,\n      isExists: isExists\n    };\n  }\n  updateCachedValueForUrlRequests(val, newChoices) {\n    if (this.isValueEmpty(val)) return null;\n    if (Array.isArray(val)) {\n      var res = [];\n      for (var i = 0; i < val.length; i++) {\n        var updatedValue = this.updateCachedValueForUrlRequests(val[i], newChoices);\n        if (updatedValue && !this.isValueEmpty(updatedValue.value)) {\n          var newValue = updatedValue.value;\n          var item = ItemValue.getItemByValue(newChoices, updatedValue.value);\n          if (!!item) {\n            newValue = item.value;\n          }\n          res.push(newValue);\n        }\n      }\n      return {\n        value: res\n      };\n    }\n    var value = val.isExists && this.hasUnknownValue(val.value) ? null : val.value;\n    var item = ItemValue.getItemByValue(newChoices, value);\n    if (!!item) {\n      value = item.value;\n    }\n    return {\n      value: value\n    };\n  }\n  updateChoicesDependedQuestions() {\n    if (this.isLoadingFromJson || this.isUpdatingChoicesDependedQuestions || !this.allowNotifyValueChanged || this.choicesByUrl.isRunning) return;\n    this.isUpdatingChoicesDependedQuestions = true;\n    this.updateDependedQuestions();\n    this.isUpdatingChoicesDependedQuestions = false;\n  }\n  updateDependedQuestion() {\n    this.onVisibleChoicesChanged();\n    this.clearIncorrectValues();\n  }\n  onSurveyValueChanged(newValue) {\n    super.onSurveyValueChanged(newValue);\n    this.updateChoicesDependedQuestions();\n  }\n  onVisibleChoicesChanged() {\n    if (this.isLoadingFromJson || this.isLockVisibleChoices) return;\n    this.updateVisibleChoices();\n    this.onVisibleChanged();\n    if (!!this.visibleChoicesChangedCallback) {\n      this.visibleChoicesChangedCallback();\n    }\n    this.updateChoicesDependedQuestions();\n  }\n  isVisibleCore() {\n    const superVal = super.isVisibleCore();\n    if (!this.hideIfChoicesEmpty || !superVal) return superVal;\n    var choices = this.isUsingCarryForward ? this.visibleChoices : this.getFilteredChoices();\n    return !choices || choices.length > 0;\n  }\n  sortArrayByChoicesOrder(array) {\n    const res = array.slice();\n    if (this.isInDesignMode) return res;\n    const order = this.choicesOrder.toLowerCase();\n    if (order == \"asc\") return this.sortArray(res, 1);\n    if (order == \"desc\") return this.sortArray(res, -1);\n    if (order == \"random\") return this.randomizeArray(res);\n    return res;\n  }\n  sortArray(array, mult) {\n    return array.sort(function (a, b) {\n      return Helpers.compareStrings(a.calculatedText, b.calculatedText) * mult;\n    });\n  }\n  randomizeArray(array) {\n    return Helpers.randomizeArray(array);\n  }\n  get hasChoicesUrl() {\n    return this.choicesByUrl && !!this.choicesByUrl.url;\n  }\n  clearIncorrectValues() {\n    if (!this.canClearIncorrectValues() || !this.hasValueToClearIncorrectValues()) return;\n    if (this.clearIncorrectValuesCallback) {\n      this.clearIncorrectValuesCallback();\n    } else {\n      this.clearIncorrectValuesCore();\n    }\n  }\n  canClearIncorrectValues() {\n    if (this.canAddCustomChoices()) return false;\n    if (this.carryForwardQuestion && !this.carryForwardQuestion.isReady) return false;\n    if (!!this.survey && this.survey.questionsByValueName(this.getValueName()).length > 1) return false;\n    if (this.hasChoicesUrl && (!this.choicesFromUrl || this.choicesFromUrl.length == 0)) return false;\n    return true;\n  }\n  canAddCustomChoices() {\n    return false;\n  }\n  hasValueToClearIncorrectValues() {\n    if (!!this.survey && this.survey.keepIncorrectValues) return false;\n    return !this.keepIncorrectValues && !this.isEmpty();\n  }\n  clearValueIfInvisibleCore(reason) {\n    super.clearValueIfInvisibleCore(reason);\n    this.clearIncorrectValues();\n  }\n  /**\n   * Returns `true` if a passed choice item is selected.\n   *\n   * To obtain a choice item to check, use the `noneItem` or `otherItem` property or the `choices` array.\n   * @param item A choice item.\n   * @see noneItem\n   * @see otherItem\n   * @see choices\n   */\n  isItemSelected(item) {\n    if (item === this.otherItem) return this.isOtherSelected;\n    return this.isItemSelectedCore(item);\n  }\n  isItemSelectedCore(item) {\n    return item.value === this.value;\n  }\n  clearDisabledValues() {\n    if (!this.survey || !this.survey.clearDisabledChoices) return;\n    this.clearDisabledValuesCore();\n  }\n  clearIncorrectValuesCore() {\n    var val = this.value;\n    if (this.canClearValueAnUnknown(val)) {\n      this.clearValue(true);\n    }\n  }\n  canClearValueAnUnknown(val) {\n    if (!this.getStoreOthersAsComment() && this.isOtherSelected) return false;\n    return this.hasUnknownValue(val, true, true, true);\n  }\n  clearDisabledValuesCore() {\n    if (this.isValueDisabled(this.value)) {\n      this.clearValue(true);\n    }\n  }\n  clearUnusedValues() {\n    super.clearUnusedValues();\n    if (!this.isOtherSelected) {\n      this.otherValue = \"\";\n    }\n    if (!this.showCommentArea && !this.getStoreOthersAsComment() && !this.isOtherSelected) {\n      this.comment = \"\";\n    }\n  }\n  getColumnClass() {\n    return new CssClassBuilder().append(this.cssClasses.column).append(\"sv-q-column-\" + this.colCount, this.hasColumns).toString();\n  }\n  getItemIndex(item) {\n    return this.visibleChoices.indexOf(item);\n  }\n  getItemClass(item) {\n    const options = {\n      item: item\n    };\n    var res = this.getItemClassCore(item, options);\n    options.css = res;\n    if (!!this.survey) {\n      this.survey.updateChoiceItemCss(this, options);\n    }\n    return options.css;\n  }\n  getCurrentColCount() {\n    return this.colCount;\n  }\n  getItemClassCore(item, options) {\n    const builder = new CssClassBuilder().append(this.cssClasses.item).append(this.cssClasses.itemInline, !this.hasColumns && this.colCount === 0).append(\"sv-q-col-\" + this.getCurrentColCount(), !this.hasColumns && this.colCount !== 0).append(this.cssClasses.itemOnError, this.hasCssError());\n    const readOnlyStyles = this.getIsDisableAndReadOnlyStyles(!item.isEnabled);\n    const isReadOnly = readOnlyStyles[0];\n    const isDisabled = readOnlyStyles[1];\n    const isChecked = this.isItemSelected(item) || this.isOtherSelected && this.otherItem.value === item.value;\n    const allowHover = !isDisabled && !isChecked && !(!!this.survey && this.survey.isDesignMode);\n    const isNone = item === this.noneItem;\n    options.isDisabled = isDisabled || isReadOnly;\n    options.isChecked = isChecked;\n    options.isNone = isNone;\n    return builder.append(this.cssClasses.itemDisabled, isDisabled).append(this.cssClasses.itemReadOnly, isReadOnly).append(this.cssClasses.itemPreview, this.isPreviewStyle).append(this.cssClasses.itemChecked, isChecked).append(this.cssClasses.itemHover, allowHover).append(this.cssClasses.itemNone, isNone).toString();\n  }\n  getLabelClass(item) {\n    return new CssClassBuilder().append(this.cssClasses.label).append(this.cssClasses.labelChecked, this.isItemSelected(item)).toString();\n  }\n  getControlLabelClass(item) {\n    return new CssClassBuilder().append(this.cssClasses.controlLabel).append(this.cssClasses.controlLabelChecked, this.isItemSelected(item)).toString() || undefined;\n  }\n  updateRenderedChoices() {\n    this.renderedChoices = this.onGetRenderedChoicesCallback ? this.onGetRenderedChoicesCallback(this.visibleChoices) : this.visibleChoices;\n  }\n  getRenderedChoicesAnimationOptions() {\n    return {\n      isAnimationEnabled: () => {\n        return this.animationAllowed;\n      },\n      getRerenderEvent: () => {\n        return this.onElementRerendered;\n      },\n      getKey: item => item != this.newItemValue ? item.value : this.newItemValue,\n      getLeaveOptions: item => {\n        let cssClass = this.cssClasses.itemLeave;\n        if (this.hasColumns) {\n          const index = this.bodyItems.indexOf(item);\n          if (index !== -1 && index !== this.bodyItems.length - 1) {\n            cssClass = \"\";\n          }\n        }\n        return {\n          cssClass,\n          onBeforeRunAnimation: prepareElementForVerticalAnimation,\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      },\n      getAnimatedElement: item => {\n        return item.getRootElement();\n      },\n      getEnterOptions: item => {\n        let cssClass = this.cssClasses.itemEnter;\n        if (this.hasColumns) {\n          const index = this.bodyItems.indexOf(item);\n          if (index !== -1 && index !== this.bodyItems.length - 1) {\n            cssClass = \"\";\n          }\n        }\n        return {\n          cssClass: cssClass,\n          onBeforeRunAnimation: el => {\n            if (this.getCurrentColCount() == 0 && this.bodyItems.indexOf(item) >= 0) {\n              const leftPosition = el.parentElement.firstElementChild.offsetLeft;\n              if (el.offsetLeft > leftPosition) {\n                setPropertiesOnElementForAnimation(el, {\n                  moveAnimationDuration: \"0s\",\n                  fadeAnimationDelay: \"0s\"\n                }, \"--\");\n              }\n            }\n            prepareElementForVerticalAnimation(el);\n          },\n          onAfterRunAnimation: cleanHtmlElementAfterAnimation\n        };\n      }\n    };\n  }\n  get renderedChoices() {\n    return this._renderedChoices;\n  }\n  set renderedChoices(val) {\n    this.renderedChoicesAnimation.sync(val);\n  }\n  get headItems() {\n    const count = this.separateSpecialChoices || this.isInDesignMode ? this.headItemsCount : 0;\n    const res = [];\n    for (let i = 0; i < count; i++) {\n      if (this.renderedChoices[i]) {\n        res.push(this.renderedChoices[i]);\n      }\n    }\n    return res;\n  }\n  get footItems() {\n    const count = this.separateSpecialChoices || this.isInDesignMode ? this.footItemsCount : 0;\n    const res = [];\n    const items = this.renderedChoices;\n    for (let i = 0; i < count; i++) {\n      if (this.renderedChoices[items.length - count + i]) {\n        res.push(this.renderedChoices[items.length - count + i]);\n      }\n    }\n    return res;\n  }\n  get dataChoices() {\n    return this.renderedChoices.filter(item => !this.isBuiltInChoice(item));\n  }\n  get bodyItems() {\n    return this.hasHeadItems || this.hasFootItems ? this.dataChoices : this.renderedChoices;\n  }\n  get hasHeadItems() {\n    return this.headItems.length > 0;\n  }\n  get hasFootItems() {\n    return this.footItems.length > 0;\n  }\n  get itemFlowDirection() {\n    return settings.itemFlowDirection;\n  }\n  get columns() {\n    if (!this.hasColumns || this.renderedChoices.length === 0) return [];\n    const colCount = this.getCurrentColCount();\n    let choicesToBuildColumns = !this.separateSpecialChoices && !this.isInDesignMode ? this.renderedChoices : this.dataChoices;\n    if (this.itemFlowDirection === \"column\") {\n      return this.getColumnsWithColumnItemFlow(choicesToBuildColumns, colCount);\n    } else {\n      return this.getColumnsWithRowItemFlow(choicesToBuildColumns, colCount);\n    }\n  }\n  getColumnsWithColumnItemFlow(choices, colCount) {\n    const columns = [];\n    let maxColumnHeight = Math.floor(choices.length / colCount);\n    if (choices.length % colCount) {\n      maxColumnHeight += 1;\n    }\n    let choicesLeft = choices.length;\n    let columnsLeft = colCount;\n    let indexShift = 0;\n    for (let i = 0; i < colCount; i++) {\n      const column = [];\n      for (let j = 0; j < maxColumnHeight; j++) {\n        if (choicesLeft <= columnsLeft) {\n          maxColumnHeight = 1;\n        }\n        const choice = choices[j + indexShift];\n        if (choice) {\n          column.push(choice);\n          choicesLeft--;\n        }\n      }\n      columns.push(column);\n      columnsLeft--;\n      indexShift += column.length;\n    }\n    return columns;\n  }\n  getColumnsWithRowItemFlow(choices, colCount) {\n    const columns = [];\n    for (let i = 0; i < colCount; i++) {\n      const column = [];\n      for (let j = i; j < choices.length; j += colCount) {\n        column.push(choices[j]);\n      }\n      columns.push(column);\n    }\n    return columns;\n  }\n  getItemsColumnKey(itemsColumn) {\n    return (itemsColumn || []).map(c => c.value || \"\").join(\"\");\n  }\n  get hasColumns() {\n    return !this.isMobile && this.getCurrentColCount() > 1;\n  }\n  get rowLayout() {\n    return this.getCurrentColCount() == 0 && !(this.hasFootItems || this.hasHeadItems);\n  }\n  get blockedRow() {\n    return this.getCurrentColCount() == 0 && (this.hasFootItems || this.hasHeadItems);\n  }\n  choicesLoaded() {\n    this.isChoicesLoaded = true;\n    this.updateIsReady();\n    if (this.survey) {\n      this.survey.loadedChoicesFromServer(this);\n    }\n    if (this.loadedChoicesFromServerCallback) {\n      this.loadedChoicesFromServerCallback();\n    }\n  }\n  getItemValueWrapperComponentName(item) {\n    const survey = this.survey;\n    if (survey) {\n      return survey.getItemValueWrapperComponentName(item, this);\n    }\n    return SurveyModel.TemplateRendererComponentName;\n  }\n  getItemValueWrapperComponentData(item) {\n    const survey = this.survey;\n    if (survey) {\n      return survey.getItemValueWrapperComponentData(item, this);\n    }\n    return item;\n  }\n  ariaItemChecked(item) {\n    return this.renderedValue === item.value ? \"true\" : \"false\";\n  }\n  isOtherItem(item) {\n    return this.hasOther && item.value == this.otherItem.value;\n  }\n  get itemSvgIcon() {\n    if (this.isPreviewStyle && this.cssClasses.itemPreviewSvgIconId) {\n      return this.cssClasses.itemPreviewSvgIconId;\n    }\n    return this.cssClasses.itemSvgIconId;\n  }\n  getSelectBaseRootCss() {\n    return new CssClassBuilder().append(this.getQuestionRootCss()).append(this.cssClasses.rootRow, this.rowLayout).toString();\n  }\n  allowMobileInDesignMode() {\n    return true;\n  }\n  getAriaItemLabel(item) {\n    return item.locText.renderedHtml;\n  }\n  getItemId(item) {\n    return this.inputId + \"_\" + this.getItemIndex(item);\n  }\n  get questionName() {\n    return this.name + \"_\" + this.id;\n  }\n  getItemEnabled(item) {\n    return !this.isDisabledAttr && item.isEnabled;\n  }\n  focusOtherComment() {\n    var _a;\n    SurveyElement.FocusElement(this.otherId, false, (_a = this.survey) === null || _a === void 0 ? void 0 : _a.rootElement);\n  }\n  onValueChanged() {\n    super.onValueChanged();\n    if (!this.isDesignMode && !this.prevIsOtherSelected && this.isOtherSelected && !this.isSettingDefaultValue) {\n      this.focusOtherComment();\n    }\n    this.prevIsOtherSelected = this.isOtherSelected;\n  }\n  getDefaultItemComponent() {\n    return \"\";\n  }\n  /**\n   * The name of a component used to render items.\n   *\n   * [Dropdown Demo](https://surveyjs.io/form-library/examples/dropdown-box-with-custom-items/ (linkStyle))\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/ranking-with-custom-items/ (linkStyle))\n   *\n   * [Checkboxes and Radio Button Group Demo](https://surveyjs.io/form-library/examples/add-custom-items-to-single-and-multi-select-questions/ (linkStyle))\n   */\n  get itemComponent() {\n    return this.getPropertyValue(\"itemComponent\", this.getDefaultItemComponent());\n  }\n  set itemComponent(value) {\n    this.setPropertyValue(\"itemComponent\", value);\n  }\n}\n__decorate([propertyArray()], QuestionSelectBase.prototype, \"_renderedChoices\", void 0);\n/**\n * A base class for multiple-selection question types that can display choice items in multiple columns ([Checkbox](https://surveyjs.io/form-library/documentation/questioncheckboxmodel), [Radiogroup](https://surveyjs.io/form-library/documentation/questionradiogroupmodel), [Image Picker](https://surveyjs.io/form-library/documentation/questionimagepickermodel)).\n */\nclass QuestionCheckboxBase extends QuestionSelectBase {\n  constructor(name) {\n    super(name);\n  }\n  /**\n   * Gets or sets the number of columns used to arrange choice items.\n   *\n   * Set this property to 0 if you want to display all items in one line. The default value depends on the available width.\n   * @see separateSpecialChoices\n   */\n  get colCount() {\n    return this.getPropertyValue(\"colCount\", this.isFlowLayout ? 0 : undefined);\n  }\n  set colCount(value) {\n    if (value < 0 || value > 5 || this.isFlowLayout) return;\n    this.setPropertyValue(\"colCount\", value);\n    this.fireCallback(this.colCountChangedCallback);\n  }\n  onParentChanged() {\n    super.onParentChanged();\n    if (this.isFlowLayout) {\n      this.setPropertyValue(\"colCount\", null);\n    }\n  }\n  onParentQuestionChanged() {\n    this.onVisibleChoicesChanged();\n  }\n  getSearchableItemValueKeys(keys) {\n    keys.push(\"choices\");\n  }\n}\nfunction checkCopyPropVisibility(obj, mode) {\n  var _a;\n  if (!obj) return false;\n  if (!!obj.templateQuestion) {\n    const data = (_a = obj.colOwner) === null || _a === void 0 ? void 0 : _a.data;\n    obj = obj.templateQuestion;\n    if (!obj.getCarryForwardQuestion(data)) return false;\n  }\n  return obj.carryForwardQuestionType === mode;\n}\nSerializer.addClass(\"selectbase\", [{\n  name: \"showCommentArea:switch\",\n  layout: \"row\",\n  visible: true,\n  category: \"general\"\n}, \"choicesFromQuestion:question_carryforward\", {\n  name: \"choices:itemvalue[]\",\n  uniqueProperty: \"value\",\n  baseValue: function () {\n    return getLocaleString(\"choices_Item\");\n  },\n  dependsOn: \"choicesFromQuestion\",\n  visibleIf: obj => {\n    return !obj.choicesFromQuestion;\n  }\n}, {\n  name: \"choicesFromQuestionMode\",\n  default: \"all\",\n  choices: [\"all\", \"selected\", \"unselected\"],\n  dependsOn: \"choicesFromQuestion\",\n  visibleIf: obj => {\n    return checkCopyPropVisibility(obj, \"select\");\n  }\n}, {\n  name: \"choiceValuesFromQuestion\",\n  dependsOn: \"choicesFromQuestion\",\n  visibleIf: obj => {\n    return checkCopyPropVisibility(obj, \"array\");\n  }\n}, {\n  name: \"choiceTextsFromQuestion\",\n  dependsOn: \"choicesFromQuestion\",\n  visibleIf: obj => {\n    return checkCopyPropVisibility(obj, \"array\");\n  }\n}, {\n  name: \"choicesOrder\",\n  default: \"none\",\n  choices: [\"none\", \"asc\", \"desc\", \"random\"],\n  dependsOn: \"choicesFromQuestion\",\n  visibleIf: obj => {\n    return !obj.choicesFromQuestion;\n  }\n}, {\n  name: \"choicesByUrl:restfull\",\n  className: \"choicesByUrl\",\n  onGetValue: function (obj) {\n    return obj.choicesByUrl.getData();\n  },\n  onSetValue: function (obj, value) {\n    obj.choicesByUrl.setData(value);\n  }\n}, \"hideIfChoicesEmpty:boolean\", \"choicesVisibleIf:condition\", {\n  name: \"choicesEnableIf:condition\",\n  dependsOn: \"choicesFromQuestion\",\n  visibleIf: obj => {\n    return !obj.choicesFromQuestion;\n  }\n}, {\n  name: \"defaultValue:value\",\n  visibleIf: obj => !obj.choicesFromQuestion,\n  dependsOn: \"choicesFromQuestion\"\n}, {\n  name: \"correctAnswer:value\",\n  visibleIf: obj => !obj.choicesFromQuestion,\n  dependsOn: \"choicesFromQuestion\"\n}, {\n  name: \"separateSpecialChoices:boolean\",\n  visible: false\n}, {\n  name: \"showOtherItem:boolean\",\n  alternativeName: \"hasOther\"\n}, {\n  name: \"showNoneItem:boolean\",\n  alternativeName: \"hasNone\"\n}, {\n  name: \"showRefuseItem:boolean\",\n  visible: false,\n  version: \"1.9.128\"\n}, {\n  name: \"showDontKnowItem:boolean\",\n  visible: false,\n  version: \"1.9.128\"\n}, {\n  name: \"otherPlaceholder\",\n  alternativeName: \"otherPlaceHolder\",\n  serializationProperty: \"locOtherPlaceholder\",\n  dependsOn: \"showOtherItem\",\n  visibleIf: function (obj) {\n    return obj.hasOther;\n  }\n}, {\n  name: \"noneText\",\n  serializationProperty: \"locNoneText\",\n  dependsOn: \"showNoneItem\",\n  visibleIf: function (obj) {\n    return obj.showNoneItem;\n  }\n}, {\n  name: \"refuseText\",\n  serializationProperty: \"locRefuseText\",\n  dependsOn: \"showRefuseItem\",\n  visibleIf: function (obj) {\n    return obj.showRefuseItem;\n  }\n}, {\n  name: \"dontKnowText\",\n  serializationProperty: \"locDontKnowText\",\n  dependsOn: \"showDontKnowItem\",\n  visibleIf: function (obj) {\n    return obj.showDontKnowItem;\n  }\n}, {\n  name: \"otherText\",\n  serializationProperty: \"locOtherText\",\n  dependsOn: \"showOtherItem\",\n  visibleIf: function (obj) {\n    return obj.hasOther;\n  }\n}, {\n  name: \"otherErrorText\",\n  serializationProperty: \"locOtherErrorText\",\n  dependsOn: \"showOtherItem\",\n  visibleIf: function (obj) {\n    return obj.hasOther;\n  }\n}, {\n  name: \"storeOthersAsComment\",\n  default: \"default\",\n  choices: [\"default\", true, false],\n  visible: false\n}], null, \"question\");\nSerializer.addClass(\"checkboxbase\", [{\n  name: \"colCount:number\",\n  default: 1,\n  choices: [0, 1, 2, 3, 4, 5],\n  layout: \"row\"\n}], null, \"selectbase\");\nclass DropdownListModel extends Base {\n  get focusFirstInputSelector() {\n    return this.getFocusFirstInputSelector();\n  }\n  getFocusFirstInputSelector() {\n    if (IsTouch) {\n      return this.isValueEmpty(this.question.value) ? this.itemSelector : this.selectedItemSelector;\n    } else {\n      return !this.listModel.showFilter && !!this.question.value ? this.selectedItemSelector : \"\";\n    }\n  }\n  resetItemsSettings() {\n    this.itemsSettings.skip = 0;\n    this.itemsSettings.take = Math.max(this.minPageSize, this.question.choicesLazyLoadPageSize);\n    this.itemsSettings.totalCount = 0;\n    this.itemsSettings.items = [];\n  }\n  setItems(items, totalCount) {\n    this.itemsSettings.items = [].concat(this.itemsSettings.items, items);\n    this.itemsSettings.totalCount = totalCount;\n    this.listModel.isAllDataLoaded = this.choicesLazyLoadEnabled && this.itemsSettings.items.length == this.itemsSettings.totalCount;\n    this.question.choices = this.itemsSettings.items;\n  }\n  _loadQuestionChoices(callbackAfterItemsLoaded) {\n    const _filterString = this.filterString;\n    this.setIsChoicesLoading(true);\n    this.question.survey.loadQuestionChoices({\n      question: this.question,\n      filter: this.filterString,\n      skip: this.itemsSettings.skip,\n      take: this.itemsSettings.take,\n      setItems: (items, totalCount) => {\n        this.setItems(items || [], totalCount || 0);\n        this.popupRecalculatePosition(this.itemsSettings.skip === this.itemsSettings.take);\n        if (!!callbackAfterItemsLoaded) {\n          callbackAfterItemsLoaded();\n        }\n        this.processCustomValue(_filterString);\n        this.setIsChoicesLoading(false);\n      }\n    });\n    this.itemsSettings.skip += this.itemsSettings.take;\n  }\n  setIsChoicesLoading(newValue) {\n    if (!!this.question.setIsChoicesLoading) {\n      this.question.setIsChoicesLoading(newValue);\n    }\n  }\n  processCustomValue(newValue) {\n    if (!this.allowCustomChoices) return;\n    const value = newValue || this.filterString;\n    const item = this.listModel.getVisibleActions().filter(action => Helpers.isTwoValueEquals(action.text, value, false, false))[0];\n    if (!!item) {\n      this.customValue = undefined;\n    } else {\n      this.customValue = value;\n      this.updateItems();\n      this.listModel.focusFirstVisibleItem();\n    }\n  }\n  updateQuestionChoices(callbackAfterItemsLoaded) {\n    const isUpdate = this.itemsSettings.skip + 1 < this.itemsSettings.totalCount;\n    if (!this.itemsSettings.skip || isUpdate) {\n      this.resetTimer();\n      if (!!this.filterString && settings.dropdownSearchDelay > 0) {\n        this.timer = setTimeout(() => {\n          this._loadQuestionChoices(callbackAfterItemsLoaded);\n        }, settings.dropdownSearchDelay);\n      } else {\n        this._loadQuestionChoices(callbackAfterItemsLoaded);\n      }\n    }\n  }\n  resetTimer() {\n    if (!!this.timer) {\n      clearTimeout(this.timer);\n      this.timer = undefined;\n    }\n  }\n  updatePopupFocusFirstInputSelector() {\n    this._popupModel.focusFirstInputSelector = this.focusFirstInputSelector;\n  }\n  getDropdownMenuOptions() {\n    const windowWidth = DomWindowHelper.getInnerWidth();\n    const windowHeight = DomWindowHelper.getInnerHeight();\n    const isTablet = calculateIsTablet(windowWidth, windowHeight);\n    let menuType = \"dropdown\";\n    let deviceType = \"desktop\";\n    if (IsTouch) {\n      menuType = \"popup\";\n      deviceType = isTablet ? \"tablet\" : \"mobile\";\n    }\n    return {\n      menuType: menuType,\n      deviceType: deviceType,\n      hasTouchScreen: IsTouch,\n      screenHeight: windowHeight,\n      screenWidth: windowWidth\n    };\n  }\n  checkFocusRemainsWithinComponent(event) {\n    if (!this.question.cssClasses.root || !(event === null || event === void 0 ? void 0 : event.target)) return false;\n    const rootElement = event.target.closest(classesToSelector(this.question.cssClasses.root));\n    return rootElement && rootElement.contains(event.relatedTarget);\n  }\n  createButtons() {\n    this.editorButtons = new ActionContainer();\n    this.editorButtons.containerCss = \"sd-dropdown-action-bar\";\n    this.chevronButton = new Action({\n      id: \"chevron\",\n      css: \"sd-editor-chevron-button\",\n      iconName: this.question.cssClasses.chevronButtonIconId || \"icon-chevron\",\n      iconSize: \"auto\",\n      showTitle: false,\n      locTitle: this.locSelectCaption,\n      disableTabStop: true,\n      enabled: new ComputedUpdater(() => {\n        return !this.question.isInputReadOnly;\n      }),\n      visible: new ComputedUpdater(() => {\n        return !this.question.isPreviewStyle;\n      }),\n      action: context => {\n        this.onClick();\n      }\n    });\n    this.clearButton = new Action({\n      id: \"clear\",\n      css: \"sd-editor-clean-button\",\n      iconName: this.question.cssClasses.cleanButtonIconId || \"icon-cancel-24x24\",\n      iconSize: \"auto\",\n      showTitle: false,\n      locTitle: this.locClearCaption,\n      disableTabStop: true,\n      enabled: new ComputedUpdater(() => {\n        return !this.question.isInputReadOnly;\n      }),\n      visible: new ComputedUpdater(() => {\n        const isEmpty = this.question.isEmpty();\n        const isReadOnly = this.question.isReadOnly;\n        return this.question.allowClear && !isEmpty && !isReadOnly;\n      }),\n      action: context => {\n        this.onClear();\n      }\n    });\n    this.editorButtons.setItems([this.clearButton, this.chevronButton]);\n    this.editorButtons.actions.forEach(action => action.cssClasses = {\n      item: \"sd-editor-button-item\",\n      itemIcon: \"sv-editor-button-item__icon\",\n      itemPressed: \"sd-editor-button-item--pressed\"\n    });\n  }\n  createPopup() {\n    const popupOptions = {\n      verticalPosition: \"bottom\",\n      horizontalPosition: \"center\",\n      showPointer: false\n    };\n    this._popupModel = new PopupModel(\"sv-list\", {\n      model: this.listModel\n    }, popupOptions);\n    this._popupModel.displayMode = IsTouch ? \"overlay\" : \"popup\";\n    this._popupModel.positionMode = \"fixed\";\n    this._popupModel.isFocusedContainer = false;\n    this._popupModel.isFocusedContent = IsTouch;\n    this._popupModel.setWidthByTarget = !IsTouch;\n    this._popupModel.locale = this.question.getLocale();\n    this.updatePopupFocusFirstInputSelector();\n    this.listModel.registerPropertyChangedHandlers([\"showFilter\"], () => {\n      this.updatePopupFocusFirstInputSelector();\n    });\n    this._popupModel.onVisibilityChanged.add((_, option) => {\n      this.popupVisibilityChanged(option.isVisible);\n      this.chevronButton.pressed = option.isVisible;\n    });\n  }\n  popupVisibilityChanged(isVisible) {\n    if (isVisible) {\n      this.listModel.renderElements = true;\n    }\n    if (isVisible && this.choicesLazyLoadEnabled) {\n      this.listModel.actions = [];\n      this.resetItemsSettings();\n      this.updateQuestionChoices();\n    }\n    if (isVisible) {\n      this.updatePopupFocusFirstInputSelector();\n      const dropdownMenuOptions = this.getDropdownMenuOptions();\n      this.question.processOpenDropdownMenu(dropdownMenuOptions);\n      const displayModeUpdated = this._popupModel.updateDisplayMode(dropdownMenuOptions.menuType);\n      if (displayModeUpdated) {\n        this.listModel.setSearchEnabled(this.inputAvailable && dropdownMenuOptions.menuType !== \"dropdown\");\n      }\n      if (!!this.question.onOpenedCallBack) {\n        this.question.onOpenedCallBack();\n      }\n    }\n    if (!isVisible) {\n      this.onHidePopup();\n    }\n    this.ariaExpanded = isVisible ? \"true\" : \"false\";\n    this.question.processPopupVisiblilityChanged(this.popupModel, isVisible);\n  }\n  setFilterStringToListModel(newValue) {\n    this.listModel.filterString = newValue;\n    this.listModel.resetFocusedItem();\n    if (this.question.selectedItem && this.question.selectedItem.text.indexOf(newValue) >= 0) {\n      this.listModel.focusedItem = this.getAvailableItems().filter(item => item.id == this.question.selectedItem.value)[0];\n      if (this.listModel.filterString) {\n        this.listModel.actions.map(a => a.selectedValue = false);\n      }\n      return;\n    }\n    if (!this.listModel.focusedItem || !this.listModel.isItemVisible(this.listModel.focusedItem)) {\n      this.listModel.focusFirstVisibleItem();\n    }\n  }\n  setTextWrapEnabled(newValue) {\n    this.listModel.textWrapEnabled = newValue;\n  }\n  popupRecalculatePosition(isResetHeight) {\n    setTimeout(() => {\n      this.popupModel.recalculatePosition(isResetHeight);\n    }, 1);\n  }\n  onHidePopup() {\n    this.resetFilterString();\n    this.question.suggestedItem = null;\n    if (this.choicesLazyLoadEnabled) {\n      this.resetItemsSettings();\n    }\n    this.customValue = undefined;\n    this.resetCustomItemValue();\n  }\n  getAvailableItems() {\n    if (this.allowCustomChoices) {\n      return [].concat(this.question.visibleChoices, [this.customItemValue]);\n    }\n    return this.question.visibleChoices;\n  }\n  setOnTextSearchCallbackForListModel(listModel) {\n    listModel.setOnTextSearchCallback((item, textToSearch) => {\n      if (item.id === this.customItemValue.id) return item.visible;\n      if (this.filteredItems) return this.filteredItems.indexOf(item) >= 0;\n      let textInLow = item.text.toLocaleLowerCase();\n      textInLow = settings.comparator.normalizeTextCallback(textInLow, \"filter\");\n      const index = textInLow.indexOf(textToSearch.toLocaleLowerCase());\n      return this.question.searchMode == \"startsWith\" ? index == 0 : index > -1;\n    });\n  }\n  createListModel() {\n    const visibleItems = this.getAvailableItems();\n    let _onSelectionChanged = this.onSelectionChanged;\n    if (!_onSelectionChanged) {\n      _onSelectionChanged = item => {\n        this.setQuestionValue(item);\n        this.popupModel.hide();\n      };\n    }\n    const listOptions = {\n      items: visibleItems,\n      onSelectionChanged: _onSelectionChanged,\n      allowSelection: false,\n      locOwner: this.question,\n      elementId: this.listElementId\n    };\n    const res = new ListModel(listOptions);\n    this.setOnTextSearchCallbackForListModel(res);\n    res.renderElements = false;\n    res.forceShowFilter = this.question.choicesLazyLoadEnabled;\n    res.areSameItemsCallback = (item1, item2) => {\n      return item1 === item2;\n    };\n    return res;\n  }\n  setQuestionValue(item) {\n    if (this.allowCustomChoices && item.id === this.customItemValue.id) {\n      const newChoice = this.createCustomItem();\n      if (!!newChoice) {\n        this.question.value = newChoice.id;\n        this.hintString = \"\";\n      }\n    } else {\n      this.question.value = item.id;\n      if (this.searchEnabled) this.applyInputString(item);\n    }\n  }\n  createCustomItem() {\n    const newChoice = new ItemValue(this.customValue);\n    const options = {\n      item: newChoice,\n      question: this.question,\n      allow: true\n    };\n    this.question.survey.createCustomChoiceItem(options);\n    if (!options.allow) {\n      this.clear();\n      return null;\n    }\n    this.question.customChoices.push(newChoice);\n    this.customValue = undefined;\n    this.updateItems();\n    return newChoice;\n  }\n  updateAfterListModelCreated(model) {\n    model.isItemSelected = action => !!action.selected;\n    model.onPropertyChanged.add((sender, options) => {\n      if (options.name == \"hasVerticalScroller\") {\n        this.hasScroll = options.newValue;\n      }\n    });\n    model.isAllDataLoaded = !this.choicesLazyLoadEnabled;\n    model.actions.forEach(a => a.disableTabStop = true);\n    model.setOnFilterStringChangedCallback(this.listModelFilterStringChanged);\n  }\n  getPopupCssClasses() {\n    return \"sv-single-select-list\";\n  }\n  updateCssClasses(popupCssClass, listCssClasses) {\n    this.popupModel.cssClass = new CssClassBuilder().append(popupCssClass).append(this.getPopupCssClasses()).toString();\n    this.listModel.cssClasses = listCssClasses;\n  }\n  resetFilterString() {\n    if (!!this.filterString) {\n      this.filterString = undefined;\n    }\n  }\n  clear() {\n    this.customValue = undefined;\n    this.inputString = null;\n    this.hintString = \"\";\n    this.resetFilterString();\n  }\n  onSetFilterString() {\n    this.filteredItems = undefined;\n    if (!this.filterString && !this.popupModel.isVisible) return;\n    const options = {\n      question: this.question,\n      choices: this.getAvailableItems(),\n      filter: this.filterString,\n      filteredChoices: undefined\n    };\n    this.question.survey.onChoicesSearch.fire(this.question.survey, options);\n    this.filteredItems = options.filteredChoices;\n    if (!!this.filterString && !this.popupModel.isVisible) {\n      this.popupModel.show();\n    }\n    const updateAfterFilterStringChanged = () => {\n      this.setFilterStringToListModel(this.filterString);\n      if (this.filterString) this.applyHintString();\n      this.popupRecalculatePosition(true);\n    };\n    if (this.choicesLazyLoadEnabled) {\n      this.resetItemsSettings();\n      this.updateQuestionChoices(updateAfterFilterStringChanged);\n    } else {\n      updateAfterFilterStringChanged();\n    }\n  }\n  get isAllDataLoaded() {\n    return !!this.itemsSettings.totalCount && this.itemsSettings.items.length == this.itemsSettings.totalCount;\n  }\n  loadQuestionChoices(callbackAfterItemsLoaded) {\n    if (this.isAllDataLoaded) return;\n    this._loadQuestionChoices(callbackAfterItemsLoaded);\n  }\n  get canShowSelectedItem() {\n    return !this.focused || this._markdownMode || !this.searchEnabled;\n  }\n  get needRenderInput() {\n    return !this.question.isInputReadOnly || !!this.placeholderRendered;\n  }\n  updateCustomItemValue() {\n    if (this.customValue) {\n      this.customItemValue.text = this.getLocalizationFormatString(\"createCustomItem\", this.customValue);\n      this.customItemValue.visible = true;\n    } else {\n      this.resetCustomItemValue();\n    }\n  }\n  resetCustomItemValue() {\n    this.customItemValue.text = \"\";\n    this.customItemValue.visible = false;\n  }\n  get customItemValue() {\n    if (!this._customItemValue) {\n      this._customItemValue = new ItemValue(\"newCustomItem\", this.getLocalizationFormatString(\"createCustomItem\", this.customValue));\n      this._customItemValue.css = \"sv-list-item--custom-value\";\n    }\n    return this._customItemValue;\n  }\n  applyInputString(item) {\n    const hasHtml = item === null || item === void 0 ? void 0 : item.locText.hasHtml;\n    if (hasHtml || this.question.inputFieldComponentName) {\n      this._markdownMode = true;\n      this.inputString = this.cleanHtml(item === null || item === void 0 ? void 0 : item.locText.getHtmlValue());\n      this.hintString = \"\";\n    } else {\n      this.inputString = item === null || item === void 0 ? void 0 : item.title;\n      this.hintString = item === null || item === void 0 ? void 0 : item.title;\n    }\n  }\n  cleanHtml(html) {\n    if (!this.htmlCleanerElement) return \"\";\n    this.htmlCleanerElement.innerHTML = html;\n    return this.htmlCleanerElement.textContent;\n  }\n  fixInputCase() {\n    const hintStringMiddle = this.hintStringMiddle;\n    if (hintStringMiddle && this.inputString != hintStringMiddle) this.inputString = hintStringMiddle;\n  }\n  applyHintString() {\n    const item = this.listModel.focusedItem || this.question.selectedItem;\n    const hasHtml = item === null || item === void 0 ? void 0 : item.locText.hasHtml;\n    if (hasHtml || this.question.inputFieldComponentName) {\n      this._markdownMode = true;\n      this.hintString = \"\";\n    } else if (item === this.customItemValue) {\n      this.hintString = \"\";\n    } else {\n      this.hintString = item === null || item === void 0 ? void 0 : item.title;\n    }\n  }\n  get inputStringRendered() {\n    return this.inputString || \"\";\n  }\n  set inputStringRendered(val) {\n    var _a;\n    this.inputString = val;\n    this.filterString = val;\n    if (!this.choicesLazyLoadEnabled) {\n      this.processCustomValue();\n    }\n    if (!val || !this.searchEnabled || ((_a = this.listModel.focusedItem) === null || _a === void 0 ? void 0 : _a.id) === this.customItemValue.id) {\n      this.hintString = \"\";\n    }\n  }\n  get placeholderRendered() {\n    return this.hintString || this.question.readOnly || !this.question.isEmpty() ? \"\" : this.inputPlaceholder;\n  }\n  get listElementId() {\n    return this.question.inputId + \"_list\";\n  }\n  get hintStringLC() {\n    var _a;\n    return ((_a = this.hintString) === null || _a === void 0 ? void 0 : _a.toLowerCase()) || \"\";\n  }\n  get inputStringLC() {\n    var _a;\n    return ((_a = this.inputString) === null || _a === void 0 ? void 0 : _a.toLowerCase()) || \"\";\n  }\n  get showHintPrefix() {\n    return !!this.inputString && this.hintStringLC.indexOf(this.inputStringLC) > 0;\n  }\n  get hintStringPrefix() {\n    if (!this.inputString) return null;\n    return this.hintString.substring(0, this.hintStringLC.indexOf(this.inputStringLC));\n  }\n  get showHintString() {\n    return !!this.searchEnabled && !!(this.hintStringLC || this.inputStringLC) || !this.searchEnabled && this.hintStringLC && this.question.isEmpty();\n  }\n  get hintStringSuffix() {\n    return this.hintStringLC.indexOf(this.inputStringLC) >= 0 ? this.hintString.substring(this.hintStringLC.indexOf(this.inputStringLC) + this.inputStringLC.length) : \"\";\n  }\n  get hintStringMiddle() {\n    const start = this.hintStringLC.indexOf(this.inputStringLC);\n    if (start == -1) return null;\n    return this.hintString.substring(start, start + this.inputStringLC.length);\n  }\n  constructor(question, onSelectionChanged) {\n    super();\n    this.question = question;\n    this.onSelectionChanged = onSelectionChanged;\n    this.minPageSize = 25;\n    this.loadingItemHeight = 40;\n    this.timer = undefined;\n    this._markdownMode = false;\n    this.filteredItems = undefined;\n    this.selectedItemSelector = \".sv-list__item--selected\";\n    this.itemSelector = \".sv-list__item\";\n    this.itemsSettings = {\n      skip: 0,\n      take: 0,\n      totalCount: 0,\n      items: []\n    };\n    this.listModelFilterStringChanged = newValue => {\n      if (this.filterString !== newValue) {\n        this.filterString = newValue;\n        if (!this.choicesLazyLoadEnabled) {\n          this.processCustomValue();\n        }\n      }\n    };\n    this.questionPropertyChangedHandler = (sender, options) => {\n      this.onPropertyChangedHandler(sender, options);\n    };\n    this.ariaExpanded = \"false\";\n    this.createLocalizableString(\"clearCaption\", this.question, false, true);\n    this.createLocalizableString(\"selectCaption\", this.question, false, true);\n    this.htmlCleanerElement = DomDocumentHelper.createElement(\"div\");\n    question.onPropertyChanged.add(this.questionPropertyChangedHandler);\n    this.showInputFieldComponent = this.question.showInputFieldComponent;\n    this.listModel = this.createListModel();\n    this.setChoicesLazyLoadEnabled(this.question.choicesLazyLoadEnabled);\n    this.setInputPlaceholder(this.question.placeholder);\n    this.updateAfterListModelCreated(this.listModel);\n    this.setSearchEnabled(this.question.searchEnabled);\n    this.setAllowCustomChoices(this.question.allowCustomChoices);\n    this.setTextWrapEnabled(this.question.textWrapEnabled);\n    this.createPopup();\n    this.createButtons();\n    this.resetItemsSettings();\n    const classes = question.cssClasses;\n    this.updateCssClasses(classes.popup, classes.list);\n  }\n  get popupModel() {\n    return this._popupModel;\n  }\n  get clearCaption() {\n    return this.getLocalizableStringText(\"clearCaption\");\n  }\n  set clearCaption(value) {\n    this.setLocalizableStringText(\"clearCaption\", value);\n  }\n  get locClearCaption() {\n    return this.getLocalizableString(\"clearCaption\");\n  }\n  get selectCaption() {\n    return this.getLocalizableStringText(\"selectCaption\");\n  }\n  set selectCaption(value) {\n    this.setLocalizableStringText(\"selectCaption\", value);\n  }\n  get locSelectCaption() {\n    return this.getLocalizableString(\"selectCaption\");\n  }\n  get inputAvailable() {\n    return this.searchEnabled || this.allowCustomChoices;\n  }\n  get noTabIndex() {\n    return this.question.isInputReadOnly || this.inputAvailable;\n  }\n  get filterReadOnly() {\n    return !this.filterStringEnabled || !this.focused;\n  }\n  get filterStringEnabled() {\n    return !this.question.isInputReadOnly && this.inputAvailable;\n  }\n  get inputMode() {\n    return IsTouch ? \"none\" : \"text\";\n  }\n  get popupEnabled() {\n    return !this.question.isInputReadOnly;\n  }\n  get ariaQuestionRole() {\n    return this.filterStringEnabled ? undefined : \"combobox\";\n  }\n  get ariaQuestionRequired() {\n    return this.ariaQuestionRole ? this.question.a11y_input_ariaRequired : undefined;\n  }\n  get ariaQuestionInvalid() {\n    return this.ariaQuestionRole ? this.question.a11y_input_ariaInvalid : undefined;\n  }\n  get ariaQuestionErrorMessage() {\n    return this.ariaQuestionRole ? this.question.a11y_input_ariaErrormessage : undefined;\n  }\n  get ariaQuestionLabel() {\n    return this.ariaQuestionRole ? this.question.a11y_input_ariaLabel : undefined;\n  }\n  get ariaQuestionLabelledby() {\n    return this.ariaQuestionRole ? this.question.a11y_input_ariaLabelledBy : undefined;\n  }\n  get ariaQuestionDescribedby() {\n    return this.ariaQuestionRole ? this.question.a11y_input_ariaDescribedBy : undefined;\n  }\n  get ariaQuestionControls() {\n    return this.ariaQuestionRole && this.popupEnabled ? this.listElementId : undefined;\n  }\n  get ariaQuestionExpanded() {\n    return this.ariaQuestionRole ? this.popupEnabled ? this.ariaExpanded : \"false\" : undefined;\n  }\n  get ariaQuestionActivedescendant() {\n    return this.ariaQuestionRole ? this.ariaActivedescendant : undefined;\n  }\n  get ariaInputRole() {\n    return this.filterStringEnabled ? \"combobox\" : undefined;\n  }\n  get ariaInputRequired() {\n    return this.ariaInputRole ? this.question.a11y_input_ariaRequired : undefined;\n  }\n  get ariaInputInvalid() {\n    return this.ariaInputRole ? this.question.a11y_input_ariaInvalid : undefined;\n  }\n  get ariaInputErrorMessage() {\n    return this.ariaInputRole ? this.question.a11y_input_ariaErrormessage : undefined;\n  }\n  get ariaInputLabel() {\n    return this.ariaInputRole ? this.question.a11y_input_ariaLabel : undefined;\n  }\n  get ariaInputLabelledby() {\n    return this.ariaInputRole ? this.question.a11y_input_ariaLabelledBy : undefined;\n  }\n  get ariaInputDescribedby() {\n    return this.ariaInputRole ? this.question.a11y_input_ariaDescribedBy : undefined;\n  }\n  get ariaInputControls() {\n    return this.ariaInputRole && this.popupEnabled ? this.listElementId : undefined;\n  }\n  get ariaInputExpanded() {\n    return this.ariaInputRole ? this.popupEnabled ? this.ariaExpanded : \"false\" : undefined;\n  }\n  get ariaInputActivedescendant() {\n    return this.ariaInputRole ? this.ariaActivedescendant : undefined;\n  }\n  setSearchEnabled(newValue) {\n    this.listModel.setSearchEnabled(IsTouch && (newValue || this.question.allowCustomChoices));\n    this.searchEnabled = newValue;\n  }\n  setAllowCustomChoices(newValue) {\n    this.allowCustomChoices = newValue;\n    if (newValue) {\n      this.searchEnabled = newValue;\n    }\n  }\n  setChoicesLazyLoadEnabled(newValue) {\n    this.choicesLazyLoadEnabled = newValue;\n  }\n  setInputPlaceholder(newValue) {\n    this.inputPlaceholder = newValue;\n  }\n  updateItems() {\n    this.listModel.setItems(this.getAvailableItems());\n  }\n  onClick(event) {\n    if (this.question.readOnly || this.question.isDesignMode || this.question.isPreviewStyle || this.question.isReadOnlyAttr) return;\n    this._popupModel.toggleVisibility();\n    this.focusItemOnClickAndPopup();\n    this.question.focusInputElement(false);\n  }\n  chevronPointerDown(event) {\n    if (this._popupModel.isVisible) {\n      event.preventDefault();\n    }\n  }\n  onPropertyChangedHandler(sender, options) {\n    if (options.name == \"value\") {\n      this.showInputFieldComponent = this.question.showInputFieldComponent;\n    }\n    if (options.name == \"textWrapEnabled\") {\n      this.setTextWrapEnabled(options.newValue);\n    }\n  }\n  focusItemOnClickAndPopup() {\n    if (this._popupModel.isVisible && this.question.value) this.changeSelectionWithKeyboard(false);\n  }\n  onClear(event) {\n    this.question.clearValue(true);\n    this._popupModel.hide();\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  getSelectedAction() {\n    return this.question.selectedItem || null;\n  }\n  changeSelectionWithKeyboard(reverse) {\n    var _a;\n    let focusedItem = this.listModel.focusedItem;\n    if (!focusedItem && this.question.selectedItem) {\n      if (ItemValue.getItemByValue(this.question.visibleChoices, this.question.value)) {\n        this.listModel.focusedItem = this.question.selectedItem;\n      }\n    } else {\n      if (reverse) {\n        this.listModel.focusPrevVisibleItem();\n      } else {\n        this.listModel.focusNextVisibleItem();\n      }\n    }\n    this.beforeScrollToFocusedItem(focusedItem);\n    this.scrollToFocusedItem();\n    this.afterScrollToFocusedItem();\n    this.ariaActivedescendant = (_a = this.listModel.focusedItem) === null || _a === void 0 ? void 0 : _a.elementId;\n  }\n  beforeScrollToFocusedItem(focusedItem) {\n    if (this.question.value && focusedItem) {\n      focusedItem.selectedValue = false;\n      this.listModel.focusedItem.selectedValue = !this.listModel.filterString;\n      this.question.suggestedItem = this.listModel.focusedItem;\n    }\n  }\n  afterScrollToFocusedItem() {\n    var _a;\n    if (this.question.value && !this.listModel.filterString && this.searchEnabled) {\n      this.applyInputString(this.listModel.focusedItem || this.question.selectedItem);\n    } else {\n      this.applyHintString();\n    }\n    this.fixInputCase();\n    this.ariaActivedescendant = (_a = this.listModel.focusedItem) === null || _a === void 0 ? void 0 : _a.elementId;\n  }\n  keyHandler(event) {\n    let isStopPropagation = false;\n    const char = event.which || event.keyCode;\n    if (this.popupModel.isVisible && event.keyCode === 38) {\n      this.changeSelectionWithKeyboard(true);\n      isStopPropagation = true;\n    } else if (event.keyCode === 40) {\n      this.popupModel.show();\n      this.changeSelectionWithKeyboard(false);\n      isStopPropagation = true;\n    } else if (!this.popupModel.isVisible && event.keyCode === 32) {\n      this.popupModel.show();\n      this.changeSelectionWithKeyboard(false);\n      isStopPropagation = true;\n    } else if (!this.popupModel.isVisible && event.keyCode === 13) {\n      this.question.survey.questionEditFinishCallback(this.question, event);\n      isStopPropagation = true;\n    } else if (this.popupModel.isVisible && (event.keyCode === 13 || event.keyCode === 32 && (!this.searchEnabled || !this.inputString))) {\n      if (event.keyCode === 13 && this.searchEnabled && !this.inputString && this.question instanceof QuestionDropdownModel && !this._markdownMode && this.question.value) {\n        this._popupModel.hide();\n        this.onClear(event);\n      } else {\n        this.listModel.selectFocusedItem();\n        this.onFocus(event);\n      }\n      isStopPropagation = true;\n    } else if (char === 46 || char === 8) {\n      if (!this.inputAvailable) {\n        this.onClear(event);\n      }\n    } else if (event.keyCode === 27) {\n      this._popupModel.hide();\n      this.hintString = \"\";\n      this.onEscape();\n    } else {\n      if (event.keyCode === 38 || event.keyCode === 40 || event.keyCode === 32 && !this.searchEnabled) {\n        isStopPropagation = true;\n      }\n      if (event.keyCode === 32 && this.searchEnabled) {\n        return;\n      }\n      doKey2ClickUp(event, {\n        processEsc: false,\n        disableTabStop: this.question.isInputReadOnly\n      });\n    }\n    if (isStopPropagation) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  onEscape() {\n    if (this.searchEnabled) this.applyInputString(this.question.selectedItem);\n  }\n  onScroll(event) {\n    const target = event.target;\n    if (target.scrollHeight - (target.scrollTop + target.offsetHeight) <= this.loadingItemHeight) {\n      this.updateQuestionChoices();\n    }\n  }\n  onBlur(event) {\n    if (this.checkFocusRemainsWithinComponent(event)) return;\n    this.focused = false;\n    if (this.popupModel.isVisible && this.popupModel.displayMode == \"overlay\") {\n      return;\n    }\n    doKey2ClickBlur(event);\n    this._popupModel.hide();\n    this.resetFilterString();\n    this.inputString = null;\n    this.hintString = \"\";\n    event.stopPropagation();\n  }\n  onFocus(event) {\n    this.focused = true;\n    this.setInputStringFromSelectedItem(this.question.selectedItem);\n  }\n  setInputStringFromSelectedItem(newValue) {\n    if (!this.focused) return;\n    if (this.searchEnabled && !!newValue) {\n      this.applyInputString(newValue);\n    } else {\n      this.inputString = null;\n    }\n  }\n  dispose() {\n    super.dispose();\n    this.question && this.question.onPropertyChanged.remove(this.questionPropertyChangedHandler);\n    this.questionPropertyChangedHandler = undefined;\n    if (!!this.listModel) {\n      this.listModel.dispose();\n    }\n    if (!!this.popupModel) {\n      this.popupModel.dispose();\n    }\n    this.htmlCleanerElement = undefined;\n  }\n  scrollToFocusedItem() {\n    this.listModel.scrollToFocusedItem();\n  }\n}\n__decorate([property({\n  defaultValue: false\n})], DropdownListModel.prototype, \"focused\", void 0);\n__decorate([property({\n  defaultValue: false\n})], DropdownListModel.prototype, \"allowCustomChoices\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    target.updateCustomItemValue();\n  }\n})], DropdownListModel.prototype, \"customValue\", void 0);\n__decorate([property({\n  defaultValue: true\n})], DropdownListModel.prototype, \"searchEnabled\", void 0);\n__decorate([property()], DropdownListModel.prototype, \"choicesLazyLoadEnabled\", void 0);\n__decorate([property({\n  defaultValue: \"\",\n  onSet: (_, target) => {\n    target.onSetFilterString();\n  }\n})], DropdownListModel.prototype, \"filterString\", void 0);\n__decorate([property({\n  defaultValue: \"\",\n  onSet: (newValue, target) => {\n    target.question.inputHasValue = !!newValue;\n  }\n})], DropdownListModel.prototype, \"inputString\", void 0);\n__decorate([property({})], DropdownListModel.prototype, \"showInputFieldComponent\", void 0);\n__decorate([property()], DropdownListModel.prototype, \"ariaActivedescendant\", void 0);\n__decorate([property()], DropdownListModel.prototype, \"ariaExpanded\", void 0);\n__decorate([property()], DropdownListModel.prototype, \"inputPlaceholder\", void 0);\n__decorate([property({\n  defaultValue: false,\n  onSet: (newVal, target) => {\n    if (newVal) {\n      target.listModel.addScrollEventListener(e => {\n        target.onScroll(e);\n      });\n    } else {\n      target.listModel.removeScrollEventListener();\n    }\n  }\n})], DropdownListModel.prototype, \"hasScroll\", void 0);\n__decorate([property({\n  defaultValue: \"\"\n})], DropdownListModel.prototype, \"hintString\", void 0);\n\n/**\n * A class that describes the Dropdown question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-dropdown/ (linkStyle))\n */\nclass QuestionDropdownModel extends QuestionSelectBase {\n  constructor(name) {\n    super(name);\n    this.lastSelectedItemValue = null;\n    this.minMaxChoices = [];\n    this.onOpened = this.addEvent();\n    this.createLocalizableString(\"placeholder\", this, false, true);\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.registerPropertyChangedHandlers([\"choicesMin\", \"choicesMax\", \"choicesStep\"], () => {\n      this.onVisibleChoicesChanged();\n    });\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"showOtherItem\", \"otherText\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.getSingleSelectedItem();\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    this.updateInputPlaceholder(this.placeholder);\n  }\n  updateReadOnlyText() {\n    this.readOnlyText = this.calculateReadOnlyText();\n  }\n  updateInputPlaceholder(val) {\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.setInputPlaceholder(val);\n    }\n  }\n  get showOptionsCaption() {\n    return this.allowClear;\n  }\n  set showOptionsCaption(val) {\n    this.allowClear = val;\n  }\n  get showClearButton() {\n    return this.allowClear && !this.isEmpty();\n  }\n  get optionsCaption() {\n    return this.placeholder;\n  }\n  set optionsCaption(val) {\n    this.placeholder = val;\n  }\n  /**\n   * A placeholder for the input field.\n   */\n  get placeholder() {\n    return this.getLocalizableStringText(\"placeholder\");\n  }\n  set placeholder(val) {\n    this.setLocalizableStringText(\"placeholder\", val);\n    this.updateInputPlaceholder(val);\n  }\n  get locPlaceholder() {\n    return this.getLocalizableString(\"placeholder\");\n  }\n  getType() {\n    return \"dropdown\";\n  }\n  get isNewA11yStructure() {\n    return true;\n  }\n  get a11yQuestionAriaRole() {\n    return this.searchEnabled ? null : \"combobox\";\n  }\n  get a11yInputAriaRole() {\n    return this.searchEnabled ? \"combobox\" : null;\n  }\n  /**\n   * Returns the selected choice item. If no item is selected, returns `null`.\n   */\n  get selectedItem() {\n    return this.getSingleSelectedItem();\n  }\n  onGetSingleSelectedItem(selectedItemByValue) {\n    if (!!selectedItemByValue) {\n      this.lastSelectedItemValue = selectedItemByValue;\n    }\n  }\n  supportAutoAdvance() {\n    return !this.isOtherSelected;\n  }\n  getChoices() {\n    var items = super.getChoices();\n    if (this.choicesMax <= this.choicesMin) return items;\n    var res = [];\n    for (var i = 0; i < items.length; i++) {\n      res.push(items[i]);\n    }\n    if (this.minMaxChoices.length === 0 || this.minMaxChoices.length !== (this.choicesMax - this.choicesMin) / this.choicesStep + 1) {\n      this.minMaxChoices = [];\n      for (var i = this.choicesMin; i <= this.choicesMax; i += this.choicesStep) {\n        this.minMaxChoices.push(this.createItemValue(i));\n      }\n    }\n    res = res.concat(this.minMaxChoices);\n    return res;\n  }\n  /**\n   * Use the `choicesMin`, `choicesMax`, and `choicesStep` properties to generate choice items automatically. For example, the configuration below generates three choice items: [10, 20, 30].\n   *\n   * ```js\n   * \"choicesMin\": 10,\n   * \"choicesMax\": 30\n   * \"choicesStep\": 10\n   * ```\n   * @see choicesMax\n   * @see choicesStep\n   */\n  get choicesMin() {\n    return this.getPropertyValue(\"choicesMin\");\n  }\n  set choicesMin(val) {\n    this.setPropertyValue(\"choicesMin\", val);\n  }\n  /**\n   * Use the `choicesMin`, `choicesMax`, and `choicesStep` properties to generate choice items automatically. For example, the configuration below generates three choice items: [10, 20, 30].\n   *\n   * ```js\n   * \"choicesMin\": 10,\n   * \"choicesMax\": 30\n   * \"choicesStep\": 10\n   * ```\n   * @see choicesMin\n   * @see choicesStep\n   */\n  get choicesMax() {\n    return this.getPropertyValue(\"choicesMax\");\n  }\n  set choicesMax(val) {\n    this.setPropertyValue(\"choicesMax\", val);\n  }\n  /**\n   * Use the `choicesMin`, `choicesMax`, and `choicesStep` properties to generate choice items automatically. For example, the configuration below generates three choice items: [10, 20, 30].\n   *\n   * ```js\n   * \"choicesMin\": 10,\n   * \"choicesMax\": 30\n   * \"choicesStep\": 10\n   * ```\n   *\n   * The default value of the `choicesStep` property is 1.\n   * @see choicesMin\n   * @see choicesMax\n   */\n  get choicesStep() {\n    return this.getPropertyValue(\"choicesStep\");\n  }\n  set choicesStep(val) {\n    if (val < 1) val = 1;\n    this.setPropertyValue(\"choicesStep\", val);\n  }\n  get autocomplete() {\n    return this.getPropertyValue(\"autocomplete\");\n  }\n  set autocomplete(val) {\n    this.setPropertyValue(\"autocomplete\", val);\n  }\n  get readOnlyText() {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  set readOnlyText(val) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText() {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n  calculateReadOnlyText() {\n    if (this.renderAs == \"select\") {\n      if (this.isOtherSelected) return this.otherText;\n      if (this.isNoneSelected) return this.noneText;\n      if (!!this.selectedItem) return this.selectedItemText;\n    }\n    return !!this.selectedItem ? this.selectedItemText : this.placeholder;\n  }\n  getControlClass() {\n    return new CssClassBuilder().append(this.cssClasses.control).append(this.cssClasses.controlEmpty, this.isEmpty()).append(this.cssClasses.onError, this.hasCssError()).append(this.cssClasses.controlDisabled, this.isDisabledStyle).append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle).append(this.cssClasses.controlPreview, this.isPreviewStyle).append(this.cssClasses.controlInputFieldComponent, !!this.inputFieldComponentName).toString();\n  }\n  updateCssClasses(res, css) {\n    super.updateCssClasses(res, css);\n    if (this.useDropdownList) {\n      updateListCssValues(res, css);\n    }\n  }\n  calcCssClasses(css) {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModel.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n  get selectedItemLocText() {\n    const item = this.suggestedItem || this.selectedItem;\n    return item === null || item === void 0 ? void 0 : item.locText;\n  }\n  get inputFieldComponentName() {\n    return this.inputFieldComponent || this.itemComponent;\n  }\n  get showSelectedItemLocText() {\n    return !this.inputHasValue && !this.inputFieldComponentName && !!this.selectedItemLocText && this.dropdownListModel.canShowSelectedItem;\n  }\n  get showInputFieldComponent() {\n    return !this.inputHasValue && !!this.inputFieldComponentName && !this.isEmpty();\n  }\n  get selectedItemText() {\n    const item = this.selectedItem;\n    return !!item ? item.text : \"\";\n  }\n  get useDropdownList() {\n    return this.renderAs !== \"select\";\n  }\n  get dropdownListModel() {\n    if (this.useDropdownList && !this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownListModel(this);\n    }\n    return this.dropdownListModelValue;\n  }\n  set dropdownListModel(val) {\n    this.dropdownListModelValue = val;\n  }\n  get popupModel() {\n    return this.dropdownListModel.popupModel;\n  }\n  onOpenedCallBack() {\n    this.onOpened.fire(this, {\n      question: this,\n      choices: this.choices\n    });\n  }\n  onSelectedItemValuesChangedHandler(newValue) {\n    var _a;\n    (_a = this.dropdownListModelValue) === null || _a === void 0 ? void 0 : _a.setInputStringFromSelectedItem(newValue);\n    super.onSelectedItemValuesChangedHandler(newValue);\n  }\n  hasUnknownValue(val, includeOther, isFilteredChoices, checkEmptyValue) {\n    if (this.choicesLazyLoadEnabled) {\n      return false;\n    }\n    return super.hasUnknownValue(val, includeOther, isFilteredChoices, checkEmptyValue);\n  }\n  needConvertRenderedOtherToDataValue() {\n    var _a;\n    const val = (_a = this.otherValue) === null || _a === void 0 ? void 0 : _a.trim();\n    if (!val) return false;\n    return super.hasUnknownValue(val, true, false);\n  }\n  getItemIfChoicesNotContainThisValue(value, text) {\n    if (this.choicesLazyLoadEnabled) {\n      return this.createItemValue(value, text);\n    } else {\n      return super.getItemIfChoicesNotContainThisValue(value, text);\n    }\n  }\n  onVisibleChoicesChanged() {\n    super.onVisibleChoicesChanged();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.updateItems();\n    }\n  }\n  canAddCustomChoices() {\n    return this.allowCustomChoices;\n  }\n  getIsQuestionReady() {\n    return super.getIsQuestionReady() && !this.isChoicesLoading;\n  }\n  ensureQuestionIsReady() {\n    super.ensureQuestionIsReady();\n    if (!!this.dropdownListModel && this.choicesLazyLoadEnabled) {\n      this.dropdownListModel.loadQuestionChoices();\n    }\n  }\n  setIsChoicesLoading(value) {\n    this.isChoicesLoading = value;\n    this.updateIsReady();\n  }\n  getFirstInputElementId() {\n    return this.inputId + (this.searchEnabled || this.allowCustomChoices ? \"_0\" : \"\");\n  }\n  getInputId() {\n    return this.inputId + \"_0\";\n  }\n  clearValue(keepComment) {\n    var _a;\n    super.clearValue(keepComment);\n    this.lastSelectedItemValue = null;\n    (_a = this.dropdownListModelValue) === null || _a === void 0 ? void 0 : _a.clear();\n  }\n  afterRenderCore(el) {\n    super.afterRenderCore(el);\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.clear();\n    }\n  }\n  onClick(e) {\n    !!this.onOpenedCallBack && this.onOpenedCallBack();\n  }\n  onKeyUp(event) {\n    const char = event.which || event.keyCode;\n    if (char === 46) {\n      this.clearValue(true);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  supportEmptyValidation() {\n    return true;\n  }\n  onBlurCore(event) {\n    this.dropdownListModel.onBlur(event);\n    super.onBlurCore(event);\n  }\n  onFocusCore(event) {\n    this.dropdownListModel.onFocus(event);\n    super.onFocusCore(event);\n  }\n  dispose() {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n}\n__decorate([property()], QuestionDropdownModel.prototype, \"allowClear\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (!!target.dropdownListModelValue) {\n      target.dropdownListModel.setSearchEnabled(newValue);\n    }\n  }\n})], QuestionDropdownModel.prototype, \"searchEnabled\", void 0);\n__decorate([property()], QuestionDropdownModel.prototype, \"searchMode\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (!!target.dropdownListModelValue) {\n      target.dropdownListModel.setAllowCustomChoices(newValue);\n    }\n  }\n})], QuestionDropdownModel.prototype, \"allowCustomChoices\", void 0);\n__decorate([property()], QuestionDropdownModel.prototype, \"textWrapEnabled\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionDropdownModel.prototype, \"inputHasValue\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (!!target.dropdownListModelValue) {\n      target.dropdownListModel.setChoicesLazyLoadEnabled(newValue);\n    }\n  }\n})], QuestionDropdownModel.prototype, \"choicesLazyLoadEnabled\", void 0);\n__decorate([property()], QuestionDropdownModel.prototype, \"choicesLazyLoadPageSize\", void 0);\n__decorate([property()], QuestionDropdownModel.prototype, \"suggestedItem\", void 0);\nSerializer.addClass(\"dropdown\", [{\n  name: \"placeholder\",\n  alternativeName: \"optionsCaption\",\n  serializationProperty: \"locPlaceholder\"\n}, {\n  name: \"allowClear:boolean\",\n  alternativeName: \"showOptionsCaption\",\n  default: true\n}, {\n  name: \"choicesMin:number\",\n  default: 0\n}, {\n  name: \"choicesMax:number\",\n  default: 0\n}, {\n  name: \"choicesStep:number\",\n  default: 1,\n  minValue: 1\n}, {\n  name: \"autocomplete\",\n  alternativeName: \"autoComplete\",\n  choices: settings.questions.dataList\n}, {\n  name: \"textWrapEnabled:boolean\",\n  default: true\n}, {\n  name: \"renderAs\",\n  default: \"default\",\n  visible: false\n}, {\n  name: \"searchEnabled:boolean\",\n  default: true,\n  visible: false\n}, {\n  name: \"allowCustomChoices:boolean\",\n  default: false,\n  visibleIf: obj => !obj.choicesFromQuestion,\n  dependsOn: \"choicesFromQuestion\"\n}, {\n  name: \"searchMode\",\n  default: \"contains\",\n  choices: [\"contains\", \"startsWith\"]\n}, {\n  name: \"choicesLazyLoadEnabled:boolean\",\n  default: false,\n  visible: false\n}, {\n  name: \"choicesLazyLoadPageSize:number\",\n  default: 25,\n  visible: false\n}, {\n  name: \"inputFieldComponent\",\n  visible: false\n}, {\n  name: \"itemComponent\",\n  visible: false,\n  default: \"\"\n}], function () {\n  return new QuestionDropdownModel(\"\");\n}, \"selectbase\");\nQuestionFactory.Instance.registerQuestion(\"dropdown\", name => {\n  var q = new QuestionDropdownModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\nclass MatrixRowModel extends Base {\n  constructor(item, fullName, data, value) {\n    super();\n    this.item = item;\n    this.fullName = fullName;\n    this.data = data;\n    this.setValueDirectly(value);\n    this.cellClick = column => {\n      this.value = column.value;\n    };\n    this.registerPropertyChangedHandlers([\"value\"], () => {\n      if (this.data) this.data.onMatrixRowChanged(this);\n    });\n    if (this.data && this.data.hasErrorInRow(this)) {\n      this.hasError = true;\n    }\n  }\n  get name() {\n    return this.item.value;\n  }\n  get text() {\n    return this.item.text;\n  }\n  get locText() {\n    return this.item.locText;\n  }\n  get value() {\n    return this.getPropertyValue(\"value\");\n  }\n  set value(val) {\n    if (!this.isReadOnly) {\n      this.setValueDirectly(this.data.getCorrectedRowValue(val));\n    }\n  }\n  setValueDirectly(val) {\n    this.setPropertyValue(\"value\", val);\n  }\n  get isReadOnly() {\n    return !this.item.enabled || this.data.isInputReadOnly;\n  }\n  get isReadOnlyAttr() {\n    return this.data.isReadOnlyAttr;\n  }\n  get isDisabledAttr() {\n    return !this.item.enabled || this.data.isDisabledAttr;\n  }\n  get rowTextClasses() {\n    return new CssClassBuilder().append(this.data.cssClasses.rowTextCell).toString();\n  }\n  get hasError() {\n    return this.getPropertyValue(\"hasError\", false);\n  }\n  set hasError(val) {\n    this.setPropertyValue(\"hasError\", val);\n  }\n  get rowClasses() {\n    const cssClasses = this.data.cssClasses;\n    return new CssClassBuilder().append(cssClasses.row).append(cssClasses.rowError, this.hasError).append(cssClasses.rowReadOnly, this.isReadOnly).append(cssClasses.rowDisabled, this.data.isDisabledStyle).toString();\n  }\n}\nclass MatrixCells extends Base {\n  constructor(cellsOwner) {\n    super();\n    this.cellsOwner = cellsOwner;\n    this.values = {};\n    this.locs = {};\n  }\n  getType() {\n    return \"cells\";\n  }\n  get isEmpty() {\n    return Object.keys(this.values).length == 0;\n  }\n  valuesChanged() {\n    if (!this.locNotification && !!this.onValuesChanged) {\n      this.onValuesChanged();\n    }\n  }\n  getDefaultCellLocText(column) {\n    return this.getCellLocCore(this.defaultRowValue, column);\n  }\n  getCellDisplayLocText(row, column) {\n    return this.getCellLocCore(row, column);\n  }\n  getCellLocCore(row, col) {\n    row = this.getCellRowColumnValue(row, this.rows);\n    col = this.getCellRowColumnValue(col, this.columns);\n    if (Helpers.isValueEmpty(row) || Helpers.isValueEmpty(col)) return null;\n    if (!this.locs[row]) {\n      this.locs[row] = {};\n    }\n    let res = this.locs[row][col];\n    if (!res) {\n      res = this.createString();\n      res.setJson(this.getCellLocData(row, col));\n      res.onGetTextCallback = str => {\n        if (!str) {\n          const column = ItemValue.getItemByValue(this.columns, col);\n          if (column) {\n            return column.locText.getJson() || column.value;\n          }\n        }\n        return str;\n      };\n      res.onStrChanged = (oldValue, newValue) => {\n        this.updateValues(row, col, newValue);\n      };\n      this.locs[row][col] = res;\n    }\n    return res;\n  }\n  get defaultRowValue() {\n    return settings.matrix.defaultRowName;\n  }\n  getCellLocData(row, col) {\n    let data = this.getCellLocDataFromValue(row, col);\n    if (data) return data;\n    return this.getCellLocDataFromValue(this.defaultRowValue, col);\n  }\n  getCellLocDataFromValue(row, column) {\n    if (!this.values[row]) return null;\n    if (!this.values[row][column]) return null;\n    return this.values[row][column];\n  }\n  getCellText(row, column) {\n    var loc = this.getCellLocCore(row, column);\n    return loc ? loc.calculatedText : null;\n  }\n  setCellText(row, column, val) {\n    const loc = this.getCellLocCore(row, column);\n    if (loc) {\n      loc.text = val;\n    }\n  }\n  updateValues(row, column, val) {\n    if (val) {\n      if (!this.values[row]) this.values[row] = {};\n      this.values[row][column] = val;\n      this.valuesChanged();\n    } else {\n      if (this.values[row] && this.values[row][column]) {\n        delete this.values[row][column];\n        if (Object.keys(this.values[row]).length == 0) {\n          delete this.values[row];\n        }\n        this.valuesChanged();\n      }\n    }\n  }\n  getDefaultCellText(column) {\n    var loc = this.getCellLocCore(this.defaultRowValue, column);\n    return loc ? loc.calculatedText : null;\n  }\n  setDefaultCellText(column, val) {\n    this.setCellText(this.defaultRowValue, column, val);\n  }\n  getCellDisplayText(row, column) {\n    var loc = this.getCellDisplayLocText(row, column);\n    return loc ? loc.calculatedText : null;\n  }\n  get rows() {\n    return this.cellsOwner ? this.cellsOwner.getRows() : [];\n  }\n  get columns() {\n    return this.cellsOwner ? this.cellsOwner.getColumns() : [];\n  }\n  getCellRowColumnValue(val, values) {\n    if (val === null || val === undefined) return null;\n    if (typeof val == \"number\") {\n      if (val < 0 || val >= values.length) return null;\n      val = values[val].value;\n    }\n    if (val.value) return val.value;\n    return val;\n  }\n  getJson() {\n    if (this.isEmpty) return null;\n    const defaultRow = this.values[this.defaultRowValue];\n    const res = {};\n    for (let row in this.values) {\n      const resRow = {};\n      const rowValues = this.values[row];\n      for (let col in rowValues) {\n        if (row === this.defaultRowValue || !defaultRow || defaultRow[col] !== rowValues[col]) {\n          const loc = this.getCellLocCore(row, col);\n          resRow[col] = loc ? loc.getJson() : rowValues[col];\n        }\n      }\n      res[row] = resRow;\n    }\n    return res;\n  }\n  setJson(value, isLoading) {\n    this.values = {};\n    if (!!value) {\n      for (var row in value) {\n        if (row == \"pos\") continue;\n        var rowValues = value[row];\n        this.values[row] = {};\n        for (var col in rowValues) {\n          if (col == \"pos\") continue;\n          this.values[row][col] = rowValues[col];\n        }\n      }\n    }\n    this.locNotification = true;\n    this.runFuncOnLocs((row, col, loc) => loc.setJson(this.getCellLocData(row, col)));\n    this.locNotification = false;\n    this.valuesChanged();\n  }\n  locStrsChanged() {\n    this.runFuncOnLocs((row, col, loc) => loc.strChanged());\n  }\n  runFuncOnLocs(func) {\n    for (let row in this.locs) {\n      const rowValues = this.locs[row];\n      for (let col in rowValues) {\n        func(row, col, rowValues[col]);\n      }\n    }\n  }\n  createString() {\n    return new LocalizableString(this.cellsOwner, true);\n  }\n}\n/**\n  * A class that describes the Single-Select Matrix question type.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n  */\nclass QuestionMatrixModel extends QuestionMatrixBaseModel {\n  constructor(name) {\n    super(name);\n    this.isRowChanging = false;\n    this.emptyLocalizableString = new LocalizableString(this);\n    this.cellsValue = new MatrixCells(this);\n    this.cellsValue.onValuesChanged = () => {\n      this.updateHasCellText();\n      this.propertyValueChanged(\"cells\", this.cells, this.cells);\n    };\n    this.registerPropertyChangedHandlers([\"columns\"], () => {\n      this.onColumnsChanged();\n    });\n    this.registerPropertyChangedHandlers([\"rows\"], () => {\n      this.runCondition(this.getDataFilteredValues(), this.getDataFilteredProperties());\n      this.onRowsChanged();\n    });\n    this.registerPropertyChangedHandlers([\"hideIfRowsEmpty\"], () => {\n      this.updateVisibilityBasedOnRows();\n    });\n  }\n  getType() {\n    return \"matrix\";\n  }\n  /**\n   * The name of a component used to render cells.\n   */\n  get cellComponent() {\n    return this.getPropertyValue(\"cellComponent\");\n  }\n  set itemComponent(value) {\n    this.setPropertyValue(\"cellComponent\", value);\n  }\n  get hasSingleInput() {\n    return false;\n  }\n  /**\n   * Specifies whether each row requires an answer. If a respondent skips a row, the question displays a validation error.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/single-selection-matrix-table-question/ (linkStyle))\n   * @see isRequired\n   * @see eachRowUnique\n   * @see validators\n   */\n  get eachRowRequired() {\n    return this.getPropertyValue(\"eachRowRequired\");\n  }\n  set eachRowRequired(val) {\n    this.setPropertyValue(\"eachRowRequired\", val);\n  }\n  /**\n   * @deprecated Use the [`eachRowRequired`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model#eachRowRequired) property instead.\n   */\n  get isAllRowRequired() {\n    return this.eachRowRequired;\n  }\n  set isAllRowRequired(val) {\n    this.eachRowRequired = val;\n  }\n  /**\n   * Specifies whether answers in all rows should be unique. If any answers duplicate, the question displays a validation error.\n   * @see eachRowRequired\n   * @see validators\n   */\n  get eachRowUnique() {\n    return this.getPropertyValue(\"eachRowUnique\");\n  }\n  set eachRowUnique(val) {\n    this.setPropertyValue(\"eachRowUnique\", val);\n  }\n  get hasRows() {\n    return this.rows.length > 0;\n  }\n  /**\n   * Specifies a sort order for matrix rows.\n   *\n   * Possible values:\n   *\n   * - `\"initial\"` (default) - Preserves the original order of the `rows` array.\n   * - `\"random\"` - Arranges matrix rows in random order each time the question is displayed.\n   * @see rows\n   */\n  get rowOrder() {\n    return this.getPropertyValue(\"rowOrder\");\n  }\n  set rowOrder(val) {\n    val = val.toLowerCase();\n    if (val == this.rowOrder) return;\n    this.setPropertyValue(\"rowOrder\", val);\n    this.onRowsChanged();\n  }\n  /**\n   * @deprecated Use the [`rowOrder`](https://surveyjs.io/form-library/documentation/api-reference/matrix-table-question-model#rowOrder) property instead.\n   */\n  get rowsOrder() {\n    return this.rowOrder;\n  }\n  set rowsOrder(val) {\n    this.rowOrder = val;\n  }\n  /**\n   * Specifies whether to hide the question when the matrix has no visible rows.\n   * @see rowsVisibleIf\n   */\n  get hideIfRowsEmpty() {\n    return this.getPropertyValue(\"hideIfRowsEmpty\");\n  }\n  set hideIfRowsEmpty(val) {\n    this.setPropertyValue(\"hideIfRowsEmpty\", val);\n  }\n  getRows() {\n    return this.rows;\n  }\n  getColumns() {\n    return this.visibleColumns;\n  }\n  addColumn(value, text) {\n    var col = new ItemValue(value, text);\n    this.columns.push(col);\n    return col;\n  }\n  getItemClass(row, column) {\n    const isChecked = row.value == column.value;\n    const isDisabled = this.isReadOnly;\n    const allowHover = !isChecked && !isDisabled;\n    const hasCellText = this.hasCellText;\n    const css = this.cssClasses;\n    return new CssClassBuilder().append(css.cell, hasCellText).append(hasCellText ? css.cellText : css.label).append(css.itemOnError, !hasCellText && (this.eachRowRequired || this.eachRowUnique ? row.hasError : this.hasCssError())).append(hasCellText ? css.cellTextSelected : css.itemChecked, isChecked).append(hasCellText ? css.cellTextDisabled : css.itemDisabled, this.isDisabledStyle).append(hasCellText ? css.cellTextReadOnly : css.itemReadOnly, this.isReadOnlyStyle).append(hasCellText ? css.cellTextPreview : css.itemPreview, this.isPreviewStyle).append(css.itemHover, allowHover && !hasCellText).toString();\n  }\n  get itemSvgIcon() {\n    if (this.isPreviewStyle && this.cssClasses.itemPreviewSvgIconId) {\n      return this.cssClasses.itemPreviewSvgIconId;\n    }\n    return this.cssClasses.itemSvgIconId;\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.cells.locStrsChanged();\n  }\n  getQuizQuestionCount() {\n    var res = 0;\n    for (var i = 0; i < this.rows.length; i++) {\n      if (!this.isValueEmpty(this.correctAnswer[this.rows[i].value])) res++;\n    }\n    return res;\n  }\n  getCorrectAnswerCount() {\n    var res = 0;\n    var value = this.value;\n    for (var i = 0; i < this.rows.length; i++) {\n      var row = this.rows[i].value;\n      if (!this.isValueEmpty(value[row]) && this.isTwoValueEquals(this.correctAnswer[row], value[row])) res++;\n    }\n    return res;\n  }\n  runConditionCore(values, properties) {\n    ItemValue.runEnabledConditionsForItems(this.rows, undefined, values, properties);\n    super.runConditionCore(values, properties);\n  }\n  createRowsVisibleIfRunner() {\n    return !!this.rowsVisibleIf ? new ConditionRunner(this.rowsVisibleIf) : null;\n  }\n  onRowsChanged() {\n    this.clearGeneratedRows();\n    super.onRowsChanged();\n  }\n  getVisibleRows() {\n    if (!!this.generatedVisibleRows) return this.generatedVisibleRows;\n    const result = new Array();\n    let val = this.value;\n    if (!val) val = {};\n    const rows = this.filteredRows || this.rows;\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      if (this.isValueEmpty(row.value)) continue;\n      const rowId = this.id + \"_\" + row.value.toString().replace(/\\s/g, \"_\");\n      result.push(this.createMatrixRow(row, rowId, val[row.value]));\n    }\n    this.generatedVisibleRows = result;\n    return result;\n  }\n  getRowByName(name) {\n    const rows = this.visibleRows;\n    for (let i = 0; i < rows.length; i++) {\n      if (rows[i].name === name) return rows[i];\n    }\n    return null;\n  }\n  getSingleInputQuestionsCore(question, checkDynamic) {\n    if (!!this.nestedQuestionsValue) return this.nestedQuestionsValue;\n    const res = [];\n    this.visibleRows.forEach(row => {\n      const question = Serializer.createClass(\"radiogroup\");\n      question.name = row.name;\n      question.locTitle.sharedData = row.locText;\n      question.choices = this.visibleColumns;\n      question.value = row.value;\n      question.isRequired = this.isAllRowRequired;\n      question.setSurveyImpl(this);\n      question.setParentQuestion(this);\n      res.push(question);\n    });\n    this.nestedQuestionsValue = res;\n    return res;\n  }\n  resetSingleInput() {\n    super.resetSingleInput();\n    if (this.nestedQuestionsValue) {\n      this.nestedQuestionsValue.forEach(q => q.dispose());\n      this.nestedQuestionsValue = null;\n    }\n  }\n  //#region For simple radiogroup questions setSurveyImpl\n  getSurveyData() {\n    return this;\n  }\n  getTextProcessor() {\n    var _a;\n    return (_a = this.surveyImpl) === null || _a === void 0 ? void 0 : _a.getTextProcessor();\n  }\n  getValue(name) {\n    const row = this.getRowByName(name);\n    return !!row ? row.value : undefined;\n  }\n  setValue(name, newValue, locNotification, allowNotifyValueChanged, questionName) {\n    this.getRowByName(name).value = newValue;\n  }\n  getVariable(name) {\n    var _a;\n    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.getVariable(name);\n  }\n  setVariable(name, newValue) {\n    var _a;\n    (_a = this.data) === null || _a === void 0 ? void 0 : _a.setVariable(name, newValue);\n  }\n  getComment(name) {\n    var _a;\n    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.getComment(name);\n  }\n  setComment(name, newValue, locNotification) {\n    var _a;\n    (_a = this.data) === null || _a === void 0 ? void 0 : _a.setComment(name, newValue, locNotification);\n  }\n  getAllValues() {\n    var _a;\n    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.getAllValues();\n  }\n  getFilteredValues() {\n    var _a;\n    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.getFilteredValues();\n  }\n  getFilteredProperties() {\n    var _a;\n    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.getFilteredProperties();\n  }\n  findQuestionByName(name) {\n    var _a;\n    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.findQuestionByName(name);\n  }\n  getEditingSurveyElement() {\n    var _a;\n    return (_a = this.data) === null || _a === void 0 ? void 0 : _a.getEditingSurveyElement();\n  }\n  //#endregion\n  sortVisibleRows(array) {\n    if (!!this.survey && this.survey.isDesignMode) return array;\n    var order = this.rowOrder.toLowerCase();\n    if (order === \"random\") return Helpers.randomizeArray(array);\n    return array;\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.rows = this.sortVisibleRows(this.rows);\n    this.onRowsChanged();\n    this.onColumnsChanged();\n  }\n  isNewValueCorrect(val) {\n    return Helpers.isValueObject(val, true);\n  }\n  processRowsOnSet(newRows) {\n    return this.sortVisibleRows(newRows);\n  }\n  get visibleRows() {\n    return this.getVisibleRows();\n  }\n  /**\n   * An array of matrix cells. Use this array to get or set cell values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/questiontype-matrix-rubric/ (linkStyle))\n   */\n  get cells() {\n    return this.cellsValue;\n  }\n  set cells(value) {\n    this.cells.setJson(value && value.getJson ? value.getJson() : null);\n  }\n  get hasCellText() {\n    return this.getPropertyValue(\"hasCellText\", false);\n  }\n  updateHasCellText() {\n    this.setPropertyValue(\"hasCellText\", !this.cells.isEmpty);\n  }\n  setCellText(row, column, val) {\n    this.cells.setCellText(row, column, val);\n  }\n  getCellText(row, column) {\n    return this.cells.getCellText(row, column);\n  }\n  setDefaultCellText(column, val) {\n    this.cells.setDefaultCellText(column, val);\n  }\n  getDefaultCellText(column) {\n    return this.cells.getDefaultCellText(column);\n  }\n  getCellDisplayText(row, column) {\n    return this.cells.getCellDisplayText(row, column);\n  }\n  getCellDisplayLocText(row, column) {\n    var loc = this.cells.getCellDisplayLocText(row, column);\n    return loc ? loc : this.emptyLocalizableString;\n  }\n  supportAutoAdvance() {\n    return this.isMouseDown === true && this.hasValuesInAllRows();\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (!isOnValueChanged || this.hasCssError()) {\n      const rowsErrors = {\n        noValue: false,\n        isNotUnique: false\n      };\n      this.checkErrorsAllRows(fireCallback, rowsErrors);\n      if (rowsErrors.noValue) {\n        errors.push(new RequiredInAllRowsError(null, this));\n      }\n      if (rowsErrors.isNotUnique) {\n        errors.push(new EachRowUniqueError(null, this));\n      }\n    }\n  }\n  hasValuesInAllRows() {\n    const rowsErrors = {\n      noValue: false,\n      isNotUnique: false\n    };\n    this.checkErrorsAllRows(false, rowsErrors, true);\n    return !rowsErrors.noValue;\n  }\n  checkErrorsAllRows(modifyErrors, res, allRowsRequired) {\n    var rows = this.generatedVisibleRows;\n    if (!rows) rows = this.visibleRows;\n    if (!rows) return;\n    const rowsRequired = this.eachRowRequired || allRowsRequired;\n    const rowsUnique = this.eachRowUnique;\n    res.noValue = false;\n    res.isNotUnique = false;\n    if (modifyErrors) {\n      this.errorsInRow = undefined;\n    }\n    if (!rowsRequired && !rowsUnique) return;\n    const hash = {};\n    for (var i = 0; i < rows.length; i++) {\n      const val = rows[i].value;\n      let isEmpty = this.isValueEmpty(val);\n      const isNotUnique = rowsUnique && !isEmpty && hash[val] === true;\n      isEmpty = isEmpty && rowsRequired;\n      if (modifyErrors && (isEmpty || isNotUnique)) {\n        this.addErrorIntoRow(rows[i]);\n      }\n      if (!isEmpty) {\n        hash[val] = true;\n      }\n      res.noValue = res.noValue || isEmpty;\n      res.isNotUnique = res.isNotUnique || isNotUnique;\n    }\n    if (modifyErrors) {\n      rows.forEach(row => {\n        row.hasError = this.hasErrorInRow(row);\n      });\n    }\n  }\n  addErrorIntoRow(row) {\n    if (!this.errorsInRow) this.errorsInRow = {};\n    this.errorsInRow[row.name] = true;\n    row.hasError = true;\n  }\n  refreshRowsErrors() {\n    if (!this.errorsInRow) return;\n    this.checkErrorsAllRows(true, {\n      noValue: false,\n      isNotUnique: false\n    });\n  }\n  getIsAnswered() {\n    return super.getIsAnswered() && this.hasValuesInAllRows();\n  }\n  createMatrixRow(item, fullName, value) {\n    var row = new MatrixRowModel(item, fullName, this, value);\n    this.onMatrixRowCreated(row);\n    return row;\n  }\n  onMatrixRowCreated(row) {}\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    super.setQuestionValue(newValue, this.isRowChanging || updateIsAnswered);\n    if (!this.generatedVisibleRows || this.generatedVisibleRows.length == 0) return;\n    this.isRowChanging = true;\n    var val = this.value;\n    if (!val) val = {};\n    if (this.rows.length == 0) {\n      this.generatedVisibleRows[0].setValueDirectly(val);\n    } else {\n      for (var i = 0; i < this.generatedVisibleRows.length; i++) {\n        var row = this.generatedVisibleRows[i];\n        var rowVal = val[row.name];\n        if (this.isValueEmpty(rowVal)) rowVal = null;\n        this.generatedVisibleRows[i].setValueDirectly(rowVal);\n      }\n    }\n    this.refreshRowsErrors();\n    this.updateIsAnswered();\n    this.isRowChanging = false;\n  }\n  getDisplayValueCore(keysAsText, value) {\n    var res = {};\n    for (var key in value) {\n      var newKey = keysAsText ? ItemValue.getTextOrHtmlByValue(this.rows, key) : key;\n      if (!newKey) newKey = key;\n      var newValue = ItemValue.getTextOrHtmlByValue(this.columns, value[key]);\n      if (!newValue) newValue = value[key];\n      res[newKey] = newValue;\n    }\n    return res;\n  }\n  getPlainData(options = {\n    includeEmpty: true\n  }) {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      var values = this.createValueCopy();\n      questionPlainData.isNode = true;\n      questionPlainData.data = Object.keys(values || {}).map(rowName => {\n        var row = this.rows.filter(r => r.value === rowName)[0];\n        var rowDataItem = {\n          name: rowName,\n          title: !!row ? row.text : \"row\",\n          value: values[rowName],\n          displayValue: ItemValue.getTextOrHtmlByValue(this.visibleColumns, values[rowName]),\n          getString: val => typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: false\n        };\n        var item = ItemValue.getItemByValue(this.visibleColumns, values[rowName]);\n        if (!!item) {\n          (options.calculations || []).forEach(calculation => {\n            rowDataItem[calculation.propertyName] = item[calculation.propertyName];\n          });\n        }\n        return rowDataItem;\n      });\n    }\n    return questionPlainData;\n  }\n  addConditionObjectsByContext(objects, context) {\n    for (var i = 0; i < this.rows.length; i++) {\n      var row = this.rows[i];\n      if (!!row.value) {\n        objects.push({\n          name: this.getValueName() + \".\" + row.value,\n          text: this.processedTitle + \".\" + row.calculatedText,\n          question: this\n        });\n      }\n    }\n  }\n  getConditionJson(operator = null, path = null) {\n    if (!path) return super.getConditionJson(operator);\n    var question = new QuestionDropdownModel(path);\n    question.choices = this.columns;\n    var json = new JsonObject().toJsonObject(question);\n    json[\"type\"] = question.getType();\n    return json;\n  }\n  clearIncorrectValues() {\n    this.clearInvisibleValuesInRowsAndColumns(true, true, true);\n    super.clearIncorrectValues();\n  }\n  clearValueIfInvisibleCore(reason) {\n    super.clearValueIfInvisibleCore(reason);\n    this.clearInvisibleValuesInRowsAndColumns(true, true, false);\n  }\n  clearInvisibleColumnValues() {\n    this.clearInvisibleValuesInRowsAndColumns(false, true, false);\n  }\n  clearInvisibleValuesInRows() {\n    this.clearInvisibleValuesInRowsAndColumns(true, false, false);\n  }\n  clearInvisibleValuesInRowsAndColumns(inRows, inColumns, inCorrectRows) {\n    if (this.isEmpty()) return;\n    let updatedData = this.getUnbindValue(this.value);\n    const newData = {};\n    var rows = this.rows;\n    for (var i = 0; i < rows.length; i++) {\n      var key = rows[i].value;\n      if (!!updatedData[key]) {\n        if (inRows && !rows[i].isVisible || inColumns && !this.getVisibleColumnByValue(updatedData[key])) {\n          delete updatedData[key];\n        } else {\n          newData[key] = updatedData[key];\n        }\n      }\n    }\n    if (inCorrectRows) {\n      updatedData = newData;\n    }\n    if (this.isTwoValueEquals(updatedData, this.value)) return;\n    this.value = updatedData;\n  }\n  getVisibleColumnByValue(val) {\n    const col = ItemValue.getItemByValue(this.columns, val);\n    return !!col && col.isVisible ? col : null;\n  }\n  getFirstInputElementId() {\n    var rows = this.generatedVisibleRows;\n    if (!rows) rows = this.visibleRows;\n    if (rows.length > 0 && this.visibleColumns.length > 0) {\n      return this.inputId + \"_\" + rows[0].name + \"_\" + 0;\n    }\n    return super.getFirstInputElementId();\n  }\n  //IMatrixData\n  onMatrixRowChanged(row) {\n    if (this.isRowChanging) return;\n    this.isRowChanging = true;\n    if (!this.hasRows) {\n      this.setNewValue(row.value);\n    } else {\n      var newValue = this.value;\n      if (!newValue) {\n        newValue = {};\n      }\n      newValue[row.name] = row.value;\n      this.setNewValue(newValue);\n    }\n    this.isRowChanging = false;\n  }\n  getCorrectedRowValue(value) {\n    for (var i = 0; i < this.columns.length; i++) {\n      if (value === this.columns[i].value) return value;\n    }\n    for (var i = 0; i < this.columns.length; i++) {\n      if (this.isTwoValueEquals(value, this.columns[i].value)) return this.columns[i].value;\n    }\n    return value;\n  }\n  hasErrorInRow(row) {\n    return !!this.errorsInRow && !!this.errorsInRow[row.name];\n  }\n  getSearchableItemValueKeys(keys) {\n    keys.push(\"columns\");\n    keys.push(\"rows\");\n  }\n  get SurveyModel() {\n    return this.survey;\n  }\n  getColumnHeaderWrapperComponentName(cell) {\n    return this.SurveyModel.getElementWrapperComponentName({\n      column: cell\n    }, \"column-header\");\n  }\n  getColumnHeaderWrapperComponentData(cell) {\n    return this.SurveyModel.getElementWrapperComponentData({\n      column: cell\n    }, \"column-header\");\n  }\n  getRowHeaderWrapperComponentName(cell) {\n    return this.SurveyModel.getElementWrapperComponentName({\n      row: cell\n    }, \"row-header\");\n  }\n  getRowHeaderWrapperComponentData(cell) {\n    return this.SurveyModel.getElementWrapperComponentData({\n      row: cell\n    }, \"row-header\");\n  }\n}\nSerializer.addClass(\"matrix\", [\"rowTitleWidth\", {\n  name: \"columns:itemvalue[]\",\n  uniqueProperty: \"value\",\n  baseValue: function () {\n    return getLocaleString(\"matrix_column\");\n  }\n}, {\n  name: \"rows:itemvalue[]\",\n  uniqueProperty: \"value\",\n  baseValue: function () {\n    return getLocaleString(\"matrix_row\");\n  }\n}, {\n  name: \"cells:cells\",\n  serializationProperty: \"cells\"\n}, {\n  name: \"rowOrder\",\n  alternativeName: \"rowsOrder\",\n  default: \"initial\",\n  choices: [\"initial\", \"random\"]\n}, {\n  name: \"eachRowRequired:boolean\",\n  alternativeName: \"isAllRowRequired\"\n}, {\n  name: \"eachRowUnique:boolean\",\n  category: \"validation\"\n}, \"hideIfRowsEmpty:boolean\", {\n  name: \"cellComponent\",\n  visible: false,\n  default: \"survey-matrix-cell\"\n}], function () {\n  return new QuestionMatrixModel(\"\");\n}, \"matrixbase\");\nQuestionFactory.Instance.registerQuestion(\"matrix\", name => {\n  var q = new QuestionMatrixModel(name);\n  q.rows = QuestionFactory.DefaultRows;\n  q.columns = QuestionFactory.DefaultColums;\n  return q;\n});\nclass CharacterCounter extends Base {\n  updateRemainingCharacterCounter(newValue, maxLength) {\n    this.remainingCharacterCounter = Helpers.getRemainingCharacterCounterText(newValue, maxLength);\n  }\n}\n__decorate([property()], CharacterCounter.prototype, \"remainingCharacterCounter\", void 0);\n/**\n * A base class for the [Single-Line Input](https://surveyjs.io/form-library/documentation/questiontextmodel) and [Long Text](https://surveyjs.io/form-library/documentation/questioncommentmodel) question types.\n */\nclass QuestionTextBase extends Question {\n  constructor(name) {\n    super(name);\n    this.characterCounter = new CharacterCounter();\n  }\n  isTextValue() {\n    return true;\n  }\n  /**\n   * The maximum text length measured in characters. Assign 0 if the length should be unlimited.\n   *\n   * Default value: -1 (inherits the actual value from the `SurveyModel`'s [`maxTextLength`](https://surveyjs.io/form-library/documentation/surveymodel#maxTextLength) property).\n   *\n   * [Long Text Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   */\n  get maxLength() {\n    return this.getPropertyValue(\"maxLength\");\n  }\n  set maxLength(val) {\n    this.setPropertyValue(\"maxLength\", val);\n    this.updateRemainingCharacterCounter(this.value);\n  }\n  getMaxLength() {\n    return Helpers.getMaxLength(this.maxLength, this.survey ? this.survey.maxTextLength : -1);\n  }\n  updateRemainingCharacterCounter(newValue) {\n    this.characterCounter.updateRemainingCharacterCounter(newValue, this.getMaxLength());\n  }\n  get placeHolder() {\n    return this.placeholder;\n  }\n  set placeHolder(val) {\n    this.placeholder = val;\n  }\n  get locPlaceHolder() {\n    return this.locPlaceholder;\n  }\n  getType() {\n    return \"textbase\";\n  }\n  isEmpty() {\n    return super.isEmpty() || this.value === \"\";\n  }\n  /**\n   * Specifies when to update the question value.\n   *\n   * Possible values:\n   *\n   * - `\"onBlur\"` - Updates the value after the input field loses focus.\n   * - `\"onTyping\"` - Updates the value on every key press.\n   * - `\"default\"` (default) - Inherits the value from the `SurveyModel`'s [`textUpdateMode`](https://surveyjs.io/form-library/documentation/surveymodel#textUpdateMode) property.\n   *\n   * > Do not use the `\"onTyping\"` mode if your survey contains many expressions. Expressions are re-evaluated each time a question value is changed. In `\"onTyping\"` mode, the question value changes frequently. This may cause performance degradation.\n   */\n  get textUpdateMode() {\n    return this.getPropertyValue(\"textUpdateMode\");\n  }\n  set textUpdateMode(val) {\n    this.setPropertyValue(\"textUpdateMode\", val);\n  }\n  getIsInputTextUpdate() {\n    if (this.textUpdateMode == \"default\") return super.getIsInputTextUpdate();\n    return this.textUpdateMode == \"onTyping\";\n  }\n  get renderedPlaceholder() {\n    const func = () => {\n      return this.hasPlaceholder() ? this.placeHolder : undefined;\n    };\n    return this.getPropertyValue(\"renderedPlaceholder\", undefined, func);\n  }\n  onReadOnlyChanged() {\n    super.onReadOnlyChanged();\n    this.resetRenderedPlaceholder();\n  }\n  localeChanged() {\n    super.localeChanged();\n    this.resetRenderedPlaceholder();\n  }\n  supportEmptyValidation() {\n    return true;\n  }\n  resetRenderedPlaceholder() {\n    this.resetPropertyValue(\"renderedPlaceholder\");\n  }\n  hasPlaceholder() {\n    return !this.isReadOnly;\n  }\n  setNewValue(newValue) {\n    super.setNewValue(newValue);\n    this.updateRemainingCharacterCounter(newValue);\n  }\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.updateRemainingCharacterCounter(newValue);\n  }\n  convertToCorrectValue(val) {\n    if (Array.isArray(val)) return val.join(this.getValueSeparator());\n    return val;\n  }\n  getValueSeparator() {\n    return \", \";\n  }\n  getControlCssClassBuilder() {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.onError, this.hasCssError()).append(this.cssClasses.controlDisabled, this.isDisabledStyle).append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle).append(this.cssClasses.controlPreview, this.isPreviewStyle);\n  }\n  getControlClass() {\n    return this.getControlCssClassBuilder().toString();\n  }\n  //a11y\n  get isNewA11yStructure() {\n    return true;\n  }\n}\n__decorate([property({\n  localizable: true,\n  onSet: (val, target) => target.resetRenderedPlaceholder()\n})], QuestionTextBase.prototype, \"placeholder\", void 0);\nSerializer.addClass(\"textbase\", [], function () {\n  return new QuestionTextBase(\"\");\n}, \"question\");\nclass InputElementAdapter {\n  setInputValue(value) {\n    if (this.inputElement.maxLength >= 0 && this.inputElement.maxLength < value.length) {\n      value = value.slice(0, this.inputElement.maxLength);\n    }\n    this.inputElement.value = value;\n  }\n  constructor(inputMaskInstance, inputElement, value) {\n    this.inputMaskInstance = inputMaskInstance;\n    this.inputElement = inputElement;\n    this.prevUnmaskedValue = undefined;\n    this.inputMaskInstancePropertyChangedHandler = (sender, options) => {\n      if (options.name !== \"saveMaskedValue\") {\n        const maskedValue = this.inputMaskInstance.getMaskedValue(this.prevUnmaskedValue);\n        this.setInputValue(maskedValue);\n      }\n    };\n    this.clickHandler = event => {\n      if (this.inputElement.value == this.inputMaskInstance.getMaskedValue(\"\")) {\n        this.inputElement.setSelectionRange(0, 0);\n      }\n    };\n    this.beforeInputHandler = event => {\n      const args = this.createArgs(event);\n      const result = this.inputMaskInstance.processInput(args);\n      this.setInputValue(result.value);\n      this.inputElement.setSelectionRange(result.caretPosition, result.caretPosition);\n      if (!result.cancelPreventDefault) {\n        event.preventDefault();\n      }\n    };\n    this.changeHandler = event => {\n      const result = this.inputMaskInstance.processInput({\n        prevValue: \"\",\n        insertedChars: event.target.value,\n        selectionStart: 0,\n        selectionEnd: 0\n      });\n      this.setInputValue(result.value);\n    };\n    let _value = value;\n    if (_value === null || _value === undefined) {\n      _value = \"\";\n    }\n    this.setInputValue(inputMaskInstance.saveMaskedValue ? _value : inputMaskInstance.getMaskedValue(_value));\n    this.prevUnmaskedValue = _value;\n    inputMaskInstance.onPropertyChanged.add(this.inputMaskInstancePropertyChangedHandler);\n    this.addInputEventListener();\n  }\n  createArgs(event) {\n    const args = {\n      insertedChars: event.data,\n      selectionStart: event.target.selectionStart,\n      selectionEnd: event.target.selectionEnd,\n      prevValue: event.target.value,\n      inputDirection: \"forward\"\n    };\n    if (event.inputType === \"deleteContentBackward\") {\n      args.inputDirection = \"backward\";\n      if (args.selectionStart === args.selectionEnd) {\n        args.selectionStart = Math.max(args.selectionStart - 1, 0);\n      }\n    }\n    if (event.inputType === \"deleteContentForward\" && args.selectionStart === args.selectionEnd) {\n      args.selectionEnd += 1;\n    }\n    return args;\n  }\n  addInputEventListener() {\n    if (!!this.inputElement) {\n      this.inputElement.addEventListener(\"beforeinput\", this.beforeInputHandler);\n      this.inputElement.addEventListener(\"click\", this.clickHandler);\n      this.inputElement.addEventListener(\"focus\", this.clickHandler);\n      this.inputElement.addEventListener(\"change\", this.changeHandler);\n    }\n  }\n  removeInputEventListener() {\n    if (!!this.inputElement) {\n      this.inputElement.removeEventListener(\"beforeinput\", this.beforeInputHandler);\n      this.inputElement.removeEventListener(\"click\", this.clickHandler);\n      this.inputElement.removeEventListener(\"focus\", this.clickHandler);\n      this.inputElement.removeEventListener(\"change\", this.changeHandler);\n    }\n  }\n  dispose() {\n    this.removeInputEventListener();\n    this.inputElement = undefined;\n    this.inputMaskInstance.onPropertyChanged.remove(this.inputMaskInstancePropertyChangedHandler);\n  }\n}\nvar numberDefinition = /[0-9]/;\nfunction getAvailableMaskTypeChoices() {\n  const classes = Serializer.getChildrenClasses(\"masksettings\") || [];\n  const choices = classes.map(cl => {\n    let value = cl.name;\n    if (cl.name.indexOf(\"mask\") !== -1) {\n      value = value.slice(0, value.indexOf(\"mask\"));\n    }\n    return value;\n  });\n  choices.unshift(\"none\");\n  return choices;\n}\n\n/**\n * A class that describes the Single-Line Input question type, which is used to create textual, numeric, date-time, and color input fields.\n *\n * [Text Entry Demo](https://surveyjs.io/form-library/examples/text-entry-question/ (linkStyle))\n *\n * [Date-Time Entry Demo](https://surveyjs.io/form-library/examples/datetime-entry-question/ (linkStyle))\n *\n * [Numeric Entry Demo](https://surveyjs.io/form-library/examples/numeric-entry-question/ (linkStyle))\n *\n * [Color Input Demo](https://surveyjs.io/form-library/examples/color-input-question/ (linkStyle))\n */\nclass QuestionTextModel extends QuestionTextBase {\n  createMaskAdapter() {\n    if (!!this.input && !this.maskTypeIsEmpty) {\n      this.maskInputAdapter = new InputElementAdapter(this.maskInstance, this.input, this.value);\n    }\n  }\n  deleteMaskAdapter() {\n    if (this.maskInputAdapter) {\n      this.maskInputAdapter.dispose();\n      this.maskInputAdapter = undefined;\n    }\n  }\n  updateMaskAdapter() {\n    this.deleteMaskAdapter();\n    this.createMaskAdapter();\n  }\n  onSetMaskType(newValue) {\n    this.setNewMaskSettingsProperty();\n    this.updateMaskAdapter();\n  }\n  get maskTypeIsEmpty() {\n    switch (this.inputType) {\n      case \"tel\":\n      case \"text\":\n        return this.maskType === \"none\";\n      default:\n        return true;\n    }\n  }\n  /**\n   * An object with properties that configure the mask applied to the input.\n   *\n   * Available properties depend on the specified [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType) and belong to corresponding classes. Refer to the class APIs for a full list of properties:\n   *\n   * | `maskType` | Class |\n   * | ---------- | ----- |\n   * | `\"numeric\"` | [`InputMaskNumeric`](https://surveyjs.io/form-library/documentation/api-reference/inputmasknumeric) |\n   * | `\"currency\"` | [`InputMaskCurrency`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskcurrency) |\n   * | `\"datetime\"` | [`InputMaskDateTime`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskdatetime) |\n   * | `\"pattern\"` | [`InputMaskPattern`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern) |\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   */\n  get maskSettings() {\n    return this.getPropertyValue(\"maskSettings\");\n  }\n  set maskSettings(val) {\n    if (!val) return;\n    const oldValue = this.maskSettings;\n    if (oldValue) {\n      oldValue.dispose();\n    }\n    this.setNewMaskSettingsProperty();\n    this.maskSettings.fromJSON(val.toJSON());\n    this.updateMaskAdapter();\n  }\n  setNewMaskSettingsProperty() {\n    this.setPropertyValue(\"maskSettings\", this.createMaskSettings());\n  }\n  createMaskSettings() {\n    let maskClassName = !this.maskType || this.maskType === \"none\" ? \"masksettings\" : this.maskType + \"mask\";\n    if (!Serializer.findClass(maskClassName)) {\n      maskClassName = \"masksettings\";\n    }\n    const inputMask = Serializer.createClass(maskClassName);\n    inputMask.onPropertyChanged.add((_, options) => {\n      this.onNestedPropertyChanged.fire(this, {\n        name: \"maskSettings\",\n        newValue: options.newValue,\n        nestedName: options.name\n      });\n      this.updateInputValue();\n    });\n    inputMask.owner = this;\n    return inputMask;\n  }\n  constructor(name) {\n    super(name);\n    //web-based methods\n    this._isWaitingForEnter = false;\n    this.onCompositionUpdate = event => {\n      if (this.isInputTextUpdate) {\n        setTimeout(() => {\n          this.updateValueOnEvent(event);\n        }, 1);\n      }\n      this.updateRemainingCharacterCounter(event.target.value);\n    };\n    this.onKeyUp = event => {\n      this.updateDateValidationMessage(event);\n      if (this.isInputTextUpdate) {\n        if (!this._isWaitingForEnter || event.keyCode === 13) {\n          this.updateValueOnEvent(event);\n          this._isWaitingForEnter = false;\n        }\n      } else {\n        if (event.keyCode === 13) {\n          this.updateValueOnEvent(event);\n        }\n      }\n      this.updateRemainingCharacterCounter(event.target.value);\n    };\n    this.readOnlyBlocker = event => {\n      if (this.isReadOnlyAttr && [\"color\", \"range\"].indexOf(this.inputType) > -1) {\n        event.preventDefault();\n        return true;\n      }\n    };\n    this.onKeyDown = event => {\n      if (this.readOnlyBlocker(event)) {\n        return;\n      }\n      this.onKeyDownPreprocess && this.onKeyDownPreprocess(event);\n      if (this.isInputTextUpdate) {\n        this._isWaitingForEnter = event.keyCode === 229;\n      }\n      this.onTextKeyDownHandler(event);\n    };\n    this.onChange = event => {\n      this.updateDateValidationMessage(event);\n      const elementIsFocused = event.target === settings.environment.root.activeElement;\n      if (elementIsFocused) {\n        if (this.isInputTextUpdate) {\n          this.updateValueOnEvent(event);\n        }\n      } else {\n        this.updateValueOnEvent(event);\n      }\n      this.updateRemainingCharacterCounter(event.target.value);\n    };\n    this.createLocalizableString(\"minErrorText\", this, true, \"minError\");\n    this.createLocalizableString(\"maxErrorText\", this, true, \"maxError\");\n    this.setNewMaskSettingsProperty();\n    this.locDataListValue = new LocalizableStrings(this);\n    this.locDataListValue.onValueChanged = (oldValue, newValue) => {\n      this.propertyValueChanged(\"dataList\", oldValue, newValue);\n    };\n    this.registerPropertyChangedHandlers([\"min\", \"max\", \"inputType\", \"minValueExpression\", \"maxValueExpression\"], () => {\n      this.setRenderedMinMax();\n    });\n    this.registerPropertyChangedHandlers([\"inputType\", \"inputSize\"], () => {\n      this.resetInputSize();\n      this.resetRenderedPlaceholder();\n    });\n  }\n  isTextValue() {\n    return this.isDateInputType || [\"text\", \"number\", \"password\"].indexOf(this.inputType) > -1;\n  }\n  getType() {\n    return \"text\";\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    this.setRenderedMinMax();\n  }\n  /**\n   * A value passed on to the [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types) attribute of the underlying `<input>` element.\n   *\n   * Default value: `\"text\"`\n   *\n   * [Text Entry Demo](https://surveyjs.io/form-library/examples/text-entry-question/ (linkStyle))\n   *\n   * [Date-Time Entry Demo](https://surveyjs.io/form-library/examples/datetime-entry-question/ (linkStyle))\n   *\n   * [Numeric Entry Demo](https://surveyjs.io/form-library/examples/numeric-entry-question/ (linkStyle))\n   *\n   * [Color Input Demo](https://surveyjs.io/form-library/examples/color-input-question/ (linkStyle))\n   */\n  get inputType() {\n    return this.getPropertyValue(\"inputType\");\n  }\n  set inputType(val) {\n    val = val.toLowerCase();\n    if (val === \"datetime_local\" || val === \"datetime\") val = \"datetime-local\";\n    this.setPropertyValue(\"inputType\", val.toLowerCase());\n    if (!this.isLoadingFromJson) {\n      this.min = undefined;\n      this.max = undefined;\n      this.step = undefined;\n    }\n    this.updateMaskAdapter();\n  }\n  getMaxLength() {\n    if (!this.isTextInput) return null;\n    return super.getMaxLength();\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    if (!!this.minValueExpression || !!this.maxValueExpression) {\n      this.setRenderedMinMax(values, properties);\n    }\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!this.maskTypeIsEmpty && !Helpers.isValueEmpty(value)) return this.maskInstance.getMaskedValue(value);\n    return super.getDisplayValueCore(keysAsText, value);\n  }\n  isLayoutTypeSupported(layoutType) {\n    return true;\n  }\n  /**\n   * A value passed on to the [`size`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size) attribute of the underlying `<input>` element.\n   */\n  get inputSize() {\n    return this.getPropertyValue(\"inputSize\");\n  }\n  set inputSize(val) {\n    this.setPropertyValue(\"inputSize\", val);\n  }\n  /**\n   * @deprecated Use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#inputSize) property instead.\n   */\n  get size() {\n    return this.inputSize;\n  }\n  set size(val) {\n    this.inputSize = val;\n  }\n  get isTextInput() {\n    return [\"text\", \"search\", \"tel\", \"url\", \"email\", \"password\"].indexOf(this.inputType) > -1;\n  }\n  get renderedInputSize() {\n    return this.getPropertyValue(\"renderedInputSize\", undefined, () => {\n      const size = this.calInputSize();\n      return size > 0 ? size : undefined;\n    });\n  }\n  get inputWidth() {\n    return this.getPropertyValue(\"inputWidth\", undefined, () => {\n      return this.calInputSize() > 0 ? \"auto\" : \"\";\n    });\n  }\n  calInputSize() {\n    if (!this.isTextInput) return 0;\n    let size = this.inputSize > 0 ? this.inputSize : 0;\n    if (size < 1 && this.parent && !!this.parent[\"inputSize\"]) {\n      size = this.parent[\"inputSize\"];\n    }\n    return size;\n  }\n  resetInputSize() {\n    this.resetPropertyValue(\"renderedInputSize\");\n    this.resetPropertyValue(\"inputWidth\");\n  }\n  /**\n   * A value passed on to the [`autocomplete`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) attribute of the underlying `<input>` element.\n   */\n  get autocomplete() {\n    return this.getPropertyValue(\"autocomplete\");\n  }\n  set autocomplete(val) {\n    this.setPropertyValue(\"autocomplete\", val);\n  }\n  /**\n   * A value passed on to the [`min`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min) attribute of the underlying `<input>` element.\n   * @see minValueExpression\n   */\n  get min() {\n    return this.getPropertyValue(\"min\");\n  }\n  set min(val) {\n    if (this.isValueExpression(val)) {\n      this.minValueExpression = val.substring(1);\n      return;\n    }\n    this.setPropertyValue(\"min\", val);\n  }\n  /**\n   * A value passed on to the [`max`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max) attribute of the underlying `<input>` element.\n   * @see maxValueExpression\n   */\n  get max() {\n    return this.getPropertyValue(\"max\");\n  }\n  set max(val) {\n    if (this.isValueExpression(val)) {\n      this.maxValueExpression = val.substring(1);\n      return;\n    }\n    this.setPropertyValue(\"max\", val);\n  }\n  /**\n   * The minimum value specified as an expression. For example, `\"minValueExpression\": \"today(-1)\"` sets the minimum value to yesterday.\n   * @see min\n   */\n  get minValueExpression() {\n    return this.getPropertyValue(\"minValueExpression\", \"\");\n  }\n  set minValueExpression(val) {\n    this.setPropertyValue(\"minValueExpression\", val);\n  }\n  /**\n   * The maximum value specified as an expression. For example, `\"maxValueExpression\": \"today(1)\"` sets the maximum value to tomorrow.\n   * @see max\n   */\n  get maxValueExpression() {\n    return this.getPropertyValue(\"maxValueExpression\", \"\");\n  }\n  set maxValueExpression(val) {\n    this.setPropertyValue(\"maxValueExpression\", val);\n  }\n  get renderedMin() {\n    return this.getPropertyValue(\"renderedMin\");\n  }\n  get renderedMax() {\n    return this.getPropertyValue(\"renderedMax\");\n  }\n  /**\n   * An error message to display when the question value is less than the minimum accepted value.\n   * @see min\n   * @see minValueExpression\n   */\n  get minErrorText() {\n    return this.getLocalizableStringText(\"minErrorText\");\n  }\n  set minErrorText(val) {\n    this.setLocalizableStringText(\"minErrorText\", val);\n  }\n  get locMinErrorText() {\n    return this.getLocalizableString(\"minErrorText\");\n  }\n  /**\n   * An error message to display when the question value exceeds the maximum accepted value.\n   * @see max\n   * @see maxValueExpression\n   */\n  get maxErrorText() {\n    return this.getLocalizableStringText(\"maxErrorText\");\n  }\n  set maxErrorText(val) {\n    this.setLocalizableStringText(\"maxErrorText\", val);\n  }\n  get locMaxErrorText() {\n    return this.getLocalizableString(\"maxErrorText\");\n  }\n  /**\n   * Returns `true` if the specified `inputType` supports the `min` and `max` properties.\n   * @see inputType\n   * @see min\n   * @see max\n   */\n  get isMinMaxType() {\n    return isMinMaxType(this);\n  }\n  get maskInstance() {\n    return this.maskSettings;\n  }\n  get inputValue() {\n    if (!this._inputValue && !this.maskTypeIsEmpty) return this.maskInstance.getMaskedValue(\"\");\n    return this._inputValue;\n  }\n  set inputValue(val) {\n    let value = val;\n    this._inputValue = val;\n    if (!this.maskTypeIsEmpty) {\n      value = this.maskInstance.getUnmaskedValue(val);\n      this._inputValue = this.maskInstance.getMaskedValue(value);\n      if (!!value && this.maskSettings.saveMaskedValue) {\n        value = this._inputValue;\n      }\n    }\n    this.value = value;\n  }\n  getExpressionValue(val) {\n    if (!this.maskTypeIsEmpty && this.maskSettings.saveMaskedValue) return this.maskInstance.getUnmaskedValue(val);\n    return val;\n  }\n  convertToCorrectValue(val) {\n    if (val !== undefined && val !== null && typeof val !== \"string\" && !this.maskTypeIsEmpty && this.maskSettings.saveMaskedValue) {\n      return this.maskInstance.getMaskedValue(val);\n    }\n    return super.convertToCorrectValue(val);\n  }\n  onChangeQuestionValue(newValue) {\n    super.onChangeQuestionValue(newValue);\n    this.updateInputValue();\n  }\n  updateInputValue() {\n    const _value = this.value;\n    if (this.maskTypeIsEmpty) {\n      this._inputValue = _value;\n    } else if (this.maskSettings.saveMaskedValue) {\n      this._inputValue = _value !== undefined && _value !== null ? _value : this.maskInstance.getMaskedValue(\"\");\n    } else {\n      this._inputValue = this.maskInstance.getMaskedValue(_value);\n    }\n  }\n  hasToConvertToUTC(val) {\n    return settings.storeUtcDates && this.isDateTimeLocaleType() && !!val;\n  }\n  createDate(val) {\n    return createDate(\"question-text\", val);\n  }\n  valueForSurveyCore(val) {\n    if (this.hasToConvertToUTC(val)) {\n      val = this.createDate(val).toISOString();\n    }\n    return super.valueForSurveyCore(val);\n  }\n  valueFromDataCore(val) {\n    if (this.hasToConvertToUTC(val)) {\n      const d = this.createDate(val);\n      const locale_d = this.createDate(d.getTime() - d.getTimezoneOffset() * 60 * 1000);\n      let res = locale_d.toISOString();\n      val = res.substring(0, res.length - 2);\n    }\n    return super.valueFromDataCore(val);\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (isOnValueChanged) return;\n    if (this.isValueLessMin) {\n      const minError = new CustomError(this.getMinMaxErrorText(this.minErrorText, this.getCalculatedMinMax(this.renderedMin)), this);\n      minError.onUpdateErrorTextCallback = err => {\n        err.text = this.getMinMaxErrorText(this.minErrorText, this.getCalculatedMinMax(this.renderedMin));\n      };\n      errors.push(minError);\n    }\n    if (this.isValueGreaterMax) {\n      const maxError = new CustomError(this.getMinMaxErrorText(this.maxErrorText, this.getCalculatedMinMax(this.renderedMax)), this);\n      maxError.onUpdateErrorTextCallback = err => {\n        err.text = this.getMinMaxErrorText(this.maxErrorText, this.getCalculatedMinMax(this.renderedMax));\n      };\n      errors.push(maxError);\n    }\n    if (!!this.dateValidationMessage) {\n      errors.push(new CustomError(this.dateValidationMessage, this));\n    }\n    const valName = this.getValidatorTitle();\n    const emailValidator = new EmailValidator();\n    emailValidator.errorOwner = this;\n    if (this.inputType === \"email\" && !this.validators.some(v => v.getType() === \"emailvalidator\")) {\n      const validateResult = emailValidator.validate(this.value, valName);\n      if (!!validateResult && !!validateResult.error) {\n        errors.push(validateResult.error);\n      }\n    }\n  }\n  canSetValueToSurvey() {\n    if (!this.isMinMaxType) return true;\n    const isValid = !this.isValueLessMin && !this.isValueGreaterMax;\n    if ((!isValid || this.errors.length > 0) && !!this.survey && (this.survey.isValidateOnValueChanging || this.survey.isValidateOnValueChanged)) {\n      this.hasErrors();\n    }\n    return isValid;\n  }\n  convertFuncValuetoQuestionValue(val) {\n    let type = this.maskTypeIsEmpty ? this.inputType : this.maskSettings.getTypeForExpressions();\n    return Helpers.convertValToQuestionVal(val, type);\n  }\n  getMinMaxErrorText(errorText, value) {\n    if (Helpers.isValueEmpty(value)) return errorText;\n    let errorValue = value.toString();\n    if (this.inputType === \"date\" && !!value.toDateString) {\n      errorValue = value.toDateString();\n    }\n    return errorText.replace(\"{0}\", errorValue);\n  }\n  get isValueLessMin() {\n    return !this.isValueEmpty(this.renderedMin) && !this.isEmpty() && this.getCalculatedMinMax(this.value) < this.getCalculatedMinMax(this.renderedMin);\n  }\n  get isValueGreaterMax() {\n    return !this.isValueEmpty(this.renderedMax) && !this.isEmpty() && this.getCalculatedMinMax(this.value) > this.getCalculatedMinMax(this.renderedMax);\n  }\n  get isDateInputType() {\n    return this.inputType === \"date\" || this.isDateTimeLocaleType();\n  }\n  isDateTimeLocaleType() {\n    return this.inputType === \"datetime-local\";\n  }\n  getCalculatedMinMax(minMax) {\n    if (this.isValueEmpty(minMax)) return minMax;\n    return this.isDateInputType ? this.createDate(minMax) : minMax;\n  }\n  setRenderedMinMax(values = null, properties = null) {\n    this.minValueRunner = this.getDefaultRunner(this.minValueRunner, this.minValueExpression);\n    this.setValueAndRunExpression(this.minValueRunner, this.min, val => {\n      if (!val && this.isDateInputType && !!settings.minDate) {\n        val = settings.minDate;\n      }\n      this.setPropertyValue(\"renderedMin\", val);\n    }, values, properties);\n    this.maxValueRunner = this.getDefaultRunner(this.maxValueRunner, this.maxValueExpression);\n    this.setValueAndRunExpression(this.maxValueRunner, this.max, val => {\n      if (!val && this.isDateInputType) {\n        val = !!settings.maxDate ? settings.maxDate : \"2999-12-31\";\n      }\n      this.setPropertyValue(\"renderedMax\", val);\n    }, values, properties);\n  }\n  /**\n   * A value passed on to the [`step`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step) attribute of the underlying `<input>` element.\n   */\n  get step() {\n    return this.getPropertyValue(\"step\");\n  }\n  set step(val) {\n    this.setPropertyValue(\"step\", val);\n  }\n  get renderedStep() {\n    if (this.isValueEmpty(this.step)) {\n      return this.inputType !== \"number\" ? undefined : \"any\";\n    }\n    return this.step;\n  }\n  getIsInputTextUpdate() {\n    return this.maskTypeIsEmpty ? super.getIsInputTextUpdate() : false;\n  }\n  supportAutoAdvance() {\n    return !this.getIsInputTextUpdate() && !this.isDateInputType;\n  }\n  supportGoNextPageError() {\n    return !this.isDateInputType;\n  }\n  /**\n   * An array of predefined options from which users can select. This property configures an HTML [`<datalist>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist) element and associates it with the underlying `input` element.\n   */\n  get dataList() {\n    return this.locDataList.value;\n  }\n  set dataList(val) {\n    this.locDataList.value = val;\n  }\n  get locDataList() {\n    return this.locDataListValue;\n  }\n  get dataListId() {\n    return this.locDataList.hasValue() ? this.id + \"_datalist\" : undefined;\n  }\n  setNewValue(newValue) {\n    newValue = this.correctValueType(newValue);\n    if (!!newValue) {\n      this.dateValidationMessage = undefined;\n    }\n    super.setNewValue(newValue);\n  }\n  correctValueType(newValue) {\n    if (!newValue) return newValue;\n    if (this.inputType === \"number\" || this.inputType === \"range\") {\n      return Helpers.isNumber(newValue) ? Helpers.getNumber(newValue) : \"\";\n    }\n    if (this.inputType === \"month\") {\n      const d = this.createDate(newValue);\n      const isUtc = d.toISOString().indexOf(newValue) == 0 && newValue.indexOf(\"T\") == -1;\n      const month = isUtc ? d.getUTCMonth() : d.getMonth();\n      const year = isUtc ? d.getUTCFullYear() : d.getFullYear();\n      const m = month + 1;\n      return year + \"-\" + (m < 10 ? \"0\" : \"\") + m;\n    }\n    return newValue;\n  }\n  hasPlaceholder() {\n    return !this.isReadOnly && this.inputType !== \"range\";\n  }\n  getControlCssClassBuilder() {\n    const maxLength = this.getMaxLength();\n    return super.getControlCssClassBuilder().append(this.cssClasses.constrolWithCharacterCounter, !!maxLength).append(this.cssClasses.characterCounterBig, maxLength > 99);\n  }\n  isReadOnlyRenderDiv() {\n    return this.isReadOnly && settings.readOnly.textRenderMode === \"div\";\n  }\n  get inputStyle() {\n    var style = {};\n    style.width = this.inputWidth;\n    this.updateTextAlign(style);\n    return style;\n  }\n  updateTextAlign(style) {\n    if (this.inputTextAlignment !== \"auto\") {\n      style.textAlign = this.inputTextAlignment;\n    } else if (!this.maskTypeIsEmpty && this.maskSettings.getTextAlignment() !== \"auto\") {\n      style.textAlign = this.maskSettings.getTextAlignment();\n    }\n  }\n  updateValueOnEvent(event) {\n    const newValue = event.target.value;\n    if (!this.isTwoValueEquals(this.value, newValue)) {\n      this.inputValue = newValue;\n    }\n  }\n  updateDateValidationMessage(event) {\n    this.dateValidationMessage = this.isDateInputType && !!event.target ? event.target.validationMessage : undefined;\n  }\n  onBlurCore(event) {\n    this.updateDateValidationMessage(event);\n    this.updateValueOnEvent(event);\n    this.updateRemainingCharacterCounter(event.target.value);\n    super.onBlurCore(event);\n  }\n  onFocusCore(event) {\n    this.updateRemainingCharacterCounter(event.target.value);\n    super.onFocusCore(event);\n  }\n  afterRenderQuestionElement(el) {\n    if (!!el) {\n      this.input = el instanceof HTMLInputElement ? el : el.querySelector(\"input\");\n      this.createMaskAdapter();\n    }\n    super.afterRenderQuestionElement(el);\n  }\n  beforeDestroyQuestionElement(el) {\n    this.deleteMaskAdapter();\n    this.input = undefined;\n  }\n}\n__decorate([property({\n  onSet: (newValue, target) => {\n    target.onSetMaskType(newValue);\n  }\n})], QuestionTextModel.prototype, \"maskType\", void 0);\n__decorate([property()], QuestionTextModel.prototype, \"inputTextAlignment\", void 0);\n__decorate([property()], QuestionTextModel.prototype, \"_inputValue\", void 0);\nconst minMaxTypes = [\"number\", \"range\", \"date\", \"datetime-local\", \"month\", \"time\", \"week\"];\nfunction isMinMaxType(obj) {\n  const t = !!obj ? obj.inputType : \"\";\n  if (!t) return false;\n  return minMaxTypes.indexOf(t) > -1;\n}\nfunction getWeekTimeNumber(str, delimiter) {\n  const strs = str.split(delimiter);\n  if (strs.length !== 2) return -1;\n  if (!Helpers.isNumber(strs[0]) || !Helpers.isNumber(strs[1])) return -1;\n  return parseFloat(strs[0]) * 60 + parseFloat(strs[1]);\n}\nfunction isMinBiggerWeekTime(minStr, maxStr, delimiter) {\n  const min = getWeekTimeNumber(minStr, delimiter);\n  const max = getWeekTimeNumber(maxStr, delimiter);\n  if (min < 0 || max < 0) return false;\n  return min > max;\n}\nfunction getCorrectMinMax$1(obj, min, max, isMax) {\n  let val = isMax ? max : min;\n  if (!isMinMaxType(obj)) return val;\n  if (Helpers.isValueEmpty(min) || Helpers.isValueEmpty(max)) return val;\n  if (obj.inputType.indexOf(\"date\") === 0 || obj.inputType === \"month\") {\n    const isMonth = obj.inputType === \"month\";\n    const reason = \"question-text-minmax\";\n    const dMin = createDate(reason, isMonth ? min + \"-01\" : min);\n    const dMax = createDate(reason, isMonth ? max + \"-01\" : max);\n    if (!dMin || !dMax) return val;\n    if (dMin > dMax) return isMax ? min : max;\n  }\n  if (obj.inputType === \"week\" || obj.inputType === \"time\") {\n    const delimiter = obj.inputType === \"week\" ? \"-W\" : \":\";\n    if (isMinBiggerWeekTime(min, max, delimiter)) return isMax ? min : max;\n    return val;\n  }\n  if (obj.inputType === \"number\") {\n    if (!Helpers.isNumber(min) || !Helpers.isNumber(max)) return val;\n    if (Helpers.getNumber(min) > Helpers.getNumber(max)) return isMax ? min : max;\n  }\n  if (typeof min === \"string\" || typeof max === \"string\") return val;\n  if (min > max) return isMax ? min : max;\n  return val;\n}\nfunction propertyEditorMinMaxUpdate(obj, propertyEditor) {\n  if (!!obj && !!obj.inputType) {\n    propertyEditor.inputType = obj.inputType !== \"range\" ? obj.inputType : \"number\";\n    propertyEditor.textUpdateMode = \"onBlur\";\n  }\n}\nSerializer.addClass(\"text\", [{\n  name: \"inputType\",\n  default: \"text\",\n  choices: settings.questions.inputTypes\n}, {\n  name: \"inputSize:number\",\n  alternativeName: \"size\",\n  minValue: 0,\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    if (!obj) return false;\n    return obj.isTextInput;\n  }\n}, {\n  name: \"textUpdateMode\",\n  default: \"default\",\n  choices: [\"default\", \"onBlur\", \"onTyping\"],\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    if (!obj) return false;\n    return obj.isTextInput;\n  }\n}, {\n  name: \"autocomplete\",\n  alternativeName: \"autoComplete\",\n  choices: settings.questions.dataList\n}, {\n  name: \"min\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  },\n  onPropertyEditorUpdate: function (obj, propertyEditor) {\n    propertyEditorMinMaxUpdate(obj, propertyEditor);\n  },\n  onSettingValue: (obj, val) => {\n    return getCorrectMinMax$1(obj, val, obj.max, false);\n  }\n}, {\n  name: \"max\",\n  dependsOn: \"inputType\",\n  nextToProperty: \"*min\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  },\n  onSettingValue: (obj, val) => {\n    return getCorrectMinMax$1(obj, obj.min, val, true);\n  },\n  onPropertyEditorUpdate: function (obj, propertyEditor) {\n    propertyEditorMinMaxUpdate(obj, propertyEditor);\n  }\n}, {\n  name: \"minValueExpression:expression\",\n  category: \"logic\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  }\n}, {\n  name: \"maxValueExpression:expression\",\n  category: \"logic\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  }\n}, {\n  name: \"minErrorText\",\n  serializationProperty: \"locMinErrorText\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  }\n}, {\n  name: \"maxErrorText\",\n  serializationProperty: \"locMaxErrorText\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  }\n}, {\n  name: \"inputTextAlignment\",\n  default: \"auto\",\n  choices: [\"left\", \"right\", \"auto\"]\n}, {\n  name: \"maskType\",\n  default: \"none\",\n  visibleIndex: 0,\n  dependsOn: \"inputType\",\n  visibleIf: obj => {\n    return obj.inputType === \"text\" || obj.inputType === \"tel\";\n  },\n  choices: obj => {\n    const choices = getAvailableMaskTypeChoices();\n    return choices;\n  }\n}, {\n  name: \"maskSettings:masksettings\",\n  className: \"masksettings\",\n  visibleIndex: 1,\n  dependsOn: [\"inputType\", \"maskType\"],\n  visibleIf: obj => {\n    return obj.inputType === \"text\" || obj.inputType === \"tel\";\n  },\n  onGetValue: function (obj) {\n    return obj.maskSettings.getData();\n  },\n  onSetValue: function (obj, value) {\n    obj.maskSettings.setData(value);\n  }\n}, {\n  name: \"step:number\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    if (!obj) return false;\n    return obj.inputType === \"number\" || obj.inputType === \"range\";\n  }\n}, {\n  name: \"maxLength:number\",\n  default: -1,\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    if (!obj) return false;\n    return obj.isTextInput;\n  }\n}, {\n  name: \"placeholder\",\n  alternativeName: \"placeHolder\",\n  serializationProperty: \"locPlaceholder\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    if (!obj) return false;\n    return obj.isTextInput;\n  }\n}, {\n  name: \"dataList:string[]\",\n  serializationProperty: \"locDataList\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    if (!obj) return false;\n    return obj.inputType === \"text\";\n  }\n}], function () {\n  return new QuestionTextModel(\"\");\n}, \"textbase\");\nQuestionFactory.Instance.registerQuestion(\"text\", name => {\n  return new QuestionTextModel(name);\n});\nclass MultipleTextEditorModel extends QuestionTextModel {\n  get a11y_input_ariaLabel() {\n    return this.locTitle.renderedHtml;\n  }\n  get a11y_input_ariaLabelledBy() {\n    return null;\n  }\n  get a11y_input_ariaDescribedBy() {\n    return null;\n  }\n}\n/**\n * A class that describes an [item](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model#items) in a Multiple Textboxes question.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n */\nclass MultipleTextItemModel extends Base {\n  constructor(name = null, title = null) {\n    super();\n    this.focusIn = () => {\n      this.editor.focusIn();\n    };\n    this.editorValue = this.createEditor(name);\n    this.maskSettings = this.editorValue.maskSettings;\n    this.editor.questionTitleTemplateCallback = function () {\n      return \"\";\n    };\n    this.editor.titleLocation = \"left\";\n    if (title) {\n      this.title = title;\n    }\n    this.editor.onPropertyChanged.add((sender, options) => {\n      if (options.name !== \"maskSettings\") {\n        this.onPropertyChanged.fire(this, options);\n      }\n    });\n  }\n  getType() {\n    return \"multipletextitem\";\n  }\n  get id() {\n    return this.editor.id;\n  }\n  getOriginalObj() {\n    return this.editor;\n  }\n  /**\n   * An item ID that is not visible to respondents.\n   *\n   * > Item IDs must be unique.\n   * @see title\n   */\n  get name() {\n    return this.editor.name;\n  }\n  set name(val) {\n    this.editor.name = val;\n  }\n  get question() {\n    return this.data;\n  }\n  get editor() {\n    return this.editorValue;\n  }\n  createEditor(name) {\n    return new MultipleTextEditorModel(name);\n  }\n  addUsedLocales(locales) {\n    super.addUsedLocales(locales);\n    this.editor.addUsedLocales(locales);\n  }\n  localeChanged() {\n    super.localeChanged();\n    this.editor.localeChanged();\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.editor.locStrsChanged();\n  }\n  setData(data) {\n    this.data = data;\n    if (!!data) {\n      this.editor.defaultValue = data.getItemDefaultValue(this.name);\n      this.editor.setSurveyImpl(this);\n      this.editor.parent = data;\n      this.editor.setParentQuestion(data);\n    }\n  }\n  /**\n   * Marks the item as required. If a respondent leaves this item empty, the question displays a [validation error](#requiredErrorText).\n   */\n  get isRequired() {\n    return this.editor.isRequired;\n  }\n  set isRequired(val) {\n    this.editor.isRequired = val;\n  }\n  /**\n   * A value passed on to the [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types) attribute of the underlying `<input>` element.\n   *\n   * Default value: `\"text\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n   */\n  get inputType() {\n    return this.editor.inputType;\n  }\n  set inputType(val) {\n    this.editor.inputType = val;\n  }\n  /**\n   * A user-friendly item label to display. If `title` is undefined, [`name`](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel#name) is displayed instead.\n   */\n  get title() {\n    return this.editor.title;\n  }\n  set title(val) {\n    this.editor.title = val;\n  }\n  get locTitle() {\n    return this.editor.locTitle;\n  }\n  get fullTitle() {\n    return this.editor.fullTitle;\n  }\n  /**\n   * The maximum text length measured in characters. Assign 0 if the length should be unlimited.\n   *\n   * Default value: -1 (inherits the actual value from the `SurveyModel`'s [`maxTextLength`](https://surveyjs.io/form-library/documentation/surveymodel#maxTextLength) property).\n   */\n  get maxLength() {\n    return this.editor.maxLength;\n  }\n  set maxLength(val) {\n    this.editor.maxLength = val;\n  }\n  getMaxLength() {\n    var survey = this.getSurvey();\n    return Helpers.getMaxLength(this.maxLength, survey ? survey.maxTextLength : -1);\n  }\n  /**\n   * A placeholder for the input field.\n   */\n  get placeholder() {\n    return this.editor.placeholder;\n  }\n  set placeholder(val) {\n    this.editor.placeholder = val;\n  }\n  get locPlaceholder() {\n    return this.editor.locPlaceholder;\n  }\n  get placeHolder() {\n    return this.placeholder;\n  }\n  set placeHolder(val) {\n    this.placeholder = val;\n  }\n  get locPlaceHolder() {\n    return this.locPlaceholder;\n  }\n  /**\n   * Specifies a custom error message for a [required item](#isRequired).\n   */\n  get requiredErrorText() {\n    return this.editor.requiredErrorText;\n  }\n  set requiredErrorText(val) {\n    this.editor.requiredErrorText = val;\n  }\n  get locRequiredErrorText() {\n    return this.editor.locRequiredErrorText;\n  }\n  /**\n   * A value passed on to the [`size`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size) attribute of the underlying `<input>` element.\n   *\n   * If you want to set a uniform `inputSize` for all text box items, use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model#inputSize) property within the Multiple Textboxes configuration.\n   */\n  get inputSize() {\n    return this.editor.inputSize;\n  }\n  set inputSize(val) {\n    this.editor.inputSize = val;\n  }\n  /**\n   * @deprecated Use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel#inputSize) property instead.\n   */\n  get size() {\n    return this.inputSize;\n  }\n  set size(val) {\n    this.inputSize = val;\n  }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) used to calculate the default item value.\n   * @see minValueExpression\n   * @see maxValueExpression\n   */\n  get defaultValueExpression() {\n    return this.editor.defaultValueExpression;\n  }\n  set defaultValueExpression(val) {\n    this.editor.defaultValueExpression = val;\n  }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) used to calculate the minimum item value.\n   * @see maxValueExpression\n   * @see defaultValueExpression\n   */\n  get minValueExpression() {\n    return this.editor.minValueExpression;\n  }\n  set minValueExpression(val) {\n    this.editor.minValueExpression = val;\n  }\n  /**\n   * An [expression](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#expressions) used to calculate the maximum item value.\n   * @see minValueExpression\n   * @see defaultValueExpression\n   */\n  get maxValueExpression() {\n    return this.editor.maxValueExpression;\n  }\n  set maxValueExpression(val) {\n    this.editor.maxValueExpression = val;\n  }\n  /**\n   * Item validators.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n   */\n  get validators() {\n    return this.editor.validators;\n  }\n  set validators(val) {\n    this.editor.validators = val;\n  }\n  getValidators() {\n    return this.validators;\n  }\n  /**\n   * Specifies the type of a mask applied to the input.\n   *\n   * Possible values:\n   *\n   * - `\"none\"` (default)\n   * - `\"numeric\"`\n   * - `\"currency\"`\n   * - `\"datetime\"`\n   * - `\"pattern\"`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   * @see maskSettings\n   */\n  get maskType() {\n    return this.editor.maskType;\n  }\n  set maskType(val) {\n    this.editor.maskType = val;\n    this.maskSettings = this.editor.maskSettings;\n  }\n  /**\n   * An object with properties that configure the mask applied to the input.\n   *\n   * Available properties depend on the specified [`maskType`](#maskType) and belong to corresponding classes. Refer to the class APIs for a full list of properties:\n   *\n   * | `maskType` | Class |\n   * | ---------- | ----- |\n   * | `\"numeric\"` | [`InputMaskNumeric`](https://surveyjs.io/form-library/documentation/api-reference/inputmasknumeric) |\n   * | `\"currency\"` | [`InputMaskCurrency`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskcurrency) |\n   * | `\"datetime\"` | [`InputMaskDateTime`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskdatetime) |\n   * | `\"pattern\"` | [`InputMaskPattern`](https://surveyjs.io/form-library/documentation/api-reference/inputmaskpattern) |\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n   */\n  get maskSettings() {\n    return this.getPropertyValue(\"maskSettings\");\n  }\n  set maskSettings(val) {\n    this.setPropertyValue(\"maskSettings\", val);\n    if (this.editor.maskSettings !== val) {\n      this.editor.maskSettings = val;\n    }\n  }\n  /**\n   * Specifies text alignment within the input field.\n   *\n   * Possible values:\n   *\n   * - `\"left\"` - Aligns input text to the left side.\n   * - `\"right\"` - Aligns input text to the right side.\n   * - `\"auto\"` (default) - Applies right alignment if a [numeric or currency input mask](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel#maskType) is specified. Otherwise, applies left alignment.\n   */\n  get inputTextAlignment() {\n    return this.editor.inputTextAlignment;\n  }\n  set inputTextAlignment(val) {\n    this.editor.inputTextAlignment = val;\n  }\n  /**\n   * An item value.\n   */\n  get value() {\n    return this.data ? this.data.getMultipleTextValue(this.name) : null;\n  }\n  set value(value) {\n    if (this.data != null) {\n      this.data.setMultipleTextValue(this.name, value);\n    }\n  }\n  isEmpty() {\n    return this.editor.isEmpty();\n  }\n  onValueChanged(newValue) {\n    if (this.valueChangedCallback) this.valueChangedCallback(newValue);\n  }\n  //ISurveyImpl\n  getSurveyData() {\n    return this;\n  }\n  getSurvey() {\n    return this.data ? this.data.getSurvey() : null;\n  }\n  getTextProcessor() {\n    return this.data ? this.data.getTextProcessor() : null;\n  }\n  //ISurveyData\n  getValue(name) {\n    if (!this.data) return null;\n    return this.data.getMultipleTextValue(name);\n  }\n  setValue(name, value) {\n    if (this.data) {\n      this.data.setMultipleTextValue(name, value);\n    }\n  }\n  getVariable(name) {\n    return undefined;\n  }\n  setVariable(name, newValue) {}\n  getComment(name) {\n    return null;\n  }\n  setComment(name, newValue) {}\n  getAllValues() {\n    if (this.data) return this.data.getAllValues();\n    return this.value;\n  }\n  getFilteredValues() {\n    return this.getAllValues();\n  }\n  getFilteredProperties() {\n    return {\n      survey: this.getSurvey()\n    };\n  }\n  findQuestionByName(name) {\n    const survey = this.getSurvey();\n    return !!survey ? survey.getQuestionByName(name) : null;\n  }\n  getEditingSurveyElement() {\n    return undefined;\n  }\n  //IValidatorOwner\n  getValidatorTitle() {\n    return this.title;\n  }\n  get validatedValue() {\n    return this.value;\n  }\n  set validatedValue(val) {\n    this.value = val;\n  }\n  getDataFilteredValues() {\n    return this.getFilteredValues();\n  }\n  getDataFilteredProperties() {\n    return this.getFilteredProperties();\n  }\n}\n/**\n * A class that describes the Multiple Text question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-multipletext/ (linkStyle))\n */\nclass QuestionMultipleTextModel extends Question {\n  static addDefaultItems(question) {\n    var names = QuestionFactory.DefaultMutlipleTextItems;\n    for (var i = 0; i < names.length; i++) question.addItem(names[i]);\n  }\n  constructor(name) {\n    super(name);\n    this.isMultipleItemValueChanging = false;\n    this.createNewArray(\"items\", item => {\n      item.setData(this);\n      if (this.survey) {\n        this.survey.multipleTextItemAdded(this, item);\n      }\n    });\n    this.registerPropertyChangedHandlers([\"items\", \"colCount\", \"itemErrorLocation\"], () => {\n      this.calcVisibleRows();\n    });\n    this.registerPropertyChangedHandlers([\"inputSize\"], () => {\n      this.resetItemsSize();\n    });\n  }\n  getType() {\n    return \"multipletext\";\n  }\n  setSurveyImpl(value, isLight) {\n    super.setSurveyImpl(value, isLight);\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].setData(this);\n    }\n  }\n  get isAllowTitleLeft() {\n    return false;\n  }\n  get hasSingleInput() {\n    return false;\n  }\n  get isContainer() {\n    return true;\n  }\n  get id() {\n    return this.getPropertyValue(\"id\");\n  }\n  set id(val) {\n    var _a;\n    (_a = this.items) === null || _a === void 0 ? void 0 : _a.map((item, index) => item.editor.id = val + \"_\" + index);\n    this.setPropertyValue(\"id\", val);\n  }\n  onSurveyLoad() {\n    this.editorsOnSurveyLoad();\n    super.onSurveyLoad();\n    if (!Helpers.isValueEmpty(this.rows)) {\n      this.calcVisibleRows();\n    }\n  }\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    super.setQuestionValue(newValue, updateIsAnswered);\n    this.performForEveryEditor(item => {\n      item.editor.updateValueFromSurvey(item.value);\n    });\n    this.updateIsAnswered();\n  }\n  onSurveyValueChanged(newValue) {\n    super.onSurveyValueChanged(newValue);\n    this.performForEveryEditor(item => {\n      item.editor.onSurveyValueChanged(item.value);\n    });\n  }\n  resetItemsSize() {\n    this.performForEveryEditor(item => {\n      item.editor.resetInputSize();\n    });\n  }\n  editorsOnSurveyLoad() {\n    this.performForEveryEditor(item => {\n      item.editor.onSurveyLoad();\n    });\n  }\n  performForEveryEditor(func) {\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      if (item.editor) {\n        func(item);\n      }\n    }\n  }\n  /**\n   * Gets or sets an array of [`MultipleTextItemModel`](https://surveyjs.io/form-library/documentation/api-reference/multipletextitemmodel) objects that represent input items.\n   *\n   * Each object in this array should have at least the following properties:\n   *\n   * ```js\n   * {\n   *   \"name\": any, // A unique value used to identify an input item and save an item value to survey results.\n   *   \"title\": String // An item caption. When `title` is undefined, `name` is used. This property supports Markdown.\n   * }\n   * ```\n   *\n   * To enable Markdown support for the `title` property, implement Markdown-to-HTML conversion in the [`onTextMarkdown`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/multiple-text-box-question/ (linkStyle))\n   * @see itemTitleWidth\n   * @see addItem\n   */\n  get items() {\n    return this.getPropertyValue(\"items\");\n  }\n  set items(val) {\n    this.setPropertyValue(\"items\", val);\n  }\n  /**\n   * Adds a new input item.\n   * @param name An item name.\n   * @param title *(Optional)* An item title.\n   * @see items\n   */\n  addItem(name, title = null) {\n    var item = this.createTextItem(name, title);\n    this.items.push(item);\n    return item;\n  }\n  getItemByName(name) {\n    for (var i = 0; i < this.items.length; i++) {\n      if (this.items[i].name == name) return this.items[i];\n    }\n    return null;\n  }\n  getElementsInDesign(includeHidden = false) {\n    let elements;\n    elements = super.getElementsInDesign(includeHidden);\n    return elements.concat(this.items);\n  }\n  addConditionObjectsByContext(objects, context) {\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      objects.push({\n        name: this.getValueName() + \".\" + item.name,\n        text: this.processedTitle + \".\" + item.fullTitle,\n        question: this\n      });\n    }\n  }\n  collectNestedQuestionsCore(questions, visibleOnly, includeNested, includeItSelf) {\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    this.items.forEach(item => item.editor.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n  }\n  getConditionJson(operator = null, path = null) {\n    if (!path) return super.getConditionJson(operator);\n    var item = this.getItemByName(path);\n    if (!item) return null;\n    var json = new JsonObject().toJsonObject(item);\n    json[\"type\"] = \"text\";\n    return json;\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].locStrsChanged();\n    }\n  }\n  localeChanged() {\n    super.localeChanged();\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].localeChanged();\n    }\n  }\n  /**\n   * Specifies the error message position relative to individual input fields.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above input fields.\n   * - `\"bottom\"` - Displays error messages below input fields.\n   */\n  get itemErrorLocation() {\n    return this.getPropertyValue(\"itemErrorLocation\");\n  }\n  set itemErrorLocation(val) {\n    this.setPropertyValue(\"itemErrorLocation\", val);\n  }\n  getQuestionErrorLocation() {\n    if (this.itemErrorLocation !== \"default\") return this.itemErrorLocation;\n    return this.getErrorLocation();\n  }\n  get showItemErrorOnTop() {\n    return this.getQuestionErrorLocation() == \"top\";\n  }\n  get showItemErrorOnBottom() {\n    return this.getQuestionErrorLocation() == \"bottom\";\n  }\n  getChildErrorLocation(child) {\n    return this.getQuestionErrorLocation();\n  }\n  isNewValueCorrect(val) {\n    return Helpers.isValueObject(val, true);\n  }\n  supportAutoAdvance() {\n    for (var i = 0; i < this.items.length; i++) {\n      if (this.items[i].isEmpty()) return false;\n    }\n    return true;\n  }\n  /**\n   * The number of columns used to arrange input items. Accepts the following values: 1, 2, 3, 4, 5.\n   *\n   * Default value: 1\n   */\n  get colCount() {\n    return this.getPropertyValue(\"colCount\");\n  }\n  set colCount(val) {\n    if (val < 1 || val > 5) return;\n    this.setPropertyValue(\"colCount\", val);\n  }\n  /**\n   * A value passed on to the [`inputSize`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size) attribute of the underlying `<input>` elements.\n   */\n  get inputSize() {\n    return this.getPropertyValue(\"inputSize\");\n  }\n  set inputSize(val) {\n    this.setPropertyValue(\"inputSize\", val);\n  }\n  /**\n   * @deprecated Use the [`inputSize`](https://surveyjs.io/form-library/documentation/api-reference/multiple-text-entry-question-model#inputSize) property instead.\n   */\n  get itemSize() {\n    return this.inputSize;\n  }\n  set itemSize(val) {\n    this.inputSize = val;\n  }\n  /**\n   * Specifies a uniform width for all text box titles. Accepts CSS values.\n   *\n   * Default value: `\"\"` (the width of each title depends on the title length)\n   * @see items\n   * @see itemErrorLocation\n   */\n  get itemTitleWidth() {\n    return this.getPropertyValue(\"itemTitleWidth\") || \"\";\n  }\n  set itemTitleWidth(val) {\n    this.setPropertyValue(\"itemTitleWidth\", val);\n  }\n  onRowCreated(row) {\n    return row;\n  }\n  calcVisibleRows() {\n    const colCount = this.colCount;\n    const items = this.items;\n    let index = 0;\n    let row;\n    let errorRow;\n    let rows = [];\n    for (var i = 0; i < items.length; i++) {\n      if (index == 0) {\n        row = this.onRowCreated(new MutlipleTextRow());\n        errorRow = this.onRowCreated(new MutlipleTextErrorRow());\n        if (this.showItemErrorOnTop) {\n          rows.push(errorRow);\n          rows.push(row);\n        } else {\n          rows.push(row);\n          rows.push(errorRow);\n        }\n      }\n      row.cells.push(new MultipleTextCell(items[i], this));\n      errorRow.cells.push(new MultipleTextErrorCell(items[i], this));\n      index++;\n      if (index >= colCount || i == items.length - 1) {\n        index = 0;\n        errorRow.onAfterCreated();\n      }\n    }\n    this.rows = rows;\n  }\n  getRows() {\n    if (Helpers.isValueEmpty(this.rows)) {\n      this.calcVisibleRows();\n    }\n    return this.rows;\n  }\n  onValueChanged() {\n    super.onValueChanged();\n    this.onItemValueChanged();\n  }\n  createTextItem(name, title) {\n    return new MultipleTextItemModel(name, title);\n  }\n  onItemValueChanged() {\n    if (this.isMultipleItemValueChanging) return;\n    for (var i = 0; i < this.items.length; i++) {\n      var itemValue = null;\n      if (this.value && this.items[i].name in this.value) {\n        itemValue = this.value[this.items[i].name];\n      }\n      this.items[i].onValueChanged(itemValue);\n    }\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    this.items.forEach(item => item.editor.runCondition(values, properties));\n  }\n  getIsRunningValidators() {\n    if (super.getIsRunningValidators()) return true;\n    for (var i = 0; i < this.items.length; i++) {\n      if (this.items[i].editor.isRunningValidators) return true;\n    }\n    return false;\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    var res = false;\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].editor.onCompletedAsyncValidators = hasErrors => {\n        this.raiseOnCompletedAsyncValidators();\n      };\n      if (!!rec && rec.isOnValueChanged === true && this.items[i].editor.isEmpty()) continue;\n      res = this.items[i].editor.hasErrors(fireCallback, rec) || res;\n    }\n    return super.hasErrors(fireCallback) || res;\n  }\n  getAllErrors() {\n    var result = super.getAllErrors();\n    for (var i = 0; i < this.items.length; i++) {\n      var errors = this.items[i].editor.getAllErrors();\n      if (errors && errors.length > 0) {\n        result = result.concat(errors);\n      }\n    }\n    return result;\n  }\n  clearErrors() {\n    super.clearErrors();\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].editor.clearErrors();\n    }\n  }\n  getContainsErrors() {\n    var res = super.getContainsErrors();\n    if (res) return res;\n    var items = this.items;\n    for (var i = 0; i < items.length; i++) {\n      if (items[i].editor.containsErrors) return true;\n    }\n    return false;\n  }\n  getIsAnswered() {\n    if (!super.getIsAnswered()) return false;\n    for (var i = 0; i < this.items.length; i++) {\n      var editor = this.items[i].editor;\n      if (editor.isVisible && !editor.isAnswered) return false;\n    }\n    return true;\n  }\n  getProgressInfo() {\n    var elements = [];\n    for (var i = 0; i < this.items.length; i++) {\n      elements.push(this.items[i].editor);\n    }\n    return SurveyElement.getProgressInfoByElements(elements, this.isRequired);\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!value) return value;\n    var res = {};\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      var val = value[item.name];\n      if (Helpers.isValueEmpty(val)) continue;\n      var itemName = item.name;\n      if (keysAsText && !!item.title) {\n        itemName = item.title;\n      }\n      res[itemName] = item.editor.getDisplayValue(keysAsText, val);\n    }\n    return res;\n  }\n  allowMobileInDesignMode() {\n    return true;\n  }\n  //IMultipleTextData\n  getMultipleTextValue(name) {\n    if (!this.value) return null;\n    return this.value[name];\n  }\n  setMultipleTextValue(name, value) {\n    this.isMultipleItemValueChanging = true;\n    if (this.isValueEmpty(value)) {\n      value = undefined;\n    }\n    var newValue = this.value;\n    if (!newValue) {\n      newValue = {};\n    }\n    newValue[name] = value;\n    this.setNewValue(newValue);\n    this.isMultipleItemValueChanging = false;\n  }\n  getItemDefaultValue(name) {\n    return !!this.defaultValue ? this.defaultValue[name] : null;\n  }\n  getTextProcessor() {\n    return this.textProcessor;\n  }\n  getAllValues() {\n    return this.data ? this.data.getAllValues() : null;\n  }\n  //IPanel\n  addElement(element, index) {}\n  removeElement(element) {\n    return false;\n  }\n  getQuestionTitleLocation() {\n    return \"left\";\n  }\n  getQuestionTitleWidth() {\n    return undefined;\n  }\n  getColumsForElement(el) {\n    return [];\n  }\n  updateColumns() {}\n  getQuestionStartIndex() {\n    return this.getStartIndex();\n  }\n  getChildrenLayoutType() {\n    return \"row\";\n  }\n  elementWidthChanged(el) {}\n  get elements() {\n    return [];\n  }\n  indexOf(el) {\n    return -1;\n  }\n  ensureRowsVisibility() {\n    // do nothing\n  }\n  validateContainerOnly() {\n    // do nothing\n  }\n  onQuestionValueChanged(el) {\n    // do nothing\n  }\n  getItemLabelCss(item) {\n    return new CssClassBuilder().append(this.cssClasses.itemLabel).append(this.cssClasses.itemLabelDisabled, this.isDisabledStyle).append(this.cssClasses.itemLabelReadOnly, this.isReadOnlyStyle).append(this.cssClasses.itemLabelPreview, this.isPreviewStyle).append(this.cssClasses.itemLabelAnswered, item.editor.isAnswered).append(this.cssClasses.itemLabelAllowFocus, !this.isDesignMode).append(this.cssClasses.itemLabelOnError, item.editor.errors.length > 0).append(this.cssClasses.itemWithCharacterCounter, !!item.getMaxLength()).toString();\n  }\n  getItemCss() {\n    return new CssClassBuilder().append(this.cssClasses.item).toString();\n  }\n  getItemTitleCss() {\n    return new CssClassBuilder().append(this.cssClasses.itemTitle).toString();\n  }\n  get ariaRole() {\n    return \"group\";\n  }\n  get ariaRequired() {\n    return null;\n  }\n  get ariaInvalid() {\n    return null;\n  }\n}\n__decorate([propertyArray()], QuestionMultipleTextModel.prototype, \"rows\", void 0);\nclass MutlipleTextRow extends Base {\n  constructor() {\n    super(...arguments);\n    this.isVisible = true;\n    this.cells = [];\n  }\n}\n__decorate([property()], MutlipleTextRow.prototype, \"isVisible\", void 0);\n__decorate([propertyArray()], MutlipleTextRow.prototype, \"cells\", void 0);\nclass MutlipleTextErrorRow extends MutlipleTextRow {\n  onAfterCreated() {\n    const callback = () => {\n      this.isVisible = this.cells.some(cell => {\n        var _a, _b;\n        return ((_a = cell.item) === null || _a === void 0 ? void 0 : _a.editor) && ((_b = cell.item) === null || _b === void 0 ? void 0 : _b.editor.hasVisibleErrors);\n      });\n    };\n    this.cells.forEach(cell => {\n      var _a, _b;\n      if ((_a = cell.item) === null || _a === void 0 ? void 0 : _a.editor) {\n        (_b = cell.item) === null || _b === void 0 ? void 0 : _b.editor.registerFunctionOnPropertyValueChanged(\"hasVisibleErrors\", callback);\n      }\n    });\n    callback();\n  }\n}\nclass MultipleTextCell {\n  constructor(item, question) {\n    this.item = item;\n    this.question = question;\n    this.isErrorsCell = false;\n  }\n  getClassName() {\n    return new CssClassBuilder().append(this.question.cssClasses.cell).toString();\n  }\n  get className() {\n    return this.getClassName();\n  }\n}\nclass MultipleTextErrorCell extends MultipleTextCell {\n  constructor() {\n    super(...arguments);\n    this.isErrorsCell = true;\n  }\n  getClassName() {\n    return new CssClassBuilder().append(super.getClassName()).append(this.question.cssClasses.cellError).append(this.question.cssClasses.cellErrorTop, this.question.showItemErrorOnTop).append(this.question.cssClasses.cellErrorBottom, this.question.showItemErrorOnBottom).toString();\n  }\n}\nSerializer.addClass(\"multipletextitem\", [{\n  name: \"!name\",\n  isUnique: true\n}, \"isRequired:boolean\", {\n  name: \"placeholder\",\n  alternativeName: \"placeHolder\",\n  serializationProperty: \"locPlaceholder\"\n}, {\n  name: \"inputType\",\n  default: \"text\",\n  choices: settings.questions.inputTypes\n}, {\n  name: \"maskType\",\n  default: \"none\",\n  visibleIndex: 0,\n  dependsOn: \"inputType\",\n  visibleIf: obj => {\n    return obj.inputType === \"text\";\n  },\n  choices: obj => {\n    const choices = getAvailableMaskTypeChoices();\n    return choices;\n  }\n}, {\n  name: \"maskSettings:masksettings\",\n  className: \"masksettings\",\n  visibleIndex: 1,\n  dependsOn: \"inputType\",\n  visibleIf: obj => {\n    return obj.inputType === \"text\";\n  },\n  onGetValue: function (obj) {\n    return obj.maskSettings.getData();\n  },\n  onSetValue: function (obj, value) {\n    obj.maskSettings.setData(value);\n  }\n}, {\n  name: \"inputTextAlignment\",\n  default: \"auto\",\n  choices: [\"left\", \"right\", \"auto\"]\n}, {\n  name: \"title\",\n  serializationProperty: \"locTitle\"\n}, {\n  name: \"maxLength:number\",\n  default: -1\n}, {\n  name: \"inputSize:number\",\n  alternativeName: \"size\",\n  minValue: 0\n}, {\n  name: \"requiredErrorText:text\",\n  serializationProperty: \"locRequiredErrorText\"\n}, {\n  name: \"defaultValueExpression:expression\",\n  visible: false\n}, {\n  name: \"minValueExpression:expression\",\n  category: \"logic\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  }\n}, {\n  name: \"maxValueExpression:expression\",\n  category: \"logic\",\n  dependsOn: \"inputType\",\n  visibleIf: function (obj) {\n    return isMinMaxType(obj);\n  }\n}, {\n  name: \"validators:validators\",\n  baseClassName: \"surveyvalidator\",\n  classNamePart: \"validator\"\n}], function () {\n  return new MultipleTextItemModel(\"\");\n});\nSerializer.addClass(\"multipletext\", [{\n  name: \"!items:textitems\",\n  className: \"multipletextitem\",\n  isArray: true\n}, {\n  name: \"inputSize:number\",\n  minValue: 0,\n  visible: false,\n  alternativeName: \"itemSize\"\n}, {\n  name: \"colCount:number\",\n  default: 1,\n  choices: [1, 2, 3, 4, 5]\n}, {\n  name: \"itemErrorLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\"],\n  visible: false\n}, {\n  name: \"itemTitleWidth\",\n  category: \"layout\"\n}], function () {\n  return new QuestionMultipleTextModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"multipletext\", name => {\n  var q = new QuestionMultipleTextModel(name);\n  QuestionMultipleTextModel.addDefaultItems(q);\n  return q;\n});\n\n/**\n * The flow panel object. It is a container with flow layout where you can mix questions with markdown text.\n *\n */\nclass FlowPanelModel extends PanelModel {\n  constructor(name = \"\") {\n    super(name);\n    this.createLocalizableString(\"content\", this, true);\n    this.registerPropertyChangedHandlers([\"content\"], () => {\n      this.onContentChanged();\n    });\n  }\n  getType() {\n    return \"flowpanel\";\n  }\n  getChildrenLayoutType() {\n    return \"flow\";\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    this.onContentChanged();\n  }\n  get content() {\n    return this.getLocalizableStringText(\"content\");\n  }\n  set content(val) {\n    this.setLocalizableStringText(\"content\", val);\n  }\n  get locContent() {\n    return this.getLocalizableString(\"content\");\n  }\n  get html() {\n    return this.getPropertyValue(\"html\", \"\");\n  }\n  set html(val) {\n    this.setPropertyValue(\"html\", val);\n  }\n  onContentChanged() {\n    var html = \"\";\n    if (!!this.onCustomHtmlProducing) {\n      html = this.onCustomHtmlProducing();\n    } else {\n      html = this.produceHtml();\n    }\n    this.html = html;\n    if (!!this.contentChangedCallback) this.contentChangedCallback();\n  }\n  produceHtml() {\n    var html = [];\n    //contentElementNamePrefix\n    var regEx = /{(.*?(element:)[^$].*?)}/g;\n    var str = this.content;\n    var startIndex = 0;\n    var res = null;\n    while ((res = regEx.exec(str)) !== null) {\n      if (res.index > startIndex) {\n        html.push(str.substring(startIndex, res.index));\n        startIndex = res.index;\n      }\n      var question = this.getQuestionFromText(res[0]);\n      if (!!question) {\n        html.push(this.getHtmlForQuestion(question));\n      } else {\n        html.push(str.substring(startIndex, res.index + res[0].length));\n      }\n      startIndex = res.index + res[0].length;\n    }\n    if (startIndex < str.length) {\n      html.push(str.substring(startIndex, str.length));\n    }\n    return html.join(\"\").replace(new RegExp(\"<br>\", \"g\"), \"<br/>\");\n  }\n  getQuestionFromText(str) {\n    str = str.substring(1, str.length - 1);\n    str = str.replace(FlowPanelModel.contentElementNamePrefix, \"\").trim();\n    return this.getQuestionByName(str);\n  }\n  getHtmlForQuestion(question) {\n    if (!!this.onGetHtmlForQuestion) return this.onGetHtmlForQuestion(question);\n    return \"\";\n  }\n  getQuestionHtmlId(question) {\n    return this.name + \"_\" + question.id;\n  }\n  onAddElement(element, index) {\n    super.onAddElement(element, index);\n    this.addElementToContent(element);\n    element.renderWidth = \"\";\n  }\n  onRemoveElement(element) {\n    var searchStr = this.getElementContentText(element);\n    this.content = this.content.replace(searchStr, \"\");\n    super.onRemoveElement(element);\n  }\n  dragDropMoveElement(src, target, targetIndex) {}\n  addElementToContent(element) {\n    if (this.isLoadingFromJson) return;\n    var text = this.getElementContentText(element);\n    if (!this.insertTextAtCursor(text)) {\n      this.content = this.content + text;\n    }\n  }\n  insertTextAtCursor(text, prevName = null) {\n    if (!this.isDesignMode || !DomWindowHelper.isAvailable()) return false;\n    let sel = DomWindowHelper.getSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      let range = sel.getRangeAt(0);\n      range.deleteContents();\n      const textElement = new Text(text);\n      range.insertNode(textElement);\n      var self = this;\n      if (self.getContent) {\n        var str = self.getContent(prevName);\n        this.content = str;\n      }\n      return true;\n    }\n    return false;\n  }\n  getElementContentText(element) {\n    return \"{\" + FlowPanelModel.contentElementNamePrefix + element.name + \"}\";\n  }\n}\nFlowPanelModel.contentElementNamePrefix = \"element:\";\nSerializer.addClass(\"flowpanel\", [{\n  name: \"content:html\",\n  serializationProperty: \"locContent\"\n}], function () {\n  return new FlowPanelModel();\n}, \"panel\");\nclass DefaultTitleModel {\n  static getIconCss(cssClasses, isCollapsed) {\n    return new CssClassBuilder().append(cssClasses.icon).append(cssClasses.iconExpanded, !isCollapsed).toString();\n  }\n}\n\n/**\n * A base class for question types that cannot have a value ([Html](https://surveyjs.io/form-library/documentation/questionhtmlmodel), [Image](https://surveyjs.io/form-library/documentation/questionimagemodel)).\n *\n * This class does not implement new functionality&mdash;it only redefines default values of certain properties inherited from the [`Question`](https://surveyjs.io/form-library/documentation/question) class.\n */\nclass QuestionNonValue extends Question {\n  constructor(name) {\n    super(name);\n  }\n  getType() {\n    return \"nonvalue\";\n  }\n  get hasInput() {\n    return false;\n  }\n  get hasTitle() {\n    return false;\n  }\n  getTitleLocation() {\n    return \"\";\n  }\n  get hasComment() {\n    return false;\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    return false;\n  }\n  getAllErrors() {\n    return [];\n  }\n  supportAutoAdvance() {\n    return false;\n  }\n  addConditionObjectsByContext(objects, context) {}\n  getConditionJson(operator = null, path = null) {\n    return null;\n  }\n  get ariaRole() {\n    return null;\n  }\n  get ariaRequired() {\n    return null;\n  }\n}\nSerializer.addClass(\"nonvalue\", [{\n  name: \"title\",\n  visible: false\n}, {\n  name: \"description\",\n  visible: false\n}, {\n  name: \"valueName\",\n  visible: false\n}, {\n  name: \"enableIf\",\n  visible: false\n}, {\n  name: \"defaultValue\",\n  visible: false\n}, {\n  name: \"correctAnswer\",\n  visible: false\n}, {\n  name: \"clearIfInvisible\",\n  visible: false\n}, {\n  name: \"isRequired\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"requiredErrorText\",\n  visible: false\n}, {\n  name: \"readOnly\",\n  visible: false\n}, {\n  name: \"requiredIf\",\n  visible: false\n}, {\n  name: \"validators\",\n  visible: false\n}, {\n  name: \"titleLocation\",\n  visible: false\n}, {\n  name: \"showTitle\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"showCommentArea\",\n  visible: false\n}, {\n  name: \"useDisplayValuesInDynamicTexts\",\n  alternativeName: \"useDisplayValuesInTitle\",\n  visible: false\n}], function () {\n  return new QuestionNonValue(\"\");\n}, \"question\");\n\n/**\n * A Model for an question that renders empty \"div\" tag. It used as a base class for some custom widgets\n */\nclass QuestionEmptyModel extends Question {\n  constructor(name) {\n    super(name);\n  }\n  getType() {\n    return \"empty\";\n  }\n}\nSerializer.addClass(\"empty\", [], function () {\n  return new QuestionEmptyModel(\"\");\n}, \"question\");\nclass CheckboxItem extends ItemValue {\n  get isExclusive() {\n    return this.getPropertyValue(\"isExclusive\");\n  }\n  set isExclusive(val) {\n    this.setPropertyValue(\"isExclusive\", val);\n  }\n  getBaseType() {\n    return \"checkboxitem\";\n  }\n}\n/**\n * A class that describes the Checkboxes question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-checkbox/ (linkStyle))\n */\nclass QuestionCheckboxModel extends QuestionCheckboxBase {\n  constructor(name) {\n    super(name);\n    this.invisibleOldValues = {};\n    this.isChangingValueOnClearIncorrect = false;\n    this.selectAllItemValue = this.createSelectAllItem();\n    this.registerPropertyChangedHandlers([\"showSelectAllItem\", \"selectAllText\"], () => {\n      this.onVisibleChoicesChanged();\n    });\n  }\n  getDefaultItemComponent() {\n    return \"survey-checkbox-item\";\n  }\n  getType() {\n    return \"checkbox\";\n  }\n  getItemValueType() {\n    return \"checkboxitem\";\n  }\n  createSelectAllItem() {\n    const res = this.createItemValue(\"\");\n    res.value = \"\";\n    res.id = \"selectall\";\n    this.selectAllItemText = this.createLocalizableString(\"selectAllText\", res, true, \"selectAllItemText\");\n    res.locOwner = this;\n    res.setLocText(this.selectAllItemText);\n    return res;\n  }\n  onCreating() {\n    super.onCreating();\n    this.createNewArray(\"renderedValue\");\n    this.createNewArray(\"value\");\n  }\n  getFirstInputElementId() {\n    return this.inputId + \"_0\";\n  }\n  /**\n   * Specifies a property name used to store selected values.\n   *\n   * Set this property if you want to store selected values in an array of objects instead of an array of primitive values. For example, if you set `valuePropertyName` to `\"car\"`, the `value` property will contain an array of objects `[{ car: \"Ford\" }, { car: \"Tesla\" }]`, not an array of string values `[ \"Ford\", \"Tesla\" ]`.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/merge-question-values/ (linkStyle))\n   */\n  get valuePropertyName() {\n    return this.getPropertyValue(\"valuePropertyName\");\n  }\n  set valuePropertyName(val) {\n    this.setPropertyValue(\"valuePropertyName\", val);\n  }\n  getQuestionFromArray(name, index) {\n    if (!!name && name === this.valuePropertyName) {\n      const v = this.value;\n      if (Array.isArray(v) && index < v.length) return this;\n    }\n    return null;\n  }\n  getDependedQuestionsByValueName(isDependOn) {\n    if (isDependOn && !!this.valuePropertyName) return [];\n    return super.getDependedQuestionsByValueName(isDependOn);\n  }\n  /**\n   * Returns the \"Select All\" choice item. Use this property to change the item's `value` or `text`.\n   * @see showSelectAllItem\n   */\n  get selectAllItem() {\n    return this.selectAllItemValue;\n  }\n  /**\n   * Gets or sets a caption for the \"Select All\" choice item.\n   * @see showSelectAllItem\n   */\n  get selectAllText() {\n    return this.getLocalizableStringText(\"selectAllText\");\n  }\n  set selectAllText(val) {\n    this.setLocalizableStringText(\"selectAllText\", val);\n  }\n  get locSelectAllText() {\n    return this.getLocalizableString(\"selectAllText\");\n  }\n  /**\n   * Enable this property to display a \"Select All\" item. When users select it, all other choice items, except \"Other\" and \"None\", also become selected.\n   * @see selectAll\n   * @see isAllSelected\n   * @see separateSpecialChoices\n   */\n  get showSelectAllItem() {\n    return this.getPropertyValue(\"showSelectAllItem\");\n  }\n  set showSelectAllItem(val) {\n    this.setPropertyValue(\"showSelectAllItem\", val);\n  }\n  get hasSelectAll() {\n    return this.showSelectAllItem;\n  }\n  set hasSelectAll(val) {\n    this.showSelectAllItem = val;\n  }\n  /**\n   * Returns `true` if all choice items, except \"Other\" and \"None\", are selected.\n   * @see showSelectAllItem\n   */\n  get isAllSelected() {\n    return this.allElementsSelected();\n  }\n  set isAllSelected(val) {\n    if (val) {\n      this.selectAll();\n    } else {\n      this.clearValue(true);\n    }\n  }\n  toggleSelectAll() {\n    this.isAllSelected = !this.isAllSelected;\n  }\n  allElementsSelected() {\n    if (this.isNoneItemsSelected()) return false;\n    const items = this.getVisibleEnableItems();\n    if (items.length === 0) return false;\n    const val = this.value;\n    if (!val || !Array.isArray(val) || val.length === 0) return false;\n    if (val.length < items.length) return false;\n    const rVal = [];\n    for (let i = 0; i < val.length; i++) {\n      rVal.push(this.getRealValue(val[i]));\n    }\n    for (let i = 0; i < items.length; i++) {\n      if (rVal.indexOf(items[i].value) < 0) return false;\n    }\n    return true;\n  }\n  isNoneItemsSelected() {\n    const noneItems = this.getNoneItems();\n    for (let i = 0; i < noneItems.length; i++) {\n      if (this.isItemSelected(noneItems[i])) return true;\n    }\n    return false;\n  }\n  getNoneItems() {\n    const res = new Array();\n    this.visibleChoices.forEach(item => {\n      if (this.isNoneItem(item)) {\n        res.push(item);\n      }\n    });\n    return res;\n  }\n  /**\n   * Selects all choice items, except \"Other\" and \"None\".\n   *\n   * To clear selection, call the `clearValue()` method.\n   * @see clearValue\n   */\n  selectAll() {\n    const val = [];\n    const items = this.getVisibleEnableItems();\n    for (let i = 0; i < items.length; i++) {\n      val.push(items[i].value);\n    }\n    this.renderedValue = val;\n  }\n  clickItemHandler(item, checked) {\n    if (this.isReadOnlyAttr) return;\n    if (item === this.selectAllItem) {\n      if (checked === true || checked === false) {\n        this.isAllSelected = checked;\n      } else {\n        this.toggleSelectAll();\n      }\n    } else {\n      if (this.isNoneItem(item)) {\n        this.renderedValue = checked ? [item.value] : [];\n      } else {\n        const newValue = [].concat(this.renderedValue || []);\n        const index = newValue.indexOf(item.value);\n        if (checked) {\n          if (index < 0) {\n            newValue.push(item.value);\n          }\n        } else {\n          if (index > -1) {\n            newValue.splice(index, 1);\n          }\n        }\n        this.renderedValue = newValue;\n      }\n    }\n  }\n  isItemSelectedCore(item) {\n    if (item === this.selectAllItem) return this.isAllSelected;\n    var val = this.renderedValue;\n    if (!val || !Array.isArray(val)) return false;\n    for (var i = 0; i < val.length; i++) {\n      if (this.isTwoValueEquals(val[i], item.value)) return true;\n    }\n    return false;\n  }\n  hasUnknownValueItem(val, includeOther = false, isFilteredChoices = true, checkEmptyValue = false) {\n    const propName = this.valuePropertyName;\n    if (!!propName && typeof val === \"object\" && val[propName] !== undefined) {\n      val = val[propName];\n    }\n    return super.hasUnknownValueItem(val, includeOther, isFilteredChoices, checkEmptyValue);\n  }\n  convertFuncValuetoQuestionValue(val) {\n    if (!!this.valuePropertyName && Array.isArray(val) && val.length > 0) {\n      const res = [];\n      val.forEach(item => {\n        const isObj = typeof item === \"object\";\n        let obj = isObj ? item : {};\n        if (!isObj) {\n          obj[this.valuePropertyName] = item;\n        }\n        res.push(obj);\n      });\n      val = res;\n    }\n    return super.convertDefaultValue(val);\n  }\n  getRealValue(val) {\n    if (!val) return val;\n    return !this.valuePropertyName ? val : val[this.valuePropertyName];\n  }\n  get isValueArray() {\n    return true;\n  }\n  /**\n   * Specifies the maximum number of selected choices.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * > This property only limits the number of choice items that can be selected by users. You can select any number of choice items in code, regardless of the `maxSelectedChoices` value.\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see minSelectedChoices\n   */\n  get maxSelectedChoices() {\n    return this.getPropertyValue(\"maxSelectedChoices\");\n  }\n  set maxSelectedChoices(val) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"maxSelectedChoices\", val);\n    this.filterItems();\n  }\n  /**\n   * Specifies the minimum number of selected choices.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * > This property only limits the number of choice items that can be selected by users. You can select any number of choice items in code, regardless of the `minSelectedChoices` value.\n   *\n   * [Ranking Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see maxSelectedChoices\n   */\n  get minSelectedChoices() {\n    return this.getPropertyValue(\"minSelectedChoices\");\n  }\n  set minSelectedChoices(val) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"minSelectedChoices\", val);\n  }\n  /**\n   * An array of selected choice items. Includes the \"Other\" and \"None\" choice items if they are selected, but not \"Select All\". Items are sorted in the order they were selected.\n   * @see visibleChoices\n   * @see enabledChoices\n   */\n  get selectedChoices() {\n    const val = this.renderedValue;\n    const visChoices = this.visibleChoices;\n    const selectedItemValues = this.selectedItemValues;\n    if (this.isEmpty()) return [];\n    const allChoices = !!this.defaultSelectedItemValues ? [].concat(this.defaultSelectedItemValues, visChoices) : visChoices;\n    const itemValues = val.map(item => {\n      return ItemValue.getItemByValue(allChoices, item);\n    }).filter(item => !!item);\n    if (!itemValues.length && !selectedItemValues) {\n      this.updateSelectedItemValues();\n    }\n    const validValues = this.validateItemValues(itemValues);\n    return validValues;\n  }\n  get selectedItems() {\n    return this.selectedChoices;\n  }\n  get hasFilteredValue() {\n    return !!this.valuePropertyName;\n  }\n  getFilteredName() {\n    let res = super.getFilteredName();\n    if (this.hasFilteredValue) {\n      res += \"-unwrapped\";\n    }\n    return res;\n  }\n  getFilteredValue() {\n    if (this.hasFilteredValue) return this.renderedValue;\n    return super.getFilteredValue();\n  }\n  getMultipleSelectedItems() {\n    return this.selectedChoices;\n  }\n  validateItemValues(itemValues) {\n    if (!!itemValues.length) return itemValues;\n    const selectedItemValues = this.selectedItemValues;\n    if (!!selectedItemValues && !!selectedItemValues.length) {\n      this.defaultSelectedItemValues = [].concat(selectedItemValues);\n      return selectedItemValues;\n    }\n    const val = this.renderedValue;\n    return val.map(item => this.createItemValue(item));\n  }\n  getAnswerCorrectIgnoreOrder() {\n    return true;\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (isOnValueChanged) return;\n    if (this.checkMinSelectedChoicesUnreached()) {\n      const minError = new CustomError(this.getLocalizationFormatString(\"minSelectError\", this.minSelectedChoices), this);\n      errors.push(minError);\n    }\n  }\n  onVisibleChoicesChanged() {\n    super.onVisibleChoicesChanged();\n    this.updateSelectAllItemProps();\n  }\n  onEnableItemCallBack(item) {\n    if (!this.shouldCheckMaxSelectedChoices()) return true;\n    return this.isItemSelected(item);\n  }\n  onAfterRunItemsEnableCondition() {\n    this.updateSelectAllItemProps();\n    if (this.maxSelectedChoices < 1) {\n      this.otherItem.setIsEnabled(true);\n      return;\n    }\n    if (this.hasOther) {\n      this.otherItem.setIsEnabled(!this.shouldCheckMaxSelectedChoices() || this.isOtherSelected);\n    }\n  }\n  updateSelectAllItemProps() {\n    if (!this.hasSelectAll) return;\n    this.selectAllItem.setIsEnabled(this.getSelectAllEnabled());\n  }\n  getSelectAllEnabled() {\n    if (!this.hasSelectAll) return true;\n    let visCount = this.getVisibleEnableItems().length;\n    const max = this.maxSelectedChoices;\n    if (max > 0 && max < visCount) return false;\n    return visCount > 0;\n  }\n  getVisibleEnableItems() {\n    const res = new Array();\n    const items = this.visibleChoices;\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      if (item.isEnabled && !this.isBuiltInChoice(item) && !item.isExclusive) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n  shouldCheckMaxSelectedChoices() {\n    if (this.maxSelectedChoices < 1) return false;\n    var val = this.value;\n    var len = !Array.isArray(val) ? 0 : val.length;\n    return len >= this.maxSelectedChoices;\n  }\n  checkMinSelectedChoicesUnreached() {\n    if (this.minSelectedChoices < 1) return false;\n    var val = this.value;\n    var len = !Array.isArray(val) ? 0 : val.length;\n    if (len === 1 && this.isNoneItemsSelected()) return false;\n    return len < this.minSelectedChoices;\n  }\n  getItemClassCore(item, options) {\n    this.value; //trigger dependencies from koValue for knockout\n    options.isSelectAllItem = item === this.selectAllItem;\n    return new CssClassBuilder().append(super.getItemClassCore(item, options)).append(this.cssClasses.itemSelectAll, options.isSelectAllItem).toString();\n  }\n  updateValueFromSurvey(newValue, clearData) {\n    super.updateValueFromSurvey(newValue, clearData);\n    this.invisibleOldValues = {};\n  }\n  setDefaultValue() {\n    super.setDefaultValue();\n    const val = this.defaultValue;\n    if (Array.isArray(val)) {\n      for (var i = 0; i < val.length; i++) {\n        const rVal = this.getRealValue(val[i]);\n        if (this.canClearValueAnUnknown(rVal)) {\n          this.addIntoInvisibleOldValues(rVal);\n        }\n      }\n    }\n  }\n  addIntoInvisibleOldValues(val) {\n    this.invisibleOldValues[val] = val;\n  }\n  hasValueToClearIncorrectValues() {\n    return super.hasValueToClearIncorrectValues() || !Helpers.isValueEmpty(this.invisibleOldValues);\n  }\n  setNewValue(newValue) {\n    if (!this.isChangingValueOnClearIncorrect) {\n      this.invisibleOldValues = {};\n    }\n    newValue = this.valueFromData(newValue);\n    var value = this.value;\n    if (!newValue) newValue = [];\n    if (!value) value = [];\n    if (this.isTwoValueEquals(value, newValue)) return;\n    this.removeNoneItemsValues(value, newValue);\n    super.setNewValue(newValue);\n  }\n  getIsMultipleValue() {\n    return true;\n  }\n  getCommentFromValue(newValue) {\n    var ind = this.getFirstUnknownIndex(newValue);\n    if (ind < 0) return \"\";\n    return newValue[ind];\n  }\n  getStoreOthersAsComment() {\n    if (!!this.valuePropertyName) return false;\n    return super.getStoreOthersAsComment();\n  }\n  setOtherValueIntoValue(newValue) {\n    var ind = this.getFirstUnknownIndex(newValue);\n    if (ind < 0) return newValue;\n    let otherVal = this.otherItem.value;\n    const propName = this.valuePropertyName;\n    if (propName) {\n      const obj = {};\n      obj[propName] = otherVal;\n      otherVal = obj;\n    }\n    newValue.splice(ind, 1, otherVal);\n    return newValue;\n  }\n  getFirstUnknownIndex(newValue) {\n    if (!Array.isArray(newValue)) return -1;\n    for (var i = 0; i < newValue.length; i++) {\n      if (this.hasUnknownValueItem(newValue[i], false, false)) return i;\n    }\n    return -1;\n  }\n  removeNoneItemsValues(value, newValue) {\n    const noneValues = this.getNoneItems().map(item => item.value);\n    if (noneValues.length > 0) {\n      const prevNone = this.noneIndexInArray(value, noneValues);\n      const newNone = this.noneIndexInArray(newValue, noneValues);\n      if (prevNone.index > -1) {\n        if (prevNone.val === newNone.val) {\n          if (newValue.length > 0) {\n            newValue.splice(newNone.index, 1);\n          }\n        } else {\n          const prevNewNone = this.noneIndexInArray(newValue, [prevNone.val]);\n          if (prevNewNone.index > -1 && prevNewNone.index < newValue.length - 1) {\n            newValue.splice(prevNewNone.index, 1);\n          }\n        }\n      } else {\n        if (newNone.index > -1 && newValue.length > 1) {\n          const itemVal = this.convertValueToObject([newNone.val])[0];\n          newValue.splice(0, newValue.length, itemVal);\n        }\n      }\n    }\n  }\n  noneIndexInArray(val, noneValues) {\n    if (!Array.isArray(val)) return {\n      index: -1,\n      val: undefined\n    };\n    for (var i = val.length - 1; i >= 0; i--) {\n      const index = noneValues.indexOf(this.getRealValue(val[i]));\n      if (index > -1) return {\n        index: i,\n        val: noneValues[index]\n      };\n    }\n    return {\n      index: -1,\n      val: undefined\n    };\n  }\n  supportSelectAll() {\n    return this.isSupportProperty(\"showSelectAllItem\");\n  }\n  addNonChoicesItems(dict, isAddAll) {\n    super.addNonChoicesItems(dict, isAddAll);\n    if (this.supportSelectAll()) {\n      this.addNonChoiceItem(dict, this.selectAllItem, isAddAll, this.hasSelectAll, settings.specialChoicesOrder.selectAllItem);\n    }\n  }\n  isBuiltInChoice(item) {\n    return item === this.selectAllItem || super.isBuiltInChoice(item);\n  }\n  isItemInList(item) {\n    if (item == this.selectAllItem) return this.hasSelectAll;\n    return super.isItemInList(item);\n  }\n  getDisplayValueEmpty() {\n    return ItemValue.getTextOrHtmlByValue(this.visibleChoices.filter(choice => choice != this.selectAllItemValue), undefined);\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!Array.isArray(value)) return super.getDisplayValueCore(keysAsText, value);\n    const valuePropName = this.valuePropertyName;\n    const onGetValueCallback = index => {\n      let val = value[index];\n      if (!!valuePropName && !!val[valuePropName]) {\n        val = val[valuePropName];\n      }\n      return val;\n    };\n    return this.getDisplayArrayValue(keysAsText, value, onGetValueCallback);\n  }\n  clearIncorrectValuesCore() {\n    this.clearIncorrectAndDisabledValues(false);\n  }\n  clearDisabledValuesCore() {\n    this.clearIncorrectAndDisabledValues(true);\n  }\n  clearIncorrectAndDisabledValues(clearDisabled) {\n    var val = this.value;\n    var hasChanged = false;\n    var restoredValues = this.restoreValuesFromInvisible();\n    if (!val && restoredValues.length == 0) return;\n    if (!Array.isArray(val) || val.length == 0) {\n      this.isChangingValueOnClearIncorrect = true;\n      if (!clearDisabled) {\n        if (this.hasComment) {\n          this.value = null;\n        } else {\n          this.clearValue(true);\n        }\n      }\n      this.isChangingValueOnClearIncorrect = false;\n      if (restoredValues.length == 0) return;\n      val = [];\n    }\n    var newValue = [];\n    for (var i = 0; i < val.length; i++) {\n      const rItemVal = this.getRealValue(val[i]);\n      var isUnkown = this.canClearValueAnUnknown(rItemVal);\n      if (!clearDisabled && !isUnkown || clearDisabled && !this.isValueDisabled(rItemVal)) {\n        newValue.push(val[i]);\n      } else {\n        hasChanged = true;\n        if (isUnkown) {\n          this.addIntoInvisibleOldValues(val[i]);\n        }\n      }\n    }\n    for (var i = 0; i < restoredValues.length; i++) {\n      newValue.push(restoredValues[i]);\n      hasChanged = true;\n    }\n    if (!hasChanged) return;\n    this.isChangingValueOnClearIncorrect = true;\n    if (newValue.length == 0) {\n      this.clearValue(true);\n    } else {\n      this.value = newValue;\n    }\n    this.isChangingValueOnClearIncorrect = false;\n  }\n  restoreValuesFromInvisible() {\n    var res = [];\n    var visItems = this.visibleChoices;\n    for (var i = 0; i < visItems.length; i++) {\n      const item = visItems[i];\n      if (item === this.selectAllItem) continue;\n      var val = visItems[i].value;\n      if (Helpers.isTwoValueEquals(val, this.invisibleOldValues[val])) {\n        if (!this.isItemSelected(item)) {\n          res.push(val);\n        }\n        delete this.invisibleOldValues[val];\n      }\n    }\n    return res;\n  }\n  getConditionJson(operator = null, path = null) {\n    const json = super.getConditionJson(operator, path);\n    if (operator == \"contains\" || operator == \"notcontains\") {\n      json[\"type\"] = \"radiogroup\";\n    }\n    json[\"maxSelectedChoices\"] = 0;\n    json[\"minSelectedChoices\"] = 0;\n    return json;\n  }\n  isAnswerCorrect() {\n    return Helpers.isArrayContainsEqual(this.value, this.correctAnswer);\n  }\n  setDefaultValueWithOthers() {\n    this.value = this.renderedValueFromDataCore(this.defaultValue);\n  }\n  getIsItemValue(val, item) {\n    if (!val || !Array.isArray(val)) return false;\n    return val.indexOf(item.value) >= 0;\n  }\n  valueFromData(val) {\n    if (!val) return val;\n    if (!Array.isArray(val)) return [super.valueFromData(val)];\n    let value = [];\n    for (let i = 0; i < val.length; i++) {\n      let choiceitem = ItemValue.getItemByValue(this.visibleChoices, val[i]);\n      if (!!choiceitem) {\n        value.push(choiceitem.value);\n      } else {\n        value.push(val[i]);\n      }\n    }\n    return value;\n  }\n  rendredValueFromData(val) {\n    val = this.convertValueFromObject(val);\n    return super.rendredValueFromData(val);\n  }\n  rendredValueToData(val) {\n    val = super.rendredValueToData(val);\n    return this.convertValueToObject(val);\n  }\n  convertValueFromObject(val) {\n    if (!this.valuePropertyName) return val;\n    return Helpers.convertArrayObjectToValue(val, this.valuePropertyName);\n  }\n  convertValueToObject(val) {\n    if (!this.valuePropertyName) return val;\n    let dest = undefined;\n    if (!!this.survey && this.survey.questionsByValueName(this.getValueName()).length > 1) {\n      dest = this.data.getValue(this.getValueName());\n    }\n    return Helpers.convertArrayValueToObject(val, this.valuePropertyName, dest);\n  }\n  renderedValueFromDataCore(val) {\n    if (!val || !Array.isArray(val)) val = [];\n    if (!this.hasActiveChoices) return val;\n    for (var i = 0; i < val.length; i++) {\n      if (val[i] == this.otherItem.value) return val;\n      if (this.hasUnknownValueItem(val[i], true, false)) {\n        this.otherValue = val[i];\n        var newVal = val.slice();\n        newVal[i] = this.otherItem.value;\n        return newVal;\n      }\n    }\n    return val;\n  }\n  rendredValueToDataCore(val) {\n    if (!val || !val.length) return val;\n    for (var i = 0; i < val.length; i++) {\n      if (val[i] == this.otherItem.value) {\n        if (this.needConvertRenderedOtherToDataValue()) {\n          var newVal = val.slice();\n          newVal[i] = this.otherValue;\n          return newVal;\n        }\n      }\n    }\n    return val;\n  }\n  selectOtherValueFromComment(val) {\n    var newVal = [];\n    const rendVal = this.renderedValue;\n    if (Array.isArray(rendVal)) {\n      for (var i = 0; i < rendVal.length; i++) {\n        if (rendVal[i] !== this.otherItem.value) {\n          newVal.push(rendVal[i]);\n        }\n      }\n    }\n    if (val) {\n      newVal.push(this.otherItem.value);\n    }\n    this.value = newVal;\n  }\n  get checkBoxSvgPath() {\n    return \"M5,13l2-2l3,3l7-7l2,2l-9,9L5,13z\";\n  }\n  //a11y\n  get isNewA11yStructure() {\n    return true;\n  }\n  get a11y_input_ariaRole() {\n    return \"group\";\n  }\n  get a11y_input_ariaRequired() {\n    return null;\n  }\n}\nSerializer.addClass(\"checkboxitem\", [{\n  name: \"isExclusive:boolean\",\n  locationInTable: \"detail\"\n}], value => new CheckboxItem(value), \"itemvalue\");\nSerializer.addClass(\"checkbox\", [{\n  name: \"showSelectAllItem:boolean\",\n  alternativeName: \"hasSelectAll\"\n}, {\n  name: \"separateSpecialChoices\",\n  visible: true\n}, {\n  name: \"maxSelectedChoices:number\",\n  default: 0,\n  onSettingValue: (obj, val) => {\n    if (val <= 0) return 0;\n    const min = obj.minSelectedChoices;\n    return min > 0 && val < min ? min : val;\n  }\n}, {\n  name: \"minSelectedChoices:number\",\n  default: 0,\n  onSettingValue: (obj, val) => {\n    if (val <= 0) return 0;\n    const max = obj.maxSelectedChoices;\n    return max > 0 && val > max ? max : val;\n  }\n}, {\n  name: \"selectAllText\",\n  serializationProperty: \"locSelectAllText\",\n  dependsOn: \"showSelectAllItem\",\n  visibleIf: function (obj) {\n    return obj.hasSelectAll;\n  }\n}, {\n  name: \"valuePropertyName\",\n  category: \"data\"\n}, {\n  name: \"itemComponent\",\n  visible: false,\n  default: \"survey-checkbox-item\"\n}], function () {\n  return new QuestionCheckboxModel(\"\");\n}, \"checkboxbase\");\nSerializer.getProperty(\"checkbox\", \"choices\").type = \"checkboxitem[]\";\nQuestionFactory.Instance.registerQuestion(\"checkbox\", name => {\n  var q = new QuestionCheckboxModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\nclass MultiSelectListModel extends ListModel {\n  updateItemState() {\n    this.actions.forEach(action => {\n      const isSelected = this.isItemSelected(action);\n      action.visible = this.hideSelectedItems ? !isSelected : true;\n    });\n  }\n  constructor(options) {\n    super(options);\n    this.onItemClick = item => {\n      if (this.isItemDisabled(item)) return;\n      this.isExpanded = false;\n      if (this.isItemSelected(item)) {\n        this.selectedItems.splice(this.selectedItems.indexOf(item), 1)[0];\n        !!this.onSelectionChanged && this.onSelectionChanged(item, \"removed\");\n      } else {\n        this.selectedItems.push(item);\n        !!this.onSelectionChanged && this.onSelectionChanged(item, \"added\");\n      }\n    };\n    this.isItemDisabled = itemValue => {\n      return itemValue.enabled !== undefined && !itemValue.enabled;\n    };\n    this.isItemSelected = itemValue => {\n      return !!this.allowSelection && this.selectedItems.filter(item => this.areSameItems(item, itemValue)).length > 0;\n    };\n    this.setSelectedItems(options.selectedItems || []);\n  }\n  updateState() {\n    this.updateItemState();\n    this.raiseUpdate({\n      needUpdateIsEmpty: true\n    });\n  }\n  setSelectedItems(newItems) {\n    this.selectedItems = newItems;\n    this.updateState();\n  }\n  selectFocusedItem() {\n    super.selectFocusedItem();\n    if (this.hideSelectedItems) {\n      this.focusNextVisibleItem();\n    }\n  }\n}\n__decorate([property()], MultiSelectListModel.prototype, \"hideSelectedItems\", void 0);\nclass DropdownMultiSelectListModel extends DropdownListModel {\n  get needRenderInput() {\n    return !this.question.isInputReadOnly || !!this.filterStringPlaceholder;\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.syncFilterStringPlaceholder();\n  }\n  updateListState() {\n    this.listModel.updateState();\n    this.updateCustomItemValue();\n    this.syncFilterStringPlaceholder();\n  }\n  syncFilterStringPlaceholder() {\n    const selectedActions = this.getSelectedActions();\n    if (selectedActions.length || this.question.selectedItems.length || this.listModel.focusedItem) {\n      this.filterStringPlaceholder = undefined;\n    } else {\n      this.filterStringPlaceholder = this.question.placeholder;\n    }\n  }\n  getSelectedActions() {\n    return this.listModel.actions.filter(item => item.selected);\n  }\n  getFocusFirstInputSelector() {\n    if (this.listModel.hideSelectedItems && IsTouch && !this.isValueEmpty(this.question.value)) {\n      return this.itemSelector;\n    } else {\n      return super.getFocusFirstInputSelector();\n    }\n  }\n  getPopupCssClasses() {\n    return \"sv-multi-select-list\";\n  }\n  createListModel() {\n    const visibleItems = this.getAvailableItems();\n    let _onSelectionChanged = this.onSelectionChanged;\n    if (!_onSelectionChanged) {\n      _onSelectionChanged = (item, status) => {\n        this.resetFilterString();\n        if (item.id === \"selectall\") {\n          this.selectAllItems();\n        } else if (status === \"added\" && item.value === settings.noneItemValue) {\n          this.selectNoneItem();\n        } else if (status === \"added\") {\n          this.selectItem(item.value);\n        } else if (status === \"removed\") {\n          this.deselectItem(item.value);\n        }\n        this.popupRecalculatePosition(false);\n        if (this.closeOnSelect) {\n          this.popupModel.isVisible = false;\n        }\n      };\n    }\n    const listOptions = {\n      items: visibleItems,\n      onSelectionChanged: _onSelectionChanged,\n      allowSelection: false,\n      locOwner: this.question,\n      elementId: this.listElementId\n    };\n    const res = new MultiSelectListModel(listOptions);\n    this.setOnTextSearchCallbackForListModel(res);\n    res.forceShowFilter = this.question.choicesLazyLoadEnabled;\n    return res;\n  }\n  resetFilterString() {\n    super.resetFilterString();\n    this.inputString = null;\n    this.hintString = \"\";\n  }\n  get shouldResetAfterCancel() {\n    return IsTouch && !this.closeOnSelect;\n  }\n  createPopup() {\n    super.createPopup();\n    this.popupModel.onFooterActionsCreated.add((_, opt) => {\n      opt.actions.push({\n        id: \"sv-dropdown-done-button\",\n        title: this.doneButtonCaption,\n        innerCss: \"sv-popup__button--done\",\n        needSpace: true,\n        action: () => {\n          this.popupModel.isVisible = false;\n        },\n        enabled: new ComputedUpdater(() => !this.isTwoValueEquals(this.question.renderedValue, this.previousValue))\n      });\n    });\n    this.popupModel.onVisibilityChanged.add((_, opt) => {\n      if (this.shouldResetAfterCancel && opt.isVisible) {\n        this.previousValue = [].concat(this.question.renderedValue || []);\n      }\n    });\n    this.popupModel.onCancel = () => {\n      if (this.shouldResetAfterCancel) {\n        this.question.renderedValue = this.previousValue;\n        this.updateListState();\n      }\n    };\n  }\n  selectAllItems() {\n    this.question.toggleSelectAll();\n    if (this.question.isAllSelected && this.question.hideSelectedItems) {\n      this.popupModel.hide();\n    }\n    this.updateListState();\n  }\n  selectNoneItem() {\n    this.question.renderedValue = [settings.noneItemValue];\n    this.updateListState();\n  }\n  selectItem(id) {\n    let addedItem;\n    if (this.allowCustomChoices && id === this.customItemValue.id) {\n      const newChoice = this.createCustomItem();\n      if (!!newChoice) {\n        addedItem = newChoice.id;\n      }\n    } else {\n      addedItem = id;\n    }\n    if (addedItem) {\n      let newValue = [].concat(this.question.renderedValue || []);\n      newValue.push(addedItem);\n      this.question.renderedValue = newValue;\n      this.updateListState();\n    }\n  }\n  deselectItem(id) {\n    let newValue = [].concat(this.question.renderedValue || []);\n    newValue.splice(newValue.indexOf(id), 1);\n    this.question.renderedValue = newValue;\n    this.applyHintString();\n    this.updateListState();\n  }\n  clear() {\n    super.clear();\n    this.syncFilterStringPlaceholder();\n  }\n  onClear(event) {\n    super.onClear(event);\n    this.updateListState();\n  }\n  setHideSelectedItems(newValue) {\n    this.listModel.hideSelectedItems = newValue;\n    this.updateListState();\n  }\n  removeLastSelectedItem() {\n    this.deselectItem(this.question.renderedValue[this.question.renderedValue.length - 1]);\n    this.popupRecalculatePosition(false);\n  }\n  constructor(question, onSelectionChanged) {\n    super(question, onSelectionChanged);\n    this.setHideSelectedItems(question.hideSelectedItems);\n    this.syncFilterStringPlaceholder();\n    this.closeOnSelect = question.closeOnSelect;\n  }\n  inputKeyHandler(event) {\n    if (event.keyCode === 8 && !this.filterString) {\n      this.removeLastSelectedItem();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  setInputStringFromSelectedItem(newValue) {\n    if (this.question.searchEnabled) {\n      this.inputString = null;\n    }\n  }\n  focusItemOnClickAndPopup() {\n    return;\n  }\n  onEscape() {\n    return;\n  }\n  beforeScrollToFocusedItem(focusedItem) {\n    return;\n  }\n  afterScrollToFocusedItem() {\n    var _a;\n    if (!((_a = this.listModel.focusedItem) === null || _a === void 0 ? void 0 : _a.selected)) {\n      this.applyHintString();\n    } else {\n      this.hintString = \"\";\n    }\n    this.syncFilterStringPlaceholder();\n  }\n  onPropertyChangedHandler(sender, options) {\n    super.onPropertyChangedHandler(sender, options);\n    if (options.name === \"value\" || options.name === \"renderedValue\" || options.name === \"placeholder\") {\n      this.syncFilterStringPlaceholder();\n    }\n  }\n}\n__decorate([property({\n  defaultValue: \"\"\n})], DropdownMultiSelectListModel.prototype, \"filterStringPlaceholder\", void 0);\n__decorate([property({\n  defaultValue: true\n})], DropdownMultiSelectListModel.prototype, \"closeOnSelect\", void 0);\n__decorate([property()], DropdownMultiSelectListModel.prototype, \"previousValue\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"tagboxDoneButtonCaption\"\n  }\n})], DropdownMultiSelectListModel.prototype, \"doneButtonCaption\", void 0);\n\n/**\n * A class that describes the Multi-Select Dropdown (Tag Box) question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/how-to-create-multiselect-tag-box/ (linkStyle))\n */\nclass QuestionTagboxModel extends QuestionCheckboxModel {\n  constructor(name) {\n    super(name);\n    this.itemDisplayNameMap = {};\n    this.onOpened = this.addEvent();\n    this.createLocalizableString(\"placeholder\", this, false, true);\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.deselectAllItemText = this.createLocalizableString(\"deselectAllText\", this.selectAllItem, true, \"deselectAllItemText\");\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"showOtherItem\", \"otherText\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n  }\n  locStrsChanged() {\n    var _a;\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    (_a = this.dropdownListModelValue) === null || _a === void 0 ? void 0 : _a.locStrsChanged();\n  }\n  updateReadOnlyText() {\n    this.readOnlyText = this.displayValue || this.placeholder;\n  }\n  getDefaultItemComponent() {\n    return \"\";\n  }\n  get dropdownListModel() {\n    if (!this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownMultiSelectListModel(this);\n    }\n    return this.dropdownListModelValue;\n  }\n  set dropdownListModel(val) {\n    this.dropdownListModelValue = val;\n  }\n  /**\n   * A text displayed in the input field when it doesn't have a value.\n   */\n  get placeholder() {\n    return this.getLocalizableStringText(\"placeholder\");\n  }\n  set placeholder(val) {\n    this.setLocalizableStringText(\"placeholder\", val);\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.setInputPlaceholder(val);\n    }\n  }\n  get locPlaceholder() {\n    return this.getLocalizableString(\"placeholder\");\n  }\n  get readOnlyText() {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  set readOnlyText(val) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText() {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n  getType() {\n    return \"tagbox\";\n  }\n  get a11yInputAriaRole() {\n    return \"combobox\";\n  }\n  get popupModel() {\n    return this.dropdownListModel.popupModel;\n  }\n  getControlClass() {\n    return new CssClassBuilder().append(this.cssClasses.control).append(this.cssClasses.controlEmpty, this.isEmpty()).append(this.cssClasses.onError, this.hasCssError()).append(this.cssClasses.controlEditable, !this.isDisabledStyle && !this.isReadOnlyStyle && !this.isPreviewStyle).append(this.cssClasses.controlDisabled, this.isDisabledStyle).append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle).append(this.cssClasses.controlPreview, this.isPreviewStyle).toString();\n  }\n  updateCssClasses(res, css) {\n    super.updateCssClasses(res, css);\n    updateListCssValues(res, css);\n  }\n  calcCssClasses(css) {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModel.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n  onOpenedCallBack() {\n    this.onOpened.fire(this, {\n      question: this,\n      choices: this.choices\n    });\n  }\n  hasUnknownValue(val, includeOther = false, isFilteredChoices = true, checkEmptyValue = false) {\n    if (this.choicesLazyLoadEnabled) return false;\n    return super.hasUnknownValue(val, includeOther, isFilteredChoices, checkEmptyValue);\n  }\n  needConvertRenderedOtherToDataValue() {\n    var _a;\n    const val = (_a = this.otherValue) === null || _a === void 0 ? void 0 : _a.trim();\n    if (!val) return false;\n    return super.hasUnknownValue(val, true, false);\n  }\n  onVisibleChoicesChanged() {\n    super.onVisibleChoicesChanged();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModel.updateItems();\n    }\n  }\n  getItemIfChoicesNotContainThisValue(value, text) {\n    if (this.choicesLazyLoadEnabled) {\n      return this.createItemValue(value, text);\n    } else {\n      return super.getItemIfChoicesNotContainThisValue(value, text);\n    }\n  }\n  validateItemValues(itemValues) {\n    this.updateItemDisplayNameMap();\n    const val = this.renderedValue;\n    if (!!itemValues.length && itemValues.length === val.length) return itemValues;\n    const selectedItemValues = this.selectedItemValues;\n    if (!itemValues.length && !!selectedItemValues && !!selectedItemValues.length) {\n      this.defaultSelectedItemValues = [].concat(selectedItemValues);\n      return selectedItemValues;\n    }\n    const itemValueValues = itemValues.map(iV => iV.value);\n    val.filter(item => {\n      return itemValueValues.indexOf(item) === -1;\n    }).forEach(item => {\n      const newItem = this.getItemIfChoicesNotContainThisValue(item, this.itemDisplayNameMap[item]);\n      if (newItem) {\n        itemValues.push(newItem);\n      }\n    });\n    itemValues.sort((a, b) => {\n      return val.indexOf(a.value) - val.indexOf(b.value);\n    });\n    return itemValues;\n  }\n  updateItemDisplayNameMap() {\n    const func = item => {\n      this.itemDisplayNameMap[item.value] = item.text;\n    };\n    (this.defaultSelectedItemValues || []).forEach(func);\n    (this.selectedItemValues || []).forEach(func);\n    this.visibleChoices.forEach(func);\n  }\n  getIsQuestionReady() {\n    return super.getIsQuestionReady() && !this.isChoicesLoading;\n  }\n  ensureQuestionIsReady() {\n    super.ensureQuestionIsReady();\n    if (!!this.dropdownListModel && this.choicesLazyLoadEnabled) {\n      this.dropdownListModel.loadQuestionChoices();\n    }\n  }\n  setIsChoicesLoading(value) {\n    this.isChoicesLoading = value;\n    this.updateIsReady();\n  }\n  canAddCustomChoices() {\n    return this.allowCustomChoices;\n  }\n  getFirstInputElementId() {\n    return this.inputId + (this.searchEnabled || this.allowCustomChoices ? \"_0\" : \"\");\n  }\n  getInputId() {\n    return this.inputId + \"_0\";\n  }\n  supportEmptyValidation() {\n    return true;\n  }\n  onBlurCore(event) {\n    this.dropdownListModel.onBlur(event);\n    super.onBlurCore(event);\n  }\n  onFocusCore(event) {\n    this.dropdownListModel.onFocus(event);\n    super.onFocusCore(event);\n  }\n  allElementsSelected() {\n    const result = super.allElementsSelected();\n    this.updateSelectAllItemText(result);\n    return result;\n  }\n  updateSelectAllItemText(isAllSelected) {\n    this.selectAllItem.setLocText(isAllSelected ? this.deselectAllItemText : this.selectAllItemText);\n  }\n  dispose() {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n  clearValue(keepComment) {\n    var _a;\n    super.clearValue(keepComment);\n    (_a = this.dropdownListModelValue) === null || _a === void 0 ? void 0 : _a.clear();\n  }\n  get showClearButton() {\n    return this.allowClear && !this.isEmpty();\n  }\n}\n__decorate([property()], QuestionTagboxModel.prototype, \"searchMode\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (!!target.dropdownListModelValue) {\n      target.dropdownListModel.setAllowCustomChoices(newValue);\n    }\n  }\n})], QuestionTagboxModel.prototype, \"allowCustomChoices\", void 0);\n__decorate([property()], QuestionTagboxModel.prototype, \"allowClear\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (!!target.dropdownListModelValue) {\n      target.dropdownListModel.setSearchEnabled(newValue);\n    }\n  }\n})], QuestionTagboxModel.prototype, \"searchEnabled\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (!!target.dropdownListModelValue) {\n      target.dropdownListModel.setHideSelectedItems(newValue);\n    }\n  }\n})], QuestionTagboxModel.prototype, \"hideSelectedItems\", void 0);\n__decorate([property({\n  onSet: (newValue, target) => {\n    if (!!target.dropdownListModelValue) {\n      target.dropdownListModel.setChoicesLazyLoadEnabled(newValue);\n    }\n  }\n})], QuestionTagboxModel.prototype, \"choicesLazyLoadEnabled\", void 0);\n__decorate([property()], QuestionTagboxModel.prototype, \"choicesLazyLoadPageSize\", void 0);\n__decorate([property({\n  getDefaultValue: () => {\n    return settings.tagboxCloseOnSelect;\n  }\n})], QuestionTagboxModel.prototype, \"closeOnSelect\", void 0);\n__decorate([property()], QuestionTagboxModel.prototype, \"textWrapEnabled\", void 0);\nSerializer.addClass(\"tagbox\", [{\n  name: \"placeholder\",\n  serializationProperty: \"locPlaceholder\"\n}, {\n  name: \"allowClear:boolean\",\n  default: true\n}, {\n  name: \"searchEnabled:boolean\",\n  default: true\n}, {\n  name: \"allowCustomChoices:boolean\",\n  default: false,\n  visibleIf: obj => !obj.choicesFromQuestion,\n  dependsOn: \"choicesFromQuestion\"\n}, {\n  name: \"textWrapEnabled:boolean\",\n  default: true\n}, {\n  name: \"choicesLazyLoadEnabled:boolean\",\n  default: false,\n  visible: false\n}, {\n  name: \"choicesLazyLoadPageSize:number\",\n  default: 25,\n  visible: false\n}, {\n  name: \"hideSelectedItems:boolean\",\n  default: false\n}, {\n  name: \"closeOnSelect:boolean\"\n}, {\n  name: \"itemComponent\",\n  visible: false,\n  default: \"\"\n}, {\n  name: \"searchMode\",\n  default: \"contains\",\n  choices: [\"contains\", \"startsWith\"]\n}], function () {\n  return new QuestionTagboxModel(\"\");\n}, \"checkbox\");\nQuestionFactory.Instance.registerQuestion(\"tagbox\", name => {\n  const q = new QuestionTagboxModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\nclass DragDropChoices extends DragDropCore {\n  constructor() {\n    super(...arguments);\n    this.doDragOver = () => {\n      if (this.parentElement.getType() === \"imagepicker\") return;\n      const node = this.domAdapter.draggedElementShortcut.querySelector(\".svc-item-value-controls__button\");\n      node.style.cursor = \"grabbing\";\n    };\n    this.doBanDropHere = () => {\n      if (this.parentElement.getType() === \"imagepicker\") return;\n      const node = this.domAdapter.draggedElementShortcut.querySelector(\".svc-item-value-controls__button\");\n      node.style.cursor = \"not-allowed\";\n    };\n  }\n  get draggedElementType() {\n    return \"item-value\";\n  }\n  createDraggedElementShortcut(text, draggedElementNode, event) {\n    if (this.parentElement.getType() === \"imagepicker\") {\n      return this.createImagePickerShortcut(this.draggedElement, text, draggedElementNode, event);\n    }\n    const draggedElementShortcut = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n    // draggedElementShortcut.innerText = text;\n    draggedElementShortcut.className = \"sv-drag-drop-choices-shortcut\";\n    const isDeepClone = true;\n    const clone = draggedElementNode.closest(\"[data-sv-drop-target-item-value]\").cloneNode(isDeepClone);\n    clone.classList.add(\"sv-drag-drop-choices-shortcut__content\");\n    const dragIcon = clone.querySelector(\".svc-item-value-controls__drag-icon\");\n    dragIcon.style.visibility = \"visible\";\n    const removeIcon = clone.querySelector(\".svc-item-value-controls__remove\");\n    removeIcon.style.backgroundColor = \"transparent\";\n    clone.classList.remove(\"svc-item-value--moveup\");\n    clone.classList.remove(\"svc-item-value--movedown\");\n    this.draggedElement.isDragDropMoveDown = false;\n    this.draggedElement.isDragDropMoveUp = false;\n    draggedElementShortcut.appendChild(clone);\n    const rect = draggedElementNode.getBoundingClientRect();\n    draggedElementShortcut.shortcutXOffset = event.clientX - rect.x;\n    draggedElementShortcut.shortcutYOffset = event.clientY - rect.y;\n    this.isBottom = null;\n    if (typeof this.onShortcutCreated === \"function\") {\n      this.onShortcutCreated(draggedElementShortcut);\n    }\n    return draggedElementShortcut;\n  }\n  createImagePickerShortcut(item, text, draggedElementNode, event) {\n    const draggedElementShortcut = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n    draggedElementShortcut.classList.add(\"sv-drag-drop-image-picker-shortcut\");\n    const itemValueNode = draggedElementNode.closest(\"[data-sv-drop-target-item-value]\");\n    this.imagepickerControlsNode = itemValueNode.querySelector(\".svc-image-item-value-controls\");\n    const imageContainerNode = itemValueNode.querySelector(\".sd-imagepicker__image-container\");\n    let imageNode = itemValueNode.querySelector(item.imageLink ? \"img\" : \".sd-imagepicker__no-image\").cloneNode(true);\n    if (!!this.imagepickerControlsNode) {\n      this.imagepickerControlsNode.style.display = \"none\";\n    }\n    imageContainerNode.style.width = imageNode.width + \"px\";\n    imageContainerNode.style.height = imageNode.height + \"px\";\n    imageNode.style.objectFit = \"cover\";\n    imageNode.style.borderRadius = \"4px\";\n    draggedElementShortcut.appendChild(imageNode);\n    return draggedElementShortcut;\n  }\n  getDropTargetByDataAttributeValue(dataAttributeValue) {\n    let dragOverChoice;\n    dragOverChoice = this.parentElement.choices.filter(choice => \"\" + choice.value == dataAttributeValue)[0];\n    return dragOverChoice;\n  }\n  getChoices() {\n    const parent = this.parentElement;\n    if (parent.getType() === \"ranking\") {\n      if (parent.selectToRankEnabled) {\n        return parent.unRankingChoices;\n      } else {\n        return parent.rankingChoices;\n      }\n    }\n    return parent.visibleChoices;\n  }\n  isDropTargetValid(dropTarget, dropTargetNode) {\n    const choices = this.getChoices();\n    if (this.parentElement.getType() !== \"imagepicker\") {\n      const dropTargetIndex = choices.indexOf(this.dropTarget);\n      const draggedElementIndex = choices.indexOf(this.draggedElement);\n      if (draggedElementIndex > dropTargetIndex && this.dropTarget.isDragDropMoveUp) {\n        this.dropTarget.isDragDropMoveUp = false;\n        return false;\n      }\n      if (draggedElementIndex < dropTargetIndex && this.dropTarget.isDragDropMoveDown) {\n        this.dropTarget.isDragDropMoveDown = false;\n        return false;\n      }\n    }\n    // shouldn't allow to drop on \"adorners\" (selectall, none, other)\n    if (choices.indexOf(dropTarget) === -1) return false;\n    return true;\n  }\n  isDropTargetDoesntChanged(newIsBottom) {\n    return this.dropTarget === this.prevDropTarget && newIsBottom === this.isBottom;\n  }\n  calculateIsBottom(clientY, dropTargetNode) {\n    const rect = dropTargetNode.getBoundingClientRect();\n    return clientY >= rect.y + rect.height / 2;\n  }\n  afterDragOver(dropTargetNode) {\n    //if (this.isDropTargetDoesntChanged(this.isBottom)) return;\n    const choices = this.getChoices();\n    const dropTargetIndex = choices.indexOf(this.dropTarget);\n    const draggedElementIndex = choices.indexOf(this.draggedElement);\n    if (draggedElementIndex < dropTargetIndex && this.isBottom === true) {\n      // drag \"down\"\n      choices.splice(draggedElementIndex, 1);\n      choices.splice(dropTargetIndex, 0, this.draggedElement);\n    } else if (draggedElementIndex > dropTargetIndex && this.isBottom === false) {\n      // drag \"up\"\n      choices.splice(dropTargetIndex, 1);\n      choices.splice(draggedElementIndex, 0, this.dropTarget);\n    } else {\n      return;\n    }\n    if (this.parentElement.getType() === \"imagepicker\") return;\n    if (draggedElementIndex !== dropTargetIndex) {\n      dropTargetNode.classList.remove(\"svc-item-value--moveup\");\n      dropTargetNode.classList.remove(\"svc-item-value--movedown\");\n      this.dropTarget.isDragDropMoveDown = false;\n      this.dropTarget.isDragDropMoveUp = false;\n    }\n    if (draggedElementIndex > dropTargetIndex) {\n      this.dropTarget.isDragDropMoveDown = true;\n    }\n    if (draggedElementIndex < dropTargetIndex) {\n      this.dropTarget.isDragDropMoveUp = true;\n    }\n    super.ghostPositionChanged();\n  }\n  doDrop() {\n    const choices = this.parentElement.choices;\n    const filteredChoices = this.getChoices().filter(item => {\n      return choices.indexOf(item) !== -1;\n    });\n    const oldIndex = choices.indexOf(this.draggedElement);\n    let newIndex = filteredChoices.indexOf(this.draggedElement);\n    choices.splice(oldIndex, 1);\n    choices.splice(newIndex, 0, this.draggedElement);\n    return this.parentElement;\n  }\n  clear() {\n    if (!!this.parentElement) {\n      this.updateVisibleChoices(this.parentElement);\n    }\n    if (!!this.imagepickerControlsNode) {\n      this.imagepickerControlsNode.style.display = \"flex\";\n      this.imagepickerControlsNode = null;\n    }\n    super.clear();\n  }\n  updateVisibleChoices(parent) {\n    parent.getType() === \"ranking\" ? parent.updateRankingChoices() : parent[\"updateVisibleChoices\"]();\n  }\n}\nclass DragDropRankingChoices extends DragDropChoices {\n  constructor() {\n    super(...arguments);\n    this.isDragOverRootNode = false;\n    this.doDragOver = () => {\n      const node = this.domAdapter.draggedElementShortcut.querySelector(\".sv-ranking-item\");\n      node.style.cursor = \"grabbing\";\n    };\n    this.reorderRankedItem = (questionModel, fromIndex, toIndex) => {\n      if (fromIndex == toIndex) return;\n      const rankingChoices = questionModel.rankingChoices;\n      const item = rankingChoices[fromIndex];\n      questionModel.isValueSetByUser = true;\n      rankingChoices.splice(fromIndex, 1);\n      rankingChoices.splice(toIndex, 0, item);\n      this.updateDraggedElementShortcut(toIndex + 1);\n    };\n    this.doBanDropHere = () => {\n      if (this.isDragOverRootNode) {\n        this.allowDropHere = true;\n        return;\n      }\n      const node = this.domAdapter.draggedElementShortcut.querySelector(\".sv-ranking-item\");\n      node.style.cursor = \"not-allowed\";\n      if (IsTouch) {\n        this.parentElement.updateRankingChoices(true);\n      }\n    };\n  }\n  get draggedElementType() {\n    return \"ranking-item\";\n  }\n  createDraggedElementShortcut(text, draggedElementNode, event) {\n    const draggedElementShortcut = DomDocumentHelper.createElement(\"div\");\n    if (!draggedElementShortcut) return;\n    draggedElementShortcut.className = this.shortcutClass + \" sv-ranking-shortcut\";\n    const isDeepClone = true;\n    const clone = draggedElementNode.cloneNode(isDeepClone);\n    draggedElementShortcut.appendChild(clone);\n    const rect = draggedElementNode.getBoundingClientRect();\n    draggedElementShortcut.style.left = rect.x;\n    draggedElementShortcut.style.top = rect.y;\n    this.domAdapter.rootElement.append(draggedElementShortcut);\n    const shortcutHeight = draggedElementShortcut.offsetHeight;\n    let clientY = event.clientY;\n    if (clientY > rect.y + shortcutHeight) {\n      clientY = rect.y + shortcutHeight - 10; //TODO\n    }\n    draggedElementShortcut.shortcutXOffset = event.clientX - rect.x;\n    draggedElementShortcut.shortcutYOffset = clientY - rect.y;\n    if (this.parentElement && this.parentElement.useFullItemSizeForShortcut) {\n      draggedElementShortcut.style.width = draggedElementNode.offsetWidth + \"px\";\n      draggedElementShortcut.style.height = draggedElementNode.offsetHeight + \"px\";\n    }\n    return draggedElementShortcut;\n  }\n  get shortcutClass() {\n    return new CssClassBuilder().append(this.parentElement.cssClasses.root).append(this.parentElement.cssClasses.rootMobileMod, IsMobile).toString();\n  }\n  getDropTargetByDataAttributeValue(dataAttributeValue) {\n    return this.parentElement.rankingChoices[dataAttributeValue];\n  }\n  findDropTargetNodeByDragOverNode(dragOverNode) {\n    this.isDragOverRootNode = this.getIsDragOverRootNode(dragOverNode);\n    return super.findDropTargetNodeByDragOverNode(dragOverNode);\n  }\n  getIsDragOverRootNode(dragOverNode) {\n    // dragOverNode might be <path></path> for example and the className prop is obj\n    return typeof dragOverNode.className === \"string\" && dragOverNode.className.indexOf(\"sv-ranking\") !== -1;\n  }\n  isDropTargetValid(dropTarget, dropTargetNode) {\n    const choices = this.parentElement.rankingChoices;\n    if (choices.indexOf(dropTarget) === -1)\n      // shouldn't allow to drop on \"adorners\" (selectall, none, other)\n      return false;\n    return true;\n  }\n  calculateIsBottom(clientY, dropTargetNode) {\n    if (this.dropTarget instanceof ItemValue && this.draggedElement !== this.dropTarget) {\n      return super.calculateIsBottom(clientY, dropTargetNode);\n    }\n    return false;\n  }\n  getIndices(model, fromChoicesArray, toChoicesArray) {\n    let fromIndex = fromChoicesArray.indexOf(this.draggedElement);\n    let toIndex = toChoicesArray.indexOf(this.dropTarget);\n    if (fromIndex < 0 && !!this.draggedElement) {\n      this.draggedElement = ItemValue.getItemByValue(fromChoicesArray, this.draggedElement.value) || this.draggedElement;\n      fromIndex = fromChoicesArray.indexOf(this.draggedElement);\n    }\n    if (toIndex === -1) {\n      const length = model.value.length;\n      toIndex = length;\n    } else if (fromChoicesArray == toChoicesArray) {\n      if (!this.isBottom && fromIndex < toIndex) toIndex--;\n      if (this.isBottom && fromIndex > toIndex) toIndex++;\n    } else if (fromChoicesArray != toChoicesArray) {\n      if (this.isBottom) toIndex++;\n    }\n    return {\n      fromIndex,\n      toIndex\n    };\n  }\n  afterDragOver(dropTargetNode) {\n    const {\n      fromIndex,\n      toIndex\n    } = this.getIndices(this.parentElement, this.parentElement.rankingChoices, this.parentElement.rankingChoices);\n    this.reorderRankedItem(this.parentElement, fromIndex, toIndex);\n  }\n  updateDraggedElementShortcut(newIndex) {\n    var _a;\n    if ((_a = this.domAdapter) === null || _a === void 0 ? void 0 : _a.draggedElementShortcut) {\n      const newIndexText = newIndex !== null ? newIndex + \"\" : \"\";\n      // TODO should avoid direct DOM manipulation, do through the frameworks instead\n      const indexNode = this.domAdapter.draggedElementShortcut.querySelector(\".sv-ranking-item__index\");\n      indexNode.innerText = newIndexText;\n    }\n  }\n  ghostPositionChanged() {\n    this.parentElement.currentDropTarget = this.draggedElement;\n    super.ghostPositionChanged();\n  }\n  doDrop() {\n    this.parentElement.setValue();\n    return this.parentElement;\n  }\n  clear() {\n    if (!!this.parentElement) {\n      this.parentElement.dropTargetNodeMove = null;\n      this.parentElement.updateRankingChoices(true);\n    }\n    super.clear();\n  }\n}\nclass DragDropRankingSelectToRank extends DragDropRankingChoices {\n  constructor() {\n    super(...arguments);\n    this.selectToRank = (questionModel, fromIndex, toIndex) => {\n      const rankingChoices = [].concat(questionModel.rankingChoices);\n      const unRankingChoices = questionModel.unRankingChoices;\n      const item = unRankingChoices[fromIndex];\n      rankingChoices.splice(toIndex, 0, item);\n      this.updateChoices(questionModel, rankingChoices);\n    };\n    this.unselectFromRank = (questionModel, fromIndex, toIndex) => {\n      const rankingChoices = [].concat(questionModel.rankingChoices);\n      rankingChoices.splice(fromIndex, 1);\n      this.updateChoices(questionModel, rankingChoices);\n    };\n  }\n  findDropTargetNodeByDragOverNode(dragOverNode) {\n    if (dragOverNode.dataset.ranking === \"from-container\" || dragOverNode.dataset.ranking === \"to-container\") {\n      return dragOverNode;\n    }\n    let toContainer = dragOverNode.closest(\"[data-ranking='to-container']\");\n    let fromContainer = dragOverNode.closest(\"[data-ranking='from-container']\");\n    if (this.parentElement.unRankingChoices.length === 0 && fromContainer) return fromContainer;\n    if (this.parentElement.rankingChoices.length === 0 && toContainer) return toContainer;\n    return super.findDropTargetNodeByDragOverNode(dragOverNode);\n  }\n  getDropTargetByDataAttributeValue(dataAttributeValue) {\n    return this.parentElement.rankingChoices[dataAttributeValue] || this.parentElement.unRankingChoices[dataAttributeValue];\n  }\n  getDropTargetByNode(dropTargetNode, event) {\n    if (dropTargetNode.dataset.ranking === \"to-container\") {\n      return \"to-container\";\n    }\n    if (dropTargetNode.dataset.ranking === \"from-container\" || dropTargetNode.closest(\"[data-ranking='from-container']\")) {\n      return \"from-container\";\n    }\n    return super.getDropTargetByNode(dropTargetNode, event);\n  }\n  isDropTargetValid(dropTarget, dropTargetNode) {\n    if (dropTarget === \"to-container\" || dropTarget === \"from-container\") {\n      return true;\n    } else {\n      return super.isDropTargetValid(dropTarget, dropTargetNode);\n    }\n  }\n  afterDragOver(dropTargetNode) {\n    const questionModel = this.parentElement;\n    const rankingChoices = questionModel.rankingChoices;\n    const unRankingChoices = questionModel.unRankingChoices;\n    if (this.isDraggedElementUnranked && this.isDropTargetRanked) {\n      this.doRankBetween(dropTargetNode, unRankingChoices, rankingChoices, this.selectToRank);\n      return;\n    }\n    if (this.isDraggedElementRanked && this.isDropTargetRanked) {\n      this.doRankBetween(dropTargetNode, rankingChoices, rankingChoices, this.reorderRankedItem);\n      return;\n    }\n    if (this.isDraggedElementRanked && !this.isDropTargetRanked) {\n      this.doRankBetween(dropTargetNode, rankingChoices, unRankingChoices, this.unselectFromRank);\n      return;\n    }\n  }\n  doRankBetween(dropTargetNode, fromChoicesArray, toChoicesArray, rankFunction) {\n    const questionModel = this.parentElement;\n    let {\n      fromIndex,\n      toIndex\n    } = this.getIndices(questionModel, fromChoicesArray, toChoicesArray);\n    rankFunction(questionModel, fromIndex, toIndex, dropTargetNode);\n  }\n  get isDraggedElementRanked() {\n    return this.parentElement.rankingChoices.indexOf(this.draggedElement) !== -1;\n  }\n  get isDropTargetRanked() {\n    if (this.dropTarget === \"to-container\") return true;\n    return this.parentElement.rankingChoices.indexOf(this.dropTarget) !== -1;\n  }\n  get isDraggedElementUnranked() {\n    return !this.isDraggedElementRanked;\n  }\n  updateChoices(questionModel, rankingChoices) {\n    questionModel.isValueSetByUser = true;\n    questionModel.rankingChoices = rankingChoices;\n    questionModel.updateUnRankingChoices(rankingChoices);\n  }\n}\n\n/**\n * A class that describes the Ranking question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-ranking/ (linkStyle))\n */\nclass QuestionRankingModel extends QuestionCheckboxModel {\n  constructor(name) {\n    super(name);\n    this.domNode = null;\n    this.onVisibleChoicesChanged = () => {\n      super.onVisibleChoicesChanged();\n      if (this.carryForwardStartUnranked && !this.isValueSetByUser && !this.selectToRankEnabled && !this.defaultValue) {\n        this.value = [];\n      }\n      // ranking question with only one choice doesn't make sense\n      if (this.visibleChoices.length === 1 && !this.selectToRankEnabled) {\n        this.value = [];\n        this.value.push(this.visibleChoices[0].value);\n        this.updateRankingChoices();\n        return;\n      }\n      if (this.isEmpty()) {\n        this.updateRankingChoices();\n        return;\n      }\n      if (this.selectToRankEnabled) {\n        this.updateRankingChoices();\n        return;\n      }\n      if (this.visibleChoices.length > this.value.length) this.addToValueByVisibleChoices();\n      if (this.visibleChoices.length < this.value.length) this.removeFromValueByVisibleChoices();\n      this.updateRankingChoices();\n    };\n    this.localeChanged = () => {\n      super.localeChanged();\n      this.updateRankingChoicesSync();\n    };\n    this._rankingChoicesAnimation = new AnimationGroup(this.getChoicesAnimationOptions(true), val => {\n      this._renderedRankingChoices = val;\n    }, () => this.renderedRankingChoices);\n    this._unRankingChoicesAnimation = new AnimationGroup(this.getChoicesAnimationOptions(false), val => {\n      this._renderedUnRankingChoices = val;\n    }, () => this.renderedUnRankingChoices);\n    this.rankingChoices = [];\n    this.unRankingChoices = [];\n    this._renderedRankingChoices = [];\n    this._renderedUnRankingChoices = [];\n    this.handlePointerDown = (event, choice, node) => {\n      const target = event.target;\n      if (!this.isDragStartNodeValid(target)) return;\n      if (this.isAllowStartDrag(target, choice)) {\n        this.draggedChoiceValue = choice.value;\n        this.draggedTargetNode = node;\n        this.dragOrClickHelper.onPointerDown(event);\n      }\n    };\n    this.startDrag = event => {\n      const choice = ItemValue.getItemByValue(this.visibleChoices, this.draggedChoiceValue);\n      this.dragDropRankingChoices.startDrag(event, choice, this, this.draggedTargetNode);\n    };\n    this.handlePointerUp = (event, choice, node) => {\n      if (!this.selectToRankEnabled) return;\n      const target = event.target;\n      if (this.isAllowStartDrag(target, choice)) {\n        this.handleKeydownSelectToRank(event, choice, \" \", false);\n      }\n    };\n    this.handleKeydown = (event, choice) => {\n      if (this.isReadOnlyAttr) return;\n      if (!this.isDesignMode) {\n        const key = event.key;\n        const index = this.rankingChoices.indexOf(choice);\n        if (this.selectToRankEnabled) {\n          this.handleKeydownSelectToRank(event, choice);\n          return;\n        }\n        if (key === \"ArrowUp\" && index || key === \"ArrowDown\" && index !== this.rankingChoices.length - 1) {\n          const toIndex = key == \"ArrowUp\" ? index - 1 : index + 1;\n          this.dragDropRankingChoices.reorderRankedItem(this, index, toIndex);\n          this.setValueAfterKeydown(toIndex, \"\", true, event);\n        }\n      }\n    };\n    this.focusItem = (index, container) => {\n      if (!this.domNode) return;\n      if (this.selectToRankEnabled && container) {\n        const containerSelector = \"[data-ranking='\" + container + \"']\";\n        const itemsNodes = this.domNode.querySelectorAll(containerSelector + \" \" + \".\" + this.cssClasses.item);\n        itemsNodes[index].focus();\n      } else {\n        const itemsNodes = this.domNode.querySelectorAll(\".\" + this.cssClasses.item);\n        itemsNodes[index].focus();\n      }\n    };\n    this.isValueSetByUser = false;\n    this.setValue = () => {\n      const value = [];\n      this.rankingChoices.forEach(choice => {\n        value.push(choice.value);\n      });\n      this.value = value;\n      this.isValueSetByUser = true;\n    };\n    this.registerFunctionOnPropertyValueChanged(\"selectToRankEnabled\", () => {\n      this.clearValue(true);\n      this.setDragDropRankingChoices();\n      this.updateRankingChoicesSync();\n    });\n    this.dragOrClickHelper = new DragOrClickHelper(this.startDrag);\n  }\n  getType() {\n    return \"ranking\";\n  }\n  getItemTabIndex(item) {\n    if (this.isDesignMode || item.disabled) return undefined;\n    return 0;\n  }\n  supportContainerQueries() {\n    return this.selectToRankEnabled;\n  }\n  get rootClass() {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.rootMobileMod, this.isMobileMode()).append(this.cssClasses.rootDisabled, this.isDisabledStyle).append(this.cssClasses.rootReadOnly, this.isReadOnlyStyle).append(this.cssClasses.rootPreview, this.isPreviewStyle).append(this.cssClasses.rootDesignMode, !!this.isDesignMode).append(this.cssClasses.itemOnError, this.hasCssError()).append(this.cssClasses.rootDragHandleAreaIcon, settings.rankingDragHandleArea === \"icon\").append(this.cssClasses.rootSelectToRankMod, this.selectToRankEnabled).append(this.cssClasses.rootSelectToRankEmptyValueMod, this.isEmpty()).append(this.cssClasses.rootSelectToRankAlignHorizontal, this.selectToRankEnabled && this.renderedSelectToRankAreasLayout === \"horizontal\").append(this.cssClasses.rootSelectToRankAlignVertical, this.selectToRankEnabled && this.renderedSelectToRankAreasLayout === \"vertical\").append(this.cssClasses.rootSelectToRankSwapAreas, this.selectToRankEnabled && this.renderedSelectToRankAreasLayout === \"horizontal\" && this.selectToRankSwapAreas).toString();\n  }\n  isItemSelectedCore(item) {\n    if (this.selectToRankEnabled) {\n      return super.isItemSelectedCore(item);\n    }\n    return true;\n  }\n  getItemClassCore(item, options) {\n    return new CssClassBuilder().append(super.getItemClassCore(item, options)).append(this.cssClasses.itemGhostMod, this.currentDropTarget === item).toString();\n  }\n  getContainerClasses(containerType) {\n    let isEmpty = false;\n    const isToContainer = containerType === \"to\";\n    const isFromContainer = containerType === \"from\";\n    if (isToContainer) {\n      isEmpty = this.renderedRankingChoices.length === 0;\n    } else if (isFromContainer) {\n      isEmpty = this.renderedUnRankingChoices.length === 0;\n    }\n    return new CssClassBuilder().append(this.cssClasses.container).append(this.cssClasses.containerToMode, isToContainer).append(this.cssClasses.containerFromMode, isFromContainer).append(this.cssClasses.containerEmptyMode, isEmpty).toString();\n  }\n  isItemCurrentDropTarget(item) {\n    return this.dragDropRankingChoices.dropTarget === item;\n  }\n  get ghostPositionCssClass() {\n    if (this.ghostPosition === \"top\") return this.cssClasses.dragDropGhostPositionTop;\n    if (this.ghostPosition === \"bottom\") return this.cssClasses.dragDropGhostPositionBottom;\n    return \"\";\n  }\n  getItemIndexClasses(item) {\n    let noNumber;\n    if (this.selectToRankEnabled) {\n      noNumber = this.unRankingChoices.indexOf(item) !== -1;\n    } else {\n      noNumber = this.isEmpty();\n    }\n    return new CssClassBuilder().append(this.cssClasses.itemIndex).append(this.cssClasses.itemIndexEmptyMode, noNumber).toString();\n  }\n  getNumberByIndex(index) {\n    return this.isEmpty() ? \"\" : index + 1 + \"\";\n  }\n  updateRankingChoicesSync() {\n    this.blockAnimations();\n    this.updateRankingChoices();\n    this.releaseAnimations();\n  }\n  setSurveyImpl(value, isLight) {\n    super.setSurveyImpl(value, isLight);\n    this.setDragDropRankingChoices();\n    this.updateRankingChoicesSync();\n  }\n  isAnswerCorrect() {\n    return Helpers.isArraysEqual(this.value, this.correctAnswer, false);\n  }\n  get requireStrictCompare() {\n    return true;\n  }\n  onSurveyValueChanged(newValue) {\n    super.onSurveyValueChanged(newValue);\n    if (this.isLoadingFromJson) return;\n    this.updateRankingChoices();\n  }\n  onSurveyLoad() {\n    this.blockAnimations();\n    super.onSurveyLoad();\n    this.updateRankingChoices();\n    this.releaseAnimations();\n  }\n  updateValueFromSurvey(newValue, clearData) {\n    super.updateValueFromSurvey(newValue, clearData);\n    if (newValue) this.isValueSetByUser = true;\n  }\n  addToValueByVisibleChoices() {\n    const newValue = this.value.slice();\n    this.visibleChoices.forEach(choice => {\n      if (newValue.indexOf(choice.value) === -1) {\n        newValue.push(choice.value);\n      }\n    });\n    this.value = newValue;\n  }\n  removeFromValueByVisibleChoices() {\n    const newValue = this.value.slice();\n    const choices = this.visibleChoices;\n    for (let i = this.value.length - 1; i >= 0; i--) {\n      if (!ItemValue.getItemByValue(choices, this.value[i])) {\n        newValue.splice(i, 1);\n      }\n    }\n    this.value = newValue;\n  }\n  getChoicesAnimationOptions(isRankingChoices) {\n    return {\n      getKey(item) {\n        return item.value;\n      },\n      getRerenderEvent: () => {\n        return this.onElementRerendered;\n      },\n      isAnimationEnabled: () => this.animationAllowed && !this.isDesignMode && this.isVisible && !!this.domNode,\n      getReorderOptions: (item, movedForward) => {\n        let cssClass = \"\";\n        if (item !== this.currentDropTarget) {\n          cssClass = movedForward ? \"sv-dragdrop-movedown\" : \"sv-dragdrop-moveup\";\n        }\n        return {\n          cssClass\n        };\n      },\n      getLeaveOptions: item => {\n        const choices = isRankingChoices ? this.renderedRankingChoices : this.renderedUnRankingChoices;\n        if (this.renderedSelectToRankAreasLayout == \"vertical\" && choices.length == 1 && choices.indexOf(item) >= 0) {\n          return {\n            cssClass: \"sv-ranking-item--animate-item-removing-empty\"\n          };\n        }\n        return {\n          cssClass: \"sv-ranking-item--animate-item-removing\",\n          onBeforeRunAnimation: el => {\n            el.style.setProperty(\"--animation-height\", el.offsetHeight + \"px\");\n          }\n        };\n      },\n      getEnterOptions: item => {\n        const choices = isRankingChoices ? this.renderedRankingChoices : this.renderedUnRankingChoices;\n        if (this.renderedSelectToRankAreasLayout == \"vertical\" && choices.length == 1 && choices.indexOf(item) >= 0) {\n          return {\n            cssClass: \"sv-ranking-item--animate-item-adding-empty\"\n          };\n        }\n        return {\n          cssClass: \"sv-ranking-item--animate-item-adding\",\n          onBeforeRunAnimation: el => {\n            el.style.setProperty(\"--animation-height\", el.offsetHeight + \"px\");\n          }\n        };\n      },\n      getAnimatedElement: item => {\n        var _a;\n        const cssClasses = this.cssClasses;\n        let containerSelector = \"\";\n        if (this.selectToRankEnabled) {\n          if (!isRankingChoices && cssClasses.containerFromMode) {\n            containerSelector = classesToSelector(cssClasses.containerFromMode);\n          } else if (isRankingChoices && cssClasses.containerToMode) {\n            containerSelector = classesToSelector(cssClasses.containerToMode);\n          }\n        }\n        const index = isRankingChoices ? this.renderedRankingChoices.indexOf(item) : this.renderedUnRankingChoices.indexOf(item);\n        return (_a = this.domNode) === null || _a === void 0 ? void 0 : _a.querySelector(`${containerSelector} [data-sv-drop-target-ranking-item='${index}']`);\n      },\n      allowSyncRemovalAddition: true\n    };\n  }\n  get rankingChoicesAnimation() {\n    return this._rankingChoicesAnimation;\n  }\n  get unRankingChoicesAnimation() {\n    return this._unRankingChoicesAnimation;\n  }\n  get renderedRankingChoices() {\n    return this._renderedRankingChoices;\n  }\n  set renderedRankingChoices(val) {\n    this.rankingChoicesAnimation.sync(val);\n  }\n  get renderedUnRankingChoices() {\n    return this._renderedUnRankingChoices;\n  }\n  set renderedUnRankingChoices(val) {\n    this.unRankingChoicesAnimation.sync(val);\n  }\n  updateRenderedRankingChoices() {\n    this.renderedRankingChoices = this.rankingChoices;\n  }\n  updateRenderedUnRankingChoices() {\n    this.renderedUnRankingChoices = this.unRankingChoices;\n  }\n  updateRankingChoices(forceUpdate = false) {\n    if (this.selectToRankEnabled) {\n      this.updateRankingChoicesSelectToRankMode(forceUpdate);\n      return;\n    }\n    const newRankingChoices = [];\n    // ranking question with only one choice doesn't make sense\n    // if (this.visibleChoices.length === 1) {\n    //   this.setPropertyValue(\"rankingChoices\", newRankingChoices);\n    //   return;\n    // }\n    if (forceUpdate) this.rankingChoices = [];\n    if (this.isEmpty()) {\n      this.rankingChoices = this.visibleChoices;\n      return;\n    }\n    this.value.forEach(valueItem => {\n      this.visibleChoices.forEach(choice => {\n        if (choice.value === valueItem) newRankingChoices.push(choice);\n      });\n    });\n    this.rankingChoices = newRankingChoices;\n  }\n  updateUnRankingChoices(newRankingChoices) {\n    const unRankingChoices = [];\n    this.visibleChoices.forEach(choice => {\n      unRankingChoices.push(choice);\n    });\n    newRankingChoices.forEach(rankingChoice => {\n      unRankingChoices.forEach((choice, index) => {\n        if (choice.value === rankingChoice.value) unRankingChoices.splice(index, 1);\n      });\n    });\n    this.unRankingChoices = unRankingChoices;\n  }\n  updateRankingChoicesSelectToRankMode(forceUpdate) {\n    const newRankingChoices = [];\n    if (!this.isEmpty()) {\n      this.value.forEach(valueItem => {\n        this.visibleChoices.forEach(choice => {\n          if (choice.value === valueItem) newRankingChoices.push(choice);\n        });\n      });\n    }\n    this.updateUnRankingChoices(newRankingChoices);\n    this.rankingChoices = newRankingChoices;\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.setDragDropRankingChoices();\n  }\n  setDragDropRankingChoices() {\n    this.dragDropRankingChoices = this.createDragDropRankingChoices();\n  }\n  createDragDropRankingChoices() {\n    if (this.selectToRankEnabled) return new DragDropRankingSelectToRank(this.survey, null, this.longTap);\n    return new DragDropRankingChoices(this.survey, null, this.longTap);\n  }\n  isDragStartNodeValid(target) {\n    if (settings.rankingDragHandleArea === \"icon\") {\n      return target.classList.contains(this.cssClasses.itemIconHoverMod);\n    }\n    return true;\n  }\n  isAllowStartDrag(target, choice) {\n    return !this.isReadOnly && !this.isDesignMode && this.canStartDragDueMaxSelectedChoices(target) && this.canStartDragDueItemEnabled(choice);\n  }\n  canStartDragDueMaxSelectedChoices(target) {\n    if (!this.selectToRankEnabled) return true;\n    let fromContainer = target.closest(\"[data-ranking='from-container']\");\n    if (fromContainer) {\n      return this.checkMaxSelectedChoicesUnreached();\n    }\n    return true;\n  }\n  canStartDragDueItemEnabled(item) {\n    return item.enabled;\n  }\n  checkMaxSelectedChoicesUnreached() {\n    if (this.maxSelectedChoices < 1) return true;\n    var val = this.value;\n    var len = !Array.isArray(val) ? 0 : val.length;\n    return len < this.maxSelectedChoices;\n  }\n  //cross framework initialization\n  afterRenderQuestionElement(el) {\n    this.domNode = el;\n    super.afterRenderQuestionElement(el);\n  }\n  //cross framework destroy\n  beforeDestroyQuestionElement(el) {\n    this.domNode = undefined;\n    super.beforeDestroyQuestionElement(el);\n  }\n  supportSelectAll() {\n    return false;\n  }\n  supportOther() {\n    return false;\n  }\n  supportNone() {\n    return false;\n  }\n  supportRefuse() {\n    return false;\n  }\n  supportDontKnow() {\n    return false;\n  }\n  handleKeydownSelectToRank(event, movedElement, hardKey, isNeedFocus = true) {\n    if (this.isDesignMode) return;\n    let key = event.key;\n    if (hardKey) key = hardKey;\n    if (key !== \" \" && key !== \"ArrowUp\" && key !== \"ArrowDown\") return;\n    const dnd = this.dragDropRankingChoices; //????\n    const rankingChoices = this.rankingChoices;\n    const isMovedElementRanked = rankingChoices.indexOf(movedElement) !== -1;\n    const choices = isMovedElementRanked ? rankingChoices : this.unRankingChoices;\n    const fromIndex = choices.indexOf(movedElement);\n    if (fromIndex < 0) return;\n    let toIndex;\n    if (key === \" \" && !isMovedElementRanked) {\n      if (!this.checkMaxSelectedChoicesUnreached() || !this.canStartDragDueItemEnabled(movedElement)) return;\n      toIndex = this.value.length;\n      dnd.selectToRank(this, fromIndex, toIndex);\n      this.setValueAfterKeydown(toIndex, \"to-container\", isNeedFocus, event);\n      return;\n    }\n    if (!isMovedElementRanked) return;\n    if (key === \" \") {\n      dnd.unselectFromRank(this, fromIndex);\n      toIndex = this.unRankingChoices.indexOf(movedElement); //'this.' leads to actual array after the 'unselectFromRank' method\n      this.setValueAfterKeydown(toIndex, \"from-container\", isNeedFocus, event);\n      return;\n    }\n    const delta = key === \"ArrowUp\" ? -1 : key === \"ArrowDown\" ? 1 : 0;\n    if (delta === 0) return;\n    toIndex = fromIndex + delta;\n    if (toIndex < 0 || toIndex >= rankingChoices.length) return;\n    dnd.reorderRankedItem(this, fromIndex, toIndex);\n    this.setValueAfterKeydown(toIndex, \"to-container\", isNeedFocus, event);\n  }\n  setValueAfterKeydown(index, container, isNeedFocus = true, event) {\n    this.setValue();\n    if (isNeedFocus) {\n      setTimeout(() => {\n        this.focusItem(index, container);\n      }, 1);\n    }\n    event && event.preventDefault();\n  }\n  getIconHoverCss() {\n    return new CssClassBuilder().append(this.cssClasses.itemIcon).append(this.cssClasses.itemIconHoverMod).toString();\n  }\n  getIconFocusCss() {\n    return new CssClassBuilder().append(this.cssClasses.itemIcon).append(this.cssClasses.itemIconFocusMod).toString();\n  }\n  /**\n   * Specifies whether to use a long tap (press and hold) gesture to start dragging.\n   *\n   * Default value: `true`\n   *\n   * Disable this property if you want to start dragging when users perform a scroll gesture.\n  */\n  get longTap() {\n    return this.getPropertyValue(\"longTap\");\n  }\n  set longTap(val) {\n    this.setPropertyValue(\"longTap\", val);\n  }\n  getDefaultItemComponent() {\n    return \"sv-ranking-item\";\n  }\n  /**\n   * Specifies whether users can select choices they want to rank.\n   *\n   * When you enable this property, the Ranking question displays two areas for ranked and unranked choices. To order choices, users should first drag them from the unranked to the ranked area. Use this mode if you want to let users order only the choices they select.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see selectToRankAreasLayout\n  */\n  get selectToRankEnabled() {\n    return this.getPropertyValue(\"selectToRankEnabled\", false);\n  }\n  set selectToRankEnabled(val) {\n    this.setPropertyValue(\"selectToRankEnabled\", val);\n  }\n  get selectToRankSwapAreas() {\n    return this.getPropertyValue(\"selectToRankSwapAreas\", false);\n  }\n  set selectToRankSwapAreas(val) {\n    this.setPropertyValue(\"selectToRankSwapAreas\", val);\n  }\n  /**\n   * Specifies the layout of the ranked and unranked areas. Applies when [`selectToRankEnabled`](https://surveyjs.io/form-library/documentation/api-reference/ranking-question-model#selectToRankEnabled) is `true`.\n   *\n   * Possible values:\n   *\n   * - `\"horizontal\"` (default) - The ranked and unranked areas are positioned next to each other. Users drag and drop choices between them in the horizontal direction.\n   * - `\"vertical\"`- The ranked area is positioned above the unranked area. Users drag and drop choices between them in the vertical direction.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/select-items-to-rank/ (linkStyle))\n   * @see selectToRankAreasLayout\n  */\n  get selectToRankAreasLayout() {\n    return this.getPropertyValue(\"selectToRankAreasLayout\");\n  }\n  set selectToRankAreasLayout(val) {\n    this.setPropertyValue(\"selectToRankAreasLayout\", val);\n  }\n  get renderedSelectToRankAreasLayout() {\n    if (this.isMobileMode()) return \"vertical\";\n    return this.selectToRankAreasLayout;\n  }\n  isMobileMode() {\n    return IsMobile;\n  }\n  get useFullItemSizeForShortcut() {\n    return this.getPropertyValue(\"useFullItemSizeForShortcut\");\n  }\n  set useFullItemSizeForShortcut(val) {\n    this.setPropertyValue(\"useFullItemSizeForShortcut\", val);\n  }\n  get dragDropSvgIcon() {\n    return this.cssClasses.dragDropSvgIconId || \"#icon-drag-24x24\";\n  }\n  get arrowsSvgIcon() {\n    return this.cssClasses.arrowsSvgIconId || \"#icon-reorder-24x24\";\n  }\n  get dashSvgIcon() {\n    return this.cssClasses.dashSvgIconId || \"#icon-rankingundefined-16x16\";\n  }\n  //a11y\n  get isNewA11yStructure() {\n    return false;\n  }\n}\n__decorate([propertyArray({\n  onSet: (val, target) => target.updateRenderedRankingChoices(),\n  onRemove: (_, _i, target) => target.updateRenderedRankingChoices(),\n  onPush: (_, _i, target) => target.updateRenderedRankingChoices()\n})], QuestionRankingModel.prototype, \"rankingChoices\", void 0);\n__decorate([propertyArray({\n  onSet: (val, target) => target.updateRenderedUnRankingChoices(),\n  onRemove: (_, _i, target) => target.updateRenderedUnRankingChoices(),\n  onPush: (_, _i, target) => target.updateRenderedUnRankingChoices()\n})], QuestionRankingModel.prototype, \"unRankingChoices\", void 0);\n__decorate([propertyArray()], QuestionRankingModel.prototype, \"_renderedRankingChoices\", void 0);\n__decorate([propertyArray()], QuestionRankingModel.prototype, \"_renderedUnRankingChoices\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionRankingModel.prototype, \"currentDropTarget\", void 0);\n__decorate([property({\n  defaultValue: true\n})], QuestionRankingModel.prototype, \"carryForwardStartUnranked\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"selectToRankEmptyRankedAreaText\"\n  }\n})], QuestionRankingModel.prototype, \"selectToRankEmptyRankedAreaText\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"selectToRankEmptyUnrankedAreaText\"\n  }\n})], QuestionRankingModel.prototype, \"selectToRankEmptyUnrankedAreaText\", void 0);\nSerializer.addClass(\"ranking\", [{\n  name: \"showOtherItem\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"otherText\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"otherErrorText\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"storeOthersAsComment\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"showNoneItem\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"showRefuseItem\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"showDontKnowItem\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"noneText\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"showSelectAllItem\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"selectAllText\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"colCount:number\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"separateSpecialChoices\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"longTap\",\n  default: true,\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"selectToRankEnabled:switch\",\n  default: false,\n  visible: true,\n  isSerializable: true\n}, {\n  name: \"selectToRankSwapAreas:switch\",\n  default: false,\n  visible: false,\n  isSerializable: true,\n  dependsOn: \"selectToRankEnabled\"\n}, {\n  name: \"selectToRankAreasLayout\",\n  default: \"horizontal\",\n  choices: [\"horizontal\", \"vertical\"],\n  dependsOn: \"selectToRankEnabled\",\n  visibleIf: obj => {\n    return !!obj.selectToRankEnabled;\n  },\n  visible: true,\n  isSerializable: true\n}, {\n  name: \"selectToRankEmptyRankedAreaText:text\",\n  serializationProperty: \"locSelectToRankEmptyRankedAreaText\",\n  category: \"general\",\n  dependsOn: \"selectToRankEnabled\",\n  visibleIf: obj => {\n    return !!obj.selectToRankEnabled;\n  }\n}, {\n  name: \"selectToRankEmptyUnrankedAreaText:text\",\n  serializationProperty: \"locSelectToRankEmptyUnrankedAreaText\",\n  category: \"general\",\n  dependsOn: \"selectToRankEnabled\",\n  visibleIf: obj => {\n    return !!obj.selectToRankEnabled;\n  }\n}, {\n  name: \"maxSelectedChoices:number\",\n  visible: true,\n  default: 0,\n  dependsOn: \"selectToRankEnabled\",\n  visibleIf: obj => {\n    return !!obj.selectToRankEnabled;\n  },\n  isSerializable: true\n}, {\n  name: \"minSelectedChoices:number\",\n  visible: true,\n  default: 0,\n  dependsOn: \"selectToRankEnabled\",\n  visibleIf: obj => {\n    return !!obj.selectToRankEnabled;\n  },\n  isSerializable: true\n}, {\n  name: \"itemComponent\",\n  visible: false,\n  default: \"sv-ranking-item\"\n}], function () {\n  return new QuestionRankingModel(\"\");\n}, \"checkbox\");\nQuestionFactory.Instance.registerQuestion(\"ranking\", name => {\n  const q = new QuestionRankingModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\n\n/**\n * A class that describes the Long Text question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-comment/ (linkStyle))\n */\nclass QuestionCommentModel extends QuestionTextBase {\n  constructor(name) {\n    super(name);\n  }\n  get textAreaModel() {\n    if (!this.textAreaModelValue) {\n      this.textAreaModelValue = new TextAreaModel(this.getTextAreaOptions());\n    }\n    return this.textAreaModelValue;\n  }\n  getTextAreaOptions() {\n    const _this = this;\n    const updateQuestionValue = newValue => {\n      if (!Helpers.isTwoValueEquals(_this.value, newValue, false, true, false)) {\n        _this.value = newValue;\n      }\n    };\n    const options = {\n      question: this,\n      id: () => this.inputId,\n      propertyNames: [\"value\"],\n      className: () => this.className,\n      placeholder: () => this.renderedPlaceholder,\n      isDisabledAttr: () => this.isDisabledAttr,\n      isReadOnlyAttr: () => this.isReadOnlyAttr,\n      autoGrow: () => this.renderedAutoGrow,\n      maxLength: () => this.getMaxLength(),\n      rows: () => this.rows,\n      cols: () => this.cols,\n      ariaRequired: () => this.a11y_input_ariaRequired,\n      ariaLabel: () => this.a11y_input_ariaLabel,\n      ariaLabelledBy: () => this.a11y_input_ariaLabelledBy,\n      ariaDescribedBy: () => this.a11y_input_ariaDescribedBy,\n      ariaInvalid: () => this.a11y_input_ariaInvalid,\n      ariaErrormessage: () => this.a11y_input_ariaErrormessage,\n      getTextValue: () => {\n        return this.value;\n      },\n      onTextAreaChange: e => {\n        updateQuestionValue(e.target.value);\n      },\n      onTextAreaInput: event => {\n        this.onInput(event);\n      },\n      onTextAreaKeyDown: event => {\n        this.onKeyDown(event);\n      },\n      onTextAreaFocus: event => {\n        this.onFocus(event);\n      },\n      onTextAreaBlur: event => {\n        this.onBlur(event);\n      }\n    };\n    return options;\n  }\n  /**\n   * Specifies the visible height of the comment area, measured in lines.\n   *\n   * The value of this property is passed on to the `rows` attribute of the underlying `<textarea>` element.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   */\n  get rows() {\n    return this.getPropertyValue(\"rows\");\n  }\n  set rows(val) {\n    this.setPropertyValue(\"rows\", val);\n  }\n  get cols() {\n    return this.getPropertyValue(\"cols\");\n  }\n  set cols(val) {\n    this.setPropertyValue(\"cols\", val);\n  }\n  /**\n   * Specifies whether the question allows line breaks.\n   *\n   * When this property is enabled, a user can press Enter to insert line breaks. They are saved as `\\n` in survey results. The Comment question also recognizes and interprets the `\\n` sequence as a line break when you set the question `value` in code.\n   */\n  get acceptCarriageReturn() {\n    return this.getPropertyValue(\"acceptCarriageReturn\");\n  }\n  set acceptCarriageReturn(val) {\n    this.setPropertyValue(\"acceptCarriageReturn\", val);\n  }\n  /**\n   * Specifies whether the comment area automatically increases its height to accomodate multi-line content.\n   *\n   * Default value: `false` (inherited from `SurveyModel`'s [`autoGrowComment`](https://surveyjs.io/form-library/documentation/surveymodel#autoGrowComment) property)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   * @see allowResize\n   */\n  get autoGrow() {\n    return this.getPropertyValue(\"autoGrow\");\n  }\n  set autoGrow(val) {\n    this.setPropertyValue(\"autoGrow\", val);\n  }\n  get renderedAutoGrow() {\n    const autoGrow = this.autoGrow;\n    return autoGrow === undefined && this.survey ? this.survey.autoGrowComment : !!autoGrow;\n  }\n  /**\n   * Specifies whether to display a resize handle for the comment area.\n   *\n   * Default value: `true` (inherited from `SurveyModel`'s [`allowResizeComment`](https://surveyjs.io/form-library/documentation/surveymodel#allowResizeComment) property)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-open-ended-question-to-a-form/ (linkStyle))\n   * @see autoGrow\n   */\n  get allowResize() {\n    return this.getPropertyValue(\"allowResize\");\n  }\n  set allowResize(val) {\n    this.setPropertyValue(\"allowResize\", val);\n  }\n  get renderedAllowResize() {\n    const res = this.allowResize;\n    if (res === undefined && this.survey) {\n      return this.survey.allowResizeComment;\n    } else {\n      return !!res;\n    }\n  }\n  get resizeStyle() {\n    return this.renderedAllowResize ? \"both\" : \"none\";\n  }\n  getType() {\n    return \"comment\";\n  }\n  afterRenderQuestionElement(el) {\n    this.element = (el === null || el === void 0 ? void 0 : el.querySelector(`#${this.inputId}`)) || el;\n    super.afterRenderQuestionElement(el);\n  }\n  beforeDestroyQuestionElement(el) {\n    super.beforeDestroyQuestionElement(el);\n    this.element = undefined;\n  }\n  onInput(event) {\n    if (this.isInputTextUpdate) this.value = event.target.value;\n    this.updateRemainingCharacterCounter(event.target.value);\n  }\n  onBlurCore(event) {\n    super.onBlurCore(event);\n  }\n  onKeyDown(event) {\n    this.onKeyDownPreprocess && this.onKeyDownPreprocess(event);\n    if (!this.acceptCarriageReturn && (event.key === \"Enter\" || event.keyCode === 13)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  setNewValue(newValue) {\n    if (!this.acceptCarriageReturn && !!newValue) {\n      // eslint-disable-next-line no-control-regex\n      newValue = newValue.replace(new RegExp(\"(\\r\\n|\\n|\\r)\", \"gm\"), \"\");\n    }\n    super.setNewValue(newValue);\n  }\n  getValueSeparator() {\n    return \"\\n\";\n  }\n  notifyStateChanged(prevState) {\n    super.notifyStateChanged(prevState);\n    if (!this.isCollapsed) {\n      this.textAreaModel.updateElement();\n    }\n  }\n  get className() {\n    return (this.cssClasses ? this.getControlClass() : \"panel-comment-root\") || undefined;\n  }\n}\nSerializer.addClass(\"comment\", [{\n  name: \"maxLength:number\",\n  default: -1\n}, {\n  name: \"cols:number\",\n  default: 50,\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"rows:number\",\n  default: 4\n}, {\n  name: \"placeholder\",\n  alternativeName: \"placeHolder\",\n  serializationProperty: \"locPlaceholder\"\n}, {\n  name: \"textUpdateMode\",\n  default: \"default\",\n  choices: [\"default\", \"onBlur\", \"onTyping\"]\n}, {\n  name: \"autoGrow:boolean\",\n  defaultFunc: () => undefined\n}, {\n  name: \"allowResize:boolean\",\n  defaultFunc: () => undefined\n}, {\n  name: \"acceptCarriageReturn:boolean\",\n  default: true,\n  visible: false\n}], function () {\n  return new QuestionCommentModel(\"\");\n}, \"textbase\");\nQuestionFactory.Instance.registerQuestion(\"comment\", name => {\n  return new QuestionCommentModel(name);\n});\nconst envStr = \"environment\";\nconst userStr = \"user\";\nclass Camera {\n  constructor() {\n    this.canFlipValue = undefined;\n  }\n  static clear() {\n    Camera.cameraList = undefined;\n    Camera.cameraIndex = -1;\n  }\n  static setCameraList(list) {\n    const getDeviceType = function (device) {\n      const lbl = device.label.toLocaleLowerCase();\n      if (lbl.indexOf(userStr) > -1) return userStr;\n      if (lbl.indexOf(envStr) > -1) return envStr;\n      if (lbl.indexOf(\"front\") > -1) return userStr;\n      if (lbl.indexOf(\"back\") > -1) return envStr;\n      return \"\";\n    };\n    Camera.clear();\n    if (Array.isArray(list) && list.length > 0) {\n      Camera.cameraIndex = -1;\n      list.sort((a, b) => {\n        if (a === b) return 0;\n        if (a.label !== b.label) {\n          const lblA = getDeviceType(a);\n          const lblB = getDeviceType(b);\n          if (lblA !== lblB) {\n            if (lblA === userStr) return -1;\n            if (lblB === userStr) return 1;\n            if (lblA === envStr) return -1;\n            if (lblB === envStr) return 1;\n          }\n        }\n        const iA = list.indexOf(a);\n        const iB = list.indexOf(b);\n        return iA < iB ? -1 : 1;\n      });\n    }\n    Camera.cameraList = list;\n  }\n  hasCamera(callback) {\n    if (Camera.cameraList !== undefined) {\n      this.hasCameraCallback(callback);\n      return;\n    }\n    if (Camera.mediaDevicesCallback) {\n      const devicesCallback = devices => {\n        this.setVideoInputs(devices);\n        this.hasCameraCallback(callback);\n      };\n      Camera.mediaDevicesCallback(devicesCallback);\n      return;\n    }\n    if (typeof navigator !== \"undefined\" && navigator.mediaDevices) {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        this.setVideoInputs(devices);\n        this.hasCameraCallback(callback);\n        this.updateCanFlipValue();\n      }).catch(error => {\n        Camera.cameraList = null;\n        this.hasCameraCallback(callback);\n      });\n    } else {\n      Camera.cameraList = null;\n      this.hasCameraCallback(callback);\n    }\n  }\n  getMediaConstraints(videoSize) {\n    const devices = Camera.cameraList;\n    if (!Array.isArray(devices) || devices.length < 1) return undefined;\n    if (Camera.cameraIndex < 0) Camera.cameraIndex = 0;\n    const selDevice = devices[Camera.cameraIndex];\n    const videoConstraints = {};\n    if (selDevice && selDevice.deviceId) {\n      videoConstraints.deviceId = {\n        exact: selDevice.deviceId\n      };\n    } else {\n      videoConstraints.facingMode = Camera.cameraFacingMode;\n    }\n    if (videoSize) {\n      if (videoSize === null || videoSize === void 0 ? void 0 : videoSize.height) {\n        videoConstraints.height = {\n          ideal: videoSize.height\n        };\n      }\n      if (videoSize === null || videoSize === void 0 ? void 0 : videoSize.width) {\n        videoConstraints.width = {\n          ideal: videoSize.width\n        };\n      }\n    }\n    return {\n      video: videoConstraints,\n      audio: false\n    };\n  }\n  startVideo(videoElement, callback, imageWidth, imageHeight) {\n    if (!videoElement) {\n      callback(undefined);\n      return;\n    }\n    videoElement.style.width = \"100%\";\n    videoElement.style.height = \"auto\";\n    videoElement.style.height = \"100%\";\n    videoElement.style.objectFit = \"contain\";\n    const mediaConstraints = this.getMediaConstraints({\n      width: imageWidth,\n      height: imageHeight\n    });\n    navigator.mediaDevices.getUserMedia(mediaConstraints).then(stream => {\n      var _a;\n      videoElement.srcObject = stream;\n      if (!((_a = Camera.cameraList[Camera.cameraIndex]) === null || _a === void 0 ? void 0 : _a.deviceId) && !!stream.getTracks()[0].getCapabilities().facingMode) {\n        Camera.canSwitchFacingMode = true;\n        this.updateCanFlipValue();\n      }\n      videoElement.play();\n      callback(stream);\n    }).catch(error => {\n      callback(undefined);\n    });\n  }\n  getImageSize(videoEl) {\n    return {\n      width: videoEl.videoWidth,\n      height: videoEl.videoHeight\n    };\n  }\n  snap(videoElement, callback) {\n    if (!videoElement) return false;\n    if (!DomDocumentHelper.isAvailable()) return false;\n    const root = DomDocumentHelper.getDocument();\n    const canvasEl = root.createElement(\"canvas\");\n    const imageSize = this.getImageSize(videoElement);\n    canvasEl.height = imageSize.height;\n    canvasEl.width = imageSize.width;\n    let context = canvasEl.getContext(\"2d\");\n    /*\n    if(this._facingMode == 'user'){\n      context.translate(canvasEl.width, 0);\n      context.scale(-1, 1);\n    }\n    */\n    context.clearRect(0, 0, canvasEl.width, canvasEl.height);\n    context.drawImage(videoElement, 0, 0, canvasEl.width, canvasEl.height);\n    canvasEl.toBlob(callback, \"image/png\");\n    return true;\n  }\n  updateCanFlipValue() {\n    const list = Camera.cameraList;\n    this.canFlipValue = Array.isArray(list) && list.length > 1 || Camera.canSwitchFacingMode;\n    if (this.onCanFlipChangedCallback) this.onCanFlipChangedCallback(this.canFlipValue);\n  }\n  canFlip(onCanFlipChangedCallback) {\n    if (this.canFlipValue === undefined) {\n      this.updateCanFlipValue();\n    }\n    if (onCanFlipChangedCallback) {\n      this.onCanFlipChangedCallback = onCanFlipChangedCallback;\n    }\n    return this.canFlipValue;\n  }\n  flip() {\n    if (!this.canFlip()) return;\n    if (Camera.canSwitchFacingMode) {\n      Camera.cameraFacingMode = Camera.cameraFacingMode === userStr ? \"environment\" : userStr;\n    } else if (Camera.cameraIndex >= Camera.cameraList.length - 1) {\n      Camera.cameraIndex = 0;\n    } else {\n      Camera.cameraIndex++;\n    }\n  }\n  hasCameraCallback(callback) {\n    callback(Array.isArray(Camera.cameraList));\n  }\n  setVideoInputs(devices) {\n    const list = [];\n    devices.forEach(device => {\n      if (device.kind === \"videoinput\") {\n        list.push(device);\n      }\n    });\n    Camera.setCameraList(list.length > 0 ? list : null);\n  }\n}\nCamera.cameraIndex = -1;\nCamera.cameraFacingMode = userStr;\nCamera.canSwitchFacingMode = false;\nfunction dataUrl2File(dataUrl, fileName, type) {\n  const str = atob(dataUrl.split(\",\")[1]);\n  const buffer = new Uint8Array(str.split(\"\").map(c => c.charCodeAt(0))).buffer;\n  return new File([buffer], fileName, {\n    type: type\n  });\n}\n/**\n * A base class for question types that support file upload: `QuestionFileModel` and `QuestionSignaturePadModel`.\n */\nclass QuestionFileModelBase extends Question {\n  constructor() {\n    super(...arguments);\n    this.isUploading = false;\n    /**\n     * An event that is raised after the upload state has changed.\n     *\n     * Parameters:\n     *\n     * - `sender`: `SurveyModel`\\\n     * A survey instance that raised the event.\n     * - `options.state`: `string`\\\n     * The current upload state: `\"empty\"`, `\"loading\"`, `\"loaded\"`, or `\"error\"`.\n     */\n    this.onUploadStateChanged = this.addEvent();\n    this.onStateChanged = this.addEvent();\n  }\n  stateChanged(state) {\n    if (this.currentState == state) {\n      return;\n    }\n    if (state === \"loading\") {\n      this.isUploading = true;\n    }\n    if (state === \"loaded\") {\n      this.isUploading = false;\n    }\n    if (state === \"error\") {\n      this.isUploading = false;\n    }\n    this.currentState = state;\n    this.onStateChanged.fire(this, {\n      state: state\n    });\n    this.onUploadStateChanged.fire(this, {\n      state: state\n    });\n  }\n  get showLoadingIndicator() {\n    return this.isUploading;\n  }\n  /**\n   * Specifies whether to store file or signature content as text in `SurveyModel`'s [`data`](https://surveyjs.io/form-library/documentation/surveymodel#data) property.\n   *\n   * If you disable this property, implement `SurveyModel`'s [`onUploadFiles`](https://surveyjs.io/form-library/documentation/surveymodel#onUploadFiles) event handler to specify how to store file content.\n   *\n   * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   *\n   * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   */\n  get storeDataAsText() {\n    return this.getPropertyValue(\"storeDataAsText\");\n  }\n  set storeDataAsText(val) {\n    this.setPropertyValue(\"storeDataAsText\", val);\n  }\n  /**\n   * Enable this property if you want to wait until files are uploaded to complete the survey.\n   *\n   * Default value: `false`\n   *\n   * [File Upload Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   *\n   * [Signature Pad Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   */\n  get waitForUpload() {\n    return this.getPropertyValue(\"waitForUpload\");\n  }\n  set waitForUpload(val) {\n    this.setPropertyValue(\"waitForUpload\", val);\n  }\n  clearValue(keepComment) {\n    this.clearOnDeletingContainer();\n    super.clearValue(keepComment);\n  }\n  clearOnDeletingContainer() {\n    if (!this.survey) return;\n    this.survey.clearFiles(this, this.name, this.value, null, () => {});\n  }\n  onCheckForErrors(errors, isOnValueChanged, fireCallback) {\n    super.onCheckForErrors(errors, isOnValueChanged, fireCallback);\n    if (this.isUploading && this.waitForUpload) {\n      errors.push(new UploadingFileError(this.getLocalizationString(\"uploadingFile\"), this));\n    }\n  }\n  uploadFiles(files) {\n    if (this.survey) {\n      this.stateChanged(\"loading\");\n      this.survey.uploadFiles(this, this.name, files, (arg1, arg2) => {\n        if (Array.isArray(arg1)) {\n          this.setValueFromResult(arg1);\n          if (Array.isArray(arg2)) {\n            arg2.forEach(error => this.errors.push(new UploadingFileError(error, this)));\n            this.stateChanged(\"error\");\n          }\n        }\n        if (arg1 === \"success\" && Array.isArray(arg2)) {\n          this.setValueFromResult(arg2);\n        }\n        if (arg1 === \"error\") {\n          if (typeof arg2 === \"string\") {\n            this.errors.push(new UploadingFileError(arg2, this));\n          }\n          if (Array.isArray(arg2) && arg2.length > 0) {\n            arg2.forEach(error => this.errors.push(new UploadingFileError(error, this)));\n          }\n          this.stateChanged(\"error\");\n        }\n        this.stateChanged(\"loaded\");\n      });\n    }\n  }\n  loadPreview(newValue) {}\n  onChangeQuestionValue(newValue) {\n    super.onChangeQuestionValue(newValue);\n    this.stateChanged(this.isEmpty() ? \"empty\" : \"loaded\");\n  }\n  getIsQuestionReady() {\n    return super.getIsQuestionReady() && !this.isFileLoading;\n  }\n  get isFileLoading() {\n    return this.isFileLoadingValue;\n  }\n  set isFileLoading(val) {\n    this.isFileLoadingValue = val;\n    this.updateIsReady();\n  }\n}\n__decorate([property()], QuestionFileModelBase.prototype, \"isUploading\", void 0);\n__decorate([property({\n  defaultValue: \"empty\"\n})], QuestionFileModelBase.prototype, \"currentState\", void 0);\nclass QuestionFilePage extends Base {\n  static getId() {\n    return \"sv_sfp_\" + QuestionFilePage.pageCounter++;\n  }\n  constructor(question, index) {\n    super();\n    this.question = question;\n    this.index = index;\n    this.id = QuestionFilePage.getId();\n  }\n  get css() {\n    return this.question.cssClasses.page;\n  }\n}\nQuestionFilePage.pageCounter = 0;\n__decorate([propertyArray({})], QuestionFilePage.prototype, \"items\", void 0);\n/**\n * A class that describes the File Upload question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n */\nclass QuestionFileModel extends QuestionFileModelBase {\n  get fileNavigatorVisible() {\n    const isUploading = this.isUploading;\n    const isPlayingVideo = this.isPlayingVideo;\n    const containsMultipleFiles = this.containsMultiplyFiles;\n    const needToShowFileNavigator = this.pageSize < this.previewValue.length;\n    return !isUploading && !isPlayingVideo && containsMultipleFiles && needToShowFileNavigator;\n  }\n  get pagesCount() {\n    return Math.ceil(this.previewValue.length / this.pageSize);\n  }\n  get actionsContainerVisible() {\n    const isUploading = this.isUploading;\n    const isPlayingVideo = this.isPlayingVideo;\n    return !isUploading && !isPlayingVideo;\n  }\n  constructor(name) {\n    super(name);\n    this.isDragging = false;\n    this.fileNavigator = new ActionContainer();\n    this.canFlipCameraValue = undefined;\n    this.prevPreviewLength = 0;\n    this._renderedPages = [];\n    this.pagesAnimation = new AnimationTab(this.getPagesAnimationOptions(), val => {\n      this._renderedPages = val;\n    }, () => this.renderedPages);\n    this.calcAvailableItemsCount = (availableWidth, itemWidth, gap) => {\n      let itemsCount = Math.floor(availableWidth / (itemWidth + gap));\n      if ((itemsCount + 1) * (itemWidth + gap) - gap <= availableWidth) itemsCount++;\n      return itemsCount;\n    };\n    this.dragCounter = 0;\n    this.onDragEnter = event => {\n      if (this.canDragDrop()) {\n        event.preventDefault();\n        this.isDragging = true;\n        this.dragCounter++;\n      }\n    };\n    this.onDragOver = event => {\n      if (!this.canDragDrop()) {\n        event.returnValue = false;\n        return false;\n      }\n      event.dataTransfer.dropEffect = \"copy\";\n      event.preventDefault();\n    };\n    this.onDrop = event => {\n      if (this.canDragDrop()) {\n        this.isDragging = false;\n        this.dragCounter = 0;\n        event.preventDefault();\n        let src = event.dataTransfer;\n        this.onChange(src);\n      }\n    };\n    this.onDragLeave = event => {\n      if (this.canDragDrop()) {\n        this.dragCounter--;\n        if (this.dragCounter === 0) {\n          this.isDragging = false;\n        }\n      }\n    };\n    this.doChange = event => {\n      var src = event.target || event.srcElement;\n      this.onChange(src);\n    };\n    this.doClean = () => {\n      if (this.needConfirmRemoveFile) {\n        confirmActionAsync({\n          message: this.confirmRemoveAllMessage,\n          funcOnYes: () => {\n            this.clearFilesCore();\n          },\n          locale: this.getLocale(),\n          rootElement: this.survey.rootElement,\n          cssClass: this.cssClasses.confirmDialog\n        });\n        return;\n      }\n      this.clearFilesCore();\n    };\n    this.doDownloadFileFromContainer = event => {\n      event.stopPropagation();\n      const currentTarget = event.currentTarget;\n      if (currentTarget && currentTarget.getElementsByTagName) {\n        const link = currentTarget.getElementsByTagName(\"a\")[0];\n        link === null || link === void 0 ? void 0 : link.click();\n      }\n    };\n    this.doDownloadFile = (event, data) => {\n      event.stopPropagation();\n      if (detectIEOrEdge()) {\n        event.preventDefault();\n        loadFileFromBase64(data.content, data.name);\n      }\n    };\n    this.createLocalizableString(\"takePhotoCaption\", this, false, true);\n    this.createLocalizableString(\"clearCaption\", this, false, true);\n    this.actionsContainer = new ActionContainer();\n    this.actionsContainer.locOwner = this;\n    this.fileIndexAction = new Action({\n      id: \"fileIndex\",\n      title: this.getFileIndexCaption(),\n      enabled: false\n    });\n    this.prevFileAction = new Action({\n      id: \"prevPage\",\n      iconSize: 16,\n      action: () => {\n        this.navigationDirection = \"left\";\n        this.indexToShow = this.previewValue.length && (this.indexToShow - 1 + this.pagesCount) % this.pagesCount || 0;\n        this.fileIndexAction.title = this.getFileIndexCaption();\n      }\n    });\n    this.nextFileAction = new Action({\n      id: \"nextPage\",\n      iconSize: 16,\n      action: () => {\n        this.navigationDirection = \"right\";\n        this.indexToShow = this.previewValue.length && (this.indexToShow + 1) % this.pagesCount || 0;\n        this.fileIndexAction.title = this.getFileIndexCaption();\n      }\n    });\n    this.takePictureAction = new Action({\n      iconName: \"icon-takepicture\",\n      id: \"sv-file-take-picture\",\n      iconSize: \"auto\",\n      innerCss: new ComputedUpdater(() => new CssClassBuilder().append(this.cssClasses.contextButton).append(this.cssClasses.takePictureButton).toString()),\n      locTitle: this.locTakePhotoCaption,\n      showTitle: false,\n      action: () => {\n        this.snapPicture();\n      }\n    });\n    this.closeCameraAction = new Action({\n      iconName: \"icon-closecamera\",\n      id: \"sv-file-close-camera\",\n      iconSize: \"auto\",\n      innerCss: new ComputedUpdater(() => new CssClassBuilder().append(this.cssClasses.contextButton).append(this.cssClasses.closeCameraButton).toString()),\n      action: () => {\n        this.stopVideo();\n      }\n    });\n    this.changeCameraAction = new Action({\n      iconName: \"icon-changecamera\",\n      id: \"sv-file-change-camera\",\n      iconSize: \"auto\",\n      innerCss: new ComputedUpdater(() => new CssClassBuilder().append(this.cssClasses.contextButton).append(this.cssClasses.changeCameraButton).toString()),\n      visible: new ComputedUpdater(() => this.canFlipCamera()),\n      action: () => {\n        this.flipCamera();\n      }\n    });\n    this.chooseFileAction = new Action({\n      iconName: \"icon-choosefile\",\n      id: \"sv-file-choose-file\",\n      iconSize: \"auto\",\n      data: {\n        question: this\n      },\n      enabledIf: () => !this.isInputReadOnly,\n      component: \"sv-file-choose-btn\"\n    });\n    this.startCameraAction = new Action({\n      iconName: \"icon-takepicture_24x24\",\n      id: \"sv-file-start-camera\",\n      iconSize: \"auto\",\n      locTitle: this.locTakePhotoCaption,\n      showTitle: new ComputedUpdater(() => !this.isAnswered),\n      enabledIf: () => !this.isInputReadOnly,\n      action: () => {\n        this.startVideo();\n      }\n    });\n    this.cleanAction = new Action({\n      iconName: \"icon-clear\",\n      id: \"sv-file-clean\",\n      iconSize: \"auto\",\n      locTitle: this.locClearButtonCaption,\n      showTitle: false,\n      enabledIf: () => !this.isInputReadOnly,\n      innerCss: new ComputedUpdater(() => this.cssClasses.removeButton),\n      action: () => {\n        this.doClean();\n      }\n    });\n    [this.closeCameraAction, this.changeCameraAction, this.takePictureAction].forEach(action => {\n      action.cssClasses = {};\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"sourceType\", \"currentMode\", \"isAnswered\"], () => {\n      this.updateActionsVisibility();\n    });\n    this.actionsContainer.actions = [this.chooseFileAction, this.startCameraAction, this.cleanAction];\n    this.fileNavigator.actions = [this.prevFileAction, this.fileIndexAction, this.nextFileAction];\n  }\n  get videoId() {\n    return this.id + \"_video\";\n  }\n  get hasVideoUI() {\n    return this.currentMode !== \"file\";\n  }\n  get hasFileUI() {\n    return this.currentMode !== \"camera\";\n  }\n  startVideo() {\n    if (this.currentMode === \"file\" || this.isDesignMode || this.isPlayingVideo) return;\n    this.setIsPlayingVideo(true);\n    setTimeout(() => {\n      this.startVideoInCamera();\n    }, 0);\n  }\n  get videoHtmlElement() {\n    var _a;\n    return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.querySelector(`#${this.videoId}`);\n  }\n  startVideoInCamera() {\n    this.camera.startVideo(this.videoHtmlElement, stream => {\n      this.videoStream = stream;\n      if (!stream) {\n        this.stopVideo();\n      }\n    }, getRenderedSize(this.imageWidth), getRenderedSize(this.imageHeight));\n  }\n  stopVideo() {\n    this.setIsPlayingVideo(false);\n    this.closeVideoStream();\n  }\n  snapPicture() {\n    if (!this.isPlayingVideo) return;\n    const blobCallback = blob => {\n      if (blob) {\n        const file = new File([blob], \"snap_picture.png\", {\n          type: \"image/png\"\n        });\n        this.loadFiles([file]);\n      }\n    };\n    this.camera.snap(this.videoHtmlElement, blobCallback);\n    this.stopVideo();\n  }\n  canFlipCamera() {\n    if (this.canFlipCameraValue === undefined) {\n      this.canFlipCameraValue = this.camera.canFlip(res => {\n        this.canFlipCameraValue = res;\n      });\n    }\n    return this.canFlipCameraValue;\n  }\n  flipCamera() {\n    if (!this.canFlipCamera()) return;\n    this.closeVideoStream();\n    this.camera.flip();\n    this.startVideoInCamera();\n  }\n  closeVideoStream() {\n    if (!!this.videoStream) {\n      this.videoStream.getTracks().forEach(track => {\n        track.stop();\n      });\n      this.videoStream = undefined;\n    }\n  }\n  onHidingContent() {\n    super.onHidingContent();\n    this.stopVideo();\n  }\n  updateElementCssCore(cssClasses) {\n    super.updateElementCssCore(cssClasses);\n    this.prevFileAction.iconName = this.cssClasses.leftIconId;\n    this.nextFileAction.iconName = this.cssClasses.rightIconId;\n    this.updateCurrentMode();\n  }\n  getFileIndexCaption() {\n    return this.getLocalizationFormatString(\"indexText\", this.indexToShow + 1, this.pagesCount);\n  }\n  updateFileNavigator() {\n    this.updatePages();\n    this.navigationDirection = undefined;\n    this.indexToShow = this.previewValue.length && (this.indexToShow + this.pagesCount) % this.pagesCount || 0;\n    this.fileIndexAction.title = this.getFileIndexCaption();\n  }\n  updateRenderedPages() {\n    if (this.pages && this.pages[this.indexToShow]) {\n      this.renderedPages = [this.pages[this.indexToShow]];\n    }\n  }\n  updatePages() {\n    this.blockAnimations();\n    let currentPage;\n    this.pages = [];\n    this.renderedPages = [];\n    this.previewValue.forEach((val, index) => {\n      if (index % this.pageSize == 0) {\n        currentPage = new QuestionFilePage(this, this.pages.length);\n        this.pages.push(currentPage);\n      }\n      currentPage.items.push(val);\n    });\n    this.releaseAnimations();\n    this.updateRenderedPages();\n  }\n  previewValueChanged() {\n    this.navigationDirection = undefined;\n    if (this.previewValue.length !== this.prevPreviewLength) {\n      if (this.previewValue.length > 0) {\n        if (this.prevPreviewLength > this.previewValue.length) {\n          if (this.indexToShow >= this.pagesCount && this.indexToShow > 0) {\n            this.indexToShow = this.pagesCount - 1;\n            this.navigationDirection = \"left-delete\";\n          }\n        } else {\n          this.indexToShow = Math.floor(this.prevPreviewLength / this.pageSize);\n        }\n      } else {\n        this.indexToShow = 0;\n      }\n    }\n    this.updatePages();\n    this.fileIndexAction.title = this.getFileIndexCaption();\n    this.containsMultiplyFiles = this.previewValue.length > 1;\n    if (this.previewValue.length > 0 && !this.calculatedGapBetweenItems && !this.calculatedItemWidth) {\n      setTimeout(() => {\n        this.processResponsiveness(0, this._width);\n      }, 1);\n    }\n    this.prevPreviewLength = this.previewValue.length;\n  }\n  getType() {\n    return \"file\";\n  }\n  onChangeQuestionValue(newValue) {\n    super.onChangeQuestionValue(newValue);\n    if (!this.isLoadingFromJson) {\n      this.loadPreview(newValue);\n    }\n  }\n  /**\n   * Disable this property only to implement a custom preview.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/file-custom-preview/ (linkStyle))\n   * @see allowImagesPreview\n   */\n  get showPreview() {\n    return this.getPropertyValue(\"showPreview\");\n  }\n  set showPreview(val) {\n    this.setPropertyValue(\"showPreview\", val);\n  }\n  /**\n   * Specifies whether users can upload multiple files.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   */\n  get allowMultiple() {\n    return this.getPropertyValue(\"allowMultiple\");\n  }\n  set allowMultiple(val) {\n    this.setPropertyValue(\"allowMultiple\", val);\n  }\n  /**\n   * The height of the following images:\n   *\n   * - [Images in the preview](#allowImagesPreview)\n   * - [Photos taken using the camera](#sourceType)\n   * - Uploaded images in a [generated PDF form](https://surveyjs.io/pdf-generator/documentation/overview)\n   *\n   * > The sizes of previewed images are limited by the height and width of the preview area in single file upload mode or that of a thumbnail area in [multiple file upload mode](#allowMultiple).\n   * @see imageWidth\n   */\n  get imageHeight() {\n    return this.getPropertyValue(\"imageHeight\");\n  }\n  set imageHeight(val) {\n    this.setPropertyValue(\"imageHeight\", val);\n  }\n  /**\n   * The width of the following images:\n   *\n   * - [Images in the preview](#allowImagesPreview)\n   * - [Photos taken using the camera](#sourceType)\n   * - Uploaded images in a [generated PDF form](https://surveyjs.io/pdf-generator/documentation/overview)\n   *\n   * > The sizes of previewed images are limited by the height and width of the preview area in single file upload mode or that of a thumbnail area in [multiple file upload mode](#allowMultiple).\n   * @see imageHeight\n   */\n  get imageWidth() {\n    return this.getPropertyValue(\"imageWidth\");\n  }\n  set imageWidth(val) {\n    this.setPropertyValue(\"imageWidth\", val);\n  }\n  /**\n   * An [accept](https://www.w3schools.com/tags/att_input_accept.asp) attribute value for the underlying `<input>` element.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/store-file-names-in-survey-results/ (linkStyle))\n   */\n  get acceptedTypes() {\n    return this.getPropertyValue(\"acceptedTypes\");\n  }\n  set acceptedTypes(val) {\n    this.setPropertyValue(\"acceptedTypes\", val);\n  }\n  /**\n   * Specifies whether to show a preview of image files.\n   */\n  get allowImagesPreview() {\n    return this.getPropertyValue(\"allowImagesPreview\");\n  }\n  set allowImagesPreview(val) {\n    this.setPropertyValue(\"allowImagesPreview\", val);\n  }\n  /**\n   * Maximum allowed file size, measured in bytes.\n   *\n   * Default value: 0 (unlimited)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/file-upload/ (linkStyle))\n   */\n  get maxSize() {\n    return this.getPropertyValue(\"maxSize\");\n  }\n  set maxSize(val) {\n    this.setPropertyValue(\"maxSize\", val);\n  }\n  chooseFile(event) {\n    if (!this.rootElement) return;\n    const inputElement = this.rootElement.querySelector(`#${this.inputId}`);\n    if (!inputElement) return;\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    if (inputElement) {\n      if (this.survey) {\n        this.survey.chooseFiles(inputElement, files => this.loadFiles(files), {\n          element: this,\n          elementType: this.getType(),\n          propertyName: this.name\n        });\n      } else {\n        inputElement.click();\n      }\n    }\n  }\n  /**\n   * Specifies whether users should confirm file deletion.\n   *\n   * Default value: `false`\n   */\n  get needConfirmRemoveFile() {\n    return this.getPropertyValue(\"needConfirmRemoveFile\");\n  }\n  set needConfirmRemoveFile(val) {\n    this.setPropertyValue(\"needConfirmRemoveFile\", val);\n  }\n  getConfirmRemoveMessage(fileName) {\n    return this.confirmRemoveMessage.format(fileName);\n  }\n  get takePhotoCaption() {\n    return this.getLocalizableStringText(\"takePhotoCaption\");\n  }\n  set takePhotoCaption(val) {\n    this.setLocalizableStringText(\"takePhotoCaption\", val);\n  }\n  get locTakePhotoCaption() {\n    return this.getLocalizableString(\"takePhotoCaption\");\n  }\n  get clearButtonCaption() {\n    return this.getLocalizableStringText(\"clearCaption\");\n  }\n  set clearButtonCaption(value) {\n    this.setLocalizableStringText(\"clearCaption\", value);\n  }\n  get locClearButtonCaption() {\n    return this.getLocalizableString(\"clearCaption\");\n  }\n  get locRenderedPlaceholder() {\n    if (this.locRenderedPlaceholderValue === undefined) {\n      this.locRenderedPlaceholderValue = new ComputedUpdater(() => {\n        const isReadOnly = this.isReadOnly;\n        const hasFileUI = !this.isDesignMode && this.hasFileUI || this.isDesignMode && this.sourceType != \"camera\";\n        const hasVideoUI = !this.isDesignMode && this.hasVideoUI || this.isDesignMode && this.sourceType != \"file\";\n        let renderedPlaceholder;\n        if (isReadOnly) {\n          renderedPlaceholder = this.locNoFileChosenCaption;\n        } else if (hasFileUI && hasVideoUI) {\n          renderedPlaceholder = this.locFileOrPhotoPlaceholder;\n        } else if (hasFileUI) {\n          renderedPlaceholder = this.locFilePlaceholder;\n        } else {\n          renderedPlaceholder = this.locPhotoPlaceholder;\n        }\n        return renderedPlaceholder;\n      });\n    }\n    return this.locRenderedPlaceholderValue;\n  }\n  get currentMode() {\n    return this.getPropertyValue(\"currentMode\", this.sourceType);\n  }\n  get isPlayingVideo() {\n    return this.getPropertyValue(\"isPlayingVideo\", false);\n  }\n  setIsPlayingVideo(show) {\n    this.setPropertyValue(\"isPlayingVideo\", show);\n  }\n  updateCurrentMode() {\n    if (!this.isDesignMode && this.survey) {\n      if (this.sourceType !== \"file\") {\n        this.camera.hasCamera(res => {\n          this.setPropertyValue(\"currentMode\", res ? this.sourceType : \"file\");\n        });\n      } else {\n        this.setPropertyValue(\"currentMode\", this.sourceType);\n      }\n    }\n  }\n  updateActionsVisibility() {\n    const isDesignMode = this.isDesignMode;\n    this.chooseFileAction.visible = !isDesignMode && this.hasFileUI || isDesignMode && this.sourceType !== \"camera\";\n    this.startCameraAction.visible = !isDesignMode && this.hasVideoUI || isDesignMode && this.sourceType !== \"file\";\n    this.cleanAction.visible = !!this.isAnswered;\n  }\n  get inputTitle() {\n    if (this.isUploading) return this.loadingFileTitle;\n    if (this.isEmpty()) return this.chooseFileTitle;\n    return \" \";\n  }\n  get chooseButtonText() {\n    return this.isEmpty() || this.allowMultiple ? this.chooseButtonCaption : this.replaceButtonCaption;\n  }\n  clear(doneCallback) {\n    if (!this.survey) return;\n    this.containsMultiplyFiles = false;\n    this.survey.clearFiles(this, this.name, this.value, null, (status, data) => {\n      if (status === \"success\") {\n        this.value = undefined;\n        this.errors = [];\n        !!doneCallback && doneCallback();\n        this.indexToShow = 0;\n        this.fileIndexAction.title = this.getFileIndexCaption();\n      }\n    });\n  }\n  get renderCapture() {\n    return this.allowCameraAccess ? \"user\" : undefined;\n  }\n  get multipleRendered() {\n    return this.allowMultiple ? \"multiple\" : undefined;\n  }\n  get showFileDecorator() {\n    const isPlayingVideo = this.isPlayingVideo;\n    const showLoadingIndicator = this.showLoadingIndicator;\n    return !isPlayingVideo && !showLoadingIndicator;\n  }\n  get showDragAreaPlaceholder() {\n    return !this.isAnswered;\n  }\n  get allowShowPreview() {\n    const isShowLoadingIndicator = this.showLoadingIndicator;\n    const isPlayingVideo = this.isPlayingVideo;\n    return !isShowLoadingIndicator && !isPlayingVideo;\n  }\n  get showPreviewContainer() {\n    return this.previewValue && this.previewValue.length > 0;\n  }\n  defaultImage(data) {\n    return !this.canPreviewImage(data) && !!this.cssClasses.defaultImage;\n  }\n  /**\n   * Removes a file with a specified name.\n   */\n  removeFile(name) {\n    this.removeFileByContent(this.value.filter(f => f.name === name)[0]);\n  }\n  removeFileByContent(content) {\n    if (!this.survey) return;\n    this.survey.clearFiles(this, this.name, this.value, content.name, (status, data) => {\n      if (status === \"success\") {\n        var oldValue = this.value;\n        if (Array.isArray(oldValue)) {\n          this.value = oldValue.filter(f => !Helpers.isTwoValueEquals(f, content, true, false, false));\n        } else {\n          this.value = undefined;\n        }\n      }\n    });\n  }\n  setValueFromResult(arg) {\n    this.value = (this.value || []).concat(arg.map(r => {\n      return {\n        name: r.file.name,\n        type: r.file.type,\n        content: r.content\n      };\n    }));\n  }\n  /**\n   * Loads multiple files into the question.\n   * @param files An array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects.\n   */\n  loadFiles(files) {\n    if (!this.survey) {\n      return;\n    }\n    this.errors = [];\n    if (!this.allFilesOk(files)) {\n      return;\n    }\n    var loadFilesProc = () => {\n      this.stateChanged(\"loading\");\n      var content = [];\n      if (this.storeDataAsText) {\n        files.forEach(file => {\n          let fileReader = new FileReader();\n          fileReader.onload = e => {\n            content = content.concat([{\n              name: file.name,\n              type: file.type,\n              content: fileReader.result\n            }]);\n            if (content.length === files.length) {\n              this.value = (this.value || []).concat(content);\n            }\n          };\n          fileReader.readAsDataURL(file);\n        });\n      } else {\n        this.uploadFiles(files);\n      }\n    };\n    if (this.allowMultiple) {\n      loadFilesProc();\n    } else {\n      this.clear(loadFilesProc);\n    }\n  }\n  get camera() {\n    if (!this.cameraValue) {\n      this.cameraValue = new Camera();\n    }\n    return this.cameraValue;\n  }\n  canPreviewImage(fileItem) {\n    return this.allowImagesPreview && !!fileItem && this.isFileImage(fileItem);\n  }\n  loadPreview(newValue) {\n    if (this.showPreview && this.prevLoadedPreviewValue === newValue) return;\n    this.previewValue.splice(0, this.previewValue.length);\n    if (!this.showPreview || !newValue) return;\n    this.prevLoadedPreviewValue = newValue;\n    var newValues = Array.isArray(newValue) ? newValue : !!newValue ? [newValue] : [];\n    if (this.storeDataAsText) {\n      newValues.forEach(value => {\n        var content = value.content || value;\n        this.previewValue.push({\n          name: value.name,\n          type: value.type,\n          content: content\n        });\n      });\n      this.previewValueChanged();\n    } else {\n      if (!!this._previewLoader) {\n        this._previewLoader.dispose();\n      }\n      this.isFileLoading = true;\n      this._previewLoader = new FileLoader(this, (status, loaded) => {\n        if (status !== \"error\") {\n          loaded.forEach(val => {\n            this.previewValue.push(val);\n          });\n          this.previewValueChanged();\n        }\n        this.isFileLoading = false;\n        this._previewLoader.dispose();\n        this._previewLoader = undefined;\n      });\n      this._previewLoader.load(newValues);\n    }\n  }\n  allFilesOk(files) {\n    var errorLength = this.errors ? this.errors.length : 0;\n    (files || []).forEach(file => {\n      if (this.maxSize > 0 && file.size > this.maxSize) {\n        this.errors.push(new ExceedSizeError(this.maxSize, this));\n      }\n    });\n    return errorLength === this.errors.length;\n  }\n  isFileImage(file) {\n    if (!file || !file.content || !file.content.substring) return false;\n    const imagePrefix = \"data:image\";\n    var subStr = file.content && file.content.substring(0, imagePrefix.length);\n    subStr = subStr && subStr.toLowerCase();\n    var result = subStr === imagePrefix || !!file.type && file.type.toLowerCase().indexOf(\"image/\") === 0;\n    return result;\n  }\n  getPlainData(options = {\n    includeEmpty: true\n  }) {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData && !this.isEmpty()) {\n      questionPlainData.isNode = false;\n      var values = Array.isArray(this.value) ? this.value : [this.value];\n      questionPlainData.data = values.map((dataValue, index) => {\n        return {\n          name: index,\n          title: \"File\",\n          value: dataValue.content && dataValue.content || dataValue,\n          displayValue: dataValue.name && dataValue.name || dataValue,\n          getString: val => typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: false\n        };\n      });\n    }\n    return questionPlainData;\n  }\n  getImageWrapperCss(data) {\n    return new CssClassBuilder().append(this.cssClasses.imageWrapper).append(this.cssClasses.imageWrapperDefaultImage, this.defaultImage(data)).toString();\n  }\n  getActionsContainerCss(css) {\n    return new CssClassBuilder().append(css.actionsContainer).append(css.actionsContainerAnswered, this.isAnswered).toString();\n  }\n  getRemoveButtonCss() {\n    return new CssClassBuilder().append(this.cssClasses.removeFileButton).append(this.cssClasses.contextButton).toString();\n  }\n  getChooseFileCss() {\n    const isAnswered = this.isAnswered;\n    return new CssClassBuilder().append(this.cssClasses.chooseFile).append(this.cssClasses.controlDisabled, this.isReadOnly).append(this.cssClasses.chooseFileAsText, !isAnswered).append(this.cssClasses.chooseFileAsTextDisabled, !isAnswered && this.isInputReadOnly).append(this.cssClasses.contextButton, isAnswered).append(this.cssClasses.chooseFileAsIcon, isAnswered).toString();\n  }\n  getReadOnlyFileCss() {\n    return new CssClassBuilder().append(\"form-control\").append(this.cssClasses.placeholderInput).toString();\n  }\n  get fileRootCss() {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.rootDisabled, this.isDisabledStyle).append(this.cssClasses.rootReadOnly, this.isReadOnlyStyle).append(this.cssClasses.rootPreview, this.isPreviewStyle).append(this.cssClasses.rootDragging, this.isDragging).append(this.cssClasses.rootAnswered, this.isAnswered).append(this.cssClasses.single, !this.allowMultiple).append(this.cssClasses.singleImage, !this.allowMultiple && this.isAnswered && this.canPreviewImage(this.value[0])).append(this.cssClasses.mobile, this.isMobile).toString();\n  }\n  getFileDecoratorCss() {\n    return new CssClassBuilder().append(this.cssClasses.fileDecorator).append(this.cssClasses.onError, this.hasCssError()).append(this.cssClasses.fileDecoratorDrag, this.isDragging).toString();\n  }\n  onChange(src) {\n    if (!DomWindowHelper.isFileReaderAvailable()) return;\n    if (!src || !src.files || src.files.length < 1) return;\n    let files = [];\n    let allowCount = this.allowMultiple ? src.files.length : 1;\n    for (let i = 0; i < allowCount; i++) {\n      files.push(src.files[i]);\n    }\n    src.value = \"\";\n    this.loadFiles(files);\n  }\n  calcCssClasses(css) {\n    const classes = super.calcCssClasses(css);\n    this.actionsContainer.cssClasses = css.actionBar;\n    this.actionsContainer.cssClasses.itemWithTitle = this.actionsContainer.cssClasses.item;\n    this.actionsContainer.cssClasses.item = \"\";\n    this.actionsContainer.cssClasses.itemAsIcon = classes.contextButton;\n    this.actionsContainer.containerCss = classes.actionsContainer;\n    return classes;\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    this.updateCurrentMode();\n    this.updateActionsVisibility();\n    this.loadPreview(this.value);\n  }\n  needResponsiveness() {\n    return this.supportResponsiveness();\n  }\n  supportResponsiveness() {\n    return true;\n  }\n  getObservedElementSelector() {\n    return classesToSelector(this.cssClasses.dragArea);\n  }\n  getFileListSelector() {\n    return classesToSelector(this.cssClasses.fileList);\n  }\n  get renderedPages() {\n    return this._renderedPages;\n  }\n  set renderedPages(val) {\n    this.pagesAnimation.sync(val);\n  }\n  getPagesAnimationOptions() {\n    return {\n      getEnterOptions: page => {\n        const pageClass = this.cssClasses.page;\n        return {\n          cssClass: pageClass ? new CssClassBuilder().append(`${pageClass}--enter-from-left`, this.navigationDirection == \"left\" || this.navigationDirection == \"left-delete\").append(`${pageClass}--enter-from-right`, this.navigationDirection == \"right\").toString() : \"\"\n        };\n      },\n      getLeaveOptions: page => {\n        const pageClass = this.cssClasses.page;\n        return {\n          cssClass: pageClass ? new CssClassBuilder().append(`${pageClass}--leave-to-left`, this.navigationDirection == \"right\").append(`${pageClass}--leave-to-right`, this.navigationDirection == \"left\").toString() : \"\"\n        };\n      },\n      getAnimatedElement: page => {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.querySelector(`#${page.id}`);\n      },\n      isAnimationEnabled: () => {\n        return this.animationAllowed && !!this.rootElement;\n      },\n      getRerenderEvent: () => {\n        return this.onElementRerendered;\n      }\n    };\n  }\n  triggerResponsiveness(hard) {\n    if (hard) {\n      this.calculatedGapBetweenItems = undefined;\n      this.calculatedItemWidth = undefined;\n    }\n    super.triggerResponsiveness();\n  }\n  processResponsiveness(_, availableWidth) {\n    this._width = availableWidth;\n    if (this.rootElement) {\n      if ((!this.calculatedGapBetweenItems || !this.calculatedItemWidth) && this.allowMultiple) {\n        const fileListSelector = this.getFileListSelector();\n        const fileListElement = fileListSelector ? this.rootElement.querySelector(this.getFileListSelector()) : undefined;\n        if (fileListElement) {\n          const visiblePage = fileListElement.querySelector(classesToSelector(this.cssClasses.page));\n          if (visiblePage) {\n            const firstVisibleItem = visiblePage.querySelector(classesToSelector(this.cssClasses.previewItem));\n            this.calculatedGapBetweenItems = Math.ceil(Number.parseFloat(DomDocumentHelper.getComputedStyle(visiblePage).gap));\n            if (firstVisibleItem) {\n              this.calculatedItemWidth = Math.ceil(Number.parseFloat(DomDocumentHelper.getComputedStyle(firstVisibleItem).width));\n            }\n          }\n        }\n      }\n    }\n    if (this.calculatedGapBetweenItems && this.calculatedItemWidth) {\n      this.pageSize = this.calcAvailableItemsCount(availableWidth, this.calculatedItemWidth, this.calculatedGapBetweenItems);\n      return true;\n    }\n    return false;\n  }\n  canDragDrop() {\n    return !this.isInputReadOnly && this.currentMode !== \"camera\" && !this.isPlayingVideo;\n  }\n  afterRenderQuestionElement(el) {\n    this.rootElement = el;\n  }\n  beforeDestroyQuestionElement(el) {\n    this.rootElement = undefined;\n  }\n  clearFilesCore() {\n    if (this.rootElement) {\n      const input = this.rootElement.querySelectorAll(\"input\")[0];\n      if (input) {\n        input.value = \"\";\n      }\n    }\n    this.clear();\n  }\n  doRemoveFile(data, event) {\n    event.stopPropagation();\n    if (this.needConfirmRemoveFile) {\n      confirmActionAsync({\n        message: this.getConfirmRemoveMessage(data.name),\n        funcOnYes: () => {\n          this.removeFileCore(data);\n        },\n        locale: this.getLocale(),\n        rootElement: this.survey.rootElement,\n        cssClass: this.cssClasses.confirmDialog\n      });\n      return;\n    }\n    this.removeFileCore(data);\n  }\n  removeFileCore(data) {\n    const previewIndex = this.previewValue.indexOf(data);\n    this.removeFileByContent(previewIndex === -1 ? data : this.value[previewIndex]);\n  }\n  //#endregion\n  dispose() {\n    this.cameraValue = undefined;\n    this.closeVideoStream();\n    super.dispose();\n  }\n}\n__decorate([property()], QuestionFileModel.prototype, \"isDragging\", void 0);\n__decorate([propertyArray({})], QuestionFileModel.prototype, \"previewValue\", void 0);\n__decorate([propertyArray({})], QuestionFileModel.prototype, \"pages\", void 0);\n__decorate([property({\n  defaultValue: 0,\n  onSet: (val, target) => {\n    target.updateRenderedPages();\n  }\n})], QuestionFileModel.prototype, \"indexToShow\", void 0);\n__decorate([property({\n  defaultValue: 1,\n  onSet: (_, target) => {\n    target.updateFileNavigator();\n  }\n})], QuestionFileModel.prototype, \"pageSize\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionFileModel.prototype, \"containsMultiplyFiles\", void 0);\n__decorate([property()], QuestionFileModel.prototype, \"allowCameraAccess\", void 0);\n__decorate([property({\n  onSet: (val, obj) => {\n    if (!obj.isLoadingFromJson) {\n      obj.updateCurrentMode();\n    }\n  }\n})], QuestionFileModel.prototype, \"sourceType\", void 0);\n__decorate([property()], QuestionFileModel.prototype, \"canFlipCameraValue\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"confirmRemoveFile\"\n  }\n})], QuestionFileModel.prototype, \"confirmRemoveMessage\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"confirmRemoveAllFiles\"\n  }\n})], QuestionFileModel.prototype, \"confirmRemoveAllMessage\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"noFileChosen\"\n  }\n})], QuestionFileModel.prototype, \"noFileChosenCaption\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"chooseFileCaption\"\n  }\n})], QuestionFileModel.prototype, \"chooseButtonCaption\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"replaceFileCaption\"\n  }\n})], QuestionFileModel.prototype, \"replaceButtonCaption\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"removeFileCaption\"\n  }\n})], QuestionFileModel.prototype, \"removeFileCaption\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"loadingFile\"\n  }\n})], QuestionFileModel.prototype, \"loadingFileTitle\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"chooseFile\"\n  }\n})], QuestionFileModel.prototype, \"chooseFileTitle\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"fileOrPhotoPlaceholder\"\n  }\n})], QuestionFileModel.prototype, \"fileOrPhotoPlaceholder\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"photoPlaceholder\"\n  }\n})], QuestionFileModel.prototype, \"photoPlaceholder\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"filePlaceholder\"\n  }\n})], QuestionFileModel.prototype, \"filePlaceholder\", void 0);\n__decorate([property()], QuestionFileModel.prototype, \"locRenderedPlaceholderValue\", void 0);\n__decorate([propertyArray()], QuestionFileModel.prototype, \"_renderedPages\", void 0);\nSerializer.addClass(\"file\", [{\n  name: \"showCommentArea:switch\",\n  layout: \"row\",\n  visible: true,\n  category: \"general\"\n}, {\n  name: \"showPreview:boolean\",\n  default: true,\n  visible: false\n}, \"allowMultiple:boolean\", {\n  name: \"allowImagesPreview:boolean\",\n  default: true,\n  dependsOn: \"showPreview\",\n  visibleIf: obj => {\n    return !!obj.showPreview;\n  }\n}, \"imageHeight\", \"imageWidth\", \"acceptedTypes\", {\n  name: \"storeDataAsText:boolean\",\n  default: true\n}, {\n  name: \"waitForUpload:boolean\",\n  default: false\n}, {\n  name: \"maxSize:number\",\n  default: 0\n}, {\n  name: \"defaultValue\",\n  visible: false\n}, {\n  name: \"correctAnswer\",\n  visible: false\n}, {\n  name: \"validators\",\n  visible: false\n}, {\n  name: \"needConfirmRemoveFile:boolean\"\n}, {\n  name: \"sourceType\",\n  choices: [\"file\", \"camera\", \"file-camera\"],\n  default: \"file\",\n  category: \"general\",\n  visible: true\n}, {\n  name: \"fileOrPhotoPlaceholder:text\",\n  serializationProperty: \"locFileOrPhotoPlaceholder\",\n  category: \"general\"\n}, {\n  name: \"photoPlaceholder:text\",\n  serializationProperty: \"locPhotoPlaceholder\",\n  category: \"general\"\n}, {\n  name: \"filePlaceholder:text\",\n  serializationProperty: \"locFilePlaceholder\",\n  category: \"general\"\n}, {\n  name: \"allowCameraAccess:switch\",\n  category: \"general\",\n  visible: false\n}], function () {\n  return new QuestionFileModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"file\", name => {\n  return new QuestionFileModel(name);\n});\nclass FileLoader {\n  constructor(fileQuestion, callback) {\n    this.fileQuestion = fileQuestion;\n    this.callback = callback;\n    this.loaded = [];\n  }\n  load(files) {\n    let downloadedCount = 0;\n    this.loaded = new Array(files.length);\n    files.forEach((value, index) => {\n      if (this.fileQuestion.survey) {\n        this.fileQuestion.survey.downloadFile(this.fileQuestion, this.fileQuestion.name, value, (status, data) => {\n          if (!this.fileQuestion || !this.callback) {\n            return;\n          }\n          if (status !== \"error\") {\n            this.loaded[index] = {\n              content: data,\n              name: value.name,\n              type: value.type\n            };\n            downloadedCount++;\n            if (downloadedCount === files.length) {\n              this.callback(status, this.loaded);\n            }\n          } else {\n            this.callback(\"error\", this.loaded);\n          }\n        });\n      }\n    });\n  }\n  dispose() {\n    this.fileQuestion = undefined;\n    this.callback = undefined;\n  }\n}\n\n/**\n  * A class that describes the HTML question type. Unlike other question types, HTML cannot have a title or value.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-html/ (linkStyle))\n */\nclass QuestionHtmlModel extends QuestionNonValue {\n  constructor(name) {\n    super(name);\n    var locHtml = this.createLocalizableString(\"html\", this);\n    locHtml.onGetTextCallback = str => {\n      return !!this.survey && !this.ignoreHtmlProgressing ? this.processHtml(str) : str;\n    };\n  }\n  getType() {\n    return \"html\";\n  }\n  get isCompositeQuestion() {\n    return true;\n  }\n  getProcessedText(text) {\n    if (this.ignoreHtmlProgressing) return text;\n    return super.getProcessedText(text);\n  }\n  /**\n   * HTML markup to display.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-html-form-field/ (linkStyle))\n   *\n   * > If you get the markup from a third party, ensure that it does not contain malicious code.\n   */\n  get html() {\n    return this.getLocalizableStringText(\"html\", \"\");\n  }\n  set html(val) {\n    this.setLocalizableStringText(\"html\", val);\n  }\n  get locHtml() {\n    return this.getLocalizableString(\"html\");\n  }\n  get processedHtml() {\n    return this.processHtml(this.html);\n  }\n  processHtml(html) {\n    return this.survey ? this.survey.processHtml(html, \"html-question\") : this.html;\n  }\n  get isNewA11yStructure() {\n    return true;\n  }\n  get renderCssRoot() {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.nested, this.getIsNested()).toString() || undefined;\n  }\n}\nSerializer.addClass(\"html\", [{\n  name: \"html:html\",\n  serializationProperty: \"locHtml\"\n}, {\n  name: \"showNumber\",\n  visible: false\n}, {\n  name: \"state\",\n  visible: false\n}, {\n  name: \"titleLocation\",\n  visible: false\n}, {\n  name: \"descriptionLocation\",\n  visible: false\n}, {\n  name: \"errorLocation\",\n  visible: false\n}, {\n  name: \"indent\",\n  visible: false\n}, {\n  name: \"width\",\n  visible: false\n}], function () {\n  return new QuestionHtmlModel(\"\");\n}, \"nonvalue\");\nQuestionFactory.Instance.registerQuestion(\"html\", name => {\n  return new QuestionHtmlModel(name);\n});\n\n/**\n * A class that describes the Radio Button Group question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-radiogroup/ (linkStyle))\n */\nclass QuestionRadiogroupModel extends QuestionCheckboxBase {\n  constructor(name) {\n    super(name);\n  }\n  getDefaultItemComponent() {\n    return \"survey-radiogroup-item\";\n  }\n  getType() {\n    return \"radiogroup\";\n  }\n  getFirstInputElementId() {\n    return this.inputId + \"_0\";\n  }\n  /**\n   * Returns the selected choice item. If no item is selected, returns `null`.\n   */\n  get selectedItem() {\n    return this.getSingleSelectedItem();\n  }\n  /**\n   * Specifies whether to display a button that clears the question value.\n   *\n   * Default value: `false`\n   */\n  get allowClear() {\n    return this.getPropertyValue(\"allowClear\");\n  }\n  set allowClear(val) {\n    this.setPropertyValue(\"allowClear\", val);\n  }\n  /**\n   * @deprecated Use the [`allowClear`](https://surveyjs.io/form-library/documentation/api-reference/radio-button-question-model#allowClear) property instead.\n   */\n  get showClearButton() {\n    return this.allowClear;\n  }\n  set showClearButton(val) {\n    this.allowClear = val;\n  }\n  get canShowClearButton() {\n    return this.allowClear && !this.isReadOnly;\n  }\n  get clearButtonCaption() {\n    return this.getLocalizationString(\"clearCaption\");\n  }\n  supportAutoAdvance() {\n    return this.isMouseDown === true && !this.isOtherSelected;\n  }\n  getConditionJson(operator = null, path = null) {\n    const json = super.getConditionJson(operator, path);\n    delete json[\"allowClear\"];\n    delete json[\"showClearButton\"];\n    return json;\n  }\n  setNewComment(newValue) {\n    this.isMouseDown = true;\n    super.setNewComment(newValue);\n    this.isMouseDown = false;\n  }\n  clickItemHandler(item) {\n    if (this.isReadOnlyAttr) return;\n    this.renderedValue = item.value;\n  }\n  getDefaultTitleActions() {\n    const actions = [];\n    if (!this.isDesignMode) {\n      const clearAction = new Action({\n        locTitleName: \"clearCaption\",\n        id: `sv-clr-btn-${this.id}`,\n        action: () => {\n          this.clearValue(true);\n        },\n        innerCss: this.cssClasses.clearButton,\n        visible: new ComputedUpdater(() => this.canShowClearButton)\n      });\n      actions.push(clearAction);\n    }\n    return actions;\n  }\n  //a11y\n  get isNewA11yStructure() {\n    return true;\n  }\n  get a11y_input_ariaRole() {\n    return \"radiogroup\";\n  }\n}\nSerializer.addClass(\"radiogroup\", [{\n  name: \"allowClear:boolean\",\n  alternativeName: \"showClearButton\"\n}, {\n  name: \"separateSpecialChoices\",\n  visible: true\n}, {\n  name: \"itemComponent\",\n  visible: false,\n  default: \"survey-radiogroup-item\"\n}], function () {\n  return new QuestionRadiogroupModel(\"\");\n}, \"checkboxbase\");\nQuestionFactory.Instance.registerQuestion(\"radiogroup\", name => {\n  var q = new QuestionRadiogroupModel(name);\n  q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\nclass RenderedRatingItem extends Base {\n  onStringChangedCallback() {\n    this.text = this.itemValue.text;\n  }\n  get value() {\n    return this.itemValue.getPropertyValue(\"value\");\n  }\n  get locText() {\n    return this.locString || this.itemValue.locText;\n  }\n  constructor(itemValue, locString = null) {\n    super();\n    this.itemValue = itemValue;\n    this.locString = locString;\n    this.locText.onStringChanged.add(this.onStringChangedCallback.bind(this));\n    this.onStringChangedCallback();\n  }\n}\n__decorate([property({\n  defaultValue: \"\"\n})], RenderedRatingItem.prototype, \"highlight\", void 0);\n__decorate([property({\n  defaultValue: \"\"\n})], RenderedRatingItem.prototype, \"text\", void 0);\n__decorate([property()], RenderedRatingItem.prototype, \"style\", void 0);\nclass RatingItemValue extends ItemValue {\n  constructor(value, text, description) {\n    super(value, text);\n    this.description = description;\n  }\n}\n/**\n * A class that describes the Rating Scale question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n */\nclass QuestionRatingModel extends Question {\n  constructor(name) {\n    super(name);\n    this.iCounter = 0;\n    this.createItemValues(\"rateValues\");\n    this.createLocalizableString(\"ratingOptionsCaption\", this, false, true);\n    this.registerFunctionOnPropertiesValueChanged([\"rateMin\", \"rateMax\", \"minRateDescription\", \"maxRateDescription\", \"rateStep\", \"displayRateDescriptionsAsExtremeItems\"], () => this.resetRenderedItems());\n    this.registerFunctionOnPropertiesValueChanged([\"rateType\"], () => {\n      this.setIconsToRateValues();\n      this.resetRenderedItems();\n      this.updateRateCount();\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"rateValues\"], () => {\n      this.setIconsToRateValues();\n      this.resetRenderedItems();\n    });\n    this.registerSychProperties([\"rateValues\"], () => {\n      this.autoGenerate = this.rateValues.length == 0;\n      this.setIconsToRateValues();\n      this.resetRenderedItems();\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"rateColorMode\", \"scaleColorMode\"], () => {\n      this.updateColors(this.survey.themeVariables);\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"displayMode\"], () => {\n      this.updateRenderAsBasedOnDisplayMode(true);\n    });\n    this.registerSychProperties([\"autoGenerate\"], () => {\n      if (!this.autoGenerate && this.rateValues.length === 0) {\n        this.setPropertyValue(\"rateValues\", this.visibleRateValues);\n      }\n      if (this.autoGenerate) {\n        this.rateValues.splice(0, this.rateValues.length);\n        this.updateRateMax();\n      }\n      this.resetRenderedItems();\n    });\n    this.createLocalizableString(\"minRateDescription\", this, true).onStringChanged.add((sender, options) => {\n      this.setPropertyValue(\"hasMinRateDescription\", !sender.isEmpty);\n    });\n    this.createLocalizableString(\"maxRateDescription\", this, true).onStringChanged.add((sender, options) => {\n      this.setPropertyValue(\"hasMaxRateDescription\", !sender.isEmpty);\n    });\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n    this.initPropertyDependencies();\n  }\n  setIconsToRateValues() {\n    if (this.rateType == \"smileys\") {\n      this.rateValues.map(item => item.icon = this.getItemSmiley(item));\n    }\n  }\n  locStrsChanged() {\n    var _a;\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    (_a = this.dropdownListModelValue) === null || _a === void 0 ? void 0 : _a.locStrsChanged();\n  }\n  updateReadOnlyText() {\n    this.readOnlyText = this.displayValue || this.placeholder;\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    if (this.jsonObj.rateMin !== undefined && this.jsonObj.rateCount !== undefined && this.jsonObj.rateMax === undefined) {\n      this.updateRateMax();\n    }\n    if (this.jsonObj.rateMax !== undefined && this.jsonObj.rateCount !== undefined && this.jsonObj.rateMin === undefined) {\n      this.updateRateMin();\n    }\n    if (this.jsonObj.autoGenerate === undefined && this.jsonObj.rateValues !== undefined) this.autoGenerate = !this.jsonObj.rateValues.length;\n    this.updateRateCount();\n    this.setIconsToRateValues();\n  }\n  useRateValues() {\n    return !!this.rateValues.length && !this.autoGenerate;\n  }\n  updateRateMax() {\n    this.rateMax = this.rateMin + this.rateStep * (this.rateCount - 1);\n  }\n  updateRateMin() {\n    this.rateMin = this.rateMax - this.rateStep * (this.rateCount - 1);\n  }\n  updateRateCount() {\n    let newCount = 0;\n    if (this.useRateValues()) {\n      newCount = this.rateValues.length;\n    } else {\n      newCount = Math.trunc((this.rateMax - this.rateMin) / (this.rateStep || 1)) + 1;\n    }\n    if (newCount > 10 && this.rateDisplayMode == \"smileys\") {\n      newCount = 10;\n    }\n    this.rateCount = newCount;\n    if (this.rateValues.length > newCount) this.rateValues.splice(newCount, this.rateValues.length - newCount);\n  }\n  initPropertyDependencies() {\n    this.registerSychProperties([\"rateCount\"], () => {\n      if (!this.useRateValues()) {\n        this.rateMax = this.rateMin + this.rateStep * (this.rateCount - 1);\n      } else {\n        if (this.rateCount < this.rateValues.length) {\n          if (this.rateCount >= 10 && this.rateDisplayMode == \"smileys\") return;\n          this.rateValues.splice(this.rateCount, this.rateValues.length - this.rateCount);\n        } else {\n          for (let i = this.rateValues.length; i < this.rateCount; i++) {\n            this.rateValues.push(new ItemValue(getLocaleString(\"choices_Item\") + (i + 1)));\n          }\n        }\n      }\n    });\n    this.registerSychProperties([\"rateMin\", \"rateMax\", \"rateStep\", \"rateValues\"], () => {\n      this.updateRateCount();\n    });\n  }\n  get showSelectedItemLocText() {\n    return !this.readOnly && !this.inputHasValue && !!this.selectedItemLocText;\n  }\n  get selectedItemLocText() {\n    var _a;\n    return !this.readOnly && ((_a = this.visibleRateValues.filter(v => v.value == this.value)[0]) === null || _a === void 0 ? void 0 : _a.locText);\n  }\n  /**\n   * A list of rate values.\n   *\n   * This property accepts an array of objects with the following structure:\n   *\n   * ```js\n   * {\n   *   \"value\": any, // A value to be saved in survey results\n   *   \"text\": String, // A display text. This property supports Markdown. When `text` is undefined, `value` is used.\n   *   \"customProperty\": any // Any property that you find useful.\n   * }\n   * ```\n   *\n   * If you add custom properties, refer to the following help topic to learn how to serialize them into JSON: [Add Custom Properties to Property Grid](https://surveyjs.io/survey-creator/documentation/property-grid#add-custom-properties-to-the-property-grid).\n   *\n   * To enable Markdown support for the `text` property, implement Markdown-to-HTML conversion in the [onTextMarkdown](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onTextMarkdown) event handler. For an example, refer to the following demo: [Convert Markdown to HTML with markdown-it](https://surveyjs.io/form-library/examples/edit-survey-questions-markdown/).\n   *\n   * If you need to specify only the `value` property, you can set the `rateValues` property to an array of numbers, for example, `[ 3, 6, 10 ]`. These values are both saved in survey results and used as display text.\n   *\n   * If you do not specify the `rateValues` property, rate values are generated automatically based upon the [`rateMin`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateMin), [`rateMax`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateMax), [`rateStep`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateStep), and [`rateCount`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateCount) property values.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   */\n  get rateValues() {\n    return this.getPropertyValue(\"rateValues\");\n  }\n  set rateValues(val) {\n    this.setPropertyValue(\"rateValues\", val);\n  }\n  /**\n   * Specifies the first rate value in the generated sequence of rate values. Applies if the [`rateValues`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateValues) array is empty.\n   *\n   * Default value: 1\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see rateMax\n   * @see rateStep\n   * @see rateCount\n   */\n  get rateMin() {\n    return this.getPropertyValue(\"rateMin\");\n  }\n  set rateMin(val) {\n    this.setPropertyValue(\"rateMin\", val);\n  }\n  /**\n   * Specifies the last rate value in the generated sequence of rate values. Applies if the [`rateValues`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateValues) array is empty.\n   *\n   * Default value: 5\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see rateMin\n   * @see rateStep\n   * @see rateCount\n   */\n  get rateMax() {\n    return this.getPropertyValue(\"rateMax\");\n  }\n  set rateMax(val) {\n    this.setPropertyValue(\"rateMax\", val);\n  }\n  /**\n   * Specifies a step with which to generate rate values. Applies if the [`rateValues`](https://surveyjs.io/form-library/documentation/api-reference/rating-scale-question-model#rateValues) array is empty.\n   *\n   * Default value: 1\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/rating-scale/ (linkStyle))\n   * @see rateMin\n   * @see rateMax\n   * @see rateCount\n   */\n  get rateStep() {\n    return this.getPropertyValue(\"rateStep\");\n  }\n  set rateStep(val) {\n    this.setPropertyValue(\"rateStep\", val);\n  }\n  updateColors(themeVariables) {\n    if (this.colorMode === \"monochrome\") return;\n    if (!DomDocumentHelper.isAvailable()) return;\n    if (QuestionRatingModel.colorsCalculated) return;\n    function getColorFromProperty(varName) {\n      const style = getComputedStyle(DomDocumentHelper.getDocumentElement());\n      return style.getPropertyValue && style.getPropertyValue(varName);\n    }\n    function getRGBColor(colorName, varName) {\n      let str = !!themeVariables && themeVariables[colorName];\n      if (!str) str = getColorFromProperty(varName);\n      if (!str) return null;\n      const canvasElement = DomDocumentHelper.createElement(\"canvas\");\n      if (!canvasElement) return null;\n      var ctx = canvasElement.getContext(\"2d\");\n      ctx.fillStyle = str;\n      if (ctx.fillStyle == \"#000000\") {\n        ctx.fillStyle = getColorFromProperty(varName);\n      }\n      const newStr = ctx.fillStyle;\n      if (newStr.startsWith(\"rgba\")) {\n        return newStr.substring(5, newStr.length - 1).split(\",\").map(c => +c.trim());\n      }\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(newStr);\n      return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16), 1] : null;\n    }\n    QuestionRatingModel.badColor = getRGBColor(\"--sjs-special-red\", \"--sd-rating-bad-color\");\n    QuestionRatingModel.normalColor = getRGBColor(\"--sjs-special-yellow\", \"--sd-rating-normal-color\");\n    QuestionRatingModel.goodColor = getRGBColor(\"--sjs-special-green\", \"--sd-rating-good-color\");\n    QuestionRatingModel.badColorLight = getRGBColor(\"--sjs-special-red-light\", \"--sd-rating-bad-color-light\");\n    QuestionRatingModel.normalColorLight = getRGBColor(\"--sjs-special-yellow-light\", \"--sd-rating-normal-color-light\");\n    QuestionRatingModel.goodColorLight = getRGBColor(\"--sjs-special-green-light\", \"--sd-rating-good-color-light\");\n    this.colorsCalculated = true;\n    this.resetRenderedItems();\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!this.useRateValues) return super.getDisplayValueCore(keysAsText, value);\n    var res = ItemValue.getTextOrHtmlByValue(this.visibleRateValues, value);\n    return !!res ? res : value;\n  }\n  get visibleRateValues() {\n    return this.renderedRateItems.map(i => i.itemValue);\n  }\n  supportEmptyValidation() {\n    return this.renderAs === \"dropdown\";\n  }\n  itemValuePropertyChanged(item, name, oldValue, newValue) {\n    if (!this.useRateValues() && newValue !== undefined) this.autoGenerate = false;\n    super.itemValuePropertyChanged(item, name, oldValue, newValue);\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    this.runRateItesmCondition(values, properties);\n  }\n  runRateItesmCondition(values, properties) {\n    var _a;\n    if (!this.useRateValues()) return;\n    let isChanged = false;\n    if ((_a = this.survey) === null || _a === void 0 ? void 0 : _a.areInvisibleElementsShowing) {\n      this.rateValues.forEach(item => {\n        isChanged = isChanged || !item.isVisible;\n        item.setIsVisible(item, true);\n      });\n    } else {\n      isChanged = ItemValue.runConditionsForItems(this.rateValues, undefined, undefined, values, properties, true);\n    }\n    if (isChanged) {\n      this.resetRenderedItems();\n      if (!this.isEmpty() && !this.isReadOnly) {\n        const item = ItemValue.getItemByValue(this.rateValues, this.value);\n        if (item && !item.isVisible) {\n          this.clearValue();\n        }\n      }\n    }\n  }\n  getRateValuesCore() {\n    if (!this.useRateValues()) return this.createRateValues();\n    const items = new Array();\n    this.rateValues.forEach(item => {\n      if (item.isVisible) {\n        items.push(item);\n      }\n    });\n    return items;\n  }\n  calculateRateValues() {\n    let rateValues = this.getRateValuesCore();\n    if (this.rateType == \"smileys\" && rateValues.length > 10) rateValues = rateValues.slice(0, 10);\n    return rateValues;\n  }\n  calculateRenderedRateItems() {\n    const rateValues = this.calculateRateValues();\n    return rateValues.map((v, i) => {\n      let renderedItem = null;\n      if (this.displayRateDescriptionsAsExtremeItems) {\n        if (i == 0) renderedItem = new RenderedRatingItem(v, this.minRateDescription && this.locMinRateDescription || v.locText);\n        if (i == rateValues.length - 1) renderedItem = new RenderedRatingItem(v, this.maxRateDescription && this.locMaxRateDescription || v.locText);\n      }\n      if (!renderedItem) renderedItem = new RenderedRatingItem(v);\n      return renderedItem;\n    });\n  }\n  calculateVisibleChoices() {\n    const rateValues = this.calculateRateValues();\n    return rateValues.map((i, idx) => this.getRatingItemValue(i, idx));\n  }\n  resetRenderedItems() {\n    if (this.autoGenerate) {\n      const rateValues = this.getRateValuesCore();\n      this.rateMax = rateValues[rateValues.length - 1].value;\n    }\n    if (Array.isArray(this.getPropertyValueWithoutDefault(\"renderedRateItems\"))) {\n      this.setArrayPropertyDirectly(\"renderedRateItems\", this.calculateRenderedRateItems());\n    }\n    if (Array.isArray(this.getPropertyValueWithoutDefault(\"visibleChoices\"))) {\n      this.setArrayPropertyDirectly(\"visibleChoices\", this.calculateVisibleChoices);\n    }\n  }\n  get renderedRateItems() {\n    return this.getPropertyValue(\"renderedRateItems\", undefined, () => this.calculateRenderedRateItems());\n  }\n  get visibleChoices() {\n    return this.getPropertyValue(\"visibleChoices\", undefined, () => this.calculateVisibleChoices());\n  }\n  createRateValues() {\n    var res = [];\n    var value = this.rateMin;\n    var step = this.rateStep;\n    while (value <= this.rateMax && res.length < settings.ratingMaximumRateValueCount) {\n      let item = new ItemValue(value);\n      item.locOwner = this;\n      item.ownerPropertyName = \"rateValues\";\n      res.push(item);\n      value = this.correctValue(value + step, step);\n    }\n    return res;\n  }\n  getRatingItemValue(item, index) {\n    if (!item) return null;\n    const value = item.value;\n    let description;\n    if (index === 0) {\n      description = this.minRateDescription && this.locMinRateDescription;\n    }\n    if (index === this.rateCount - 1) {\n      description = this.maxRateDescription && this.locMaxRateDescription;\n    }\n    let newItem = new RatingItemValue(value, item.text, description);\n    newItem.locOwner = item.locOwner;\n    newItem.ownerPropertyName = item.ownerPropertyName;\n    return newItem;\n  }\n  correctValue(value, step) {\n    if (!value) return value;\n    if (Math.round(value) == value) return value;\n    var fr = 0;\n    while (Math.round(step) != step) {\n      step *= 10;\n      fr++;\n    }\n    return parseFloat(value.toFixed(fr));\n  }\n  getType() {\n    return \"rating\";\n  }\n  getFirstInputElementId() {\n    return this.inputId + \"_0\";\n  }\n  getInputId(index) {\n    return this.inputId + \"_\" + index;\n  }\n  get questionName() {\n    return this.name + \"_\" + this.id;\n  }\n  supportAutoAdvance() {\n    return this.isMouseDown === true || this.renderAs === \"dropdown\";\n  }\n  supportOther() {\n    return false;\n  }\n  getPlainDataCalculatedValue(propName) {\n    const res = super.getPlainDataCalculatedValue(propName);\n    if (res !== undefined || !this.useRateValues || this.isEmpty()) return res;\n    const item = ItemValue.getItemByValue(this.visibleRateValues, this.value);\n    return item ? item[propName] : undefined;\n  }\n  /**\n   * Specifies a description for the minimum (first) rate value.\n   * @see rateDescriptionLocation\n   * @see displayRateDescriptionsAsExtremeItems\n   * @see rateValues\n   * @see rateMin\n   */\n  get minRateDescription() {\n    return this.getLocalizableStringText(\"minRateDescription\");\n  }\n  set minRateDescription(val) {\n    this.setLocalizableStringText(\"minRateDescription\", val);\n  }\n  get locMinRateDescription() {\n    return this.getLocalizableString(\"minRateDescription\");\n  }\n  /**\n   * Specifies a description for the maximum (last) rate value.\n   * @see rateDescriptionLocation\n   * @see displayRateDescriptionsAsExtremeItems\n   * @see rateValues\n   * @see rateMax\n   */\n  get maxRateDescription() {\n    return this.getLocalizableStringText(\"maxRateDescription\");\n  }\n  set maxRateDescription(val) {\n    this.setLocalizableStringText(\"maxRateDescription\", val);\n  }\n  get locMaxRateDescription() {\n    return this.getLocalizableString(\"maxRateDescription\");\n  }\n  get hasMinRateDescription() {\n    return this.getPropertyValue(\"hasMinRateDescription\", undefined, () => !!this.minRateDescription);\n  }\n  get hasMaxRateDescription() {\n    return this.getPropertyValue(\"hasMaxRateDescription\", undefined, () => !!this.maxRateDescription);\n  }\n  get hasMinLabel() {\n    return !this.displayRateDescriptionsAsExtremeItems && !!this.hasMinRateDescription;\n  }\n  get hasMaxLabel() {\n    return !this.displayRateDescriptionsAsExtremeItems && !!this.hasMaxRateDescription;\n  }\n  updateRenderAsBasedOnDisplayMode(isOnChange) {\n    if (this.isDesignMode) {\n      if (isOnChange || this.renderAs === \"dropdown\") {\n        this.renderAs = \"default\";\n      }\n    } else {\n      if (isOnChange || this.displayMode !== \"auto\") {\n        this.renderAs = this.displayMode === \"dropdown\" ? \"dropdown\" : \"default\";\n      }\n    }\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    if (this.renderAs === \"dropdown\" && this.displayMode === \"auto\") {\n      this.displayMode = this.renderAs;\n    } else {\n      this.updateRenderAsBasedOnDisplayMode();\n    }\n  }\n  get rateDisplayMode() {\n    return this.rateType;\n  }\n  set rateDisplayMode(val) {\n    this.rateType = val;\n  }\n  get isStar() {\n    return this.rateType == \"stars\";\n  }\n  get isSmiley() {\n    return this.rateType == \"smileys\";\n  }\n  getDefaultItemComponent() {\n    if (this.renderAs == \"dropdown\") return \"sv-rating-dropdown-item\";\n    if (this.isStar) return \"sv-rating-item-star\";\n    if (this.isSmiley) return \"sv-rating-item-smiley\";\n    return \"sv-rating-item\";\n  }\n  /**\n   * The name of a component used to render items.\n   */\n  get itemComponent() {\n    return this.getPropertyValue(\"itemComponent\", this.getDefaultItemComponent());\n  }\n  set itemComponent(value) {\n    this.setPropertyValue(\"itemComponent\", value);\n  }\n  valueToData(val) {\n    if (this.useRateValues()) {\n      var item = ItemValue.getItemByValue(this.rateValues, val);\n      return !!item ? item.value : val;\n    }\n    return !isNaN(val) ? parseFloat(val) : val;\n  }\n  setValueFromClick(value) {\n    if (this.isReadOnlyAttr) return;\n    if (this.value === (typeof this.value === \"string\" ? value : parseFloat(value))) {\n      this.clearValue(true);\n    } else {\n      this.value = value;\n    }\n    for (let i = 0; i < this.renderedRateItems.length; i++) {\n      this.renderedRateItems[i].highlight = \"none\";\n    }\n  }\n  onItemMouseIn(item) {\n    if (IsTouch) return;\n    if (this.isReadOnly || !item.itemValue.isEnabled || this.isDesignMode) return;\n    let high = true;\n    let selected = this.value != null;\n    if (this.rateType !== \"stars\") {\n      item.highlight = \"highlighted\";\n      return;\n    }\n    for (let i = 0; i < this.renderedRateItems.length; i++) {\n      this.renderedRateItems[i].highlight = high && !selected && \"highlighted\" || !high && selected && \"unhighlighted\" || \"none\";\n      if (this.renderedRateItems[i] == item) high = false;\n      if (this.renderedRateItems[i].itemValue.value == this.value) selected = false;\n    }\n  }\n  onItemMouseOut(item) {\n    if (IsTouch) return;\n    this.renderedRateItems.forEach(item => item.highlight = \"none\");\n  }\n  get itemSmallMode() {\n    return !this.isSingleInputActive && this.inMatrixMode && settings.matrix.rateSize == \"small\";\n  }\n  get ratingRootCss() {\n    const hasLabel = this.hasMaxLabel || this.hasMinLabel;\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.rootWrappable, this.displayMode == \"buttons\" || !!this.survey && this.survey.isDesignMode || this.displayMode == \"auto\" && !this.supportResponsiveness()).append(this.cssClasses.rootLabelsTop, hasLabel && this.rateDescriptionLocation == \"top\").append(this.cssClasses.rootLabelsBottom, hasLabel && this.rateDescriptionLocation == \"bottom\").append(this.cssClasses.rootLabelsDiagonal, hasLabel && this.rateDescriptionLocation == \"topBottom\").append(this.cssClasses.itemSmall, this.itemSmallMode && this.rateType != \"labels\").toString();\n  }\n  get itemStarIcon() {\n    return this.itemSmallMode ? \"icon-rating-star-small\" : \"icon-rating-star\";\n  }\n  get itemStarIconAlt() {\n    return this.itemStarIcon + \"-2\";\n  }\n  getItemSmiley(item) {\n    const icons = [\"terrible\", \"very-poor\", \"poor\", \"not-good\", \"average\", \"normal\", \"good\", \"very-good\", \"excellent\", \"perfect\"];\n    const priority = [\"very-good\", \"not-good\", \"normal\", \"good\", \"average\", \"excellent\", \"poor\", \"perfect\", \"very-poor\", \"terrible\"];\n    const count = this.useRateValues() ? this.rateValues.length : this.rateMax - this.rateMin + 1;\n    const selectedPriority = priority.slice(0, count);\n    const selectedIcons = icons.filter(i => selectedPriority.indexOf(i) != -1);\n    if (!this.useRateValues()) {\n      return selectedIcons[item.value - this.rateMin];\n    } else {\n      return selectedIcons[this.rateValues.indexOf(item)];\n    }\n  }\n  getItemSmileyIconName(item) {\n    return \"icon-\" + this.getItemSmiley(item);\n  }\n  getItemClassByText(item, text) {\n    return this.getItemClass(item);\n  }\n  getRenderedItemColor(index, light) {\n    let startColor = light ? QuestionRatingModel.badColorLight : QuestionRatingModel.badColor;\n    let endColor = light ? QuestionRatingModel.goodColorLight : QuestionRatingModel.goodColor;\n    const normalIndex = (this.rateCount - 1) / 2.0;\n    const middleColor = light ? QuestionRatingModel.normalColorLight : QuestionRatingModel.normalColor;\n    if (index < normalIndex) {\n      endColor = middleColor;\n    } else {\n      startColor = middleColor;\n      index -= normalIndex;\n    }\n    if (!startColor || !endColor) return null;\n    const curColor = [0, 0, 0, 0];\n    for (let i = 0; i < 4; i++) {\n      curColor[i] = startColor[i] + (endColor[i] - startColor[i]) * index / normalIndex;\n      if (i < 3) curColor[i] = Math.trunc(curColor[i]);\n    }\n    return \"rgba(\" + curColor[0] + \", \" + curColor[1] + \", \" + curColor[2] + \", \" + curColor[3] + \")\";\n  }\n  getItemStyle(item, highlight = \"none\") {\n    if (this.scaleColorMode === \"monochrome\" && this.rateColorMode == \"default\" || this.isPreviewStyle || this.isReadOnlyStyle) return {};\n    const index = this.visibleRateValues.indexOf(item);\n    const color = this.getRenderedItemColor(index, false);\n    const colorLight = highlight == \"highlighted\" && this.scaleColorMode === \"colored\" && this.getRenderedItemColor(index, true);\n    return colorLight ? {\n      \"--sd-rating-item-color\": color,\n      \"--sd-rating-item-color-light\": colorLight\n    } : {\n      \"--sd-rating-item-color\": color\n    };\n  }\n  getItemClass(item, highlight = \"none\") {\n    let isSelected = this.value == item.value;\n    if (this.isStar) {\n      if (!this.useRateValues()) {\n        isSelected = this.value >= item.value;\n      } else {\n        isSelected = this.rateValues.indexOf(this.rateValues.filter(i => i.value == this.value)[0]) >= this.rateValues.indexOf(item);\n      }\n    }\n    const isDisabled = this.isReadOnly || !item.isEnabled;\n    const allowHover = !isDisabled && this.value != item.value && !(!!this.survey && this.survey.isDesignMode);\n    const renderedItem = this.renderedRateItems.filter(i => i.itemValue == item)[0];\n    const isHighlighted = this.isStar && (renderedItem === null || renderedItem === void 0 ? void 0 : renderedItem.highlight) == \"highlighted\";\n    const isUnhighlighted = this.isStar && (renderedItem === null || renderedItem === void 0 ? void 0 : renderedItem.highlight) == \"unhighlighted\";\n    let itemClass = this.cssClasses.item;\n    let itemSelectedClass = this.cssClasses.selected;\n    let itemDisabledClass = this.cssClasses.itemDisabled;\n    let itemReadOnlyClass = this.cssClasses.itemReadOnly;\n    let itemPreviewClass = this.cssClasses.itemPreview;\n    let itemHoverClass = this.cssClasses.itemHover;\n    let itemitemOnErrorClass = this.cssClasses.itemOnError;\n    let itemHighlightedClass = null;\n    let itemUnhighlightedClass = null;\n    let itemScaleColoredClass = null;\n    let itemRateColoredClass = null;\n    let itemSmallClass = null;\n    if (this.isStar) {\n      itemClass = this.cssClasses.itemStar;\n      itemSelectedClass = this.cssClasses.itemStarSelected;\n      itemDisabledClass = this.cssClasses.itemStarDisabled;\n      itemReadOnlyClass = this.cssClasses.itemStarReadOnly;\n      itemPreviewClass = this.cssClasses.itemStarPreview;\n      itemHoverClass = this.cssClasses.itemStarHover;\n      itemitemOnErrorClass = this.cssClasses.itemStarOnError;\n      itemHighlightedClass = this.cssClasses.itemStarHighlighted;\n      itemUnhighlightedClass = this.cssClasses.itemStarUnhighlighted;\n      itemSmallClass = this.cssClasses.itemStarSmall;\n    }\n    if (this.isSmiley) {\n      itemClass = this.cssClasses.itemSmiley;\n      itemSelectedClass = this.cssClasses.itemSmileySelected;\n      itemDisabledClass = this.cssClasses.itemSmileyDisabled;\n      itemReadOnlyClass = this.cssClasses.itemSmileyReadOnly;\n      itemPreviewClass = this.cssClasses.itemSmileyPreview;\n      itemHoverClass = this.cssClasses.itemSmileyHover;\n      itemitemOnErrorClass = this.cssClasses.itemSmileyOnError;\n      itemHighlightedClass = this.cssClasses.itemSmileyHighlighted;\n      itemScaleColoredClass = this.cssClasses.itemSmileyScaleColored;\n      itemRateColoredClass = this.cssClasses.itemSmileyRateColored;\n      itemSmallClass = this.cssClasses.itemSmileySmall;\n    }\n    const hasFixedSize = !this.isStar && !this.isSmiley && (!this.displayRateDescriptionsAsExtremeItems || this.useRateValues() && item != this.rateValues[0] && item != this.rateValues[this.rateValues.length - 1] || !this.useRateValues() && item.value != this.rateMin && item.value != this.rateMax) && item.locText.calculatedText.length <= 2 && Number.isInteger(Number(item.locText.calculatedText));\n    const options = {\n      item: item,\n      css: \"\"\n    };\n    options.css = new CssClassBuilder().append(itemClass).append(itemSelectedClass, isSelected).append(itemDisabledClass, this.isDisabledStyle).append(itemReadOnlyClass, this.isReadOnlyStyle).append(itemPreviewClass, this.isPreviewStyle).append(itemHoverClass, allowHover).append(itemHighlightedClass, isHighlighted).append(itemScaleColoredClass, this.scaleColorMode == \"colored\").append(itemRateColoredClass, this.rateColorMode == \"scale\" && isSelected).append(itemUnhighlightedClass, isUnhighlighted).append(itemitemOnErrorClass, this.hasCssError()).append(itemSmallClass, this.itemSmallMode).append(this.cssClasses.itemFixedSize, hasFixedSize).toString();\n    if (!!this.survey) {\n      this.survey.updateChoiceItemCss(this, options);\n    }\n    return options.css;\n  }\n  //methods for mobile view\n  getControlClass() {\n    this.isEmpty();\n    return new CssClassBuilder().append(this.cssClasses.control).append(this.cssClasses.controlEmpty, this.isEmpty()).append(this.cssClasses.onError, this.hasCssError()).append(this.cssClasses.controlDisabled, this.isDisabledStyle).append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle).append(this.cssClasses.controlPreview, this.isPreviewStyle).toString();\n  }\n  get placeholder() {\n    return this.getLocalizableStringText(\"ratingOptionsCaption\");\n  }\n  set placeholder(val) {\n    this.setLocalizableStringText(\"ratingOptionsCaption\", val);\n  }\n  get locPlaceholder() {\n    return this.getLocalizableString(\"ratingOptionsCaption\");\n  }\n  get allowClear() {\n    return true;\n  }\n  get searchEnabled() {\n    return false;\n  }\n  get renderedValue() {\n    return this.value;\n  }\n  set renderedValue(val) {\n    this.value = val;\n  }\n  isItemSelected(item) {\n    return item.value == this.value;\n  }\n  get readOnlyText() {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  set readOnlyText(val) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText() {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n  get a11yInputAriaRole() {\n    return this.renderAs === \"dropdown\" ? \"combobox\" : null;\n  }\n  needResponsiveWidth() {\n    this.getPropertyValue(\"rateValues\");\n    const rateStep = this.getPropertyValue(\"rateStep\");\n    const rateMax = this.getPropertyValue(\"rateMax\");\n    const rateMin = this.getPropertyValue(\"rateMin\");\n    return this.displayMode != \"dropdown\" && !!(this.hasMinRateDescription || this.hasMaxRateDescription || rateStep && (rateMax - rateMin) / rateStep > 9);\n  }\n  // TODO: return responsiveness after design improvement\n  supportResponsiveness() {\n    return !this.inMatrixMode;\n  }\n  onBeforeSetCompactRenderer() {\n    if (!this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownListModel(this);\n    }\n  }\n  getCompactRenderAs() {\n    return this.displayMode == \"buttons\" ? \"default\" : \"dropdown\";\n  }\n  getDesktopRenderAs() {\n    return this.displayMode == \"dropdown\" ? \"dropdown\" : \"default\";\n  }\n  set dropdownListModel(val) {\n    this.dropdownListModelValue = val;\n    this.updateElementCss();\n  }\n  get dropdownListModel() {\n    if (this.renderAs === \"dropdown\") {\n      this.onBeforeSetCompactRenderer();\n    }\n    return this.dropdownListModelValue;\n  }\n  onBlurCore(event) {\n    var _a;\n    (_a = this.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onBlur(event);\n    super.onBlurCore(event);\n  }\n  updateCssClasses(res, css) {\n    super.updateCssClasses(res, css);\n    updateListCssValues(res, css);\n  }\n  calcCssClasses(css) {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModelValue.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n  themeChanged(theme) {\n    this.colorsCalculated = false;\n    this.updateColors(theme.cssVariables);\n  }\n  setSurveyImpl(value, isLight) {\n    super.setSurveyImpl(value, isLight);\n    if (!this.survey) return;\n    this.updateColors(this.survey.themeVariables);\n    this.updateRenderAsBasedOnDisplayMode();\n  }\n  dispose() {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n}\nQuestionRatingModel.colorsCalculated = false;\n__decorate([property({\n  defaultValue: false\n})], QuestionRatingModel.prototype, \"inputHasValue\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"autoGenerate\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"rateCount\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"displayRateDescriptionsAsExtremeItems\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"displayMode\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"rateDescriptionLocation\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"rateType\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"scaleColorMode\", void 0);\n__decorate([property()], QuestionRatingModel.prototype, \"rateColorMode\", void 0);\nSerializer.addClass(\"rating\", [{\n  name: \"showCommentArea:switch\",\n  layout: \"row\",\n  visible: true,\n  category: \"general\"\n}, {\n  name: \"rateType\",\n  alternativeName: \"rateDisplayMode\",\n  default: \"labels\",\n  category: \"rateValues\",\n  choices: [\"labels\", \"stars\", \"smileys\"],\n  visibleIndex: 1\n}, {\n  name: \"scaleColorMode\",\n  category: \"rateValues\",\n  default: \"monochrome\",\n  choices: [\"monochrome\", \"colored\"],\n  visibleIf: function (obj) {\n    return obj.rateDisplayMode == \"smileys\";\n  },\n  visibleIndex: 2\n}, {\n  name: \"rateColorMode\",\n  category: \"rateValues\",\n  default: \"scale\",\n  choices: [\"default\", \"scale\"],\n  visibleIf: function (obj) {\n    return obj.rateDisplayMode == \"smileys\" && obj.scaleColorMode == \"monochrome\";\n  },\n  visibleIndex: 3\n}, {\n  name: \"autoGenerate\",\n  category: \"rateValues\",\n  default: true,\n  choices: [true, false],\n  visibleIndex: 5\n}, {\n  name: \"rateCount:number\",\n  default: 5,\n  category: \"rateValues\",\n  visibleIndex: 4,\n  onSettingValue: (obj, val) => {\n    if (val < 2) return 2;\n    if (val > settings.ratingMaximumRateValueCount && val > obj.rateValues.length) return settings.ratingMaximumRateValueCount;\n    if (val > 10 && obj.rateDisplayMode == \"smileys\") return 10;\n    return val;\n  }\n}, {\n  name: \"rateValues:itemvalue[]\",\n  baseValue: function () {\n    return getLocaleString(\"choices_Item\");\n  },\n  category: \"rateValues\",\n  visibleIf: function (obj) {\n    return !obj.autoGenerate;\n  },\n  visibleIndex: 6\n}, {\n  name: \"rateMin:number\",\n  default: 1,\n  onSettingValue: (obj, val) => {\n    return val > obj.rateMax - obj.rateStep ? obj.rateMax - obj.rateStep : val;\n  },\n  visibleIf: function (obj) {\n    return !!obj.autoGenerate;\n  },\n  visibleIndex: 7\n}, {\n  name: \"rateMax:number\",\n  default: 5,\n  onSettingValue: (obj, val) => {\n    return val < obj.rateMin + obj.rateStep ? obj.rateMin + obj.rateStep : val;\n  },\n  visibleIf: function (obj) {\n    return !!obj.autoGenerate;\n  },\n  visibleIndex: 8\n}, {\n  name: \"rateStep:number\",\n  default: 1,\n  minValue: 0.1,\n  onSettingValue: (obj, val) => {\n    if (val <= 0) val = 1;\n    if (val > obj.rateMax - obj.rateMin) val = obj.rateMax - obj.rateMin;\n    return val;\n  },\n  visibleIf: function (obj) {\n    return !!obj.autoGenerate;\n  },\n  visibleIndex: 9\n}, {\n  name: \"minRateDescription\",\n  alternativeName: \"mininumRateDescription\",\n  serializationProperty: \"locMinRateDescription\",\n  visibleIndex: 18\n}, {\n  name: \"maxRateDescription\",\n  alternativeName: \"maximumRateDescription\",\n  serializationProperty: \"locMaxRateDescription\",\n  visibleIndex: 19\n}, {\n  name: \"displayRateDescriptionsAsExtremeItems:boolean\",\n  default: false,\n  visibleIndex: 21,\n  visibleIf: function (obj) {\n    return obj.rateType == \"labels\";\n  }\n}, {\n  name: \"rateDescriptionLocation\",\n  default: \"leftRight\",\n  choices: [\"leftRight\", \"top\", \"bottom\", \"topBottom\"],\n  visibleIndex: 20\n}, {\n  name: \"displayMode\",\n  default: \"auto\",\n  choices: [\"auto\", \"buttons\", \"dropdown\"],\n  visibleIndex: 0\n}, {\n  name: \"itemComponent\",\n  visible: false,\n  defaultFunc: obj => {\n    if (!obj) return \"sv-rating-item\";\n    if (!!obj.getOriginalObj) obj = obj.getOriginalObj();\n    return obj.getDefaultItemComponent();\n  }\n}], function () {\n  return new QuestionRatingModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"rating\", name => {\n  return new QuestionRatingModel(name);\n});\nclass SliderLabelItemValue extends ItemValue {\n  getBaseType() {\n    return \"sliderlabel\";\n  }\n  onGetText(text) {\n    if (!!text || !this.locOwner) return super.onGetText(text);\n    return this.locOwner.getTextByItem(this);\n  }\n  getCorrectValue(value) {\n    if (typeof value === \"number\") return value;\n    if (Helpers.isNumber(value)) {\n      return parseFloat(value.toString());\n    }\n    return this.value || 0;\n  }\n}\n/**\n * A class that describes the Slider question type.\n *\n * [View Slider Demo](https://surveyjs.io/form-library/examples/single-value-slider-input/ (linkStyle))\n *\n * [View Range Slider Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n */\nclass QuestionSliderModel extends Question {\n  /**\n   * Sets the interval between selectable scale values.\n   *\n   * Default value: 1\n   *\n   * [View Slider Demo](https://surveyjs.io/form-library/examples/single-value-slider-input/ (linkStyle))\n   *\n   * [View Range Slider Demo](https://surveyjs.io/form-library/examples/dual-range-slider-input/ (linkStyle))\n   */\n  get step() {\n    // if (this.segmentCount) {\n    //   return (this.renderedMax - this.renderedMin) / this.segmentCount;\n    // }\n    return this.getPropertyValue(\"step\");\n  }\n  set step(val) {\n    this.setPropertyValue(\"step\", val);\n  }\n  /**\n   * Defines how many auto-generated labels should be displayed along the slider scale. Ignored if the [`customLabels`](#customLabels) property is set.\n   *\n   * Default value: -1 (the number of labels is calculated automatically based on the [`min`](#min) and [`max`](#max) values)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-slider-scale-labels/ (linkStyle))\n   * @see showLabels\n   * @see labelFormat\n   */\n  get labelCount() {\n    if (this.customLabels.length > 0) return this.customLabels.length;\n    if (this.tickSize) {\n      return Math.round(100 / this.tickSize) + 2;\n    }\n    return this.getPropertyValue(\"labelCount\");\n  }\n  set labelCount(val) {\n    this.setPropertyValue(\"labelCount\", val);\n  }\n  /**\n   * Specifies custom scale labels. Overrides auto-generated labels if defined.\n   *\n   * This property accepts an array of numbers or objects with the following fields:\n   *\n   * - `value`: `number`\\\n   * The scale value where the label should appear.\n   *\n   * - `text`: `string`\\\n   * The label text to display.\n   *\n   * Numbers and objects can be combined in the same array. For instance, the following slider configuration specifies textual labels for extreme scale points and adds numeric labels between them.\n   *\n   * ```js\n   * const surveyJson = {\n   *   \"elements\": [\n   *     {\n   *       \"type\": \"slider\",\n   *       // ...\n   *       \"customLabels\": [\n   *         { value: 0, text: \"Lowest\" },\n   *         20,\n   *         40\n   *         60\n   *         80,\n   *         { value: 100, text: \"Highest\" },\n   *       ]\n   *     }\n   *   ]\n   * };\n   * ```\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/customize-slider-scale-labels/ (linkStyle))\n   * @see showLabels\n   * @see labelCount\n   * @see labelFormat\n   */\n  get customLabels() {\n    return this.getPropertyValue(\"customLabels\");\n  }\n  set customLabels(val) {\n    this.setPropertyValue(\"customLabels\", val);\n  }\n  /**\n   * Allows the start and end thumbs to cross over each other. If `false`, the thumbs cannot be swapped. Applies only if [`sliderType`](#sliderType) is `\"range\"`.\n   *\n   * Default value: `false` if [`minRangeLength`](#minRangeLength) is defined, `true` otherwise.\n   */\n  get allowSwap() {\n    if (this.minRangeLength) return false;\n    return this.getPropertyValue(\"allowSwap\", true);\n  }\n  set allowSwap(val) {\n    this.setPropertyValue(\"allowSwap\", val);\n  }\n  constructor(name) {\n    super(name);\n    this.getThumbContainerCss = thumbNumber => {\n      return new CssClassBuilder().append(this.cssClasses.thumbContainer).append(this.cssClasses.thumbContainerIndeterminateMode, !!this.isIndeterminate).append(this.cssClasses.thumbContainerFocusedMode, thumbNumber === this.focusedThumb).toString();\n    };\n    this.getLabelCss = locText => {\n      return new CssClassBuilder().append(this.cssClasses.label).append(this.cssClasses.labelLongMod, locText.renderedHtml.length > 10).toString();\n    };\n    this.isIndeterminate = false;\n    this.getTrackPercentLeft = () => {\n      const {\n        renderedValue,\n        sliderType,\n        renderedMin: min\n      } = this;\n      let result;\n      if (sliderType === \"single\") {\n        if (renderedValue[0] > 0) {\n          result = this.getPercent(Math.max(0, min));\n        } else {\n          result = this.getPercent(renderedValue[0]);\n        }\n      } else {\n        result = this.getPercent(Math.min(...renderedValue));\n      }\n      return result;\n    };\n    this.getTrackPercentRight = () => {\n      const {\n        renderedValue,\n        sliderType,\n        renderedMax: max\n      } = this;\n      let result;\n      if (sliderType === \"single\") {\n        if (renderedValue[0] > 0) {\n          result = this.getPercent(renderedValue[0]);\n        } else {\n          result = this.getPercent(Math.min(0, max));\n        }\n      } else {\n        result = this.getPercent(Math.max(...renderedValue));\n      }\n      return 100 - result;\n    };\n    this.getPercent = value => {\n      const {\n        renderedMax: max,\n        renderedMin: min\n      } = this;\n      const fullRange = max - min;\n      return Math.abs(value - min) / fullRange * 100;\n    };\n    this.ensureMaxRangeBorders = (newValue, inputNumber) => {\n      const {\n        renderedMaxRangeLength,\n        renderedValue\n      } = this;\n      const value = renderedValue.slice();\n      const oldValue = value[inputNumber];\n      let isOutOfRange = false;\n      value[inputNumber] = newValue;\n      for (let i = 0; i < value.length - 1; i++) {\n        if (Math.abs(value[i] - value[i + 1]) > renderedMaxRangeLength) {\n          isOutOfRange = true;\n          break;\n        }\n      }\n      return isOutOfRange ? oldValue : newValue;\n    };\n    this.ensureMinRangeBorders = (newValue, inputNumber) => {\n      const {\n        renderedMinRangeLength,\n        renderedValue,\n        allowSwap,\n        renderedMin: min,\n        renderedMax: max\n      } = this;\n      const value = renderedValue.slice();\n      const oldValue = value[inputNumber];\n      let isOutOfRange = false;\n      value[inputNumber] = newValue;\n      for (let i = 0; i < value.length - 1; i++) {\n        if (Math.abs(value[i] - value[i + 1]) < renderedMinRangeLength) {\n          isOutOfRange = true;\n          break;\n        }\n      }\n      if (!allowSwap) {\n        const prevValue = inputNumber > 0 ? value[inputNumber - 1] : min;\n        const nextValue = inputNumber < value.length - 1 ? value[inputNumber + 1] : max;\n        if (newValue <= prevValue || newValue >= nextValue) {\n          isOutOfRange = true;\n        }\n      }\n      return isOutOfRange ? oldValue : newValue;\n    };\n    this.getClosestToStepValue = value => {\n      const {\n        step,\n        renderedMin: min,\n        renderedMax: max\n      } = this;\n      const maxByStep = min + Math.trunc((max - min) / step) * step;\n      let result = min + Math.round((value - min) / step) * step;\n      result = Math.min(maxByStep, result);\n      return result;\n    };\n    this.handleRangeOnChange = event => {\n      if (!this.isRangeMoving) return;\n      const {\n        renderedMax: max,\n        renderedMin: min,\n        renderedValue,\n        ensureMaxRangeBorders,\n        ensureMinRangeBorders\n      } = this;\n      const inputNode = event.target;\n      const diff = this.oldInputValue - +inputNode.value;\n      this.oldInputValue = +inputNode.value;\n      let borderArrived = false;\n      for (let i = 0; i < renderedValue.length; i++) {\n        let newVal = renderedValue[i] - diff;\n        newVal = ensureMaxRangeBorders(newVal, i);\n        newVal = ensureMinRangeBorders(newVal, i);\n        if (newVal <= max && newVal >= min) {\n          renderedValue.splice(i, 1, newVal);\n        } else {\n          borderArrived = true;\n        }\n      }\n      if (borderArrived) {\n        borderArrived = false;\n        return;\n      }\n    };\n    this.prepareInputRangeForMoving = (event, rootNode) => {\n      const {\n        renderedMax: max,\n        renderedMin: min\n      } = this;\n      this.isRangeMoving = true;\n      this.animatedThumb = false;\n      //const inputNode = this.rangeInputRef.current;\n      const inputNode = event.target;\n      inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-width\", \"20px\");\n      inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-left\", \"initial\");\n      inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-position\", \"static\");\n      const leftPercent = (event.clientX - rootNode.getBoundingClientRect().x) / rootNode.getBoundingClientRect().width * 100;\n      const newInputValue = leftPercent / 100 * (max - min) + min;\n      inputNode.value = \"\" + newInputValue;\n      this.oldInputValue = newInputValue;\n    };\n    this.handleRangePointerDown = (event, rootNode) => {\n      const {\n        dragOrClickHelper,\n        allowDragRange,\n        step,\n        prepareInputRangeForMoving\n      } = this;\n      const inputNode = event.target;\n      if (step) {\n        inputNode.step = \"0.1\";\n      }\n      if (allowDragRange) {\n        dragOrClickHelper.dragHandler = () => {\n          prepareInputRangeForMoving.call(this, event, rootNode);\n        };\n        dragOrClickHelper.onPointerDown(event);\n      }\n    };\n    this.handleRangePointerUp = (event, rootNode) => {\n      const {\n        step,\n        renderedValue,\n        getClosestToStepValue\n      } = this;\n      const inputNode = event.target;\n      if (this.isRangeMoving) {\n        this.refreshInputRange();\n        this.isRangeMoving = false;\n        if (step) {\n          // const input = this.rangeInputRef.current as HTMLInputElement; //TODO\n          inputNode.step = \"\" + step;\n          for (let i = 0; i < renderedValue.length; i++) {\n            renderedValue[i] = getClosestToStepValue(renderedValue[i]);\n          }\n          this.setSliderValue(renderedValue);\n        }\n        return;\n      }\n      // const inputNode = this.rangeInputRef.current;\n      inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-width\", \"0px\");\n      inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-left\", \"initial\");\n      inputNode.style.setProperty(\"--sjs-range-slider-range-input-thumb-position\", \"static\");\n      this.setValueByClickOnPath(event, rootNode);\n    };\n    this.refreshInputRange = inputRef => {\n      const {\n        allowDragRange,\n        renderedValue,\n        getPercent\n      } = this;\n      if (!allowDragRange) return;\n      //if (!this.rangeInputRef.current) return;\n      const input = inputRef || DomDocumentHelper.getDocument().getElementById(\"sjs-slider-input-range-input\"); //TODO\n      if (!input) return;\n      const percentLastValue = getPercent(renderedValue[renderedValue.length - 1]);\n      const percentFirstValue = getPercent(renderedValue[0]);\n      let percent = percentLastValue - percentFirstValue;\n      //const inputNode = this.rangeInputRef.current;\n      input.style.setProperty(\"--sjs-range-slider-range-input-thumb-width\", `calc(${percent}% - 20px - 20px)`); //TODO 20px is thumb width remove hardcode\n      input.style.setProperty(\"--sjs-range-slider-range-input-thumb-left\", `calc(${percentFirstValue}% + 20px)`);\n      input.style.setProperty(\"--sjs-range-slider-range-input-thumb-position\", \"absolute\");\n    };\n    this.setSliderValue = newValue => {\n      if (!this.isReadOnly && !this.isDisabledAttr && !this.isPreviewStyle && !this.isDisabledStyle) {\n        let result;\n        if (this.sliderType === \"single\") {\n          result = Array.isArray(newValue) ? newValue[0] : newValue;\n        } else if (this.sliderType === \"range\") {\n          result = newValue;\n        }\n        this.value = result;\n        this.resetPropertyValue(\"renderedValue\");\n      }\n    };\n    this.setValueByClickOnPath = (event, rootNode) => {\n      const {\n        renderedMax: max,\n        renderedMin: min\n      } = this;\n      let isRtl = DomDocumentHelper.getComputedStyle(DomDocumentHelper.getBody()).direction == \"rtl\";\n      let percent = (event.clientX - rootNode.getBoundingClientRect().x) / rootNode.getBoundingClientRect().width * 100;\n      if (isRtl) percent = 100 - percent;\n      let newValue = percent / 100 * (max - min) + min;\n      this.setValueByClick(newValue, event.target);\n    };\n    this.setValueByClick = (newValue, inputNode) => {\n      const {\n        step,\n        getClosestToStepValue,\n        ensureMaxRangeBorders,\n        ensureMinRangeBorders,\n        renderedValue,\n        refreshInputRange,\n        setSliderValue\n      } = this;\n      this.animatedThumb = true;\n      const value = renderedValue.slice();\n      let thumbIndex = 0;\n      for (let i = 0; i < value.length; i++) {\n        const currentMinValueDiff = Math.abs(value[thumbIndex] - newValue);\n        const newMinValueDiff = Math.abs(value[i] - newValue);\n        if (newMinValueDiff < currentMinValueDiff) {\n          thumbIndex = i;\n        }\n      }\n      if (value.length > 1) {\n        newValue = ensureMaxRangeBorders(newValue, thumbIndex);\n        newValue = ensureMinRangeBorders(newValue, thumbIndex);\n      }\n      value[thumbIndex] = newValue;\n      if (step) {\n        const currentValue = renderedValue.slice();\n        for (let i = 0; i < value.length; i++) {\n          const currentValueStep = currentValue[i] / step;\n          const newValueStep = value[i] / step;\n          const newValueRound = Math.round(newValueStep);\n          if (newValueRound === currentValueStep) {\n            if (newValueStep > currentValueStep) {\n              value[i] = value[i] + step;\n            } else if (newValueStep < currentValueStep) {\n              value[i] = value[i] - step;\n            }\n          }\n          value[i] = getClosestToStepValue(value[i]);\n        }\n      }\n      setSliderValue(value);\n      //refreshInputRange(this.rangeInputRef.current);\n      refreshInputRange();\n    };\n    this.handleOnChange = (event, inputNumber) => {\n      if (this.oldValue === null) return; // Firefox raise one more OnChange after PointerUp and break the value\n      const {\n        allowSwap,\n        ensureMaxRangeBorders,\n        ensureMinRangeBorders,\n        renderedValue\n      } = this;\n      const inputNode = event.target;\n      let newValue = +inputNode.value;\n      if (renderedValue.length > 1) {\n        newValue = ensureMaxRangeBorders(newValue, inputNumber);\n        if (!allowSwap) {\n          newValue = ensureMinRangeBorders(newValue, inputNumber);\n        }\n      }\n      renderedValue.splice(inputNumber, 1, newValue);\n    };\n    this.handlePointerDown = e => {\n      const {\n        step,\n        renderedValue\n      } = this;\n      if (step) {\n        for (let i = 0; i < renderedValue.length; i++) {\n          const input = DomDocumentHelper.getDocument().getElementById(`sjs-slider-input-${i}`); //TODO\n          input.step = 0.1;\n        }\n      }\n      this.oldValue = this.renderedValue;\n      this.animatedThumb = false;\n    };\n    this.handlePointerUp = event => {\n      event.stopPropagation();\n      const {\n        step,\n        focusedThumb,\n        renderedValue,\n        allowSwap,\n        renderedMinRangeLength,\n        getClosestToStepValue,\n        refreshInputRange,\n        setSliderValue\n      } = this;\n      const focusedThumbValue = renderedValue[focusedThumb];\n      event.target;\n      renderedValue.sort((a, b) => a - b);\n      this.focusedThumb = renderedValue.indexOf(focusedThumbValue);\n      if (step) {\n        for (let i = 0; i < renderedValue.length; i++) {\n          renderedValue[i] = getClosestToStepValue(renderedValue[i]);\n          const input = DomDocumentHelper.getDocument().getElementById(`sjs-slider-input-${i}`); //TODO\n          input.step = step;\n        }\n      }\n      if (allowSwap) {\n        for (let i = 0; i < renderedValue.length - 1; i++) {\n          if (Math.abs(renderedValue[i] - renderedValue[i + 1]) < renderedMinRangeLength) {\n            this.setPropertyValue(\"renderedValue\", this.oldValue);\n            break;\n          }\n        }\n      }\n      setSliderValue(renderedValue);\n      refreshInputRange();\n      this.oldValue = null;\n    };\n    this.handleKeyDown = event => {\n      this.oldValue = this.renderedValue;\n      this.animatedThumb = true;\n    };\n    this.handleKeyUp = event => {\n      this.oldValue = null;\n      this.setSliderValue(this.renderedValue);\n    };\n    this.handleOnFocus = inputNumber => {\n      this.focusedThumb = inputNumber;\n    };\n    this.handleOnBlur = () => {\n      this.focusedThumb = null;\n    };\n    this.handleLabelPointerUp = (event, newValue) => {\n      const inputNode = event.target;\n      if (isNaN(newValue)) return;\n      this.setValueByClick(newValue, inputNode);\n    };\n    this.getTooltipValue = tooltipNumber => {\n      const {\n        step,\n        getClosestToStepValue,\n        renderedValue,\n        tooltipFormat,\n        formatNumber\n      } = this;\n      let value = renderedValue[tooltipNumber];\n      value = step ? getClosestToStepValue(value) : value;\n      value = formatNumber(value);\n      return tooltipFormat.replace(\"{0}\", \"\" + value);\n    };\n    this.getLabelText = labelNumber => {\n      const {\n        step,\n        renderedMax: max,\n        renderedMin: min,\n        renderedLabelCount: labelCount,\n        formatNumber\n      } = this;\n      const fullRange = max - min;\n      const isDecimal = step % 1 != 0;\n      const count = labelCount - 1;\n      let labelStep = count === 0 ? 0 : labelNumber * fullRange / count;\n      return isDecimal ? \"\" + formatNumber(labelStep + min) : \"\" + Math.round(labelStep + min);\n    };\n    this.getLabelPosition = labelNumber => {\n      const {\n        max,\n        min,\n        renderedLabelCount: labelCount,\n        customLabels\n      } = this;\n      const count = labelCount - 1;\n      if (count === 0) return 0;\n      const fullRange = max - min;\n      const labelStep = min + labelNumber * fullRange / count;\n      return labelStep;\n    };\n    this.isRangeMoving = false;\n    this.oldInputValue = null;\n    this.oldValue = null;\n    this.calcRenderedValue = () => {\n      const {\n        renderedMax: max,\n        renderedMin: min,\n        renderedMaxRangeLength,\n        getClosestToStepValue,\n        sliderType\n      } = this;\n      let result;\n      if (sliderType === \"single\") {\n        result = this.ensureValueRespectMinMax(this.value);\n        if (typeof result === \"undefined\" || result === null || result.length === 0) {\n          this.isIndeterminate = true;\n          return this.isNegativeScale ? [Math.min(max, 0)] : [min];\n        } else {\n          return Array.isArray(result) ? [result[0]] : [result];\n        }\n      }\n      result = Array.isArray(this.value) ? this.value.slice() : [];\n      if (result.length === 0) {\n        const fullRange = max - min;\n        this.isIndeterminate = true;\n        if (Math.abs(fullRange) > renderedMaxRangeLength) {\n          const range = (fullRange - renderedMaxRangeLength) / 2;\n          return [getClosestToStepValue(min + range), getClosestToStepValue(max - range)];\n        }\n        return [min, max]; // TODO support several values 3 and more\n      }\n      return result.map(v => this.ensureValueRespectMinMax(v));\n    };\n    this.createItemValues(\"customLabels\");\n    this.dragOrClickHelper = new DragOrClickHelper(null, false);\n    this.initPropertyDependencies();\n  }\n  get generatedLabels() {\n    return this.getPropertyValue(\"generatedLabels\", undefined, () => this.calcGeneratedLabels());\n  }\n  get tooltipVisibilityPG() {\n    return this.tooltipVisibility === \"auto\";\n  }\n  set tooltipVisibilityPG(newValue) {\n    this.tooltipVisibility = newValue ? \"auto\" : \"never\";\n  }\n  get renderedValue() {\n    return this.getPropertyValue(\"renderedValue\", undefined, () => this.calcRenderedValue());\n  }\n  set renderedValue(val) {\n    this.setPropertyValue(\"renderedValue\", val);\n  }\n  getType() {\n    return \"slider\";\n  }\n  get rootCss() {\n    return new CssClassBuilder().append(this.cssClasses.root).append(this.cssClasses.rootSingleMode, this.sliderType === \"single\").append(this.cssClasses.rootNegativeScaleMode, !!this.isNegativeScale).append(this.cssClasses.rootDesignMode, !!this.isDesignMode).append(this.cssClasses.rootAnimatedThumbMode, !!this.animatedThumb).toString();\n  }\n  get tooltipCss() {\n    return new CssClassBuilder().append(this.cssClasses.tooltip).append(this.cssClasses.tooltipOnHoverMode, this.tooltipVisibility === \"auto\").toString();\n  }\n  get renderedLabelCount() {\n    return this.labelCount < 0 ? 6 : this.labelCount;\n  }\n  get renderedMax() {\n    return this.max; // TODO\n  }\n  get renderedMin() {\n    return this.min; // TODO\n  }\n  get renderedMaxRangeLength() {\n    var _a;\n    return (_a = this.maxRangeLength) !== null && _a !== void 0 ? _a : this.renderedMax - this.renderedMin;\n  }\n  get renderedMinRangeLength() {\n    var _a;\n    return (_a = this.minRangeLength) !== null && _a !== void 0 ? _a : this.step;\n  }\n  get renderedLabels() {\n    const generatedLabels = this.generatedLabels; // need this const due to observability reasons\n    const customLabels = this.customLabels; // need this const due to observability reasons\n    if (this.autoGenerate) return generatedLabels;\n    return customLabels;\n  }\n  get isNegativeScale() {\n    return this.renderedMin < 0;\n  }\n  getTextByItem(item) {\n    const res = item.value.toString();\n    return this.labelFormat.replace(\"{0}\", \"\" + res);\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    if (this.jsonObj.customLabels !== undefined) {\n      this.autoGenerate = false;\n    }\n    if (!this.isDesignMode && this.sliderType === \"range\") {\n      this.createNewArray(\"value\");\n    }\n  }\n  updateValueFromSurvey(newValue, clearData) {\n    newValue = this.ensureValueRespectMinMax(newValue);\n    super.updateValueFromSurvey(newValue, clearData);\n    if (this.isIndeterminate) {\n      this.isIndeterminate = false;\n    }\n    this.resetPropertyValue(\"renderedValue\");\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    if (this.maxValueExpression) {\n      let maxRunner = this.getDefaultRunner(this.defaultExpressionRunner, this.maxValueExpression);\n      if (!!maxRunner && maxRunner.canRun) {\n        maxRunner.onRunComplete = res => {\n          this.max = res !== null && res !== void 0 ? res : this.renderedMax;\n        };\n        maxRunner.run(values, properties);\n      }\n    }\n    if (this.minValueExpression) {\n      let minRunner = this.getDefaultRunner(this.defaultExpressionRunner, this.minValueExpression);\n      if (!!minRunner && minRunner.canRun) {\n        minRunner.onRunComplete = res => {\n          this.min = res !== null && res !== void 0 ? res : this.renderedMin;\n        };\n        minRunner.run(values, properties);\n      }\n    }\n  }\n  initPropertyDependencies() {\n    // this.registerSychProperties([\"segmentCount\"],\n    //   () => {\n    //     if (this.segmentCount) {\n    //       this.step = (this.renderedMax - this.renderedMin) / this.segmentCount;\n    //     }\n    //   }\n    // );\n    // this.registerSychProperties([\"step\"],\n    //   () => {\n    //     if (this.step) {\n    //       this.segmentCount = (this.renderedMax - this.renderedMin) / this.step;\n    //     }\n    //   }\n    // );\n    this.registerFunctionOnPropertiesValueChanged([\"min\", \"max\", \"step\", \"autoGenerate\", \"labelFormat\", \"labelCount\"], () => {\n      this.resetPropertyValue(\"generatedLabels\");\n      this.locStrsChanged();\n    });\n    this.registerSychProperties([\"autoGenerate\"], () => {\n      if (!this.autoGenerate && this.customLabels.length === 0) {\n        this.setPropertyValue(\"customLabels\", this.calcGeneratedLabels());\n      }\n      if (this.autoGenerate) {\n        this.customLabels.splice(0, this.customLabels.length);\n      }\n    });\n    this.registerFunctionOnPropertiesValueChanged([\"min\", \"max\", \"step\", \"maxRangeLength\", \"minRangeLength\", \"sliderType\"], () => {\n      this.resetPropertyValue(\"renderedValue\");\n    });\n  }\n  setNewValue(newValue) {\n    newValue = this.ensureValueRespectMinMax(newValue);\n    super.setNewValue(newValue);\n    if (this.isIndeterminate) {\n      this.isIndeterminate = false;\n    }\n    this.resetPropertyValue(\"renderedValue\");\n  }\n  setDefaultValue() {\n    super.setDefaultValue();\n    const val = this.defaultValue;\n    if (this.sliderType === \"single\" && Array.isArray(val)) {\n      this.setSliderValue(val);\n    }\n    this.resetPropertyValue(\"renderedValue\");\n  }\n  getDefaultTitleActions() {\n    const actions = [];\n    if (!this.isDesignMode) {\n      const clearAction = new Action({\n        locTitleName: \"clearCaption\",\n        id: `sv-clr-btn-${this.id}`,\n        action: () => {\n          this.clearValue(true);\n        },\n        innerCss: this.cssClasses.clearButton,\n        visible: new ComputedUpdater(() => this.allowClear && !this.isReadOnly)\n      });\n      actions.push(clearAction);\n    }\n    return actions;\n  }\n  getItemValueType() {\n    return \"sliderlabel\";\n  }\n  createLabelItem(value) {\n    const res = new SliderLabelItemValue(value);\n    res.locOwner = this;\n    return res;\n  }\n  calcGeneratedLabels() {\n    const labels = [];\n    for (let i = 0; i < this.renderedLabelCount; i++) {\n      labels.push(this.createLabelItem(this.getLabelPosition(i)));\n    }\n    return labels;\n  }\n  formatNumber(number) {\n    return parseFloat(number.toFixed(4));\n  }\n  ensureValueRespectMinMax(value) {\n    if (!Array.isArray(value)) {\n      if (value < this.min) value = this.min;\n      if (value > this.max) value = this.max;\n    } else {\n      value.forEach((el, i, array) => {\n        if (el < this.min) value[i] = this.min;\n        if (el > this.max) value[i] = this.max;\n        if (i === 0) {\n          if (typeof el === \"undefined\" || el === null) value[i] = this.min;\n        } else if (i === array.length - 1) {\n          if (typeof el === \"undefined\" || el === null) value[i] = this.max;\n        }\n      });\n    }\n    return value;\n  }\n}\n__decorate([property({\n  defaultValue: \"single\"\n})], QuestionSliderModel.prototype, \"sliderType\", void 0);\n__decorate([property({\n  defaultValue: 100\n})], QuestionSliderModel.prototype, \"max\", void 0);\n__decorate([property({\n  defaultValue: 0\n})], QuestionSliderModel.prototype, \"min\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionSliderModel.prototype, \"maxValueExpression\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionSliderModel.prototype, \"minValueExpression\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionSliderModel.prototype, \"maxRangeLength\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionSliderModel.prototype, \"minRangeLength\", void 0);\n__decorate([property({\n  defaultValue: \"{0}\"\n})], QuestionSliderModel.prototype, \"tooltipFormat\", void 0);\n__decorate([property({\n  defaultValue: \"{0}\"\n})], QuestionSliderModel.prototype, \"labelFormat\", void 0);\n__decorate([property({\n  defaultValue: \"auto\"\n})], QuestionSliderModel.prototype, \"tooltipVisibility\", void 0);\n__decorate([property({\n  defaultValue: true\n})], QuestionSliderModel.prototype, \"showLabels\", void 0);\n__decorate([property({\n  defaultValue: true\n})], QuestionSliderModel.prototype, \"autoGenerate\", void 0);\n__decorate([property({\n  defaultValue: true\n})], QuestionSliderModel.prototype, \"allowDragRange\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionSliderModel.prototype, \"tickSize\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionSliderModel.prototype, \"allowClear\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionSliderModel.prototype, \"focusedThumb\", void 0);\n__decorate([property({\n  defaultValue: null\n})], QuestionSliderModel.prototype, \"animatedThumb\", void 0);\nfunction getCorrectMinMax(min, max, isMax, step) {\n  let val = isMax ? max : min;\n  if (min >= max) return isMax ? min + step : max - step;\n  return val;\n}\nSerializer.addClass(\"sliderlabel\", [{\n  name: \"!value:number\"\n}, {\n  name: \"visibleIf\",\n  visible: false\n}, {\n  name: \"enableIf\",\n  visible: false\n}], value => new SliderLabelItemValue(value), \"itemvalue\");\nSerializer.addClass(\"slider\", [{\n  name: \"sliderType\",\n  default: \"single\",\n  choices: [\"single\", \"range\"]\n}, {\n  name: \"autoGenerate\",\n  default: true,\n  isSerializable: false,\n  choices: [true, false]\n}, {\n  name: \"min:number\",\n  default: 0,\n  onSettingValue: (obj, val) => {\n    return getCorrectMinMax(val, obj.max, false, obj.step);\n  }\n}, {\n  name: \"max:number\",\n  default: 100,\n  onSettingValue: (obj, val) => {\n    return getCorrectMinMax(obj.min, val, true, obj.step);\n  }\n}, {\n  name: \"step:number\",\n  default: 1\n  // visibleIf: function (obj: any) {\n  //   return obj.autoGenerate;\n  // },\n},\n// {\n//   name: \"segmentCount:number\",\n//   // visibleIf: function (obj: any) {\n//   //   return obj.autoGenerate;\n//   // },\n// },\n{\n  name: \"minValueExpression\",\n  type: \"expression\"\n}, {\n  name: \"maxValueExpression\",\n  type: \"expression\"\n}, {\n  name: \"minRangeLength:number\",\n  visibleIf: function (obj) {\n    return obj.sliderType === \"range\";\n  }\n}, {\n  name: \"maxRangeLength:number\",\n  visibleIf: function (obj) {\n    return obj.sliderType === \"range\";\n  }\n}, {\n  name: \"customLabels:sliderlabel[]\",\n  visibleIf: function (obj) {\n    return !obj.autoGenerate;\n  }\n}, {\n  name: \"showLabels:boolean\",\n  default: true\n}, {\n  name: \"tooltipVisibility:string\",\n  default: \"auto\",\n  visible: false,\n  choices: [\"auto\", \"never\"]\n}, {\n  name: \"tooltipVisibilityPG:boolean\",\n  default: true,\n  isSerializable: false\n}, {\n  name: \"labelFormat:string\",\n  default: \"{0}\"\n}, {\n  name: \"tooltipFormat:string\",\n  default: \"{0}\"\n}, {\n  name: \"allowDragRange:boolean\",\n  default: true,\n  visible: false,\n  visibleIf: function (obj) {\n    return obj.sliderType === \"range\";\n  }\n}, {\n  name: \"allowSwap:boolean\",\n  default: true,\n  visibleIf: function (obj) {\n    return obj.sliderType === \"range\";\n  }\n}, {\n  name: \"labelCount:number\",\n  default: -1,\n  visibleIf: function (obj) {\n    return obj.autoGenerate;\n  }\n}, {\n  name: \"allowClear:boolean\",\n  default: false\n}], function () {\n  return new QuestionSliderModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"slider\", name => {\n  return new QuestionSliderModel(name);\n});\n\n/**\n * A class that describes the Yes/No (Boolean) question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-boolean/ (linkStyle))\n */\nclass QuestionBooleanModel extends Question {\n  constructor(name) {\n    super(name);\n    this.createLocalizableString(\"labelFalse\", this, true, \"booleanUncheckedLabel\");\n    this.createLocalizableString(\"labelTrue\", this, true, \"booleanCheckedLabel\");\n  }\n  getType() {\n    return \"boolean\";\n  }\n  isLayoutTypeSupported(layoutType) {\n    return true;\n  }\n  supportAutoAdvance() {\n    return this.renderAs !== \"checkbox\";\n  }\n  get isIndeterminate() {\n    return this.isEmpty();\n  }\n  get hasTitle() {\n    return true;\n  }\n  /**\n   * Gets or sets the question value as a Boolean value.\n   *\n   * If you set the `valueTrue` and `valueFalse` properties, the `value` property contains their values instead of Boolean values. This may be inconvenient when you operate the question value in code. To access the standard Boolean values, use the `booleanValue` property.\n   * @see valueTrue\n   * @see valueFalse\n   */\n  get booleanValue() {\n    if (this.isEmpty()) return null;\n    return this.value == this.getValueTrue();\n  }\n  set booleanValue(val) {\n    if (this.isReadOnly || this.isDesignMode) {\n      return;\n    }\n    this.setBooleanValue(val);\n  }\n  get checkedValue() {\n    return this.booleanValue;\n  }\n  set checkedValue(val) {\n    this.booleanValue = val;\n  }\n  setBooleanValue(val) {\n    if (this.isValueEmpty(val)) {\n      this.value = undefined;\n      this.booleanValueRendered = undefined;\n    } else {\n      this.value = val == true ? this.getValueTrue() : this.getValueFalse();\n      this.booleanValueRendered = val;\n    }\n  }\n  get defaultValue() {\n    return this.getPropertyValue(\"defaultValue\");\n  }\n  set defaultValue(val) {\n    if (val === true) val = \"true\";\n    if (val === false) val = \"false\";\n    this.setPropertyValue(\"defaultValue\", val);\n    this.updateValueWithDefaults();\n  }\n  getDefaultValue() {\n    const val = this.defaultValue;\n    if (val === \"indeterminate\" || val === undefined || val === null) return undefined;\n    return val == \"true\" ? this.getValueTrue() : this.getValueFalse();\n  }\n  get locTitle() {\n    const original = this.getLocalizableString(\"title\");\n    if ((this.isLabelRendered && !this.showTitle || this.isValueEmpty(original.text)) && !this.isValueEmpty(this.locLabel.text)) return this.locLabel;\n    return original;\n  }\n  get labelRenderedAriaID() {\n    return this.isLabelRendered ? this.ariaTitleId : null;\n  }\n  beforeDestroyQuestionElement(el) {\n    super.beforeDestroyQuestionElement(el);\n    this.leftAnswerElement = undefined;\n  }\n  get isLabelRendered() {\n    return this.titleLocation === \"hidden\" && this.useTitleAsLabel;\n  }\n  get canRenderLabelDescription() {\n    return this.isLabelRendered && this.hasDescription && (this.hasDescriptionUnderTitle || this.hasDescriptionUnderInput);\n  }\n  /**\n   * Gets or sets a text label that corresponds to a positive answer.\n   *\n   * Default value: \"Yes\"\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/yes-no-question/ (linkStyle))\n   * @see valueTrue\n   * @see valueFalse\n   */\n  get labelTrue() {\n    return this.getLocalizableStringText(\"labelTrue\");\n  }\n  set labelTrue(val) {\n    this.setLocalizableStringText(\"labelTrue\", val);\n  }\n  get locLabelTrue() {\n    return this.getLocalizableString(\"labelTrue\");\n  }\n  get isDeterminated() {\n    return this.booleanValue !== null && this.booleanValue !== undefined;\n  }\n  get locLabelLeft() {\n    return this.swapOrder ? this.getLocalizableString(\"labelTrue\") : this.getLocalizableString(\"labelFalse\");\n  }\n  get locLabelRight() {\n    return this.swapOrder ? this.getLocalizableString(\"labelFalse\") : this.getLocalizableString(\"labelTrue\");\n  }\n  /**\n   * Gets or sets a text label that corresponds to a negative answer.\n   *\n   * Default value: \"No\"\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/yes-no-question/ (linkStyle))\n   * @see valueTrue\n   * @see valueFalse\n   */\n  get labelFalse() {\n    return this.getLocalizableStringText(\"labelFalse\");\n  }\n  set labelFalse(val) {\n    this.setLocalizableStringText(\"labelFalse\", val);\n  }\n  get locLabelFalse() {\n    return this.getLocalizableString(\"labelFalse\");\n  }\n  getValueTrue() {\n    return this.valueTrue !== undefined ? this.valueTrue : true;\n  }\n  getValueFalse() {\n    return this.valueFalse !== undefined ? this.valueFalse : false;\n  }\n  setDefaultValue() {\n    if (this.isDefaultValueSet(\"true\", this.valueTrue)) this.setBooleanValue(true);\n    if (this.isDefaultValueSet(\"false\", this.valueFalse)) this.setBooleanValue(false);\n    const val = this.defaultValue;\n    if (val === \"indeterminate\" || val === null || val === undefined) this.setBooleanValue(undefined);\n  }\n  isDefaultValueSet(defaultValueCheck, valueTrueOrFalse) {\n    return this.defaultValue == defaultValueCheck || valueTrueOrFalse !== undefined && this.defaultValue === valueTrueOrFalse;\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (value == this.getValueTrue()) return this.locLabelTrue.textOrHtml;\n    return this.locLabelFalse.textOrHtml;\n  }\n  getItemCssValue(css) {\n    return new CssClassBuilder().append(css.item).append(css.itemOnError, this.hasCssError()).append(css.itemDisabled, this.isDisabledStyle).append(css.itemReadOnly, this.isReadOnlyStyle).append(css.itemPreview, this.isPreviewStyle).append(css.itemHover, !this.isDesignMode).append(css.itemChecked, !!this.booleanValue).append(css.itemExchanged, !!this.swapOrder).append(css.itemIndeterminate, !this.isDeterminated).toString();\n  }\n  getItemCss() {\n    return this.getItemCssValue(this.cssClasses);\n  }\n  getCheckboxItemCss() {\n    return this.getItemCssValue({\n      item: this.cssClasses.checkboxItem,\n      itemOnError: this.cssClasses.checkboxItemOnError,\n      itemDisabled: this.cssClasses.checkboxItemDisabled,\n      itemDisable: this.cssClasses.checkboxItemDisabled,\n      itemReadOnly: this.cssClasses.checkboxItemReadOnly,\n      itemPreview: this.cssClasses.checkboxItemPreview,\n      itemChecked: this.cssClasses.checkboxItemChecked,\n      itemIndeterminate: this.cssClasses.checkboxItemIndeterminate\n    });\n  }\n  getLabelCss(checked) {\n    return new CssClassBuilder().append(this.cssClasses.label).append(this.cssClasses.disabledLabel, this.booleanValue === !checked || this.isDisabledStyle).append(this.cssClasses.labelReadOnly, this.isReadOnlyStyle).append(this.cssClasses.labelPreview, this.isPreviewStyle).append(this.cssClasses.labelTrue, !this.isIndeterminate && checked === !this.swapOrder).append(this.cssClasses.labelFalse, !this.isIndeterminate && checked === this.swapOrder).toString();\n  }\n  updateValueFromSurvey(newValue, clearData = false) {\n    super.updateValueFromSurvey(newValue, clearData);\n  }\n  onValueChanged() {\n    super.onValueChanged();\n  }\n  get svgIcon() {\n    if (this.booleanValue && this.cssClasses.svgIconCheckedId) return this.cssClasses.svgIconCheckedId;\n    if (!this.isDeterminated && this.cssClasses.svgIconIndId) return this.cssClasses.svgIconIndId;\n    if (!this.booleanValue && this.cssClasses.svgIconUncheckedId) return this.cssClasses.svgIconUncheckedId;\n    return this.cssClasses.svgIconId;\n  }\n  get itemSvgIcon() {\n    if (this.isPreviewStyle && this.cssClasses.itemPreviewSvgIconId) {\n      return this.cssClasses.itemPreviewSvgIconId;\n    }\n    return this.cssClasses.itemSvgIconId;\n  }\n  get allowClick() {\n    return this.isIndeterminate && !this.isInputReadOnly;\n  }\n  getCheckedLabel() {\n    if (this.booleanValue === true) {\n      return this.locLabelTrue;\n    } else if (this.booleanValue === false) {\n      return this.locLabelFalse;\n    }\n  }\n  setQuestionValue(newValue, updateIsAnswered = true) {\n    if (newValue === \"true\" && this.valueTrue !== \"true\") newValue = true;\n    if (newValue === \"false\" && this.valueFalse !== \"false\") newValue = false;\n    if (newValue === \"indeterminate\" || newValue === null) newValue = undefined;\n    super.setQuestionValue(newValue, updateIsAnswered);\n  }\n  /* #region web-based methods */\n  onLabelClick(event, value) {\n    if (this.allowClick) {\n      preventDefaults(event);\n      this.booleanValue = value;\n    }\n    return true;\n  }\n  calculateBooleanValueByEvent(event, isRightClick) {\n    let isRtl = false;\n    if (DomDocumentHelper.isAvailable()) {\n      isRtl = DomDocumentHelper.getComputedStyle(event.target).direction == \"rtl\";\n    }\n    this.booleanValue = isRtl ? !isRightClick : isRightClick;\n  }\n  onSwitchClickModel(event) {\n    if (this.allowClick) {\n      preventDefaults(event);\n      var isRightClick = event.offsetX / event.target.offsetWidth > 0.5;\n      this.calculateBooleanValueByEvent(event, isRightClick);\n      return;\n    }\n    return true;\n  }\n  onKeyDownCore(event) {\n    if (event.key === \"ArrowLeft\" || event.key === \"ArrowRight\") {\n      event.stopPropagation();\n      this.calculateBooleanValueByEvent(event, event.key === \"ArrowRight\");\n    }\n    return true;\n  }\n  /* #endregion */\n  getRadioItemClass(css, value) {\n    let className = undefined;\n    if (css.radioItem) {\n      className = css.radioItem;\n    }\n    if (css.radioItemChecked && value === this.booleanValue) {\n      className = (className ? className + \" \" : \"\") + css.radioItemChecked;\n    }\n    if (this.isDisabledStyle) {\n      className += \" \" + css.radioItemDisabled;\n    }\n    if (this.isReadOnlyStyle) {\n      className += \" \" + css.radioItemReadOnly;\n    }\n    if (this.isPreviewStyle) {\n      className += \" \" + css.radioItemPreview;\n    }\n    return className;\n  }\n  supportResponsiveness() {\n    return true;\n  }\n  getCompactRenderAs() {\n    return \"radio\";\n  }\n  createActionContainer(allowAdaptiveActions) {\n    return super.createActionContainer(this.renderAs !== \"checkbox\");\n  }\n  //a11y\n  get isNewA11yStructure() {\n    return true;\n  }\n  get a11y_input_ariaRole() {\n    return \"switch\";\n  }\n}\n__decorate([property()], QuestionBooleanModel.prototype, \"booleanValueRendered\", void 0);\n__decorate([property({\n  localizable: true\n})], QuestionBooleanModel.prototype, \"label\", void 0);\n__decorate([property({\n  defaultValue: true\n})], QuestionBooleanModel.prototype, \"useTitleAsLabel\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionBooleanModel.prototype, \"swapOrder\", void 0);\n__decorate([property()], QuestionBooleanModel.prototype, \"valueTrue\", void 0);\n__decorate([property()], QuestionBooleanModel.prototype, \"valueFalse\", void 0);\nSerializer.addClass(\"boolean\", [{\n  name: \"showCommentArea:switch\",\n  layout: \"row\",\n  visible: true,\n  category: \"general\"\n}, {\n  name: \"label:text\",\n  serializationProperty: \"locLabel\",\n  isSerializable: false,\n  visible: false\n}, {\n  name: \"labelTrue:text\",\n  serializationProperty: \"locLabelTrue\"\n}, {\n  name: \"labelFalse:text\",\n  serializationProperty: \"locLabelFalse\"\n}, \"valueTrue\", \"valueFalse\", {\n  name: \"swapOrder:boolean\",\n  category: \"general\"\n}, {\n  name: \"renderAs\",\n  default: \"default\",\n  visible: false\n}], function () {\n  return new QuestionBooleanModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"boolean\", name => {\n  return new QuestionBooleanModel(name);\n});\nclass ImageItemValue extends ItemValue {\n  constructor(value, text, typeName) {\n    super(value, text, typeName);\n    this.typeName = typeName;\n    this.createLocalizableString(\"imageLink\", this, false);\n  }\n  getBaseType() {\n    return \"imageitemvalue\";\n  }\n  /**\n   * The image or video link property.\n   */\n  get imageLink() {\n    return this.getLocalizableStringText(\"imageLink\");\n  }\n  set imageLink(val) {\n    this.setLocalizableStringText(\"imageLink\", val);\n    this.imageNotLoaded = false;\n    this.videoNotLoaded = false;\n  }\n  get locImageLink() {\n    return this.getLocalizableString(\"imageLink\");\n  }\n  getLocale() {\n    return !!this.locOwner ? this.locOwner.getLocale() : \"\";\n  }\n  getMarkdownHtml(text, name, item) {\n    return !!this.locOwner ? this.locOwner.getMarkdownHtml(text, name, item) : undefined;\n  }\n  getRenderer(name) {\n    return !!this.locOwner ? this.locOwner.getRenderer(name) : null;\n  }\n  getRendererContext(locStr) {\n    return !!this.locOwner ? this.locOwner.getRendererContext(locStr) : locStr;\n  }\n  getProcessedText(text) {\n    return !!this.locOwner ? this.locOwner.getProcessedText(text) : text;\n  }\n  onErrorHandler() {\n    this.contentNotLoaded = true;\n  }\n  set contentNotLoaded(val) {\n    if (this.locOwner instanceof QuestionImagePickerModel && this.locOwner.contentMode == \"video\") {\n      this.videoNotLoaded = val;\n    } else {\n      this.imageNotLoaded = val;\n    }\n  }\n  get contentNotLoaded() {\n    return this.locOwner instanceof QuestionImagePickerModel && this.locOwner.contentMode == \"video\" ? this.videoNotLoaded : this.imageNotLoaded;\n  }\n}\n__decorate([property({\n  defaultValue: false\n})], ImageItemValue.prototype, \"videoNotLoaded\", void 0);\n__decorate([property({\n  defaultValue: false\n})], ImageItemValue.prototype, \"imageNotLoaded\", void 0);\n/**\n  * A class that describes the Image Picker question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n */\nclass QuestionImagePickerModel extends QuestionCheckboxBase {\n  constructor(name) {\n    super(name);\n    //responsive mode\n    this.isResponsiveValue = false;\n    this.onContentLoaded = (item, event) => {\n      item.contentNotLoaded = false;\n      const content = event.target;\n      if (this.contentMode == \"video\") {\n        item[\"aspectRatio\"] = content.videoWidth / content.videoHeight;\n      } else {\n        item[\"aspectRatio\"] = content.naturalWidth / content.naturalHeight;\n      }\n      this._width && this.processResponsiveness(0, this._width);\n    };\n    this.gridColCount = undefined;\n    this.colCount = 0;\n    this.registerPropertyChangedHandlers([\"minImageWidth\", \"maxImageWidth\", \"minImageHeight\", \"maxImageHeight\", \"visibleChoices\", \"colCount\", \"isResponsiveValue\"], () => {\n      if (!!this._width) {\n        this.processResponsiveness(0, this._width);\n      }\n    });\n    this.registerPropertyChangedHandlers([\"imageWidth\", \"imageHeight\"], () => {\n      this.calcIsResponsive();\n    });\n    this.calcIsResponsive();\n  }\n  getType() {\n    return \"imagepicker\";\n  }\n  supportAutoAdvance() {\n    return !this.multiSelect;\n  }\n  get hasSingleInput() {\n    return false;\n  }\n  getItemValueType() {\n    return \"imageitemvalue\";\n  }\n  get isCompositeQuestion() {\n    return true;\n  }\n  get itemFlowDirection() {\n    return \"row\";\n  }\n  supportOther() {\n    return false;\n  }\n  supportNone() {\n    return false;\n  }\n  supportRefuse() {\n    return false;\n  }\n  supportDontKnow() {\n    return false;\n  }\n  isAnswerCorrect() {\n    if (!this.multiSelect) return super.isAnswerCorrect();\n    return Helpers.isArrayContainsEqual(this.value, this.correctAnswer);\n  }\n  /**\n   * Specifies whether users can select multiple images or videos.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n   */\n  get multiSelect() {\n    return this.getPropertyValue(\"multiSelect\");\n  }\n  set multiSelect(newValue) {\n    this.setPropertyValue(\"multiSelect\", newValue);\n  }\n  isItemSelected(item) {\n    var val = this.value;\n    const imageItemValue = item;\n    if (this.isValueEmpty(val)) return false;\n    if (!imageItemValue.imageLink || imageItemValue.contentNotLoaded) return false;\n    if (!this.multiSelect) return this.isTwoValueEquals(val, item.value);\n    if (!Array.isArray(val)) return false;\n    for (var i = 0; i < val.length; i++) {\n      if (this.isTwoValueEquals(val[i], item.value)) return true;\n    }\n    return false;\n  }\n  getItemEnabled(item) {\n    const imageItemValue = item;\n    if (!imageItemValue.imageLink || imageItemValue.contentNotLoaded) return false;\n    return super.getItemEnabled(item);\n  }\n  clearIncorrectValues() {\n    if (this.multiSelect) {\n      var val = this.value;\n      if (!val) return;\n      if (!Array.isArray(val) || val.length == 0) {\n        this.clearValue(true);\n        return;\n      }\n      var newValue = [];\n      for (var i = 0; i < val.length; i++) {\n        if (!this.hasUnknownValue(val[i], true)) {\n          newValue.push(val[i]);\n        }\n      }\n      if (newValue.length == val.length) return;\n      if (newValue.length == 0) {\n        this.clearValue(true);\n      } else {\n        this.value = newValue;\n      }\n    } else {\n      super.clearIncorrectValues();\n    }\n  }\n  getDisplayValueCore(keysAsText, value) {\n    if (!this.multiSelect && !Array.isArray(value)) return super.getDisplayValueCore(keysAsText, value);\n    return this.getDisplayArrayValue(keysAsText, value);\n  }\n  /**\n   * Specifies whether to display labels under images or videos. Labels text are taken from the `text` property of each object in the [`choices`](#choices) array.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/image-picker-question/ (linkStyle))\n   */\n  get showLabel() {\n    return this.getPropertyValue(\"showLabel\");\n  }\n  set showLabel(newValue) {\n    this.setPropertyValue(\"showLabel\", newValue);\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    if (!this.isDesignMode && this.multiSelect) {\n      this.createNewArray(\"renderedValue\");\n      this.createNewArray(\"value\");\n    }\n    this.calcIsResponsive();\n  }\n  getValueCore() {\n    var value = super.getValueCore();\n    if (value !== undefined) {\n      return value;\n    }\n    if (this.multiSelect) {\n      return [];\n    }\n    return value;\n  }\n  convertValToArrayForMultSelect(val) {\n    if (!this.multiSelect) return val;\n    if (this.isValueEmpty(val) || Array.isArray(val)) return val;\n    return [val];\n  }\n  renderedValueFromDataCore(val) {\n    return this.convertValToArrayForMultSelect(val);\n  }\n  rendredValueToDataCore(val) {\n    return this.convertValToArrayForMultSelect(val);\n  }\n  /**\n   * Specifies the height of containers for images or videos. Accepts positive numbers and CSS values.\n   *\n   * Default value: `auto`\n   *\n   * This property allows you to specify the exact image height. If you do not set it, the height will be calculated automatically based on the [`minImageHeight`](#minImageHeight) and [`maxImageHeight`](#maxImageHeight) values and available screen height.\n   *\n   * Use the [`imageFit`](#imageFit) property to specify how to fit the images or videos into their containers.\n   * @see imageWidth\n   */\n  get imageHeight() {\n    return this.getPropertyValue(\"imageHeight\");\n  }\n  set imageHeight(val) {\n    this.setPropertyValue(\"imageHeight\", val);\n  }\n  get imageScale() {\n    return this.survey ? this.survey[\"widthScale\"] / 100 : 1;\n  }\n  get renderedImageHeight() {\n    const height = this.isResponsive ? Math.floor(this.responsiveImageHeight) : this.imageHeight * this.imageScale;\n    return height ? height : 150 * this.imageScale;\n  }\n  /**\n   * Specifies the width of containers for images or videos. Accepts positive numbers and CSS values.\n   *\n   * Default value: `auto`\n   *\n   * This property allows you to specify the exact image width. If you do not set it, the width will be calculated automatically based on the [`minImageWidth`](#minImageWidth) and [`maxImageWidth`](#maxImageWidth) values and available screen width.\n   *\n   * Use the [`imageFit`](#imageFit) property to specify how to fit the images or videos into their containers.\n   * @see imageHeight\n   */\n  get imageWidth() {\n    return this.getPropertyValue(\"imageWidth\");\n  }\n  set imageWidth(val) {\n    this.setPropertyValue(\"imageWidth\", val);\n  }\n  get renderedImageWidth() {\n    const width = this.isResponsive ? Math.floor(this.responsiveImageWidth) : this.imageWidth * this.imageScale;\n    return width ? width : 200 * this.imageScale;\n  }\n  /**\n   * Specifies how to resize images or videos to fit them into their containers.\n   *\n   * Refer to the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property description for information on accepted values.\n   * @see imageHeight\n   * @see imageWidth\n   */\n  get imageFit() {\n    return this.getPropertyValue(\"imageFit\");\n  }\n  set imageFit(val) {\n    this.setPropertyValue(\"imageFit\", val);\n  }\n  /**\n   * Specifies the type of content that choice items display.\n   *\n   * Possible values:\n   *\n   * - `\"image\"` (default) - Images in one of the following formats: JPEG, GIF, PNG, APNG, SVG, BMP, ICO.\n   * - `\"video\"` - Videos in one of the following formats: MP4, MOV, WMV, FLV, AVI, MKV.\n   */\n  get contentMode() {\n    return this.getPropertyValue(\"contentMode\");\n  }\n  set contentMode(val) {\n    this.setPropertyValue(\"contentMode\", val);\n    if (val === \"video\") {\n      this.showLabel = true;\n    }\n  }\n  convertDefaultValue(val) {\n    return val;\n  }\n  get inputType() {\n    return this.multiSelect ? \"checkbox\" : \"radio\";\n  }\n  isBuiltInChoice(item) {\n    return false;\n  }\n  addToVisibleChoices(items, isAddAll) {\n    this.addNewItemToVisibleChoices(items, isAddAll);\n  }\n  getSelectBaseRootCss() {\n    const isResponsive = this.isResponsive;\n    return new CssClassBuilder().append(super.getSelectBaseRootCss()).append(this.cssClasses.rootResponsive, isResponsive).append(this.cssClasses.rootStatic, !isResponsive).append(this.cssClasses.rootColumn, this.getCurrentColCount() == 1).toString();\n  }\n  get isResponsive() {\n    return this.isResponsiveValue;\n  }\n  get exactSizesAreEmpty() {\n    return ![\"imageHeight\", \"imageWidth\"].some(propName => this[propName] !== undefined && this[propName] !== null);\n  }\n  calcIsResponsive() {\n    this.isResponsiveValue = this.exactSizesAreEmpty;\n  }\n  getObservedElementSelector() {\n    return classesToSelector(this.cssClasses.root);\n  }\n  supportResponsiveness() {\n    return true;\n  }\n  needResponsiveness() {\n    return this.supportResponsiveness();\n  }\n  needResponsiveWidth() {\n    return this.colCount > 2;\n  }\n  getCurrentColCount() {\n    if (this.responsiveColCount === undefined || this.colCount === 0) {\n      return this.colCount;\n    }\n    return this.responsiveColCount;\n  }\n  getContainerStyle() {\n    if (!this.isResponsive) return {};\n    return {\n      gridAutoFlow: !this.gridColCount ? \"column\" : null,\n      gridTemplateColumns: this.gridColCount ? `repeat(${this.gridColCount}, 1fr)` : null\n    };\n  }\n  processResponsiveness(_, availableWidth) {\n    this._width = availableWidth = Math.floor(availableWidth);\n    const calcAvailableColumnsCount = (availableWidth, minWidth, gap) => {\n      let itemsInRow = Math.floor(availableWidth / (minWidth + gap));\n      if ((itemsInRow + 1) * (minWidth + gap) - gap <= availableWidth) itemsInRow++;\n      return itemsInRow;\n    };\n    if (this.isResponsive) {\n      const itemsCount = this.choices.length + (this.isDesignMode ? 1 : 0);\n      const gap = (this.gapBetweenItems || 0) * this.imageScale;\n      const minWidth = this.minImageWidth * this.imageScale;\n      const maxWidth = this.maxImageWidth * this.imageScale;\n      const maxHeight = this.maxImageHeight * this.imageScale;\n      const minHeight = this.minImageHeight * this.imageScale;\n      let colCount = this.colCount;\n      let width;\n      const availableColumnsCount = calcAvailableColumnsCount(availableWidth, minWidth, gap);\n      if (colCount === 0) {\n        if ((gap + minWidth) * itemsCount - gap > availableWidth) {\n          width = Math.floor((availableWidth - gap * (availableColumnsCount - 1)) / availableColumnsCount);\n        } else {\n          width = Math.floor((availableWidth - gap * (itemsCount - 1)) / itemsCount);\n        }\n        this.gridColCount = Math.max(Math.min(itemsCount, availableColumnsCount), 1);\n      } else {\n        if (availableColumnsCount < colCount) {\n          this.responsiveColCount = Math.max(availableColumnsCount, 1);\n          colCount = this.responsiveColCount;\n        } else {\n          this.responsiveColCount = colCount;\n        }\n        this.gridColCount = this.responsiveColCount;\n        width = Math.floor((availableWidth - gap * (colCount - 1)) / colCount);\n      }\n      width = Math.max(minWidth, Math.min(width, maxWidth));\n      let height = Number.MIN_VALUE;\n      this.choices.forEach(item => {\n        const tempHeight = width / item[\"aspectRatio\"];\n        height = tempHeight > height ? tempHeight : height;\n      });\n      if (height > maxHeight) {\n        height = maxHeight;\n      } else if (height < minHeight) {\n        height = minHeight;\n      }\n      const oldResponsiveImageWidth = this.responsiveImageWidth;\n      const oldResponsiveImageHeight = this.responsiveImageHeight;\n      this.responsiveImageWidth = width;\n      this.responsiveImageHeight = height;\n      return oldResponsiveImageWidth !== this.responsiveImageWidth || oldResponsiveImageHeight !== this.responsiveImageHeight;\n    }\n    return false;\n  }\n  triggerResponsiveness(hard = true) {\n    if (hard && this.reCalcGapBetweenItemsCallback) {\n      this.reCalcGapBetweenItemsCallback();\n    }\n    super.triggerResponsiveness(hard);\n  }\n  afterRender(el) {\n    super.afterRender(el);\n    const selector = this.getObservedElementSelector();\n    const observedElement = el && selector ? el.querySelector(selector) : undefined;\n    if (!!observedElement) {\n      this.reCalcGapBetweenItemsCallback = () => {\n        this.gapBetweenItems = Math.ceil(Number.parseFloat(DomDocumentHelper.getComputedStyle(observedElement).gap)) || 16;\n      };\n      this.reCalcGapBetweenItemsCallback();\n    }\n  }\n}\n__decorate([property({})], QuestionImagePickerModel.prototype, \"responsiveImageHeight\", void 0);\n__decorate([property({})], QuestionImagePickerModel.prototype, \"responsiveImageWidth\", void 0);\n__decorate([property({})], QuestionImagePickerModel.prototype, \"isResponsiveValue\", void 0);\n__decorate([property({})], QuestionImagePickerModel.prototype, \"maxImageWidth\", void 0);\n__decorate([property({})], QuestionImagePickerModel.prototype, \"minImageWidth\", void 0);\n__decorate([property({})], QuestionImagePickerModel.prototype, \"maxImageHeight\", void 0);\n__decorate([property({})], QuestionImagePickerModel.prototype, \"minImageHeight\", void 0);\n__decorate([property({})], QuestionImagePickerModel.prototype, \"responsiveColCount\", void 0);\n__decorate([property()], QuestionImagePickerModel.prototype, \"gridColCount\", void 0);\nSerializer.addClass(\"imageitemvalue\", [{\n  name: \"imageLink:file\",\n  serializationProperty: \"locImageLink\"\n}], value => new ImageItemValue(value), \"itemvalue\");\nSerializer.addClass(\"responsiveImageSize\", [], undefined, \"number\");\nSerializer.addClass(\"imagepicker\", [{\n  name: \"showOtherItem\",\n  visible: false\n}, {\n  name: \"otherText\",\n  visible: false\n}, {\n  name: \"showNoneItem\",\n  visible: false\n}, {\n  name: \"showRefuseItem\",\n  visible: false\n}, {\n  name: \"showDontKnowItem\",\n  visible: false\n}, {\n  name: \"noneText\",\n  visible: false\n}, {\n  name: \"optionsCaption\",\n  visible: false\n}, {\n  name: \"otherErrorText\",\n  visible: false\n}, {\n  name: \"storeOthersAsComment\",\n  visible: false\n}, {\n  name: \"contentMode\",\n  default: \"image\",\n  choices: [\"image\", \"video\"]\n}, {\n  name: \"imageFit\",\n  default: \"contain\",\n  choices: [\"none\", \"contain\", \"cover\", \"fill\"]\n}, {\n  name: \"imageHeight:number\",\n  minValue: 0\n}, {\n  name: \"imageWidth:number\",\n  minValue: 0\n}, {\n  name: \"minImageWidth:responsiveImageSize\",\n  default: 200,\n  minValue: 0\n}, {\n  name: \"minImageHeight:responsiveImageSize\",\n  default: 133,\n  minValue: 0\n}, {\n  name: \"maxImageWidth:responsiveImageSize\",\n  default: 3000,\n  minValue: 0\n}, {\n  name: \"maxImageHeight:responsiveImageSize\",\n  default: 3000,\n  minValue: 0\n}, \"showLabel:boolean\", {\n  name: \"colCount:number\",\n  default: 0,\n  choices: [0, 1, 2, 3, 4, 5]\n}, \"multiSelect:boolean\"], function () {\n  return new QuestionImagePickerModel(\"\");\n}, \"checkboxbase\");\nSerializer.getProperty(\"imagepicker\", \"choices\").type = \"imageitemvalue[]\";\nQuestionFactory.Instance.registerQuestion(\"imagepicker\", name => {\n  var q = new QuestionImagePickerModel(name);\n  //q.choices = QuestionFactory.DefaultChoices;\n  return q;\n});\nconst videoSuffics = [\".mp4\", \".mov\", \".wmv\", \".flv\", \".avi\", \".mkv\"];\nconst youtubeUrl = \"https://www.youtube.com/\";\nconst youtubeEmbed = \"embed\";\n/**\n  * A class that describes the Image question type. Unlike other question types, Image cannot have a title or value.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/questiontype-image/ (linkStyle))\n */\nclass QuestionImageModel extends QuestionNonValue {\n  constructor(name) {\n    super(name);\n    const locImageLink = this.createLocalizableString(\"imageLink\", this, false);\n    locImageLink.onGetTextCallback = text => {\n      return getCorrectImageLink(text, this.contentMode == \"youtube\");\n    };\n    this.createLocalizableString(\"altText\", this, false);\n    this.registerPropertyChangedHandlers([\"contentMode\", \"imageLink\"], () => this.calculateRenderedMode());\n  }\n  getType() {\n    return \"image\";\n  }\n  get isCompositeQuestion() {\n    return false;\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    this.calculateRenderedMode();\n  }\n  /**\n   * Specifies an image or video URL.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   * @see contentMode\n   */\n  get imageLink() {\n    return this.getLocalizableStringText(\"imageLink\");\n  }\n  set imageLink(val) {\n    this.setLocalizableStringText(\"imageLink\", val);\n  }\n  get locImageLink() {\n    return this.getLocalizableString(\"imageLink\");\n  }\n  /**\n   * Specifies a value for the `alt` attribute of the underlying `<img>` element.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   */\n  get altText() {\n    return this.getLocalizableStringText(\"altText\");\n  }\n  set altText(val) {\n    this.setLocalizableStringText(\"altText\", val);\n  }\n  get locAltText() {\n    return this.getLocalizableString(\"altText\");\n  }\n  /**\n   * Specifies the height of a container for the image or video. Accepts positive numbers and CSS values.\n   *\n   * Default value: 150\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   *\n   * > Use the [`imageFit`](#imageFit) property to specify how to fit the image or video into the container.\n   * @see imageWidth\n   */\n  get imageHeight() {\n    return this.getPropertyValue(\"imageHeight\");\n  }\n  set imageHeight(val) {\n    this.setPropertyValue(\"imageHeight\", val);\n  }\n  get renderedStyleHeight() {\n    return this.imageHeight ? getRenderedStyleSize(this.imageHeight) : undefined;\n  }\n  get renderedHeight() {\n    return this.imageHeight ? getRenderedSize(this.imageHeight) : undefined;\n  }\n  /**\n   * Specifies the width of a container for the image or video. Accepts positive numbers and CSS values.\n   *\n   * Default value: 200\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/add-image-and-video-to-survey/ (linkStyle))\n   *\n   * > Use the [`imageFit`](#imageFit) property to specify how to fit the image or video into the container.\n   * @see imageHeight\n   */\n  get imageWidth() {\n    return this.getPropertyValue(\"imageWidth\");\n  }\n  set imageWidth(val) {\n    this.setPropertyValue(\"imageWidth\", val);\n  }\n  get renderedStyleWidth() {\n    return this.imageWidth ? getRenderedStyleSize(this.imageWidth) : undefined;\n  }\n  get renderedWidth() {\n    return this.imageWidth ? getRenderedSize(this.imageWidth) : undefined;\n  }\n  /**\n   * Specifies how to resize the image or video to fit it into its container.\n   *\n   * Refer to the [`object-fit`](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) CSS property description for information on accepted values.\n   * @see imageHeight\n   * @see imageWidth\n   */\n  get imageFit() {\n    return this.getPropertyValue(\"imageFit\");\n  }\n  set imageFit(val) {\n    this.setPropertyValue(\"imageFit\", val);\n  }\n  /**\n   * Specifies the type of content that the Image question displays.\n   *\n   * Possible values:\n   *\n   * - `\"image\"` - An image in one of the following formats: JPEG, GIF, PNG, APNG, SVG, BMP, ICO.\n   * - `\"video\"` - A video in one of the following formats: MP4, MOV, WMV, FLV, AVI, MKV.\n   * - `\"youtube\"` - A link to a YouTube video.\n   * - `\"auto\"` (default) - Selects one of the above based on the [`imageLink`](https://surveyjs.io/form-library/documentation/questionimagemodel#imageLink) property.\n   */\n  get contentMode() {\n    return this.getPropertyValue(\"contentMode\");\n  }\n  set contentMode(val) {\n    this.setPropertyValue(\"contentMode\", val);\n    if (val === \"video\") {\n      this.showLabel = true;\n    }\n  }\n  /**\n   * Returns the type of content that the Image question displays: `\"image\"`, `\"video\"`, or `\"youtube\"`.\n   * @see contentMode\n   */\n  get renderedMode() {\n    return this.getPropertyValue(\"renderedMode\", \"image\");\n  }\n  get ariaInvalid() {\n    return null;\n  }\n  get ariaLabel() {\n    return null;\n  }\n  get renderedAltText() {\n    return this.altText || this.title;\n  }\n  getImageCss() {\n    const imageHeightProperty = this.getPropertyByName(\"imageHeight\");\n    const imageWidthProperty = this.getPropertyByName(\"imageWidth\");\n    const isDefaultSize = imageHeightProperty.isDefaultValue(this.imageHeight) && imageWidthProperty.isDefaultValue(this.imageWidth);\n    return new CssClassBuilder().append(this.cssClasses.image).append(this.cssClasses.adaptive, isDefaultSize).toString();\n  }\n  onLoadHandler() {\n    this.contentNotLoaded = false;\n  }\n  onErrorHandler() {\n    this.contentNotLoaded = true;\n  }\n  setRenderedMode(val) {\n    this.setPropertyValue(\"renderedMode\", val);\n  }\n  calculateRenderedMode() {\n    if (this.contentMode !== \"auto\") {\n      this.setRenderedMode(this.contentMode);\n    } else {\n      if (this.isYoutubeVideo()) {\n        this.setRenderedMode(\"youtube\");\n      } else if (this.isVideo()) {\n        this.setRenderedMode(\"video\");\n      } else {\n        this.setRenderedMode(\"image\");\n      }\n    }\n  }\n  isYoutubeVideo() {\n    return Helpers.isUrlYoutubeVideo(this.imageLink);\n  }\n  isVideo() {\n    let link = this.imageLink;\n    if (!link) return false;\n    link = link.toLowerCase();\n    for (let i = 0; i < videoSuffics.length; i++) {\n      if (link.endsWith(videoSuffics[i])) return true;\n    }\n    return false;\n  }\n}\n__decorate([property({\n  defaultValue: false\n})], QuestionImageModel.prototype, \"contentNotLoaded\", void 0);\nfunction getCorrectImageLink(val, isYouTube) {\n  if (!val || !Helpers.isUrlYoutubeVideo(val)) return isYouTube ? \"\" : val;\n  let res = val.toLocaleLowerCase();\n  if (res.indexOf(youtubeEmbed) > -1) return val;\n  let id = \"\";\n  for (var i = val.length - 1; i >= 0; i--) {\n    if (val[i] === \"=\" || val[i] === \"/\") break;\n    id = val[i] + id;\n  }\n  return youtubeUrl + youtubeEmbed + \"/\" + id;\n}\nSerializer.addClass(\"image\", [{\n  name: \"imageLink:file\",\n  serializationProperty: \"locImageLink\"\n}, {\n  name: \"altText\",\n  serializationProperty: \"locAltText\",\n  alternativeName: \"text\",\n  category: \"general\"\n}, {\n  name: \"contentMode\",\n  default: \"auto\",\n  choices: [\"auto\", \"image\", \"video\", \"youtube\"]\n}, {\n  name: \"imageFit\",\n  default: \"contain\",\n  choices: [\"none\", \"contain\", \"cover\", \"fill\"]\n}, {\n  name: \"imageHeight\",\n  default: \"150\"\n}, {\n  name: \"imageWidth\",\n  default: \"200\"\n}], function () {\n  return new QuestionImageModel(\"\");\n}, \"nonvalue\");\nQuestionFactory.Instance.registerQuestion(\"image\", name => {\n  return new QuestionImageModel(name);\n});\n\n/*!\n * Signature Pad v4.2.0 | https://github.com/szimek/signature_pad\n * (c) 2024 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n  constructor(x, y, pressure, time) {\n    if (isNaN(x) || isNaN(y)) {\n      throw new Error(`Point is invalid: (${x}, ${y})`);\n    }\n    this.x = +x;\n    this.y = +y;\n    this.pressure = pressure || 0;\n    this.time = time || Date.now();\n  }\n  distanceTo(start) {\n    return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n  }\n  equals(other) {\n    return this.x === other.x && this.y === other.y && this.pressure === other.pressure && this.time === other.time;\n  }\n  velocityFrom(start) {\n    return this.time !== start.time ? this.distanceTo(start) / (this.time - start.time) : 0;\n  }\n}\nclass Bezier {\n  static fromPoints(points, widths) {\n    const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n    const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n    return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n  }\n  static calculateControlPoints(s1, s2, s3) {\n    const dx1 = s1.x - s2.x;\n    const dy1 = s1.y - s2.y;\n    const dx2 = s2.x - s3.x;\n    const dy2 = s2.y - s3.y;\n    const m1 = {\n      x: (s1.x + s2.x) / 2.0,\n      y: (s1.y + s2.y) / 2.0\n    };\n    const m2 = {\n      x: (s2.x + s3.x) / 2.0,\n      y: (s2.y + s3.y) / 2.0\n    };\n    const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n    const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n    const dxm = m1.x - m2.x;\n    const dym = m1.y - m2.y;\n    const k = l2 / (l1 + l2);\n    const cm = {\n      x: m2.x + dxm * k,\n      y: m2.y + dym * k\n    };\n    const tx = s2.x - cm.x;\n    const ty = s2.y - cm.y;\n    return {\n      c1: new Point(m1.x + tx, m1.y + ty),\n      c2: new Point(m2.x + tx, m2.y + ty)\n    };\n  }\n  constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n    this.startPoint = startPoint;\n    this.control2 = control2;\n    this.control1 = control1;\n    this.endPoint = endPoint;\n    this.startWidth = startWidth;\n    this.endWidth = endWidth;\n  }\n  length() {\n    const steps = 10;\n    let length = 0;\n    let px;\n    let py;\n    for (let i = 0; i <= steps; i += 1) {\n      const t = i / steps;\n      const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n      const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n      if (i > 0) {\n        const xdiff = cx - px;\n        const ydiff = cy - py;\n        length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n      }\n      px = cx;\n      py = cy;\n    }\n    return length;\n  }\n  point(t, start, c1, c2, end) {\n    return start * (1.0 - t) * (1.0 - t) * (1.0 - t) + 3.0 * c1 * (1.0 - t) * (1.0 - t) * t + 3.0 * c2 * (1.0 - t) * t * t + end * t * t * t;\n  }\n}\nclass SignatureEventTarget {\n  constructor() {\n    try {\n      this._et = new EventTarget();\n    } catch (error) {\n      this._et = document;\n    }\n  }\n  addEventListener(type, listener, options) {\n    this._et.addEventListener(type, listener, options);\n  }\n  dispatchEvent(event) {\n    return this._et.dispatchEvent(event);\n  }\n  removeEventListener(type, callback, options) {\n    this._et.removeEventListener(type, callback, options);\n  }\n}\nfunction throttle(fn, wait = 250) {\n  let previous = 0;\n  let timeout = null;\n  let result;\n  let storedContext;\n  let storedArgs;\n  const later = () => {\n    previous = Date.now();\n    timeout = null;\n    result = fn.apply(storedContext, storedArgs);\n    if (!timeout) {\n      storedContext = null;\n      storedArgs = [];\n    }\n  };\n  return function wrapper(...args) {\n    const now = Date.now();\n    const remaining = wait - (now - previous);\n    storedContext = this;\n    storedArgs = args;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = fn.apply(storedContext, storedArgs);\n      if (!timeout) {\n        storedContext = null;\n        storedArgs = [];\n      }\n    } else if (!timeout) {\n      timeout = window.setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\nclass SignaturePad extends SignatureEventTarget {\n  constructor(canvas, options = {}) {\n    super();\n    this.canvas = canvas;\n    this._drawingStroke = false;\n    this._isEmpty = true;\n    this._lastPoints = [];\n    this._data = [];\n    this._lastVelocity = 0;\n    this._lastWidth = 0;\n    this._handleMouseDown = event => {\n      if (event.buttons === 1) {\n        this._strokeBegin(event);\n      }\n    };\n    this._handleMouseMove = event => {\n      this._strokeMoveUpdate(event);\n    };\n    this._handleMouseUp = event => {\n      if (event.buttons === 1) {\n        this._strokeEnd(event);\n      }\n    };\n    this._handleTouchStart = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      if (event.targetTouches.length === 1) {\n        const touch = event.changedTouches[0];\n        this._strokeBegin(touch);\n      }\n    };\n    this._handleTouchMove = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      const touch = event.targetTouches[0];\n      this._strokeMoveUpdate(touch);\n    };\n    this._handleTouchEnd = event => {\n      const wasCanvasTouched = event.target === this.canvas;\n      if (wasCanvasTouched) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n        const touch = event.changedTouches[0];\n        this._strokeEnd(touch);\n      }\n    };\n    this._handlePointerStart = event => {\n      event.preventDefault();\n      this._strokeBegin(event);\n    };\n    this._handlePointerMove = event => {\n      this._strokeMoveUpdate(event);\n    };\n    this._handlePointerEnd = event => {\n      if (this._drawingStroke) {\n        event.preventDefault();\n        this._strokeEnd(event);\n      }\n    };\n    this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n    this.minWidth = options.minWidth || 0.5;\n    this.maxWidth = options.maxWidth || 2.5;\n    this.throttle = 'throttle' in options ? options.throttle : 16;\n    this.minDistance = 'minDistance' in options ? options.minDistance : 5;\n    this.dotSize = options.dotSize || 0;\n    this.penColor = options.penColor || 'black';\n    this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n    this.compositeOperation = options.compositeOperation || 'source-over';\n    this.canvasContextOptions = 'canvasContextOptions' in options ? options.canvasContextOptions : {};\n    this._strokeMoveUpdate = this.throttle ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle) : SignaturePad.prototype._strokeUpdate;\n    this._ctx = canvas.getContext('2d', this.canvasContextOptions);\n    this.clear();\n    this.on();\n  }\n  clear() {\n    const {\n      _ctx: ctx,\n      canvas\n    } = this;\n    ctx.fillStyle = this.backgroundColor;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    this._data = [];\n    this._reset(this._getPointGroupOptions());\n    this._isEmpty = true;\n  }\n  fromDataURL(dataUrl, options = {}) {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      const ratio = options.ratio || window.devicePixelRatio || 1;\n      const width = options.width || this.canvas.width / ratio;\n      const height = options.height || this.canvas.height / ratio;\n      const xOffset = options.xOffset || 0;\n      const yOffset = options.yOffset || 0;\n      this._reset(this._getPointGroupOptions());\n      image.onload = () => {\n        this._ctx.drawImage(image, xOffset, yOffset, width, height);\n        resolve();\n      };\n      image.onerror = error => {\n        reject(error);\n      };\n      image.crossOrigin = 'anonymous';\n      image.src = dataUrl;\n      this._isEmpty = false;\n    });\n  }\n  toDataURL(type = 'image/png', encoderOptions) {\n    switch (type) {\n      case 'image/svg+xml':\n        if (typeof encoderOptions !== 'object') {\n          encoderOptions = undefined;\n        }\n        return `data:image/svg+xml;base64,${btoa(this.toSVG(encoderOptions))}`;\n      default:\n        if (typeof encoderOptions !== 'number') {\n          encoderOptions = undefined;\n        }\n        return this.canvas.toDataURL(type, encoderOptions);\n    }\n  }\n  on() {\n    this.canvas.style.touchAction = 'none';\n    this.canvas.style.msTouchAction = 'none';\n    this.canvas.style.userSelect = 'none';\n    const isIOS = /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n    if (window.PointerEvent && !isIOS) {\n      this._handlePointerEvents();\n    } else {\n      this._handleMouseEvents();\n      if ('ontouchstart' in window) {\n        this._handleTouchEvents();\n      }\n    }\n  }\n  off() {\n    this.canvas.style.touchAction = 'auto';\n    this.canvas.style.msTouchAction = 'auto';\n    this.canvas.style.userSelect = 'auto';\n    this.canvas.removeEventListener('pointerdown', this._handlePointerStart);\n    this.canvas.removeEventListener('pointermove', this._handlePointerMove);\n    this.canvas.ownerDocument.removeEventListener('pointerup', this._handlePointerEnd);\n    this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n    this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n    this.canvas.ownerDocument.removeEventListener('mouseup', this._handleMouseUp);\n    this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n    this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n    this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n  }\n  isEmpty() {\n    return this._isEmpty;\n  }\n  fromData(pointGroups, {\n    clear = true\n  } = {}) {\n    if (clear) {\n      this.clear();\n    }\n    this._fromData(pointGroups, this._drawCurve.bind(this), this._drawDot.bind(this));\n    this._data = this._data.concat(pointGroups);\n  }\n  toData() {\n    return this._data;\n  }\n  _getPointGroupOptions(group) {\n    return {\n      penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n      dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n      minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n      maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n      velocityFilterWeight: group && 'velocityFilterWeight' in group ? group.velocityFilterWeight : this.velocityFilterWeight,\n      compositeOperation: group && 'compositeOperation' in group ? group.compositeOperation : this.compositeOperation\n    };\n  }\n  _strokeBegin(event) {\n    const cancelled = !this.dispatchEvent(new CustomEvent('beginStroke', {\n      detail: event,\n      cancelable: true\n    }));\n    if (cancelled) {\n      return;\n    }\n    this._drawingStroke = true;\n    const pointGroupOptions = this._getPointGroupOptions();\n    const newPointGroup = Object.assign(Object.assign({}, pointGroupOptions), {\n      points: []\n    });\n    this._data.push(newPointGroup);\n    this._reset(pointGroupOptions);\n    this._strokeUpdate(event);\n  }\n  _strokeUpdate(event) {\n    if (!this._drawingStroke) {\n      return;\n    }\n    if (this._data.length === 0) {\n      this._strokeBegin(event);\n      return;\n    }\n    this.dispatchEvent(new CustomEvent('beforeUpdateStroke', {\n      detail: event\n    }));\n    const x = event.clientX;\n    const y = event.clientY;\n    const pressure = event.pressure !== undefined ? event.pressure : event.force !== undefined ? event.force : 0;\n    const point = this._createPoint(x, y, pressure);\n    const lastPointGroup = this._data[this._data.length - 1];\n    const lastPoints = lastPointGroup.points;\n    const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n    const isLastPointTooClose = lastPoint ? point.distanceTo(lastPoint) <= this.minDistance : false;\n    const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n    if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n      const curve = this._addPoint(point, pointGroupOptions);\n      if (!lastPoint) {\n        this._drawDot(point, pointGroupOptions);\n      } else if (curve) {\n        this._drawCurve(curve, pointGroupOptions);\n      }\n      lastPoints.push({\n        time: point.time,\n        x: point.x,\n        y: point.y,\n        pressure: point.pressure\n      });\n    }\n    this.dispatchEvent(new CustomEvent('afterUpdateStroke', {\n      detail: event\n    }));\n  }\n  _strokeEnd(event) {\n    if (!this._drawingStroke) {\n      return;\n    }\n    this._strokeUpdate(event);\n    this._drawingStroke = false;\n    this.dispatchEvent(new CustomEvent('endStroke', {\n      detail: event\n    }));\n  }\n  _handlePointerEvents() {\n    this._drawingStroke = false;\n    this.canvas.addEventListener('pointerdown', this._handlePointerStart);\n    this.canvas.addEventListener('pointermove', this._handlePointerMove);\n    this.canvas.ownerDocument.addEventListener('pointerup', this._handlePointerEnd);\n  }\n  _handleMouseEvents() {\n    this._drawingStroke = false;\n    this.canvas.addEventListener('mousedown', this._handleMouseDown);\n    this.canvas.addEventListener('mousemove', this._handleMouseMove);\n    this.canvas.ownerDocument.addEventListener('mouseup', this._handleMouseUp);\n  }\n  _handleTouchEvents() {\n    this.canvas.addEventListener('touchstart', this._handleTouchStart);\n    this.canvas.addEventListener('touchmove', this._handleTouchMove);\n    this.canvas.addEventListener('touchend', this._handleTouchEnd);\n  }\n  _reset(options) {\n    this._lastPoints = [];\n    this._lastVelocity = 0;\n    this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n    this._ctx.fillStyle = options.penColor;\n    this._ctx.globalCompositeOperation = options.compositeOperation;\n  }\n  _createPoint(x, y, pressure) {\n    const rect = this.canvas.getBoundingClientRect();\n    return new Point(x - rect.left, y - rect.top, pressure, new Date().getTime());\n  }\n  _addPoint(point, options) {\n    const {\n      _lastPoints\n    } = this;\n    _lastPoints.push(point);\n    if (_lastPoints.length > 2) {\n      if (_lastPoints.length === 3) {\n        _lastPoints.unshift(_lastPoints[0]);\n      }\n      const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2], options);\n      const curve = Bezier.fromPoints(_lastPoints, widths);\n      _lastPoints.shift();\n      return curve;\n    }\n    return null;\n  }\n  _calculateCurveWidths(startPoint, endPoint, options) {\n    const velocity = options.velocityFilterWeight * endPoint.velocityFrom(startPoint) + (1 - options.velocityFilterWeight) * this._lastVelocity;\n    const newWidth = this._strokeWidth(velocity, options);\n    const widths = {\n      end: newWidth,\n      start: this._lastWidth\n    };\n    this._lastVelocity = velocity;\n    this._lastWidth = newWidth;\n    return widths;\n  }\n  _strokeWidth(velocity, options) {\n    return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n  }\n  _drawCurveSegment(x, y, width) {\n    const ctx = this._ctx;\n    ctx.moveTo(x, y);\n    ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n    this._isEmpty = false;\n  }\n  _drawCurve(curve, options) {\n    const ctx = this._ctx;\n    const widthDelta = curve.endWidth - curve.startWidth;\n    const drawSteps = Math.ceil(curve.length()) * 2;\n    ctx.beginPath();\n    ctx.fillStyle = options.penColor;\n    for (let i = 0; i < drawSteps; i += 1) {\n      const t = i / drawSteps;\n      const tt = t * t;\n      const ttt = tt * t;\n      const u = 1 - t;\n      const uu = u * u;\n      const uuu = uu * u;\n      let x = uuu * curve.startPoint.x;\n      x += 3 * uu * t * curve.control1.x;\n      x += 3 * u * tt * curve.control2.x;\n      x += ttt * curve.endPoint.x;\n      let y = uuu * curve.startPoint.y;\n      y += 3 * uu * t * curve.control1.y;\n      y += 3 * u * tt * curve.control2.y;\n      y += ttt * curve.endPoint.y;\n      const width = Math.min(curve.startWidth + ttt * widthDelta, options.maxWidth);\n      this._drawCurveSegment(x, y, width);\n    }\n    ctx.closePath();\n    ctx.fill();\n  }\n  _drawDot(point, options) {\n    const ctx = this._ctx;\n    const width = options.dotSize > 0 ? options.dotSize : (options.minWidth + options.maxWidth) / 2;\n    ctx.beginPath();\n    this._drawCurveSegment(point.x, point.y, width);\n    ctx.closePath();\n    ctx.fillStyle = options.penColor;\n    ctx.fill();\n  }\n  _fromData(pointGroups, drawCurve, drawDot) {\n    for (const group of pointGroups) {\n      const {\n        points\n      } = group;\n      const pointGroupOptions = this._getPointGroupOptions(group);\n      if (points.length > 1) {\n        for (let j = 0; j < points.length; j += 1) {\n          const basicPoint = points[j];\n          const point = new Point(basicPoint.x, basicPoint.y, basicPoint.pressure, basicPoint.time);\n          if (j === 0) {\n            this._reset(pointGroupOptions);\n          }\n          const curve = this._addPoint(point, pointGroupOptions);\n          if (curve) {\n            drawCurve(curve, pointGroupOptions);\n          }\n        }\n      } else {\n        this._reset(pointGroupOptions);\n        drawDot(points[0], pointGroupOptions);\n      }\n    }\n  }\n  toSVG({\n    includeBackgroundColor = false\n  } = {}) {\n    const pointGroups = this._data;\n    const ratio = Math.max(window.devicePixelRatio || 1, 1);\n    const minX = 0;\n    const minY = 0;\n    const maxX = this.canvas.width / ratio;\n    const maxY = this.canvas.height / ratio;\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n    svg.setAttribute('width', maxX.toString());\n    svg.setAttribute('height', maxY.toString());\n    if (includeBackgroundColor && this.backgroundColor) {\n      const rect = document.createElement('rect');\n      rect.setAttribute('width', '100%');\n      rect.setAttribute('height', '100%');\n      rect.setAttribute('fill', this.backgroundColor);\n      svg.appendChild(rect);\n    }\n    this._fromData(pointGroups, (curve, {\n      penColor\n    }) => {\n      const path = document.createElement('path');\n      if (!isNaN(curve.control1.x) && !isNaN(curve.control1.y) && !isNaN(curve.control2.x) && !isNaN(curve.control2.y)) {\n        const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` + `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` + `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` + `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n        path.setAttribute('d', attr);\n        path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n        path.setAttribute('stroke', penColor);\n        path.setAttribute('fill', 'none');\n        path.setAttribute('stroke-linecap', 'round');\n        svg.appendChild(path);\n      }\n    }, (point, {\n      penColor,\n      dotSize,\n      minWidth,\n      maxWidth\n    }) => {\n      const circle = document.createElement('circle');\n      const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n      circle.setAttribute('r', size.toString());\n      circle.setAttribute('cx', point.x.toString());\n      circle.setAttribute('cy', point.y.toString());\n      circle.setAttribute('fill', penColor);\n      svg.appendChild(circle);\n    });\n    return svg.outerHTML;\n  }\n}\nvar defaultWidth = 300;\nvar defaultHeight = 200;\n/**\n * A class that describes the Signature question type.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/signature-pad-widget-javascript/ (linkStyle))\n */\nclass QuestionSignaturePadModel extends QuestionFileModelBase {\n  getPenColorFromTheme() {\n    const _survey = this.survey;\n    return !!_survey && !!_survey.themeVariables && _survey.themeVariables[\"--sjs-primary-backcolor\"];\n  }\n  updateColors(signaturePad) {\n    const penColorFromTheme = this.getPenColorFromTheme();\n    const penColorProperty = this.getPropertyByName(\"penColor\");\n    signaturePad.penColor = this.penColor || penColorFromTheme || penColorProperty.defaultValue || \"#1ab394\";\n    const backgroundColorProperty = this.getPropertyByName(\"backgroundColor\");\n    const backgroundColorFromTheme = penColorFromTheme ? \"transparent\" : undefined;\n    const background = !!this.backgroundImage ? \"transparent\" : this.backgroundColor;\n    signaturePad.backgroundColor = background || backgroundColorFromTheme || backgroundColorProperty.defaultValue || \"#ffffff\";\n  }\n  getCssRoot(cssClasses) {\n    return new CssClassBuilder().append(super.getCssRoot(cssClasses)).append(cssClasses.small, this.signatureWidth.toString() === \"300\").toString();\n  }\n  getFormat() {\n    return this.dataFormat === \"jpeg\" ? \"image/jpeg\" : this.dataFormat === \"svg\" ? \"image/svg+xml\" : \"\";\n  }\n  updateValue() {\n    if (this.signaturePad) {\n      var data = this.signaturePad.toDataURL(this.getFormat());\n      this.valueIsUpdatingInternally = true;\n      this.value = data;\n      this.valueIsUpdatingInternally = false;\n    }\n  }\n  constructor(name) {\n    super(name);\n    this.valueIsUpdatingInternally = false;\n    this._loadedData = undefined;\n    this.updateValueHandler = () => {\n      this._loadedData = undefined;\n      this.scaleCanvas(true, true);\n    };\n  }\n  getType() {\n    return \"signaturepad\";\n  }\n  afterRenderQuestionElement(el) {\n    if (DomWindowHelper.isAvailable()) {\n      if (!!el) {\n        if (!this.isDesignMode) {\n          this.initSignaturePad(el);\n        }\n        this.element = el;\n      }\n    }\n    super.afterRenderQuestionElement(el);\n  }\n  beforeDestroyQuestionElement(el) {\n    if (!!el) {\n      this.destroySignaturePad(el);\n    }\n  }\n  themeChanged(theme) {\n    if (!!this.signaturePad) {\n      this.updateColors(this.signaturePad);\n    }\n  }\n  resizeCanvas() {\n    this.canvas.width = this.containerWidth;\n    this.canvas.height = this.containerHeight;\n  }\n  scaleCanvas(refresh = true, resize = false) {\n    const canvas = this.canvas;\n    const scale = canvas.offsetWidth / this.containerWidth;\n    if (this.scale != scale || resize) {\n      this.scale = scale;\n      canvas.style.width = this.renderedCanvasWidth;\n      this.resizeCanvas();\n      this.signaturePad.minWidth = this.penMinWidth * scale;\n      this.signaturePad.maxWidth = this.penMaxWidth * scale;\n      canvas.getContext(\"2d\").scale(1 / scale, 1 / scale);\n      if (refresh) {\n        this.loadPreview(this.value);\n      }\n    }\n  }\n  fromUrl(url) {\n    this.isFileLoading = true;\n    if (isBase64URL(url)) {\n      this.fromDataUrl(url);\n      this.isFileLoading = false;\n    } else {\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.src = url;\n      img.onload = () => {\n        if (!!this.canvas) {\n          const canvas = DomDocumentHelper.createElement(\"canvas\");\n          canvas.width = this.containerWidth;\n          canvas.height = this.containerHeight;\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n          var dataURL = canvas.toDataURL(this.getFormat());\n          this.fromDataUrl(dataURL);\n        }\n        this.isFileLoading = false;\n      };\n      img.onerror = () => {\n        this.isFileLoading = false;\n      };\n    }\n  }\n  fromDataUrl(data) {\n    this._loadedData = data;\n    if (this.signaturePad) {\n      let ratio = 1;\n      let scale = this.scale;\n      if (this.dataFormat === \"svg\") {\n        const devicePixelRatio = DomWindowHelper.getDevicePixelRatio();\n        ratio = devicePixelRatio || 1;\n        scale = 1;\n      }\n      const options = {\n        width: this.canvas.width * scale / ratio,\n        height: this.canvas.height * scale / ratio\n      };\n      this.signaturePad.fromDataURL(data, options);\n    }\n  }\n  get loadedData() {\n    return this._loadedData;\n  }\n  loadPreview(newValue) {\n    if (!newValue) {\n      if (this.signaturePad && this.canvas) {\n        this.canvas.getContext(\"2d\").clearRect(0, 0, this.canvas.width * this.scale, this.canvas.height * this.scale);\n        this.signaturePad.clear();\n      }\n      this.valueWasChangedFromLastUpload = false;\n      return;\n    }\n    if (this.storeDataAsText) {\n      this.fromDataUrl(newValue);\n    } else {\n      if (this.loadedData) {\n        this.fromDataUrl(this.loadedData);\n      } else {\n        var newValues = !!newValue ? [newValue] : [];\n        if (!!this._previewLoader) {\n          this._previewLoader.dispose();\n        }\n        this.isFileLoading = true;\n        this._previewLoader = new FileLoader(this, (status, loaded) => {\n          if (status === \"success\" && loaded && loaded.length > 0 && loaded[0].content) {\n            this.fromDataUrl(loaded[0].content);\n            this.isFileLoading = false;\n          } else if (status === \"skipped\") {\n            this.fromUrl(newValue);\n          }\n          this._previewLoader.dispose();\n          this._previewLoader = undefined;\n        });\n        this._previewLoader.load(newValues);\n      }\n    }\n  }\n  onChangeQuestionValue(newValue) {\n    super.onChangeQuestionValue(newValue);\n    if (!this.isLoadingFromJson) {\n      this._loadedData = undefined;\n      this.loadPreview(newValue);\n    }\n  }\n  onSurveyLoad() {\n    super.onSurveyLoad();\n    this.loadPreview(this.value);\n  }\n  initSignaturePad(el) {\n    var canvas = el.getElementsByTagName(\"canvas\")[0];\n    this.canvas = canvas;\n    this.resizeCanvas();\n    var signaturePad = new SignaturePad(canvas, {\n      backgroundColor: \"#ffffff\"\n    });\n    this.signaturePad = signaturePad;\n    if (this.isInputReadOnly) {\n      signaturePad.off();\n    }\n    this.readOnlyChangedCallback = () => {\n      if (this.isInputReadOnly) {\n        signaturePad.off();\n      } else {\n        signaturePad.on();\n      }\n    };\n    this.updateColors(signaturePad);\n    signaturePad.addEventListener(\"beginStroke\", () => {\n      this.scaleCanvas();\n      this.isDrawingValue = true;\n      canvas.focus();\n    }, {\n      once: false\n    });\n    signaturePad.addEventListener(\"endStroke\", () => {\n      this.isDrawingValue = false;\n      if (this.storeDataAsText) {\n        this.updateValue();\n      } else {\n        this.valueWasChangedFromLastUpload = true;\n      }\n    }, {\n      once: false\n    });\n    this.updateValueHandler();\n    this.readOnlyChangedCallback();\n    var propertyChangedHandler = (sender, options) => {\n      if (options.name === \"signatureWidth\" || options.name === \"signatureHeight\") {\n        if (!this.valueIsUpdatingInternally) this.updateValueHandler();\n      }\n    };\n    this.onPropertyChanged.add(propertyChangedHandler);\n    this.signaturePad.propertyChangedHandler = propertyChangedHandler;\n  }\n  destroySignaturePad(el) {\n    if (this.signaturePad) {\n      this.onPropertyChanged.remove(this.signaturePad.propertyChangedHandler);\n      this.signaturePad.off();\n    }\n    this.readOnlyChangedCallback = null;\n    this.signaturePad = null;\n  }\n  /**\n   * Specifies the format in which to store the signature image.\n   *\n   * Possible values:\n   *\n   * - `\"png\"` (default)\n   * - `\"jpeg\"`\n   * - `\"svg\"`\n   */\n  get dataFormat() {\n    return this.getPropertyValue(\"dataFormat\");\n  }\n  set dataFormat(val) {\n    this.setPropertyValue(\"dataFormat\", correctFormatData(val));\n  }\n  /**\n   * Specifies the width of the signature area. Accepts positive integer numbers.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/signature-pad-widget-javascript/ (linkStyle))\n   */\n  get signatureWidth() {\n    return this.getPropertyValue(\"signatureWidth\");\n  }\n  set signatureWidth(val) {\n    this.setPropertyValue(\"signatureWidth\", val);\n  }\n  /**\n   * Specifies the height of the signature area. Accepts positive integer numbers.\n   */\n  get signatureHeight() {\n    return this.getPropertyValue(\"signatureHeight\");\n  }\n  set signatureHeight(val) {\n    this.setPropertyValue(\"signatureHeight\", val);\n  }\n  get containerHeight() {\n    return this.signatureHeight || defaultHeight;\n  }\n  get containerWidth() {\n    return this.signatureWidth || defaultWidth;\n  }\n  get renderedCanvasWidth() {\n    return this.signatureAutoScaleEnabled ? \"100%\" : this.containerWidth + \"px\";\n  }\n  //todo: need to remove this property\n  get height() {\n    return this.getPropertyValue(\"height\");\n  }\n  set height(val) {\n    this.setPropertyValue(\"height\", val);\n  }\n  /**\n   * Specifies whether to display a button that clears the signature area.\n   *\n   * Default value: `true`\n   */\n  get allowClear() {\n    return this.getPropertyValue(\"allowClear\");\n  }\n  set allowClear(val) {\n    this.setPropertyValue(\"allowClear\", val);\n  }\n  get canShowClearButton() {\n    const hasSignature = !this.nothingIsDrawn();\n    const isUploading = this.isUploading;\n    return !this.isInputReadOnly && this.allowClear && hasSignature && !isUploading;\n  }\n  /**\n   * Specifies a color for the pen.\n   *\n   * This property accepts color values in the following formats:\n   *\n   * - Hexadecimal colors (`\"#FF0000\"`)\n   * - RGB colors (`\"rgb(255,0,0)\"`)\n   * - Color names (`\"red\"`)\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/upload-signature-pad-data-to-server/ (linkStyle))\n   * @see backgroundColor\n   */\n  get penColor() {\n    return this.getPropertyValue(\"penColor\");\n  }\n  set penColor(val) {\n    this.setPropertyValue(\"penColor\", val);\n    !!this.signaturePad && this.updateColors(this.signaturePad);\n  }\n  /**\n   * Specifies a color for the signature area background. Ignored if [`backgroundImage`](#backgroundImage) is set.\n   *\n   * This property accepts color values in the following formats:\n   *\n   * - Hexadecimal colors (`\"#FF0000\"`)\n   * - RGB colors (`\"rgb(255,0,0)\"`)\n   * - Color names (`\"red\"`)\n   * @see penColor\n   */\n  get backgroundColor() {\n    return this.getPropertyValue(\"backgroundColor\");\n  }\n  set backgroundColor(val) {\n    this.setPropertyValue(\"backgroundColor\", val);\n    !!this.signaturePad && this.updateColors(this.signaturePad);\n  }\n  /**\n   * An image to display in the background of the signature area. Accepts a base64 or URL string value.\n   * @see backgroundColor\n   */\n  get backgroundImage() {\n    return this.getPropertyValue(\"backgroundImage\");\n  }\n  set backgroundImage(val) {\n    this.setPropertyValue(\"backgroundImage\", val);\n    !!this.signaturePad && this.updateColors(this.signaturePad);\n  }\n  get clearButtonCaption() {\n    return this.getLocalizationString(\"clearCaption\");\n  }\n  get locRenderedPlaceholder() {\n    return this.isReadOnly ? this.locPlaceholderReadOnly : this.locPlaceholder;\n  }\n  nothingIsDrawn() {\n    const isDrawing = this.isDrawingValue;\n    const isEmpty = this.isEmpty();\n    const isUploading = this.isUploading;\n    const valueWasChangedFromLastUpload = this.valueWasChangedFromLastUpload;\n    return !isDrawing && isEmpty && !isUploading && !valueWasChangedFromLastUpload;\n  }\n  needShowPlaceholder() {\n    return this.showPlaceholder && this.nothingIsDrawn();\n  }\n  onBlurCore(event) {\n    super.onBlurCore(event);\n    if (!this.storeDataAsText) {\n      if (!this.element.contains(event.relatedTarget)) {\n        if (!this.valueWasChangedFromLastUpload) return;\n        this.uploadFiles([dataUrl2File(this.signaturePad.toDataURL(this.getFormat()), this.name + \".\" + correctFormatData(this.dataFormat), this.getFormat())]);\n        this.valueWasChangedFromLastUpload = false;\n      }\n    }\n  }\n  uploadResultItemToValue(r) {\n    return r.content;\n  }\n  setValueFromResult(arg) {\n    this.valueIsUpdatingInternally = true;\n    this.value = (arg === null || arg === void 0 ? void 0 : arg.length) ? arg.map(r => r.content)[0] : undefined;\n    this.valueIsUpdatingInternally = false;\n  }\n  clearValue(keepComment) {\n    this.valueWasChangedFromLastUpload = false;\n    super.clearValue(keepComment);\n    this._loadedData = undefined;\n    this.loadPreview(this.value);\n  }\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    //todo: need to remove this code\n    if (this.signatureWidth === 300 && !!this.width && typeof this.width === \"number\" && this.width) {\n      ConsoleWarnings.warn(\"Use signatureWidth property to set width for the signature pad\");\n      this.signatureWidth = this.width;\n      this.width = undefined;\n    }\n    if (this.signatureHeight === 200 && !!this.height) {\n      ConsoleWarnings.warn(\"Use signatureHeight property to set width for the signature pad\");\n      this.signatureHeight = this.height;\n      this.height = undefined;\n    }\n  }\n}\n__decorate([property({\n  defaultValue: false\n})], QuestionSignaturePadModel.prototype, \"isDrawingValue\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionSignaturePadModel.prototype, \"isReadyForUpload\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionSignaturePadModel.prototype, \"valueWasChangedFromLastUpload\", void 0);\n__decorate([property()], QuestionSignaturePadModel.prototype, \"signatureAutoScaleEnabled\", void 0);\n__decorate([property()], QuestionSignaturePadModel.prototype, \"penMinWidth\", void 0);\n__decorate([property()], QuestionSignaturePadModel.prototype, \"penMaxWidth\", void 0);\n__decorate([property({})], QuestionSignaturePadModel.prototype, \"showPlaceholder\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"signaturePlaceHolder\"\n  }\n})], QuestionSignaturePadModel.prototype, \"placeholder\", void 0);\n__decorate([property({\n  localizable: {\n    defaultStr: \"signaturePlaceHolderReadOnly\"\n  }\n})], QuestionSignaturePadModel.prototype, \"placeholderReadOnly\", void 0);\nfunction correctFormatData(val) {\n  if (!val) val = \"png\";\n  val = val.replace(\"image/\", \"\").replace(\"+xml\", \"\");\n  if (val !== \"jpeg\" && val !== \"svg\") val = \"png\";\n  return val;\n}\nSerializer.addClass(\"signaturepad\", [{\n  name: \"signatureWidth:number\",\n  category: \"general\",\n  default: 300\n}, {\n  name: \"signatureHeight:number\",\n  category: \"general\",\n  default: 200\n}, {\n  name: \"signatureAutoScaleEnabled:boolean\",\n  category: \"general\",\n  default: false\n}, {\n  name: \"penMinWidth:number\",\n  category: \"general\",\n  default: 0.5\n}, {\n  name: \"penMaxWidth:number\",\n  category: \"general\",\n  default: 2.5\n},\n//need to remove this property\n{\n  name: \"height:number\",\n  category: \"general\",\n  visible: false\n}, {\n  name: \"allowClear:boolean\",\n  category: \"general\",\n  default: true\n}, {\n  name: \"showPlaceholder:boolean\",\n  category: \"general\",\n  default: true\n}, {\n  name: \"placeholder:text\",\n  serializationProperty: \"locPlaceholder\",\n  category: \"general\",\n  dependsOn: \"showPlaceholder\",\n  visibleIf: obj => obj.showPlaceholder\n}, {\n  name: \"placeholderReadOnly:text\",\n  serializationProperty: \"locPlaceholderReadOnly\",\n  category: \"general\",\n  dependsOn: \"showPlaceholder\",\n  visibleIf: obj => obj.showPlaceholder\n}, {\n  name: \"backgroundImage:file\",\n  category: \"general\"\n}, {\n  name: \"penColor:color\",\n  category: \"general\"\n}, {\n  name: \"backgroundColor:color\",\n  category: \"general\"\n}, {\n  name: \"dataFormat\",\n  category: \"general\",\n  default: \"png\",\n  choices: [{\n    value: \"png\",\n    text: \"PNG\"\n  }, {\n    value: \"jpeg\",\n    text: \"JPEG\"\n  }, {\n    value: \"svg\",\n    text: \"SVG\"\n  }],\n  onSettingValue: (obj, val) => {\n    return correctFormatData(val);\n  }\n}, {\n  name: \"defaultValue\",\n  visible: false\n}, {\n  name: \"correctAnswer\",\n  visible: false\n}, {\n  name: \"storeDataAsText:boolean\",\n  default: true\n}, {\n  name: \"waitForUpload:boolean\",\n  default: false\n}], function () {\n  return new QuestionSignaturePadModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"signaturepad\", name => {\n  return new QuestionSignaturePadModel(name);\n});\nclass QuestionPanelDynamicItemTextProcessor extends QuestionTextProcessor {\n  constructor(data, panelItem, variableName) {\n    super(variableName);\n    this.data = data;\n    this.panelItem = panelItem;\n    this.variableName = variableName;\n    this.sharedQuestions = {};\n  }\n  get survey() {\n    return this.panelItem.getSurvey();\n  }\n  get panel() {\n    return this.panelItem.panel;\n  }\n  get panelIndex() {\n    return !!this.data ? this.data.getItemIndex(this.panelItem) : -1;\n  }\n  get visiblePanelIndex() {\n    return !!this.data ? this.data.getVisibleItemIndex(this.panelItem) : -1;\n  }\n  getValues() {\n    return this.panelItem.getAllValues();\n  }\n  getQuestionByName(name) {\n    var res = super.getQuestionByName(name);\n    if (!!res) return res;\n    const index = this.panelIndex;\n    res = index > -1 ? this.data.getSharedQuestionFromArray(name, index) : undefined;\n    const qName = !!res ? res.name : name;\n    this.sharedQuestions[qName] = name;\n    return res;\n  }\n  getQuestionDisplayText(question) {\n    const name = this.sharedQuestions[question.name];\n    if (!name) return super.getQuestionDisplayText(question);\n    const val = this.panelItem.getValue(name);\n    return question.getDisplayValue(true, val);\n  }\n  onCustomProcessText(textValue) {\n    if (textValue.name == QuestionPanelDynamicItem.IndexVariableName) {\n      var index = this.panelIndex;\n      if (index > -1) {\n        textValue.isExists = true;\n        textValue.value = index + 1;\n        return true;\n      }\n    }\n    if (textValue.name == QuestionPanelDynamicItem.VisibleIndexVariableName) {\n      var index = this.visiblePanelIndex;\n      if (index > -1) {\n        textValue.isExists = true;\n        textValue.value = index + 1;\n        return true;\n      }\n    }\n    if (textValue.name.toLowerCase().indexOf(QuestionPanelDynamicItem.ParentItemVariableName + \".\") == 0) {\n      var q = this.data;\n      if (!!q && !!q.parentQuestion && !!q.parent && !!q.parent.data) {\n        var processor = new QuestionPanelDynamicItemTextProcessor(q.parentQuestion, q.parent.data, QuestionPanelDynamicItem.ItemVariableName);\n        var text = QuestionPanelDynamicItem.ItemVariableName + textValue.name.substring(QuestionPanelDynamicItem.ParentItemVariableName.length);\n        var res = processor.processValue(text, textValue.returnDisplayValue);\n        textValue.isExists = res.isExists;\n        textValue.value = res.value;\n      }\n      return true;\n    }\n    return false;\n  }\n}\nclass PanelDynamicTabbedMenuItem extends Action {\n  constructor(innerItem) {\n    super(innerItem);\n  }\n}\nclass QuestionPanelDynamicItem {\n  constructor(data, panel) {\n    this.data = data;\n    this.panelValue = panel;\n    this.textPreProcessor = new QuestionPanelDynamicItemTextProcessor(data, this, QuestionPanelDynamicItem.ItemVariableName);\n    this.setSurveyImpl();\n  }\n  get panel() {\n    return this.panelValue;\n  }\n  setSurveyImpl() {\n    this.panel.setSurveyImpl(this);\n  }\n  getValue(name) {\n    var values = this.getAllValues();\n    return values[name];\n  }\n  setValue(name, newValue) {\n    const oldItemData = this.data.getPanelItemData(this);\n    const oldValue = !!oldItemData ? oldItemData[name] : undefined;\n    if (Helpers.isTwoValueEquals(newValue, oldValue, false, true, false)) return;\n    this.data.setPanelItemData(this, name, Helpers.getUnbindValue(newValue));\n    const questions = this.panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      if (q.getValueName() !== name) {\n        q.checkBindings(name, newValue);\n      }\n      const suffix = settings.commentSuffix;\n      if (name.endsWith(suffix)) {\n        name = name.substring(0, name.length - suffix.length);\n        const cQ = this.panel.getQuestionByName(name);\n        if (!!cQ) {\n          newValue = cQ.value;\n        }\n      }\n      const triggerName = QuestionPanelDynamicItem.ItemVariableName + \".\" + name;\n      q.runTriggers(triggerName, newValue);\n    }\n  }\n  getVariable(name) {\n    return undefined;\n  }\n  setVariable(name, newValue) {}\n  getComment(name) {\n    var result = this.getValue(name + settings.commentSuffix);\n    return result ? result : \"\";\n  }\n  setComment(name, newValue, locNotification) {\n    this.setValue(name + settings.commentSuffix, newValue);\n  }\n  findQuestionByName(name) {\n    if (!name) return undefined;\n    const prefix = QuestionPanelDynamicItem.ItemVariableName + \".\";\n    if (name.indexOf(prefix) === 0) {\n      return this.panel.getQuestionByName(name.substring(prefix.length));\n    }\n    const survey = this.getSurvey();\n    return !!survey ? survey.getQuestionByName(name) : null;\n  }\n  getEditingSurveyElement() {\n    return undefined;\n  }\n  getAllValues() {\n    return this.data.getPanelItemData(this);\n  }\n  getFilteredValues() {\n    var values = {};\n    var surveyValues = !!this.data && !!this.data.getRootData() ? this.data.getRootData().getFilteredValues() : {};\n    for (var key in surveyValues) {\n      values[key] = surveyValues[key];\n    }\n    values[QuestionPanelDynamicItem.ItemVariableName] = this.getAllValues();\n    if (!!this.data) {\n      const indexStr = QuestionPanelDynamicItem.IndexVariableName;\n      const visibleIndexStr = QuestionPanelDynamicItem.VisibleIndexVariableName;\n      delete values[indexStr];\n      delete values[visibleIndexStr];\n      values[indexStr.toLowerCase()] = this.data.getItemIndex(this);\n      values[visibleIndexStr.toLowerCase()] = this.data.getVisibleItemIndex(this);\n      const q = this.data;\n      if (!!q && !!q.parentQuestion && !!q.parent) {\n        values[QuestionPanelDynamicItem.ParentItemVariableName] = q.parent.getValue();\n      }\n    }\n    return values;\n  }\n  getFilteredProperties() {\n    if (!!this.data && !!this.data.getRootData()) return this.data.getRootData().getFilteredProperties();\n    return {\n      survey: this.getSurvey()\n    };\n  }\n  getSurveyData() {\n    return this;\n  }\n  getSurvey() {\n    return this.data ? this.data.getSurvey() : null;\n  }\n  getTextProcessor() {\n    return this.textPreProcessor;\n  }\n}\nQuestionPanelDynamicItem.ItemVariableName = \"panel\";\nQuestionPanelDynamicItem.ParentItemVariableName = \"parentpanel\";\nQuestionPanelDynamicItem.IndexVariableName = \"panelIndex\";\nQuestionPanelDynamicItem.VisibleIndexVariableName = \"visiblePanelIndex\";\nclass QuestionPanelDynamicTemplateSurveyImpl {\n  constructor(data) {\n    this.data = data;\n  }\n  getSurveyData() {\n    return null;\n  }\n  getSurvey() {\n    return this.data.getSurvey();\n  }\n  getTextProcessor() {\n    return null;\n  }\n}\n/**\n  * A class that describes the Dynamic Panel question type.\n  *\n  * Dynamic Panel allows respondents to add panels based on a panel template and delete them. Specify the [`templateElements`](https://surveyjs.io/form-library/documentation/questionpaneldynamicmodel#templateElements) property to configure panel template elements.\n  *\n  * [View Demo](https://surveyjs.io/form-library/examples/questiontype-paneldynamic/ (linkStyle))\n  */\nclass QuestionPanelDynamicModel extends Question {\n  constructor(name) {\n    super(name);\n    this._renderedPanels = [];\n    this.isPanelsAnimationRunning = false;\n    this.isAddingNewPanels = false;\n    this.isSetPanelItemData = {};\n    this.createNewArray(\"panels\", panel => {\n      this.onPanelAdded(panel);\n    }, panel => {\n      this.onPanelRemoved(panel);\n    });\n    this.createNewArray(\"visiblePanels\");\n    this.templateValue = this.createAndSetupNewPanelObject();\n    this.template.renderWidth = \"100%\";\n    this.template.selectedElementInDesign = this;\n    this.template.addElementCallback = element => {\n      this.addOnPropertyChangedCallback(element);\n      this.rebuildPanels();\n    };\n    this.template.removeElementCallback = () => {\n      this.rebuildPanels();\n    };\n    this.createLocalizableString(\"confirmDeleteText\", this, false, \"confirmDelete\");\n    this.createLocalizableString(\"keyDuplicationError\", this, false, true);\n    this.createLocalizableString(\"addPanelText\", this, false, \"addPanel\");\n    this.createLocalizableString(\"removePanelText\", this, false, \"removePanel\");\n    this.createLocalizableString(\"prevPanelText\", this, false, \"pagePrevText\");\n    this.createLocalizableString(\"nextPanelText\", this, false, \"pageNextText\");\n    this.createLocalizableString(\"noEntriesText\", this, false, \"noEntriesText\");\n    this.createLocalizableString(\"editPanelText\", this, false, \"editText\");\n    this.createLocalizableString(\"templateTabTitle\", this, true, \"panelDynamicTabTextFormat\");\n    this.createLocalizableString(\"tabTitlePlaceholder\", this, true, \"tabTitlePlaceholder\");\n    this.registerPropertyChangedHandlers([\"panelsState\"], () => {\n      this.setPanelsState();\n    });\n    this.registerPropertyChangedHandlers([\"newPanelPosition\", \"displayMode\", \"showProgressBar\"], () => {\n      this.updateFooterActions();\n    });\n    this.registerPropertyChangedHandlers([\"allowAddPanel\"], () => {\n      this.updateNoEntriesTextDefaultLoc();\n    });\n    this.registerPropertyChangedHandlers([\"minPanelCount\"], () => {\n      this.onMinPanelCountChanged();\n    });\n    this.registerPropertyChangedHandlers([\"maxPanelCount\"], () => {\n      this.onMaxPanelCountChanged();\n    });\n    this.registerPropertyChangedHandlers([\"templateQuestionTitleLocation\", \"templateQuestionTitleWidth\"], () => {\n      const panels = this.visiblePanelsCore;\n      if (panels) panels.forEach(panel => {\n        panel.updateElementCss(true);\n      });\n    });\n  }\n  get isCompositeQuestion() {\n    return true;\n  }\n  get hasSingleInput() {\n    return false;\n  }\n  get isContainer() {\n    return true;\n  }\n  getFirstQuestionToFocus(withError) {\n    for (var i = 0; i < this.visiblePanelsCore.length; i++) {\n      const res = this.visiblePanelsCore[i].getFirstQuestionToFocus(withError);\n      if (!!res) return res;\n    }\n    if (this.showAddPanelButton && (!withError || this.currentErrorCount > 0)) return this;\n    return null;\n  }\n  getFirstInputElementId() {\n    if (this.showAddPanelButton) return this.addButtonId;\n    return super.getFirstInputElementId();\n  }\n  getFirstErrorInputElementId() {\n    const question = this.getFirstQuestionToFocus(true);\n    return question ? question.inputId : super.getFirstErrorInputElementId();\n  }\n  setSurveyImpl(value, isLight) {\n    super.setSurveyImpl(value, isLight);\n    this.setTemplatePanelSurveyImpl();\n    this.setPanelsSurveyImpl();\n  }\n  assignOnPropertyChangedToTemplate() {\n    var elements = this.template.elements;\n    for (var i = 0; i < elements.length; i++) {\n      this.addOnPropertyChangedCallback(elements[i]);\n    }\n  }\n  addOnPropertyChangedCallback(element) {\n    if (element.isQuestion) {\n      element.setParentQuestion(this);\n    }\n    element.onPropertyChanged.add((element, options) => {\n      this.onTemplateElementPropertyChanged(element, options);\n    });\n    if (element.isPanel) {\n      element.addElementCallback = element => {\n        this.addOnPropertyChangedCallback(element);\n      };\n    }\n  }\n  onTemplateElementPropertyChanged(element, options) {\n    if (this.isLoadingFromJson || this.useTemplatePanel || this.panelsCore.length == 0) return;\n    var property = Serializer.findProperty(element.getType(), options.name);\n    if (!property) return;\n    var panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      var question = panels[i].getQuestionByName(element.name);\n      if (!!question && question[options.name] !== options.newValue) {\n        question[options.name] = options.newValue;\n      }\n    }\n  }\n  get useTemplatePanel() {\n    return this.isDesignMode && !this.isContentElement;\n  }\n  getType() {\n    return \"paneldynamic\";\n  }\n  clearOnDeletingContainer() {\n    this.panelsCore.forEach(panel => {\n      panel.clearOnDeletingContainer();\n    });\n  }\n  get isAllowTitleLeft() {\n    return false;\n  }\n  removeElement(element) {\n    return this.template.removeElement(element);\n  }\n  /**\n   * A `PanelModel` object used as a template to create dynamic panels.\n   * @see PanelModel\n   * @see templateElements\n   * @see templateTitle\n   * @see panels\n   * @see panelCount\n   */\n  get template() {\n    return this.templateValue;\n  }\n  getPanel() {\n    return this.template;\n  }\n  /**\n   * An array of questions and panels included in a panel template.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see template\n   * @see panels\n   * @see panelCount\n   */\n  get templateElements() {\n    return this.template.elements;\n  }\n  /**\n   * A template for panel titles.\n   *\n   * The template can contain the following placeholders:\n   *\n   * - `{panelIndex}` - A panel index within the collection of all panels. Starts with 1.\n   * - `{visiblePanelIndex}` - A panel index within the collection of visible panels. Starts with 1.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/breakable-loop/ (linkStyle))\n   * @see template\n   * @see templateDescription\n   * @see templateElements\n   * @see panels\n   * @see panelCount\n   */\n  get templateTitle() {\n    return this.template.title;\n  }\n  set templateTitle(newValue) {\n    this.template.title = newValue;\n  }\n  get locTemplateTitle() {\n    return this.template.locTitle;\n  }\n  /**\n   * A template for tab titles. Applies when [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#displayMode) is `\"tab\"`.\n   *\n   * The template can contain the following placeholders:\n   *\n   * - `{panelIndex}` - A panel index within the collection of all panels. Starts with 1.\n   * - `{visiblePanelIndex}` - A panel index within the collection of visible panels. Starts with 1.\n   *\n   * If you want to customize individual tab titles, handle `SurveyModel`'s [`onGetDynamicPanelTabTitle`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#onGetDynamicPanelTabTitle) event.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/tabbed-interface-for-duplicate-group-option/ (linkStyle))\n   * @see templateTitle\n   * @see tabTitlePlaceholder\n   * @see displayMode\n   */\n  get templateTabTitle() {\n    return this.locTemplateTabTitle.text;\n  }\n  set templateTabTitle(newValue) {\n    this.locTemplateTabTitle.text = newValue;\n  }\n  get locTemplateTabTitle() {\n    return this.getLocalizableString(\"templateTabTitle\");\n  }\n  /**\n   * A placeholder for tab titles that applies when the [`templateTabTitle`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateTabTitle) expression doesn't produce a meaningful value.\n   *\n   * Default value: `\"New Panel\"` (taken from a [localization dictionary](https://github.com/surveyjs/survey-library/tree/01bd8abd0c574719956d4d579d48c8010cd389d4/packages/survey-core/src/localization))\n   */\n  get tabTitlePlaceholder() {\n    return this.locTabTitlePlaceholder.text;\n  }\n  set tabTitlePlaceholder(newValue) {\n    this.locTabTitlePlaceholder.text = newValue;\n  }\n  get locTabTitlePlaceholder() {\n    return this.getLocalizableString(\"tabTitlePlaceholder\");\n  }\n  /**\n   * A template for panel descriptions.\n   * @see template\n   * @see templateTitle\n   * @see templateElements\n   * @see panels\n   * @see panelCount\n   */\n  get templateDescription() {\n    return this.template.description;\n  }\n  set templateDescription(newValue) {\n    this.template.description = newValue;\n  }\n  get locTemplateDescription() {\n    return this.template.locDescription;\n  }\n  /**\n   * A Boolean expression that is evaluated against each panel. If the expression evaluates to `false`, the panel becomes hidden.\n   *\n   * A survey parses and runs all expressions on startup. If any values used in the expression change, the survey re-evaluates it.\n   *\n   * Use the `{panel}` placeholder to reference the current panel in the expression.\n   *\n   * Refer to the following help topic for more information: [Conditional Visibility](https://surveyjs.io/form-library/documentation/design-survey/conditional-logic#conditional-visibility).\n   * @see visibleIf\n   * @see visiblePanels\n   */\n  get templateVisibleIf() {\n    return this.getPropertyValue(\"templateVisibleIf\");\n  }\n  set templateVisibleIf(val) {\n    this.setPropertyValue(\"templateVisibleIf\", val);\n    this.template.visibleIf = val;\n  }\n  get items() {\n    var res = [];\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      res.push(this.panelsCore[i].data);\n    }\n    return res;\n  }\n  /**\n   * An array of `PanelModel` objects created based on a panel template.\n   * @see PanelModel\n   * @see template\n   * @see panelCount\n   */\n  get panels() {\n    this.buildPanelsFirstTime(this.canBuildPanels);\n    return this.panelsCore;\n  }\n  /**\n   * An array of currently visible panels ([`PanelModel`](https://surveyjs.io/form-library/documentation/api-reference/panel-model) objects).\n   * @see templateVisibleIf\n   */\n  get visiblePanels() {\n    this.buildPanelsFirstTime(this.canBuildPanels);\n    return this.visiblePanelsCore;\n  }\n  get panelsCore() {\n    return this.getPropertyValue(\"panels\");\n  }\n  get visiblePanelsCore() {\n    return this.getPropertyValue(\"visiblePanels\");\n  }\n  onPanelAdded(panel) {\n    this.onPanelRemovedCore(panel);\n    if (!panel.visible) return;\n    let index = 0;\n    const panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      if (panels[i] === panel) break;\n      if (panels[i].visible) index++;\n    }\n    this.visiblePanelsCore.splice(index, 0, panel);\n    this.addTabFromToolbar(panel, index);\n    if (!this.currentPanel) {\n      this.currentPanel = panel;\n    }\n    this.updateRenderedPanels();\n  }\n  onPanelRemoved(panel) {\n    let index = this.onPanelRemovedCore(panel);\n    if (this.currentPanel === panel) {\n      const visPanels = this.visiblePanelsCore;\n      if (index >= visPanels.length) index = visPanels.length - 1;\n      this.currentPanel = index >= 0 ? visPanels[index] : null;\n    }\n    this.updateRenderedPanels();\n  }\n  onPanelRemovedCore(panel) {\n    const visPanels = this.visiblePanelsCore;\n    let index = visPanels.indexOf(panel);\n    if (index > -1) {\n      visPanels.splice(index, 1);\n      this.removeTabFromToolbar(panel);\n    }\n    return index;\n  }\n  /**\n   * A zero-based index of the currently displayed panel.\n   *\n   * When `displayMode` is `\"list\"` or Dynamic Panel is empty (`panelCount` is 0), this property contains -1.\n   * @see currentPanel\n   * @see panels\n   * @see panelCount\n   * @see displayMode\n   */\n  get currentIndex() {\n    if (this.isRenderModeList) return -1;\n    if (this.useTemplatePanel) return 0;\n    return this.visiblePanelsCore.indexOf(this.currentPanel);\n  }\n  set currentIndex(val) {\n    if (val < 0 || this.visiblePanelCount < 1) return;\n    if (val >= this.visiblePanelCount) val = this.visiblePanelCount - 1;\n    this.currentPanel = this.visiblePanelsCore[val];\n  }\n  /**\n   * A `PanelModel` object that is the currently displayed panel.\n   *\n   * When `displayMode` is `\"list\"` or Dynamic Panel is empty (`panelCount` is 0), this property contains `null`.\n   * @see currentIndex\n   * @see panels\n   * @see panelCount\n   * @see displayMode\n   */\n  get currentPanel() {\n    if (this.isDesignMode) return this.template;\n    if (this.isRenderModeList || this.useTemplatePanel) return null;\n    let res = this.getPropertyValue(\"currentPanel\", null);\n    if (!res && this.visiblePanelCount > 0) {\n      res = this.visiblePanelsCore[0];\n      this.currentPanel = res;\n    }\n    return res;\n  }\n  set currentPanel(val) {\n    if (this.isRenderModeList || this.useTemplatePanel) return;\n    const curPanel = this.getPropertyValue(\"currentPanel\");\n    const index = !!val ? this.visiblePanelsCore.indexOf(val) : -1;\n    if (!!val && index < 0 || val === curPanel) return;\n    if (curPanel) {\n      curPanel.onHidingContent();\n    }\n    this.setPropertyValue(\"currentPanel\", val);\n    this.updateRenderedPanels();\n    this.updateFooterActions();\n    this.updateTabToolbarItemsPressedState();\n    this.fireCallback(this.currentIndexChangedCallback);\n    if (index > -1 && this.survey) {\n      const options = {\n        panel: val,\n        visiblePanelIndex: index\n      };\n      this.survey.dynamicPanelCurrentIndexChanged(this, options);\n    }\n  }\n  updateRenderedPanels() {\n    if (this.isRenderModeList) {\n      this.renderedPanels = [].concat(this.visiblePanels);\n    } else if (this.currentPanel) {\n      this.renderedPanels = [this.currentPanel];\n    } else {\n      this.renderedPanels = [];\n    }\n  }\n  set renderedPanels(val) {\n    if (this.renderedPanels.length == 0 || val.length == 0) {\n      this.blockAnimations();\n      this.panelsAnimation.sync(val);\n      this.releaseAnimations();\n    } else {\n      this.isPanelsAnimationRunning = true;\n      this.panelsAnimation.sync(val);\n    }\n  }\n  get renderedPanels() {\n    return this._renderedPanels;\n  }\n  getPanelsAnimationOptions() {\n    const getDirectionCssClass = () => {\n      if (this.isRenderModeList) return \"\";\n      let cssClass = new CssClassBuilder();\n      let isRemoving = false;\n      const leavingPanel = this.renderedPanels.filter(el => el !== this.currentPanel)[0];\n      let leavingPanelIndex = this.visiblePanels.indexOf(leavingPanel);\n      if (leavingPanelIndex < 0) {\n        isRemoving = true;\n        leavingPanelIndex = this.removedPanelIndex;\n      }\n      return cssClass.append(\"sv-pd-animation-adding\", !!this.focusNewPanelCallback).append(\"sv-pd-animation-removing\", isRemoving).append(\"sv-pd-animation-left\", leavingPanelIndex <= this.currentIndex).append(\"sv-pd-animation-right\", leavingPanelIndex > this.currentIndex).toString();\n    };\n    return {\n      getRerenderEvent: () => this.onElementRerendered,\n      getAnimatedElement: panel => {\n        var _a, _b;\n        if (panel && this.cssContent) {\n          const contentSelector = classesToSelector(this.cssContent);\n          return (_b = (_a = this.getWrapperElement()) === null || _a === void 0 ? void 0 : _a.querySelector(`:scope ${contentSelector} #${panel.id}`)) === null || _b === void 0 ? void 0 : _b.parentElement;\n        }\n      },\n      getEnterOptions: () => {\n        const cssClass = new CssClassBuilder().append(this.cssClasses.panelWrapperEnter).append(getDirectionCssClass()).toString();\n        return {\n          onBeforeRunAnimation: el => {\n            if (this.focusNewPanelCallback) {\n              const scolledElement = this.isRenderModeList ? el : el.parentElement;\n              SurveyElement.ScrollElementToViewCore(scolledElement, false, false, {\n                behavior: \"smooth\"\n              });\n            }\n            if (!this.isRenderModeList && el.parentElement) {\n              setPropertiesOnElementForAnimation(el.parentElement, {\n                heightTo: el.offsetHeight + \"px\"\n              });\n            } else {\n              prepareElementForVerticalAnimation(el);\n            }\n          },\n          onAfterRunAnimation: el => {\n            cleanHtmlElementAfterAnimation(el);\n            if (el.parentElement) {\n              cleanHtmlElementAfterAnimation(el.parentElement);\n            }\n          },\n          cssClass: cssClass\n        };\n      },\n      getLeaveOptions: () => {\n        const cssClass = new CssClassBuilder().append(this.cssClasses.panelWrapperLeave).append(getDirectionCssClass()).toString();\n        return {\n          onBeforeRunAnimation: el => {\n            if (!this.isRenderModeList && el.parentElement) {\n              setPropertiesOnElementForAnimation(el.parentElement, {\n                heightFrom: el.offsetHeight + \"px\"\n              });\n            } else {\n              prepareElementForVerticalAnimation(el);\n            }\n          },\n          onAfterRunAnimation: el => {\n            cleanHtmlElementAfterAnimation(el);\n            if (el.parentElement) {\n              cleanHtmlElementAfterAnimation(el.parentElement);\n            }\n          },\n          cssClass: cssClass\n        };\n      },\n      isAnimationEnabled: () => {\n        return this.animationAllowed && !!this.getWrapperElement();\n      }\n    };\n  }\n  disablePanelsAnimations() {\n    this.panelsCore.forEach(panel => {\n      panel.blockAnimations();\n    });\n  }\n  enablePanelsAnimations() {\n    this.panelsCore.forEach(panel => {\n      panel.releaseAnimations();\n    });\n  }\n  updatePanelsAnimation() {\n    this._panelsAnimations = new (this.isRenderModeList ? AnimationGroup : AnimationTab)(this.getPanelsAnimationOptions(), (val, isTempUpdate) => {\n      this._renderedPanels = val;\n      if (!isTempUpdate) {\n        this.isPanelsAnimationRunning = false;\n        this.focusNewPanel();\n      }\n    }, () => this._renderedPanels);\n  }\n  get panelsAnimation() {\n    if (!this._panelsAnimations) {\n      this.updatePanelsAnimation();\n    }\n    return this._panelsAnimations;\n  }\n  onHidingContent() {\n    super.onHidingContent();\n    if (this.currentPanel) {\n      this.currentPanel.onHidingContent();\n    } else {\n      this.visiblePanelsCore.forEach(panel => panel.onHidingContent());\n    }\n  }\n  /**\n   * Specifies whether to display a confirmation dialog when a respondent wants to delete a panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see confirmDeleteText\n   */\n  get confirmDelete() {\n    return this.getPropertyValue(\"confirmDelete\");\n  }\n  set confirmDelete(val) {\n    this.setPropertyValue(\"confirmDelete\", val);\n  }\n  /**\n   * Specifies a key question. Set this property to the name of a question used in the template, and Dynamic Panel will display `keyDuplicationError` if a user tries to enter a duplicate value in this question.\n   * @see keyDuplicationError\n   */\n  get keyName() {\n    return this.getPropertyValue(\"keyName\", \"\");\n  }\n  set keyName(val) {\n    this.setPropertyValue(\"keyName\", val);\n  }\n  /**\n   * A message displayed in a confirmation dialog that appears when a respondent wants to delete a panel.\n   * @see confirmDelete\n   */\n  get confirmDeleteText() {\n    return this.getLocalizableStringText(\"confirmDeleteText\");\n  }\n  set confirmDeleteText(val) {\n    this.setLocalizableStringText(\"confirmDeleteText\", val);\n  }\n  get locConfirmDeleteText() {\n    return this.getLocalizableString(\"confirmDeleteText\");\n  }\n  /**\n   * An error message displayed when users enter a duplicate value into a question that accepts only unique values (`isUnique` is set to `true` or `keyName` is specified).\n   *\n   * A default value for this property is taken from a [localization dictionary](https://github.com/surveyjs/survey-library/tree/01bd8abd0c574719956d4d579d48c8010cd389d4/packages/survey-core/src/localization). Refer to the following help topic for more information: [Localization & Globalization](https://surveyjs.io/form-library/documentation/localization).\n   * @see keyName\n   */\n  get keyDuplicationError() {\n    return this.getLocalizableStringText(\"keyDuplicationError\");\n  }\n  set keyDuplicationError(val) {\n    this.setLocalizableStringText(\"keyDuplicationError\", val);\n  }\n  get locKeyDuplicationError() {\n    return this.getLocalizableString(\"keyDuplicationError\");\n  }\n  /**\n   * A caption for the Previous button. Applies only if `displayMode` is different from `\"list\"`.\n   * @see displayMode\n   * @see isPrevButtonVisible\n   */\n  get prevPanelText() {\n    return this.getLocalizableStringText(\"prevPanelText\");\n  }\n  set prevPanelText(val) {\n    this.setLocalizableStringText(\"prevPanelText\", val);\n  }\n  get locPrevPanelText() {\n    return this.getLocalizableString(\"prevPanelText\");\n  }\n  /**\n   * @deprecated Use the [`prevPanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#prevPanelText) property instead.\n   */\n  get panelPrevText() {\n    return this.prevPanelText;\n  }\n  set panelPrevText(val) {\n    this.prevPanelText = val;\n  }\n  get locPanelPrevText() {\n    return this.locPrevPanelText;\n  }\n  /**\n   * A caption for the Next button. Applies only if `displayMode` is different from `\"list\"`.\n   * @see displayMode\n   * @see isNextButtonVisible\n   */\n  get nextPanelText() {\n    return this.getLocalizableStringText(\"nextPanelText\");\n  }\n  set nextPanelText(val) {\n    this.setLocalizableStringText(\"nextPanelText\", val);\n  }\n  get locNextPanelText() {\n    return this.getLocalizableString(\"nextPanelText\");\n  }\n  /**\n   * @deprecated Use the [`nextPanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#nextPanelText) property instead.\n   */\n  get panelNextText() {\n    return this.nextPanelText;\n  }\n  set panelNextText(val) {\n    this.nextPanelText = val;\n  }\n  get locPanelNextText() {\n    return this.locNextPanelText;\n  }\n  /**\n   * A caption for the Add Panel button.\n   */\n  get addPanelText() {\n    return this.getLocalizableStringText(\"addPanelText\");\n  }\n  set addPanelText(value) {\n    this.setLocalizableStringText(\"addPanelText\", value);\n  }\n  get locAddPanelText() {\n    return this.getLocalizableString(\"addPanelText\");\n  }\n  /**\n   * @deprecated Use the [`addPanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#addPanelText) property instead.\n   */\n  get panelAddText() {\n    return this.addPanelText;\n  }\n  set panelAddText(value) {\n    this.addPanelText = value;\n  }\n  get locPanelAddText() {\n    return this.locAddPanelText;\n  }\n  /**\n   * A caption for the Remove Panel button.\n   * @see removePanelButtonLocation\n   */\n  get removePanelText() {\n    return this.getLocalizableStringText(\"removePanelText\");\n  }\n  set removePanelText(val) {\n    this.setLocalizableStringText(\"removePanelText\", val);\n  }\n  get locRemovePanelText() {\n    return this.getLocalizableString(\"removePanelText\");\n  }\n  /**\n   * @deprecated Use the [`removePanelText`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#removePanelText) property instead.\n   */\n  get panelRemoveText() {\n    return this.removePanelText;\n  }\n  set panelRemoveText(val) {\n    this.removePanelText = val;\n  }\n  get locPanelRemoveText() {\n    return this.locRemovePanelText;\n  }\n  get isProgressTopShowing() {\n    return this.displayMode == \"carousel\" && (this.progressBarLocation === \"top\" || this.progressBarLocation === \"topBottom\");\n  }\n  get isProgressBottomShowing() {\n    return this.displayMode == \"carousel\" && (this.progressBarLocation === \"bottom\" || this.progressBarLocation === \"topBottom\");\n  }\n  /**\n   * Indicates whether the Previous button is visible.\n   * @see currentIndex\n   * @see currentPanel\n   * @see prevPanelText\n   */\n  get isPrevButtonVisible() {\n    return this.currentIndex > 0;\n  }\n  get isPrevButtonShowing() {\n    return this.isPrevButtonVisible;\n  }\n  /**\n   * Indicates whether the Next button is visible.\n   * @see currentIndex\n   * @see currentPanel\n   * @see nextPanelText\n   */\n  get isNextButtonVisible() {\n    return this.currentIndex >= 0 && this.currentIndex < this.visiblePanelCount - 1;\n  }\n  get isNextButtonShowing() {\n    return this.isNextButtonVisible;\n  }\n  get isRangeShowing() {\n    return this.showProgressBar && this.currentIndex >= 0 && this.visiblePanelCount > 1;\n  }\n  getElementsInDesign(includeHidden = false) {\n    return includeHidden ? [this.template] : this.templateElements;\n  }\n  prepareValueForPanelCreating() {\n    this.addingNewPanelsValue = this.value;\n    this.isAddingNewPanels = true;\n    this.isNewPanelsValueChanged = false;\n  }\n  setValueAfterPanelsCreating() {\n    this.isAddingNewPanels = false;\n    if (this.isNewPanelsValueChanged) {\n      this.isValueChangingInternally = true;\n      this.value = this.addingNewPanelsValue;\n      this.isValueChangingInternally = false;\n    }\n  }\n  getValueCore() {\n    return this.isAddingNewPanels ? this.addingNewPanelsValue : super.getValueCore();\n  }\n  setValueCore(newValue) {\n    if (this.isAddingNewPanels) {\n      this.isNewPanelsValueChanged = true;\n      this.addingNewPanelsValue = newValue;\n    } else {\n      super.setValueCore(newValue);\n    }\n  }\n  setIsMobile(val) {\n    super.setIsMobile(val);\n    (this.panelsCore || []).forEach(panel => panel.getQuestions(true).forEach(question => {\n      question.setIsMobile(val);\n    }));\n  }\n  themeChanged(theme) {\n    super.themeChanged(theme);\n    (this.panelsCore || []).forEach(panel => panel.getQuestions(true).forEach(question => {\n      question.themeChanged(theme);\n    }));\n  }\n  /**\n   * The number of panels in Dynamic Panel.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see minPanelCount\n   * @see maxPanelCount\n   */\n  get panelCount() {\n    return !this.canBuildPanels || this.wasNotRenderedInSurvey ? this.getPropertyValue(\"panelCount\") : this.panelsCore.length;\n  }\n  set panelCount(val) {\n    if (val < 0) return;\n    if (!this.isLoadingFromJson && this.isDesignMode) {\n      const min = this.minPanelCount;\n      if (val < min) {\n        val = min;\n      }\n      const max = this.maxPanelCount;\n      if (max > 0 && val > max) {\n        val = max;\n      }\n    }\n    if (!this.canBuildPanels || this.wasNotRenderedInSurvey) {\n      this.setPropertyValue(\"panelCount\", val);\n      this.updateFooterActions();\n      return;\n    }\n    if (val == this.panelsCore.length || this.useTemplatePanel) return;\n    this.updateBindings(\"panelCount\", val);\n    this.prepareValueForPanelCreating();\n    const isAddingOnePanel = val - this.panelCount === 1;\n    for (let i = this.panelCount; i < val; i++) {\n      const panel = this.createNewPanel();\n      this.panelsCore.push(panel);\n      if (this.displayMode == \"list\" && this.panelsState != \"default\") {\n        if (this.panelsState === \"expanded\") {\n          panel.expand();\n        } else {\n          if (!!panel.title) {\n            panel.collapse();\n          }\n        }\n      }\n    }\n    if (isAddingOnePanel) {\n      this.singleInputOnAddItem(this.settingPanelCountBasedOnValue);\n    }\n    if (val < this.panelCount) {\n      this.panelsCore.splice(val, this.panelCount - val);\n    }\n    this.disablePanelsAnimations();\n    this.setValueAfterPanelsCreating();\n    this.setValueBasedOnPanelCount();\n    this.reRunCondition();\n    this.updateFooterActions();\n    this.fireCallback(this.panelCountChangedCallback);\n    this.enablePanelsAnimations();\n  }\n  /**\n   * Returns the number of visible panels in Dynamic Panel.\n   * @see templateVisibleIf\n   */\n  get visiblePanelCount() {\n    return this.visiblePanels.length;\n  }\n  /**\n   * Specifies whether users can expand and collapse panels. Applies if `displayMode` is `\"list\"` and the `templateTitle` property is specified.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - All panels are displayed in full and cannot be collapsed.\n   * - `\"expanded\"` - All panels are displayed in full and can be collapsed in the UI.\n   * - `\"collapsed\"` - All panels display only their titles and descriptions and can be expanded in the UI.\n   * - `\"firstExpanded\"` - Only the first panel is displayed in full; other panels are collapsed and can be expanded in the UI.\n   * @see displayMode\n   * @see templateTitle\n   */\n  get panelsState() {\n    return this.getPropertyValue(\"panelsState\");\n  }\n  set panelsState(val) {\n    this.setPropertyValue(\"panelsState\", val);\n  }\n  setTemplatePanelSurveyImpl() {\n    this.template.setSurveyImpl(this.useTemplatePanel ? this.surveyImpl : new QuestionPanelDynamicTemplateSurveyImpl(this));\n  }\n  setPanelsSurveyImpl() {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var panel = this.panelsCore[i];\n      if (panel == this.template) continue;\n      panel.setSurveyImpl(panel.data);\n    }\n  }\n  setPanelsState() {\n    if (this.useTemplatePanel || this.displayMode != \"list\" || !this.templateTitle) return;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var state = this.panelsState;\n      if (state === \"firstExpanded\") {\n        state = i === 0 ? \"expanded\" : \"collapsed\";\n      }\n      this.panelsCore[i].state = state;\n    }\n  }\n  setValueBasedOnPanelCount() {\n    var value = this.value;\n    if (!value || !Array.isArray(value)) value = [];\n    if (value.length == this.panelCount) return;\n    for (var i = value.length; i < this.panelCount; i++) {\n      const panelValue = this.panels[i].getValue();\n      const val = !Helpers.isValueEmpty(panelValue) ? panelValue : {};\n      value.push(val);\n    }\n    if (value.length > this.panelCount) {\n      value.splice(this.panelCount, value.length - this.panelCount);\n    }\n    this.isValueChangingInternally = true;\n    this.value = value;\n    this.isValueChangingInternally = false;\n  }\n  /**\n   * A minimum number of panels in Dynamic Panel. Users cannot delete panels if `panelCount` equals `minPanelCount`.\n   *\n   * Default value: 0\n   * @see panelCount\n   * @see maxPanelCount\n   * @see allowRemovePanel\n   */\n  get minPanelCount() {\n    return this.getPropertyValue(\"minPanelCount\");\n  }\n  set minPanelCount(val) {\n    if (val < 0) val = 0;\n    this.setPropertyValue(\"minPanelCount\", val);\n  }\n  onMinPanelCountChanged() {\n    const val = this.minPanelCount;\n    if (val > this.maxPanelCount) this.maxPanelCount = val;\n    if (this.panelCount < val) this.panelCount = val;\n  }\n  /**\n   * A maximum number of panels in Dynamic Panel. Users cannot add new panels if `panelCount` equals `maxPanelCount`.\n   *\n   * Default value: 100 (inherited from [`settings.panel.maxPanelCount`](https://surveyjs.io/form-library/documentation/settings#panelMaximumPanelCount))\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/duplicate-group-of-fields-in-form/ (linkStyle))\n   * @see panelCount\n   * @see minPanelCount\n   * @see allowAddPanel\n   */\n  get maxPanelCount() {\n    return this.getPropertyValue(\"maxPanelCount\");\n  }\n  set maxPanelCount(val) {\n    if (val <= 0) return;\n    if (val > settings.panel.maxPanelCount) val = settings.panel.maxPanelCount;\n    this.setPropertyValue(\"maxPanelCount\", val);\n    this.updateFooterActions();\n  }\n  onMaxPanelCountChanged() {\n    const val = this.maxPanelCount;\n    if (val < this.minPanelCount) this.minPanelCount = val;\n    if (this.panelCount > val) this.panelCount = val;\n    this.updateFooterActions();\n  }\n  /**\n   * Specifies whether users are allowed to add new panels.\n   *\n   * Default value: `true`\n   *\n   * By default, users add new panels to the end. If you want to let users insert a new panel after the current panel, set the [`newPanelPosition`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#newPanelPosition) property to `\"next\"`.\n   * @see canAddPanel\n   * @see allowRemovePanel\n   */\n  get allowAddPanel() {\n    return this.getPropertyValue(\"allowAddPanel\");\n  }\n  set allowAddPanel(val) {\n    this.setPropertyValue(\"allowAddPanel\", val);\n  }\n  get addButtonId() {\n    return this.id + \"addPanel\";\n  }\n  /**\n   * Specifies the position of newly added panels.\n   *\n   * Possible values:\n   *\n   * - `\"last\"` (default) - New panels are added to the end.\n   * - `\"next\"` - New panels are inserted after the current panel.\n   * @see allowAddPanel\n   * @see addPanel\n   */\n  get newPanelPosition() {\n    return this.getPropertyValue(\"newPanelPosition\");\n  }\n  set newPanelPosition(val) {\n    this.setPropertyValue(\"newPanelPosition\", val);\n  }\n  /**\n   * Specifies whether users are allowed to delete panels.\n   *\n   * Default value: `true`\n   * @see canRemovePanel\n   * @see allowAddPanel\n   */\n  get allowRemovePanel() {\n    return this.getPropertyValue(\"allowRemovePanel\");\n  }\n  set allowRemovePanel(val) {\n    this.setPropertyValue(\"allowRemovePanel\", val);\n  }\n  /**\n   * Gets or sets the location of question titles relative to their input fields.\n   *\n   * - `\"default\"` (default) - Inherits the setting from the Dynamic Panel's `titleLocation` property, which in turn inherits the [`questionTitleLocation`](https://surveyjs.io/form-library/documentation/surveymodel#questionTitleLocation) property value specified for the Dynamic Panel's container (page or survey).\n   * - `\"top\"` - Displays question titles above input fields.\n   * - `\"bottom\"` - Displays question titles below input fields.\n   * - `\"left\"` - Displays question titles to the left of input fields.\n   * - `\"hidden\"` - Hides question titles.\n   * @see titleLocation\n   */\n  get templateQuestionTitleLocation() {\n    return this.getPropertyValue(\"templateQuestionTitleLocation\");\n  }\n  set templateQuestionTitleLocation(val) {\n    this.setPropertyValue(\"templateQuestionTitleLocation\", val);\n  }\n  /**\n   * @deprecated Use the [`templateQuestionTitleLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateQuestionTitleLocation) property instead.\n   */\n  get templateTitleLocation() {\n    return this.templateQuestionTitleLocation;\n  }\n  set templateTitleLocation(val) {\n    this.templateQuestionTitleLocation = val;\n  }\n  /**\n   * Sets consistent width for question titles in CSS values. Applies only when [`templateQuestionTitleLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#templateQuestionTitleLocation) evaluates to `\"left\"`.\n   *\n   * Default value: `undefined` (inherits the actual value from the [`questionTitleWidth`](https://surveyjs.io/form-library/documentation/api-reference/page-model#questionTitleWidth) property of the parent panel or page.\n   */\n  get templateQuestionTitleWidth() {\n    return this.template.questionTitleWidth;\n  }\n  set templateQuestionTitleWidth(val) {\n    this.template.questionTitleWidth = val;\n  }\n  /**\n   * Specifies the error message position.\n   *\n   * Possible values:\n   *\n   * - `\"default\"` (default) - Inherits the setting from the [`errorLocation`](#errorLocation) property.\n   * - `\"top\"` - Displays error messages above questions.\n   * - `\"bottom\"` - Displays error messages below questions.\n   */\n  get templateErrorLocation() {\n    return this.getPropertyValue(\"templateErrorLocation\");\n  }\n  set templateErrorLocation(value) {\n    this.setPropertyValue(\"templateErrorLocation\", value.toLowerCase());\n  }\n  resetSingleInput() {\n    super.resetSingleInput();\n    this.locTemplateTitle.onGetTextCallback = null;\n  }\n  getSingleInputQuestionsCore(question, checkDynamic) {\n    this.onFirstRendering();\n    const res = new Array();\n    const panels = this.visiblePanels;\n    if (checkDynamic) {\n      for (let i = 0; i < panels.length; i++) {\n        const panel = panels[i];\n        if (!panel.hasValueAnyQuestion(true) || panel.hasErrors(false, false)) {\n          this.fillSingleInputQuestionsByPanel(res, panel);\n        }\n      }\n    }\n    return this.getSingleInputQuestionsForDynamic(question, res);\n  }\n  fillSingleInputQuestionsInContainer(res, innerQuestion) {\n    const panel = this.getPanelByQuestion(innerQuestion);\n    this.fillSingleInputQuestionsByPanel(res, panel);\n  }\n  fillSingleInputQuestionsByPanel(res, panel) {\n    if (panel) {\n      panel.questions.forEach(q => q.addNestedQuestion(res, true, false, false));\n    }\n  }\n  getSingleQuestionLocTitleCore() {\n    const res = this.locTemplateTitle;\n    res.onGetTextCallback = text => {\n      const q = this.singleInputQuestion;\n      if (!q) return text;\n      return this.processSingleInputTitle(text, this.getPanelByQuestion(q));\n    };\n    return res;\n  }\n  processSingleInputTitle(text, panel) {\n    if (!text) text = this.getSingleInputTitleTemplate();\n    if (!panel) return text;\n    return panel.getProcessedText(text);\n  }\n  getSingleInputTitleTemplate() {\n    return this.getLocalizationString(\"panelDynamicTabTextFormat\");\n  }\n  getPanelByQuestion(question) {\n    let parent = question.parent;\n    while (!!parent && !!parent.parent) {\n      parent = parent.parent;\n    }\n    return parent;\n  }\n  getSingleInputAddTextCore() {\n    if (!this.canAddPanel) return undefined;\n    return this.panelAddText;\n  }\n  singleInputAddItemCore() {\n    this.addPanelUI();\n  }\n  singleInputRemoveItemCore(question) {\n    const panel = this.getPanelByQuestion(question);\n    const index = this.visiblePanelsCore.indexOf(panel);\n    this.removePanelUI(index);\n  }\n  getSingleQuestionOnChange(index) {\n    const panels = this.visiblePanelsCore;\n    if (panels.length > 0) {\n      if (index < 0 || index >= panels.length) index = panels.length - 1;\n      const row = panels[index];\n      const vQs = row.visibleQuestions;\n      if (vQs.length > 0) {\n        return vQs[0];\n      }\n    }\n    return null;\n  }\n  createSingleInputSummary() {\n    const res = new QuestionSingleInputSummary(this, this.locNoEntriesText);\n    const items = new Array();\n    this.visiblePanels.forEach(panel => {\n      const locText = new LocalizableString(this, true, undefined, this.locTemplateTitle.localizationName);\n      locText.setJson(this.locTemplateTitle.getJson());\n      locText.onGetTextCallback = text => {\n        return this.processSingleInputTitle(this.templateTitle, panel);\n      };\n      const bntEdit = new Action({\n        locTitle: this.getLocalizableString(\"editPanelText\"),\n        action: () => {\n          this.singInputEditPanel(panel);\n        }\n      });\n      const btnRemove = this.canRemovePanel ? new Action({\n        locTitle: this.locPanelRemoveText,\n        action: () => {\n          this.removePanelUI(panel);\n        }\n      }) : undefined;\n      items.push(new QuestionSingleInputSummaryItem(locText, bntEdit, btnRemove));\n    });\n    res.items = items;\n    return res;\n  }\n  singleInputMoveToFirstCore() {\n    var _a;\n    let panel = (_a = this.singleInputQuestion) === null || _a === void 0 ? void 0 : _a.parent;\n    while (!!panel && !!panel.parent) {\n      panel = panel.parent;\n    }\n    this.singInputEditPanel(panel);\n  }\n  singInputEditPanel(panel) {\n    if (!panel) return;\n    const qs = panel.visibleQuestions;\n    if (qs.length > 0) {\n      this.setSingleInputQuestion(qs[0]);\n    }\n  }\n  /**\n   * Specifies whether to display survey element numbers within the dynamic panel and how to calculate them.\n   *\n   * Possible values:\n   *\n   * - `\"onSurvey\"` - Continues numbering across the entire survey.\n   * - `\"onPanel\"` - Starts numbering within the dynamic panel from scratch.\n   * - `\"off\"` (default) - Hides question numbers.\n   */\n  get showQuestionNumbers() {\n    return this.getPropertyValue(\"showQuestionNumbers\");\n  }\n  set showQuestionNumbers(val) {\n    this.setPropertyValue(\"showQuestionNumbers\", val);\n    if (!this.isLoadingFromJson && this.survey) {\n      this.survey.questionVisibilityChanged(this, this.visible, true);\n    }\n  }\n  notifySurveyOnChildrenVisibilityChanged() {\n    return this.showQuestionNumbers === \"onSurvey\";\n  }\n  /**\n   * Specifies the location of the Remove Panel button relative to panel content.\n   *\n   * Possible values:\n   *\n   * - `\"bottom\"` (default) - Displays the Remove Panel button below panel content.\n   * - `\"right\"` - Displays the Remove Panel button to the right of panel content.\n   * @see removePanelText\n   */\n  get removePanelButtonLocation() {\n    return this.getPropertyValue(\"removePanelButtonLocation\");\n  }\n  set removePanelButtonLocation(val) {\n    this.setPropertyValue(\"removePanelButtonLocation\", val);\n  }\n  /**\n   * @deprecated Use the [`removePanelButtonLocation`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#removePanelButtonLocation) property instead.\n   */\n  get panelRemoveButtonLocation() {\n    return this.removePanelButtonLocation;\n  }\n  set panelRemoveButtonLocation(val) {\n    this.removePanelButtonLocation = val;\n  }\n  /**\n   * @deprecated Use the [`showProgressBar`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#showProgressBar) property instead.\n   */\n  get showRangeInProgress() {\n    return this.showProgressBar;\n  }\n  set showRangeInProgress(val) {\n    this.showProgressBar = val;\n  }\n  /**\n   * @deprecated Use the [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#displayMode) property instead.\n   */\n  get renderMode() {\n    let displayMode = this.displayMode;\n    if (displayMode == \"carousel\") {\n      const progressBarLocation = this.progressBarLocation;\n      if (progressBarLocation == \"top\") {\n        return \"progressTop\";\n      } else if (progressBarLocation == \"bottom\") {\n        return \"progressBottom\";\n      } else if (progressBarLocation == \"topBottom\") {\n        return \"progressTopBottom\";\n      }\n    }\n    return displayMode;\n  }\n  set renderMode(val) {\n    if ((val || \"\").startsWith(\"progress\")) {\n      if (val == \"progressTop\") {\n        this.progressBarLocation = \"top\";\n      } else if (val == \"progressBottom\") {\n        this.progressBarLocation = \"bottom\";\n      } else if (val == \"progressTopBottom\") {\n        this.progressBarLocation = \"topBottom\";\n      }\n      this.displayMode = \"carousel\";\n    } else {\n      this.displayMode = val;\n    }\n    // this.updatePanelView();\n  }\n  updatePanelView() {\n    this.blockAnimations();\n    this.updateRenderedPanels();\n    this.releaseAnimations();\n    this.updatePanelsAnimation();\n  }\n  get tabAlign() {\n    return this.getPropertyValue(\"tabAlign\");\n  }\n  set tabAlign(val) {\n    this.setPropertyValue(\"tabAlign\", val);\n    if (this.isRenderModeTab) {\n      this.tabbedMenu.containerCss = this.getTabbedMenuCss();\n    }\n  }\n  get isRenderModeList() {\n    return this.displayMode === \"list\" || this.isSingleInputActive;\n  }\n  get isRenderModeTab() {\n    return this.displayMode === \"tab\" && !this.isSingleInputActive;\n  }\n  setVisibleIndex(value) {\n    if (!this.isVisible) return 0;\n    const onSurveyNumbering = this.showQuestionNumbers === \"onSurvey\";\n    let startIndex = onSurveyNumbering ? value : 0;\n    const panels = this.isDesignMode ? [this.template] : this.visiblePanelsCore;\n    for (let i = 0; i < panels.length; i++) {\n      let counter = this.setPanelVisibleIndex(panels[i], startIndex, this.showQuestionNumbers != \"off\");\n      if (onSurveyNumbering) {\n        startIndex += counter;\n      }\n    }\n    super.setVisibleIndex(!onSurveyNumbering ? value : -1);\n    return !onSurveyNumbering ? 1 : startIndex - value;\n  }\n  setPanelVisibleIndex(panel, index, showIndex) {\n    if (!showIndex) {\n      panel.setVisibleIndex(-1);\n      return 0;\n    }\n    return panel.setVisibleIndex(index);\n  }\n  /**\n   * Indicates whether it is possible to add a new panel.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to add new panels (`allowAddPanel` is `true`).\n   * - Dynamic Panel or its parent survey is not in read-only state.\n   * - `panelCount` is less than `maxPanelCount`.\n   * @see allowAddPanel\n   * @see isReadOnly\n   * @see panelCount\n   * @see maxPanelCount\n   * @see canRemovePanel\n   */\n  get canAddPanel() {\n    if (this.isDesignMode) return false;\n    if (!this.legacyNavigation && !this.isRenderModeList && this.currentIndex < this.visiblePanelCount - 1 && this.newPanelPosition !== \"next\") {\n      return false;\n    }\n    return this.allowAddPanel && !this.isReadOnly && this.panelCount < this.maxPanelCount;\n  }\n  /**\n   * Indicates whether it is possible to delete panels.\n   *\n   * This property returns `true` when all of the following conditions apply:\n   *\n   * - Users are allowed to delete panels (`allowRemovePanel` is `true`).\n   * - Dynamic Panel or its parent survey is not in read-only state.\n   * - `panelCount` exceeds `minPanelCount`.\n   * @see allowRemovePanel\n   * @see isReadOnly\n   * @see panelCount\n   * @see minPanelCount\n   * @see canAddPanel\n   */\n  get canRemovePanel() {\n    if (this.isDesignMode) return false;\n    return this.allowRemovePanel && !this.isReadOnly && this.panelCount > this.minPanelCount;\n  }\n  rebuildPanels() {\n    if (this.isLoadingFromJson) return;\n    this.prepareValueForPanelCreating();\n    var panels = [];\n    if (this.useTemplatePanel) {\n      new QuestionPanelDynamicItem(this, this.template);\n      panels.push(this.template);\n    } else {\n      for (var i = 0; i < this.panelCount; i++) {\n        this.createNewPanel();\n        panels.push(this.createNewPanel());\n      }\n    }\n    this.panelsCore.splice(0, this.panelsCore.length, ...panels);\n    this.setValueAfterPanelsCreating();\n    this.setPanelsState();\n    this.reRunCondition();\n    this.updateFooterActions();\n    this.fireCallback(this.panelCountChangedCallback);\n    this.updateTabToolbar();\n  }\n  /**\n   * If it is not empty, then this value is set to every new panel, including panels created initially, unless the defaultValue is not empty\n   * @see defaultValue\n   * @see copyDefaultValueFromLastEntry\n   */\n  get defaultPanelValue() {\n    return this.getPropertyValue(\"defaultPanelValue\");\n  }\n  set defaultPanelValue(val) {\n    this.setPropertyValue(\"defaultPanelValue\", val);\n  }\n  /**\n   * Specifies whether default values for a new panel should be copied from the last panel.\n   *\n   * If you also specify `defaultValue`, it will be merged with the copied values.\n   * @see defaultValue\n   */\n  get copyDefaultValueFromLastEntry() {\n    return this.getPropertyValue(\"copyDefaultValueFromLastEntry\");\n  }\n  set copyDefaultValueFromLastEntry(val) {\n    this.setPropertyValue(\"copyDefaultValueFromLastEntry\", val);\n  }\n  /**\n   * @deprecated Use the [`copyDefaultValueFromLastEntry`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#copyDefaultValueFromLastEntry) property instead.\n   */\n  get defaultValueFromLastPanel() {\n    return this.copyDefaultValueFromLastEntry;\n  }\n  set defaultValueFromLastPanel(val) {\n    this.copyDefaultValueFromLastEntry = val;\n  }\n  isDefaultValueEmpty() {\n    return super.isDefaultValueEmpty() && this.isValueEmpty(this.defaultPanelValue);\n  }\n  setDefaultValue() {\n    if (this.isValueEmpty(this.defaultPanelValue) || !this.isValueEmpty(this.defaultValue)) {\n      super.setDefaultValue();\n      return;\n    }\n    if (!this.isEmpty() || this.panelCount == 0) return;\n    var newValue = [];\n    for (var i = 0; i < this.panelCount; i++) {\n      newValue.push(this.defaultPanelValue);\n    }\n    this.value = newValue;\n  }\n  get isValueArray() {\n    return true;\n  }\n  isEmpty() {\n    var val = this.value;\n    if (!val || !Array.isArray(val)) return true;\n    for (var i = 0; i < val.length; i++) {\n      if (!this.isRowEmpty(val[i])) return false;\n    }\n    return true;\n  }\n  getProgressInfo() {\n    return SurveyElement.getProgressInfoByElements(this.visiblePanelsCore, this.isRequired);\n  }\n  isRowEmpty(val) {\n    for (var prop in val) {\n      if (val.hasOwnProperty(prop)) return false;\n    }\n    return true;\n  }\n  /**\n   * @deprecated Call the [`addPanel(undefined, true)`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#addPanel) method instead.\n   */\n  addPanelUI() {\n    return this.addPanel(undefined, true);\n  }\n  /**\n   * Adds a new panel based on the [template](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#template).\n   * @param index *(Optional)* An index at which to insert the new panel. `undefined` adds the panel to the end or inserts it after the current panel if [`displayMode`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#renderMode) is `\"tab\"`. A negative index (for instance, -1) adds the panel to the end in all cases, regardless of the `displayMode` value.\n   * @param runAdditionalActions *(Optional)* Pass `true` if you want to perform additional actions: check whether a new panel [can be added](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#canAddPanel), expand and focus the new panel, and run animated effects. Default value: `false` (the listed actions are skipped).\n   * @see panelCount\n   * @see panels\n   * @see allowAddPanel\n   * @see newPanelPosition\n   */\n  addPanel(index, runAdditionalActions) {\n    const isUI = runAdditionalActions === true;\n    if (isUI) {\n      if (!this.canAddPanel) return null;\n      if (!this.canLeaveCurrentPanel()) return null;\n    }\n    const newPanel = this.addPanelCore(index);\n    if (isUI) {\n      if (this.displayMode === \"list\" && this.panelsState !== \"default\") {\n        newPanel.expand();\n      }\n      this.focusNewPanelCallback = () => {\n        newPanel.focusFirstQuestion();\n      };\n      if (!this.isPanelsAnimationRunning) {\n        this.focusNewPanel();\n      }\n    }\n    return newPanel;\n  }\n  addPanelCore(index) {\n    const curIndex = this.currentIndex;\n    if (index === undefined) {\n      index = curIndex < 0 ? this.panelCount : curIndex + 1;\n    }\n    if (index < 0 || index > this.panelCount) {\n      index = this.panelCount;\n    }\n    this.updateValueOnAddingPanel(curIndex < 0 ? this.panelCount - 1 : curIndex, index);\n    if (!this.isRenderModeList) {\n      this.currentIndex = index;\n    }\n    this.notifyOnPanelAddedRemoved(true, index);\n    return this.panelsCore[index];\n  }\n  focusNewPanel() {\n    if (this.focusNewPanelCallback) {\n      this.focusNewPanelCallback();\n      this.focusNewPanelCallback = undefined;\n    }\n  }\n  updateValueOnAddingPanel(prevIndex, index) {\n    this.panelCount++;\n    let newValue = this.value;\n    if (!Array.isArray(newValue) || newValue.length !== this.panelCount) return;\n    let hasModified = false;\n    const lastIndex = this.panelCount - 1;\n    if (index < lastIndex) {\n      hasModified = true;\n      const rec = newValue[lastIndex];\n      newValue.splice(lastIndex, 1);\n      newValue.splice(index, 0, rec);\n    }\n    if (!this.isValueEmpty(this.defaultPanelValue)) {\n      hasModified = true;\n      this.copyValue(newValue[index], this.defaultPanelValue);\n    }\n    if (this.copyDefaultValueFromLastEntry && newValue.length > 1) {\n      const fromIndex = prevIndex > -1 && prevIndex <= lastIndex ? prevIndex : lastIndex;\n      hasModified = true;\n      this.copyValue(newValue[index], newValue[fromIndex]);\n    }\n    if (hasModified) {\n      this.value = newValue;\n    }\n  }\n  canLeaveCurrentPanel() {\n    return !(this.displayMode !== \"list\" && this.currentPanel && this.currentPanel.hasErrors(true, true));\n  }\n  copyValue(dest, src) {\n    for (var key in src) {\n      dest[key] = src[key];\n    }\n  }\n  getPanelRemoveButtonId(panel) {\n    return panel.id + \"_remove_button\";\n  }\n  isRequireConfirmOnDelete(val) {\n    if (!this.confirmDelete) return false;\n    const index = this.getVisualPanelIndex(val);\n    if (index < 0 || index >= this.visiblePanelCount) return false;\n    const panelValue = this.visiblePanelsCore[index].getValue();\n    return !this.isValueEmpty(panelValue) && (this.isValueEmpty(this.defaultPanelValue) || !this.isTwoValueEquals(panelValue, this.defaultPanelValue));\n  }\n  /**\n   * Switches Dynamic Panel to the next panel. Returns `true` in case of success, or `false` if `displayMode` is `\"list\"` or the current panel contains validation errors.\n   * @see displayMode\n   */\n  goToNextPanel() {\n    if (this.currentIndex < 0) return false;\n    if (!this.canLeaveCurrentPanel()) return false;\n    this.currentIndex++;\n    return true;\n  }\n  /**\n   * Switches Dynamic Panel to the previous panel.\n   */\n  goToPrevPanel() {\n    if (this.currentIndex < 0) return;\n    this.currentIndex--;\n  }\n  /**\n   * @deprecated Call the [`removePanel(value, true)`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#removePanel) method instead.\n   */\n  removePanelUI(value) {\n    this.removePanel(value, this.isRequireConfirmOnDelete(value));\n  }\n  /**\n   * Deletes a panel from the [`panels`](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#panels) array.\n   * @param value A `PanelModel` instance or zero-based panel index.\n   * @param confirmDelete *(Optional)* Pass `true` if you want to perform additional actions: check whether the panel [can be removed](https://surveyjs.io/form-library/documentation/api-reference/dynamic-panel-model#canRemovePanel) and display a confirmation dialog.\n   * @see addPanel\n   */\n  removePanel(value, confirmDelete) {\n    const visIndex = this.getVisualPanelIndex(value);\n    if (visIndex < 0 || visIndex >= this.visiblePanelCount) return;\n    const isUI = confirmDelete !== undefined;\n    if (isUI) {\n      if (!this.canRemovePanel) return;\n      const removePanel = () => {\n        var _a;\n        this.removePanelCore(visIndex);\n        const pnlCount = this.visiblePanelCount;\n        const nextIndex = visIndex >= pnlCount ? pnlCount - 1 : visIndex;\n        let id = pnlCount === 0 ? this.addButtonId : nextIndex > -1 ? this.getPanelRemoveButtonId(this.visiblePanels[nextIndex]) : \"\";\n        if (!!id) {\n          SurveyElement.FocusElement(id, true, (_a = this.survey) === null || _a === void 0 ? void 0 : _a.rootElement);\n        }\n      };\n      if (confirmDelete) {\n        confirmActionAsync({\n          message: this.confirmDeleteText,\n          funcOnYes: () => {\n            removePanel();\n          },\n          locale: this.getLocale(),\n          rootElement: this.survey.rootElement,\n          cssClass: this.cssClasses.confirmDialog\n        });\n      } else {\n        removePanel();\n      }\n    } else {\n      this.removePanelCore(visIndex);\n    }\n  }\n  removePanelCore(visIndex) {\n    this.removedPanelIndex = visIndex;\n    const panel = this.visiblePanelsCore[visIndex];\n    const index = this.panelsCore.indexOf(panel);\n    if (index < 0) return;\n    if (this.survey && !this.survey.dynamicPanelRemoving(this, index, panel)) return;\n    this.panelsCore.splice(index, 1);\n    this.updateBindings(\"panelCount\", this.panelCount);\n    this.singleInputOnRemoveItem(visIndex);\n    var value = this.value;\n    if (!value || !Array.isArray(value) || index >= value.length) {\n      this.updateFooterActions();\n    } else {\n      this.isValueChangingInternally = true;\n      value.splice(index, 1);\n      this.value = value;\n      this.updateFooterActions();\n      this.fireCallback(this.panelCountChangedCallback);\n      this.notifyOnPanelAddedRemoved(false, index, panel);\n      this.isValueChangingInternally = false;\n    }\n  }\n  notifyOnPanelAddedRemoved(isAdded, index, panel) {\n    if (!panel) {\n      panel = this.panelsCore[index];\n    }\n    if (this.survey) {\n      const updateIndeces = this.showQuestionNumbers === \"onSurvey\";\n      if (isAdded) {\n        this.survey.dynamicPanelAdded(this, index, panel, updateIndeces);\n      } else {\n        this.survey.dynamicPanelRemoved(this, index, panel, updateIndeces);\n      }\n    }\n    if (isAdded && !!panel && this.showQuestionNumbers === \"onPanel\") {\n      panel.setVisibleIndex(0);\n    }\n  }\n  getVisualPanelIndex(val) {\n    if (Helpers.isNumber(val)) return val;\n    const visPanels = this.visiblePanelsCore;\n    for (var i = 0; i < visPanels.length; i++) {\n      if (visPanels[i] === val || visPanels[i].data === val) return i;\n    }\n    return -1;\n  }\n  getPanelVisibleIndexById(id) {\n    const visPanels = this.visiblePanelsCore;\n    for (var i = 0; i < visPanels.length; i++) {\n      if (visPanels[i].id === id) return i;\n    }\n    return -1;\n  }\n  locStrsChanged() {\n    super.locStrsChanged();\n    this.locTemplateTitle.strChanged();\n    var panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      panels[i].locStrsChanged();\n    }\n    if (this.tabbedMenu) {\n      this.tabbedMenu.locStrsChanged();\n    }\n  }\n  clearIncorrectValues() {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.clearIncorrectValuesInPanel(i);\n    }\n  }\n  clearErrors() {\n    super.clearErrors();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].clearErrors();\n    }\n  }\n  getQuestionFromArray(name, index) {\n    if (index < 0 || index >= this.panelsCore.length) return null;\n    return this.panelsCore[index].getQuestionByName(name);\n  }\n  clearIncorrectValuesInPanel(index) {\n    var panel = this.panelsCore[index];\n    panel.clearIncorrectValues();\n    var val = this.value;\n    var values = !!val && index < val.length ? val[index] : null;\n    if (!values) return;\n    var isChanged = false;\n    for (var key in values) {\n      if (this.getSharedQuestionFromArray(key, index)) continue;\n      var q = panel.getQuestionByName(key);\n      if (!!q) continue;\n      if (this.iscorrectValueWithPostPrefix(panel, key, settings.commentSuffix) || this.iscorrectValueWithPostPrefix(panel, key, settings.matrix.totalsSuffix)) continue;\n      delete values[key];\n      isChanged = true;\n    }\n    if (isChanged) {\n      val[index] = values;\n      this.value = val;\n    }\n  }\n  iscorrectValueWithPostPrefix(panel, key, postPrefix) {\n    if (key.indexOf(postPrefix) !== key.length - postPrefix.length) return false;\n    return !!panel.getQuestionByName(key.substring(0, key.indexOf(postPrefix)));\n  }\n  getSharedQuestionFromArray(name, panelIndex) {\n    return !!this.survey && !!this.valueName ? this.survey.getQuestionByValueNameFromArray(this.valueName, name, panelIndex) : null;\n  }\n  addConditionObjectsByContext(objects, context) {\n    const contextQ = !!(context === null || context === void 0 ? void 0 : context.isValidator) ? context.errorOwner : context;\n    const hasContext = !!context && (context === true || this.template.questions.indexOf(contextQ) > -1);\n    const panelObjs = new Array();\n    const questions = this.template.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].addConditionObjectsByContext(panelObjs, context);\n    }\n    for (var index = 0; index < settings.panel.maxPanelCountInCondition; index++) {\n      const indexStr = \"[\" + index + \"].\";\n      const prefixName = this.getValueName() + indexStr;\n      const prefixText = this.processedTitle + indexStr;\n      for (var i = 0; i < panelObjs.length; i++) {\n        if (!!panelObjs[i].context) {\n          objects.push(panelObjs[i]);\n        } else {\n          objects.push({\n            name: prefixName + panelObjs[i].name,\n            text: prefixText + panelObjs[i].text,\n            question: panelObjs[i].question\n          });\n        }\n      }\n    }\n    if (hasContext) {\n      const prefixName = context === true ? this.getValueName() + \".\" : \"\";\n      const prefixText = context === true ? this.processedTitle + \".\" : \"\";\n      for (var i = 0; i < panelObjs.length; i++) {\n        if (panelObjs[i].question == context) continue;\n        const obj = {\n          name: prefixName + QuestionPanelDynamicItem.ItemVariableName + \".\" + panelObjs[i].name,\n          text: prefixText + QuestionPanelDynamicItem.ItemVariableName + \".\" + panelObjs[i].text,\n          question: panelObjs[i].question\n        };\n        obj.context = this;\n        objects.push(obj);\n      }\n    }\n  }\n  collectNestedQuestionsCore(questions, visibleOnly, includeNested, includeItSelf) {\n    if (includeItSelf) {\n      questions.push(this);\n    }\n    const panels = visibleOnly ? this.visiblePanelsCore : this.panelsCore;\n    if (!Array.isArray(panels)) return;\n    panels.forEach(panel => {\n      panel.questions.forEach(q => q.addNestedQuestion(questions, visibleOnly, includeNested, includeItSelf));\n    });\n  }\n  getConditionJson(operator = null, path = null) {\n    if (!path) return super.getConditionJson(operator);\n    var questionName = path;\n    var pos = path.indexOf(\".\");\n    if (pos > -1) {\n      questionName = path.substring(0, pos);\n      path = path.substring(pos + 1);\n    }\n    var question = this.template.getQuestionByName(questionName);\n    if (!question) return null;\n    return question.getConditionJson(operator, path);\n  }\n  onReadOnlyChanged() {\n    var readOnly = this.isReadOnly;\n    this.template.readOnly = readOnly;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].readOnly = readOnly;\n    }\n    this.updateNoEntriesTextDefaultLoc();\n    this.updateFooterActions();\n    super.onReadOnlyChanged();\n  }\n  updateNoEntriesTextDefaultLoc() {\n    const loc = this.getLocalizableString(\"noEntriesText\");\n    if (!loc) return;\n    loc.localizationName = this.isReadOnly || !this.allowAddPanel ? \"noEntriesReadonlyText\" : \"noEntriesText\";\n  }\n  onSurveyLoad() {\n    this.template.readOnly = this.isReadOnly;\n    this.template.onSurveyLoad();\n    if (this.panelCount < this.minPanelCount) {\n      this.panelCount = this.minPanelCount;\n    }\n    if (this.panelCount > this.maxPanelCount) {\n      this.panelCount = this.maxPanelCount;\n    }\n    this.buildPanelsFirstTime();\n    super.onSurveyLoad();\n  }\n  buildPanelsFirstTime(force = false) {\n    if (this.hasPanelBuildFirstTime) return;\n    if (!force && this.wasNotRenderedInSurvey) return;\n    this.blockAnimations();\n    this.hasPanelBuildFirstTime = true;\n    this.isBuildingPanelsFirstTime = true;\n    if (this.getPropertyValue(\"panelCount\") > 0) {\n      this.panelCount = this.getPropertyValue(\"panelCount\");\n    }\n    if (this.useTemplatePanel) {\n      this.rebuildPanels();\n    }\n    this.setPanelsSurveyImpl();\n    this.setPanelsState();\n    this.assignOnPropertyChangedToTemplate();\n    if (this.data && this.isValueChangedWithoutPanels) {\n      this.isValueChangedWithoutPanels = false;\n      this.runTriggersOnBuildPanelsFirstTime();\n    }\n    if (!!this.survey) {\n      for (var i = 0; i < this.panelCount; i++) {\n        this.notifyOnPanelAddedRemoved(true, i);\n      }\n    }\n    this.updateIsReady();\n    if (!this.showAddPanelButton) {\n      this.updateNoEntriesTextDefaultLoc();\n    }\n    this.updateFooterActions();\n    this.isBuildingPanelsFirstTime = false;\n    this.releaseAnimations();\n  }\n  runTriggersOnBuildPanelsFirstTime() {\n    this.value;\n    this.visiblePanelsCore.forEach(p => {\n      const panelValue = this.getPanelItemData(p.data);\n      if (!Helpers.isValueEmpty(panelValue)) {\n        const triggeredValue = Helpers.createCopyWithPrefix(panelValue, QuestionPanelDynamicItem.ItemVariableName + \".\");\n        p.questions.forEach(q => q.runTriggers(\"\", undefined, triggeredValue));\n      }\n    });\n  }\n  get showAddPanelButton() {\n    return this.allowAddPanel && !this.isReadOnly;\n  }\n  get wasNotRenderedInSurvey() {\n    return !this.hasPanelBuildFirstTime && !this.wasRendered && !!this.survey;\n  }\n  get canBuildPanels() {\n    return !this.isLoadingFromJson && !this.useTemplatePanel;\n  }\n  onFirstRenderingCore() {\n    super.onFirstRenderingCore();\n    this.buildPanelsFirstTime();\n    this.template.onFirstRendering();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].onFirstRendering();\n    }\n  }\n  localeChanged() {\n    super.localeChanged();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].localeChanged();\n    }\n  }\n  runConditionCore(values, properties) {\n    super.runConditionCore(values, properties);\n    this.runPanelsCondition(this.panelsCore, values, properties);\n  }\n  runTriggers(name, value, keys) {\n    super.runTriggers(name, value, keys);\n    this.visiblePanelsCore.forEach(p => {\n      p.questions.forEach(q => q.runTriggers(name, value, keys));\n    });\n  }\n  reRunCondition() {\n    if (!this.data) return;\n    this.runCondition(this.getDataFilteredValues(), this.getDataFilteredProperties());\n  }\n  runPanelsCondition(panels, values, properties) {\n    var cachedValues = {};\n    if (values && values instanceof Object) {\n      cachedValues = JSON.parse(JSON.stringify(values));\n    }\n    if (!!this.parentQuestion && !!this.parent) {\n      cachedValues[QuestionPanelDynamicItem.ParentItemVariableName] = this.parent.getValue();\n    }\n    this.isValueChangingInternally = true;\n    let visibleIndex = 0;\n    for (var i = 0; i < panels.length; i++) {\n      const panel = panels[i];\n      var panelValues = this.getPanelItemData(panel.data);\n      //Should be unique for every panel due async expression support\n      const newValues = Helpers.createCopy(cachedValues);\n      const panelName = QuestionPanelDynamicItem.ItemVariableName;\n      newValues[panelName] = panelValues;\n      newValues[QuestionPanelDynamicItem.IndexVariableName.toLowerCase()] = i;\n      newValues[QuestionPanelDynamicItem.VisibleIndexVariableName.toLowerCase()] = visibleIndex;\n      const newProps = Helpers.createCopy(properties);\n      newProps[panelName] = panel;\n      panel.runCondition(newValues, newProps);\n      if (panel.isVisible) {\n        visibleIndex++;\n      }\n    }\n    this.isValueChangingInternally = false;\n  }\n  onAnyValueChanged(name, questionName) {\n    super.onAnyValueChanged(name, questionName);\n    if (!this.hasPanelBuildFirstTime && name === this.getValueName()) {\n      this.isValueChangedWithoutPanels = true;\n    }\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelsCore[i].onAnyValueChanged(name, questionName);\n      this.panelsCore[i].onAnyValueChanged(QuestionPanelDynamicItem.ItemVariableName, \"\");\n    }\n  }\n  hasKeysDuplicated(fireCallback, rec = null) {\n    var keyValues = [];\n    var res;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      res = this.isValueDuplicated(this.panelsCore[i], keyValues, rec, fireCallback) || res;\n    }\n    return res;\n  }\n  updatePanelsContainsErrors() {\n    var question = this.changingValueQuestion;\n    var parent = question.parent;\n    while (!!parent) {\n      parent.updateContainsErrors();\n      parent = parent.parent;\n    }\n    this.updateContainsErrors();\n  }\n  hasErrors(fireCallback = true, rec = null) {\n    if (this.isValueChangingInternally || this.isBuildingPanelsFirstTime) return false;\n    var res = false;\n    if (!!this.changingValueQuestion) {\n      var res = this.changingValueQuestion.hasErrors(fireCallback, rec);\n      res = this.hasKeysDuplicated(fireCallback, rec) || res;\n      this.updatePanelsContainsErrors();\n    } else {\n      res = this.hasErrorInPanels(fireCallback, rec);\n    }\n    return super.hasErrors(fireCallback, rec) || res;\n  }\n  getContainsErrors() {\n    var res = super.getContainsErrors();\n    if (res) return res;\n    var panels = this.panelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      if (panels[i].containsErrors) return true;\n    }\n    return false;\n  }\n  getIsAnswered() {\n    if (!super.getIsAnswered()) return false;\n    var panels = this.visiblePanelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      var visibleQuestions = [];\n      panels[i].addQuestionsToList(visibleQuestions, true);\n      for (var j = 0; j < visibleQuestions.length; j++) {\n        if (!visibleQuestions[j].isAnswered) return false;\n      }\n    }\n    return true;\n  }\n  clearValueOnHidding(isClearOnHidden) {\n    if (!isClearOnHidden) {\n      if (!!this.survey && this.survey.getQuestionClearIfInvisible(\"onHidden\") === \"none\") return;\n      this.clearValueInPanelsIfInvisible(\"onHiddenContainer\");\n    }\n    super.clearValueOnHidding(isClearOnHidden);\n  }\n  clearValueIfInvisible(reason = \"onHidden\") {\n    const panelReason = reason === \"onHidden\" ? \"onHiddenContainer\" : reason;\n    this.clearValueInPanelsIfInvisible(panelReason);\n    super.clearValueIfInvisible(reason);\n  }\n  clearValueInPanelsIfInvisible(reason) {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      const panel = this.panelsCore[i];\n      var questions = panel.questions;\n      this.isSetPanelItemData = {};\n      for (var j = 0; j < questions.length; j++) {\n        const q = questions[j];\n        if (q.visible && !panel.isVisible) continue;\n        q.clearValueIfInvisible(reason);\n        this.isSetPanelItemData[q.getValueName()] = this.maxCheckCount + 1;\n      }\n    }\n    this.isSetPanelItemData = {};\n  }\n  getIsRunningValidators() {\n    if (super.getIsRunningValidators()) return true;\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var questions = this.panelsCore[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        if (questions[j].isRunningValidators) return true;\n      }\n    }\n    return false;\n  }\n  getAllErrors() {\n    var result = super.getAllErrors();\n    const panels = this.visiblePanelsCore;\n    for (var i = 0; i < panels.length; i++) {\n      var questions = panels[i].questions;\n      for (var j = 0; j < questions.length; j++) {\n        var errors = questions[j].getAllErrors();\n        if (errors && errors.length > 0) {\n          result = result.concat(errors);\n        }\n      }\n    }\n    return result;\n  }\n  getDisplayValueCore(keysAsText, value) {\n    var values = this.getUnbindValue(value);\n    if (!values || !Array.isArray(values)) return values;\n    for (var i = 0; i < this.panelsCore.length && i < values.length; i++) {\n      var val = values[i];\n      if (!val) continue;\n      values[i] = this.getPanelDisplayValue(i, val, keysAsText);\n    }\n    return values;\n  }\n  getPanelDisplayValue(panelIndex, val, keysAsText) {\n    if (!val) return val;\n    var panel = this.panelsCore[panelIndex];\n    var keys = Object.keys(val);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var question = panel.getQuestionByValueName(key);\n      if (!question) {\n        question = this.getSharedQuestionFromArray(key, panelIndex);\n      }\n      if (!!question) {\n        var qValue = question.getDisplayValue(keysAsText, val[key]);\n        val[key] = qValue;\n        if (keysAsText && !!question.title && question.title !== key) {\n          val[question.title] = qValue;\n          delete val[key];\n        }\n      }\n    }\n    return val;\n  }\n  hasErrorInPanels(fireCallback, rec) {\n    var res = false;\n    var panels = this.visiblePanels;\n    var keyValues = [];\n    for (var i = 0; i < panels.length; i++) {\n      this.setOnCompleteAsyncInPanel(panels[i]);\n    }\n    const focusOnError = !!rec && rec.focusOnFirstError;\n    for (let i = 0; i < panels.length; i++) {\n      let pnlError = panels[i].hasErrors(fireCallback, focusOnError, rec);\n      pnlError = this.isValueDuplicated(panels[i], keyValues, rec, fireCallback) || pnlError;\n      if (!this.isRenderModeList && pnlError && !res && focusOnError) {\n        this.currentIndex = i;\n      }\n      res = pnlError || res;\n    }\n    return res;\n  }\n  setOnCompleteAsyncInPanel(panel) {\n    var questions = panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].onCompletedAsyncValidators = hasErrors => {\n        this.raiseOnCompletedAsyncValidators();\n      };\n    }\n  }\n  isValueDuplicated(panel, keyValues, rec, fireCallback) {\n    if (!this.keyName) return false;\n    var question = panel.getQuestionByValueName(this.keyName);\n    if (!question || question.isEmpty()) return false;\n    var value = question.value;\n    if (!!this.changingValueQuestion && question != this.changingValueQuestion) {\n      question.hasErrors(fireCallback, rec);\n    }\n    for (var i = 0; i < keyValues.length; i++) {\n      if (value == keyValues[i]) {\n        if (fireCallback) {\n          question.addError(new KeyDuplicationError(this.keyDuplicationError, this));\n        }\n        if (!!rec && !rec.firstErrorQuestion) {\n          rec.firstErrorQuestion = question;\n        }\n        return true;\n      }\n    }\n    keyValues.push(value);\n    return false;\n  }\n  getPanelActions(panel) {\n    let actions = panel.footerActions;\n    if (this.removePanelButtonLocation !== \"right\") {\n      actions.push(new Action({\n        id: `remove-panel-${panel.id}`,\n        component: \"sv-paneldynamic-remove-btn\",\n        visible: new ComputedUpdater(() => [this.canRenderRemovePanel(panel, \"bottom\")].every(val => val === true)),\n        data: {\n          question: this,\n          panel: panel\n        }\n      }));\n    }\n    if (!!this.survey) {\n      actions = this.survey.getUpdatedPanelFooterActions(panel, actions, this);\n    }\n    return actions;\n  }\n  canRenderRemovePanelOnRight(panel) {\n    return this.canRenderRemovePanel(panel, \"right\");\n  }\n  canRenderRemovePanel(panel, side) {\n    const canRemove = this.canRemovePanel;\n    const notCollpased = panel.state !== \"collapsed\";\n    return this.removePanelButtonLocation === side && canRemove && notCollpased;\n  }\n  createNewPanel() {\n    var panel = this.createAndSetupNewPanelObject();\n    var json = this.template.toJSON();\n    new JsonObject().toObject(json, panel);\n    panel.renderWidth = \"100%\";\n    panel.updateCustomWidgets();\n    new QuestionPanelDynamicItem(this, panel);\n    if (!this.isDesignMode && !this.isReadOnly && !this.isValueEmpty(panel.getValue())) {\n      this.runPanelsCondition([panel], this.getDataFilteredValues(), this.getDataFilteredProperties());\n    }\n    var questions = panel.questions;\n    for (var i = 0; i < questions.length; i++) {\n      questions[i].setParentQuestion(this);\n    }\n    if (this.wasRendered) {\n      panel.onFirstRendering();\n      panel.locStrsChanged();\n    }\n    panel.onGetFooterActionsCallback = () => {\n      return this.getPanelActions(panel);\n    };\n    panel.onGetFooterToolbarCssCallback = () => {\n      return this.cssClasses.panelFooter;\n    };\n    panel.registerPropertyChangedHandlers([\"visible\"], () => {\n      if (panel.visible) this.onPanelAdded(panel);else this.onPanelRemoved(panel);\n      this.updateFooterActions();\n    });\n    return panel;\n  }\n  createAndSetupNewPanelObject() {\n    var panel = this.createNewPanelObject();\n    panel.isInteractiveDesignElement = false;\n    panel.setParentQuestion(this);\n    panel.onGetQuestionTitleLocation = () => this.getTemplateQuestionTitleLocation();\n    panel.onGetQuestionTitleWidth = () => this.templateQuestionTitleWidth;\n    return panel;\n  }\n  getTemplateQuestionTitleLocation() {\n    return this.templateQuestionTitleLocation != \"default\" ? this.templateQuestionTitleLocation : this.getTitleLocationCore();\n  }\n  getChildErrorLocation(child) {\n    if (this.templateErrorLocation !== \"default\") return this.templateErrorLocation;\n    return super.getChildErrorLocation(child);\n  }\n  createNewPanelObject() {\n    return Serializer.createClass(\"panel\");\n  }\n  setPanelCountBasedOnValue() {\n    if (this.isValueChangingInternally || this.useTemplatePanel) return;\n    var val = this.value;\n    var newPanelCount = val && Array.isArray(val) ? val.length : 0;\n    if (newPanelCount == 0 && this.getPropertyValue(\"panelCount\") > 0) {\n      newPanelCount = this.getPropertyValue(\"panelCount\");\n    }\n    this.settingPanelCountBasedOnValue = true;\n    this.panelCount = newPanelCount;\n    this.settingPanelCountBasedOnValue = false;\n  }\n  setQuestionValue(newValue) {\n    if (this.settingPanelCountBasedOnValue) return;\n    super.setQuestionValue(newValue, false);\n    this.setPanelCountBasedOnValue();\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelUpdateValueFromSurvey(this.panelsCore[i]);\n    }\n    this.updateIsAnswered();\n  }\n  onSurveyValueChanged(newValue) {\n    if (newValue === undefined && this.isAllPanelsEmpty()) return;\n    super.onSurveyValueChanged(newValue);\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      this.panelSurveyValueChanged(this.panelsCore[i]);\n    }\n    if (newValue === undefined) {\n      this.setValueBasedOnPanelCount();\n    }\n    this.updateIsReady();\n  }\n  isAllPanelsEmpty() {\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      if (!Helpers.isValueEmpty(this.panelsCore[i].getValue())) return false;\n    }\n    return true;\n  }\n  panelUpdateValueFromSurvey(panel) {\n    const questions = panel.questions;\n    var values = this.getPanelItemData(panel.data);\n    for (var i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      q.updateValueFromSurvey(values[q.getValueName()]);\n      q.updateCommentFromSurvey(values[q.getValueName() + settings.commentSuffix]);\n      q.initDataUI();\n    }\n  }\n  panelSurveyValueChanged(panel) {\n    var questions = panel.questions;\n    var values = this.getPanelItemData(panel.data);\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      q.onSurveyValueChanged(values[q.getValueName()]);\n    }\n  }\n  onSetData() {\n    super.onSetData();\n    if (!this.isLoadingFromJson && this.useTemplatePanel) {\n      this.setTemplatePanelSurveyImpl();\n      this.rebuildPanels();\n    }\n  }\n  isNewValueCorrect(val) {\n    return Array.isArray(val);\n  }\n  //IQuestionPanelDynamicData\n  getItemIndex(item) {\n    var res = this.items.indexOf(item);\n    return res > -1 ? res : this.items.length;\n  }\n  getVisibleItemIndex(item) {\n    const visPanels = this.visiblePanelsCore;\n    for (var i = 0; i < visPanels.length; i++) {\n      if (visPanels[i].data === item) return i;\n    }\n    return visPanels.length;\n  }\n  getPanelItemData(item) {\n    var items = this.items;\n    var index = items.indexOf(item);\n    var qValue = this.value;\n    if (index < 0 && Array.isArray(qValue) && qValue.length > items.length) {\n      index = items.length;\n    }\n    if (index < 0) return {};\n    if (!qValue || !Array.isArray(qValue) || qValue.length <= index) return {};\n    return qValue[index];\n  }\n  setPanelItemData(item, name, val) {\n    if (this.isSetPanelItemData[name] > this.maxCheckCount) return;\n    if (!this.isSetPanelItemData[name]) {\n      this.isSetPanelItemData[name] = 0;\n    }\n    this.isSetPanelItemData[name]++;\n    var items = this.items;\n    var index = items.indexOf(item);\n    if (index < 0) index = items.length;\n    var qValue = this.getUnbindValue(this.value);\n    if (!qValue || !Array.isArray(qValue)) {\n      qValue = [];\n    }\n    if (qValue.length <= index) {\n      for (var i = qValue.length; i <= index; i++) {\n        qValue.push({});\n      }\n    }\n    if (!qValue[index]) qValue[index] = {};\n    const oldVal = qValue[index][name];\n    if (!this.isValueEmpty(val)) {\n      qValue[index][name] = val;\n    } else {\n      delete qValue[index][name];\n    }\n    if (index >= 0 && index < this.panelsCore.length) {\n      this.changingValueQuestion = this.panelsCore[index].getQuestionByValueName(name);\n    }\n    const options = {\n      panel: item.panel,\n      name: name,\n      panelIndex: index,\n      panelData: qValue[index],\n      value: val,\n      oldValue: oldVal\n    };\n    if (this.survey) {\n      this.survey.dynamicPanelItemValueChanging(this, options);\n    }\n    this.value = qValue;\n    this.changingValueQuestion = null;\n    if (this.survey) {\n      this.survey.dynamicPanelItemValueChanged(this, options);\n    }\n    this.isSetPanelItemData[name]--;\n    if (this.isSetPanelItemData[name] - 1) {\n      delete this.isSetPanelItemData[name];\n    }\n  }\n  getRootData() {\n    return this.data;\n  }\n  getPlainData(options = {\n    includeEmpty: true\n  }) {\n    var questionPlainData = super.getPlainData(options);\n    if (!!questionPlainData) {\n      questionPlainData.isNode = true;\n      const prevData = Array.isArray(questionPlainData.data) ? [].concat(questionPlainData.data) : [];\n      questionPlainData.data = this.panels.map((panel, index) => {\n        var panelDataItem = {\n          name: panel.name || index,\n          title: panel.title || \"Panel\",\n          value: panel.getValue(),\n          displayValue: panel.getValue(),\n          getString: val => typeof val === \"object\" ? JSON.stringify(val) : val,\n          isNode: true,\n          data: panel.questions.map(question => question.getPlainData(options)).filter(d => !!d)\n        };\n        (options.calculations || []).forEach(calculation => {\n          panelDataItem[calculation.propertyName] = panel[calculation.propertyName];\n        });\n        return panelDataItem;\n      });\n      questionPlainData.data = questionPlainData.data.concat(prevData);\n    }\n    return questionPlainData;\n  }\n  updateElementCss(reNew) {\n    super.updateElementCss(reNew);\n    for (var i = 0; i < this.panelsCore.length; i++) {\n      var el = this.panelsCore[i];\n      el.updateElementCss(reNew);\n    }\n  }\n  get progressText() {\n    var rangeMax = this.visiblePanelCount;\n    return this.getLocalizationFormatString(\"panelDynamicProgressText\", this.currentIndex + 1, rangeMax);\n  }\n  get progress() {\n    return (this.currentIndex + 1) / this.visiblePanelCount * 100 + \"%\";\n  }\n  get progressBarAriaLabel() {\n    return getLocaleString(\"progressbar\", this.getLocale());\n  }\n  getRootCss() {\n    return new CssClassBuilder().append(super.getRootCss()).append(this.cssClasses.empty, this.getShowNoEntriesPlaceholder()).toString();\n  }\n  get cssHeader() {\n    const showTab = this.isRenderModeTab && !!this.visiblePanelCount;\n    return new CssClassBuilder().append(super.getCssHeader(this.cssClasses)).append(this.cssClasses.headerTab, this.hasTitleOnTop && showTab).toString();\n  }\n  getTabsContainerCss() {\n    return new CssClassBuilder().append(this.cssClasses.tabsContainer).append(this.cssClasses.tabsContainerWithHeader, this.hasTitleOnTop).toString();\n  }\n  getPanelWrapperCss(panel) {\n    return new CssClassBuilder().append(this.cssClasses.panelWrapper, !panel || panel.visible).append(this.cssClasses.panelWrapperList, this.isRenderModeList).append(this.cssClasses.panelWrapperInRow, this.removePanelButtonLocation === \"right\").toString();\n  }\n  getPanelRemoveButtonCss() {\n    return new CssClassBuilder().append(this.cssClasses.button).append(this.cssClasses.buttonRemove).append(this.cssClasses.buttonRemoveRight, this.removePanelButtonLocation === \"right\").toString();\n  }\n  getAddButtonCss() {\n    return new CssClassBuilder().append(this.cssClasses.button).append(this.cssClasses.buttonAdd).append(this.cssClasses.buttonAdd + \"--list-mode\", this.displayMode === \"list\").toString();\n  }\n  getPrevButtonCss() {\n    return new CssClassBuilder().append(this.cssClasses.buttonPrev).append(this.cssClasses.buttonPrevDisabled, !this.isPrevButtonVisible).toString();\n  }\n  getNextButtonCss() {\n    return new CssClassBuilder().append(this.cssClasses.buttonNext).append(this.cssClasses.buttonNextDisabled, !this.isNextButtonVisible).toString();\n  }\n  /**\n   * A text displayed when Dynamic Panel contains no entries.\n   */\n  get noEntriesText() {\n    return this.getLocalizableStringText(\"noEntriesText\");\n  }\n  set noEntriesText(val) {\n    this.setLocalizableStringText(\"noEntriesText\", val);\n  }\n  get locNoEntriesText() {\n    return this.getLocalizableString(\"noEntriesText\");\n  }\n  getShowNoEntriesPlaceholder() {\n    return !!this.cssClasses.noEntriesPlaceholder && !this.isDesignMode && this.visiblePanelCount === 0;\n  }\n  needResponsiveWidth() {\n    const panel = this.getPanel();\n    if (!!panel && panel.needResponsiveWidth()) return true;\n    return false;\n  }\n  get hasTabbedMenu() {\n    return this.isRenderModeTab && this.visiblePanels.length > 0;\n  }\n  get tabbedMenu() {\n    if (!this.isRenderModeTab) return null;\n    if (!this.tabbedMenuValue) {\n      this.tabbedMenuValue = new AdaptiveActionContainer();\n      this.tabbedMenuValue.dotsItem.popupModel.showPointer = false;\n      this.tabbedMenuValue.dotsItem.popupModel.verticalPosition = \"bottom\";\n      this.tabbedMenuValue.dotsItem.popupModel.horizontalPosition = \"center\";\n      this.updateElementCss(false);\n    }\n    return this.tabbedMenuValue;\n  }\n  get showFooterToolbar() {\n    return this.footerToolbar && this._showFooterToolbar;\n  }\n  get footerToolbar() {\n    if (!this.footerToolbarValue) {\n      this.initFooterToolbar();\n    }\n    return this.footerToolbarValue;\n  }\n  get ariaRole() {\n    return \"group\";\n  }\n  get ariaRequired() {\n    return null;\n  }\n  get ariaInvalid() {\n    return null;\n  }\n  updateFooterActions() {\n    if (!!this.updateFooterActionsCallback) {\n      this.updateFooterActionsCallback();\n    }\n  }\n  initFooterToolbar() {\n    this.footerToolbarValue = this.createActionContainer();\n    const items = [];\n    const prevTextBtn = new Action({\n      id: \"sv-pd-prev-btn\",\n      title: this.prevPanelText,\n      action: () => {\n        this.goToPrevPanel();\n      }\n    });\n    const nextTextBtn = new Action({\n      id: \"sv-pd-next-btn\",\n      title: this.nextPanelText,\n      action: () => {\n        this.goToNextPanel();\n      }\n    });\n    const addBtn = new Action({\n      id: \"sv-pd-add-btn\",\n      component: \"sv-paneldynamic-add-btn\",\n      data: {\n        question: this\n      }\n    });\n    const prevBtnIcon = new Action({\n      id: \"sv-prev-btn-icon\",\n      component: \"sv-paneldynamic-prev-btn\",\n      data: {\n        question: this\n      }\n    });\n    const progressText = new Action({\n      id: \"sv-pd-progress-text\",\n      component: \"sv-paneldynamic-progress-text\",\n      data: {\n        question: this\n      }\n    });\n    const nextBtnIcon = new Action({\n      id: \"sv-pd-next-btn-icon\",\n      component: \"sv-paneldynamic-next-btn\",\n      data: {\n        question: this\n      }\n    });\n    items.push(prevTextBtn, nextTextBtn, addBtn, prevBtnIcon, progressText, nextBtnIcon);\n    this.updateFooterActionsCallback = () => {\n      const isLegacyNavigation = this.legacyNavigation;\n      const isRenderModeList = this.isRenderModeList;\n      const isMobile = this.isMobile;\n      const showNavigation = !isLegacyNavigation && !isRenderModeList;\n      prevTextBtn.visible = showNavigation && this.currentIndex > 0;\n      nextTextBtn.visible = showNavigation && this.currentIndex < this.visiblePanelCount - 1;\n      nextTextBtn.needSpace = isMobile && nextTextBtn.visible && prevTextBtn.visible;\n      addBtn.visible = this.canAddPanel;\n      addBtn.needSpace = this.isMobile && !nextTextBtn.visible && prevTextBtn.visible;\n      progressText.visible = !this.isRenderModeList && !isMobile;\n      progressText.needSpace = !isLegacyNavigation && !this.isMobile;\n      const showLegacyNavigation = isLegacyNavigation && !isRenderModeList;\n      prevBtnIcon.visible = showLegacyNavigation;\n      nextBtnIcon.visible = showLegacyNavigation;\n      prevBtnIcon.needSpace = showLegacyNavigation;\n    };\n    this.updateFooterActionsCallback();\n    this.footerToolbarValue.setItems(items);\n    this.footerToolbar.flushUpdates();\n    this._showFooterToolbar = new ComputedUpdater(() => {\n      var _a;\n      return (_a = this.footerToolbarValue) === null || _a === void 0 ? void 0 : _a.hasVisibleActions;\n    });\n  }\n  createTabByPanel(panel, visPanelIndex) {\n    if (!this.isRenderModeTab) return;\n    const locTitle = new LocalizableString(panel, true);\n    locTitle.onGetTextCallback = str => {\n      if (!str) {\n        str = this.locTabTitlePlaceholder.renderedHtml;\n      }\n      if (!this.survey) return str;\n      const options = {\n        title: str,\n        panel: panel,\n        visiblePanelIndex: visPanelIndex\n      };\n      this.survey.dynamicPanelGetTabTitle(this, options);\n      return options.title;\n    };\n    locTitle.sharedData = this.locTemplateTabTitle;\n    const panelId = panel.id;\n    const isActive = this.getPanelVisibleIndexById(panelId) === this.currentIndex;\n    const newItem = new PanelDynamicTabbedMenuItem({\n      id: `${this.id}_tab_${panelId}`,\n      panelId: panelId,\n      pressed: isActive,\n      locTitle: locTitle,\n      disableHide: isActive,\n      action: () => {\n        this.currentIndex = this.getPanelVisibleIndexById(panelId);\n      }\n    });\n    return newItem;\n  }\n  getTabbedMenuCss(cssClasses) {\n    const css = cssClasses !== null && cssClasses !== void 0 ? cssClasses : this.cssClasses;\n    return new CssClassBuilder().append(css.tabsRoot).append(css.tabsLeft, this.tabAlign === \"left\").append(css.tabsRight, this.tabAlign === \"right\").append(css.tabsCenter, this.tabAlign === \"center\").toString();\n  }\n  updateTabToolbarItemsPressedState() {\n    if (!this.isRenderModeTab) return;\n    if (this.currentIndex < 0 || this.currentIndex >= this.visiblePanelCount) return;\n    const panel = this.visiblePanelsCore[this.currentIndex];\n    this.tabbedMenu.actions.forEach(action => {\n      const isActive = action.panelId === panel.id;\n      action.pressed = isActive;\n      action.disableHide = isActive;\n    });\n  }\n  updateTabToolbar() {\n    if (!this.isRenderModeTab) return;\n    const items = [];\n    const visPanels = this.visiblePanelsCore;\n    for (let i = 0; i < visPanels.length; i++) {\n      this.visiblePanelsCore.forEach(panel => items.push(this.createTabByPanel(visPanels[i], i)));\n    }\n    this.tabbedMenu.setItems(items);\n  }\n  addTabFromToolbar(panel, index) {\n    if (!this.isRenderModeTab) return;\n    const newItem = this.createTabByPanel(panel, index);\n    this.tabbedMenu.actions.splice(index, 0, newItem);\n    this.updateTabToolbarItemsPressedState();\n  }\n  removeTabFromToolbar(panel) {\n    if (!this.isRenderModeTab) return;\n    const removedItem = this.tabbedMenu.actions.find(a => a.panelId == panel.id);\n    if (!removedItem) return;\n    this.tabbedMenu.actions.splice(this.tabbedMenu.actions.indexOf(removedItem), 1);\n    this.updateTabToolbarItemsPressedState();\n  }\n  get showNavigation() {\n    if (this.isReadOnly && this.visiblePanelCount == 1) return false;\n    return this.visiblePanelCount > 0 && !!this.cssClasses.footer;\n  }\n  showSeparator(index) {\n    return this.isRenderModeList && index < this.renderedPanels.length - 1;\n  }\n  calcCssClasses(css) {\n    const classes = super.calcCssClasses(css);\n    const tabbedMenu = this.tabbedMenu;\n    if (!!tabbedMenu) {\n      tabbedMenu.containerCss = this.getTabbedMenuCss(classes);\n      tabbedMenu.cssClasses = classes.tabs;\n      tabbedMenu.dotsItem.cssClasses = classes.tabs;\n      tabbedMenu.dotsItem.popupModel.contentComponentData.model.cssClasses = css.list;\n    }\n    return classes;\n  }\n  onMobileChanged() {\n    super.onMobileChanged();\n    this.updateFooterActions();\n  }\n}\nQuestionPanelDynamicModel.maxCheckCount = 3;\n__decorate([propertyArray({})], QuestionPanelDynamicModel.prototype, \"_renderedPanels\", void 0);\n__decorate([property({\n  onSet: (val, target) => {\n    target.fireCallback(target.renderModeChangedCallback);\n    target.updatePanelView();\n  }\n})], QuestionPanelDynamicModel.prototype, \"displayMode\", void 0);\n__decorate([property({\n  onSet: (val, target) => {\n    target.fireCallback(target.currentIndexChangedCallback);\n  }\n})], QuestionPanelDynamicModel.prototype, \"showProgressBar\", void 0);\n__decorate([property({\n  onSet: (val, target) => {\n    // target.updatePanelView();\n  }\n})], QuestionPanelDynamicModel.prototype, \"progressBarLocation\", void 0);\n__decorate([property({\n  defaultValue: false\n})], QuestionPanelDynamicModel.prototype, \"_showFooterToolbar\", void 0);\n__decorate([property({\n  defaultValue: false,\n  onSet: (_, target) => {\n    target.updateFooterActions();\n  }\n})], QuestionPanelDynamicModel.prototype, \"legacyNavigation\", void 0);\nSerializer.addClass(\"paneldynamic\", [{\n  name: \"showCommentArea:switch\",\n  layout: \"row\",\n  visible: true,\n  category: \"general\"\n}, {\n  name: \"templateElements\",\n  alternativeName: \"questions\",\n  baseClassName: \"question\",\n  visible: false,\n  isLightSerializable: false\n}, {\n  name: \"templateTitle:text\",\n  serializationProperty: \"locTemplateTitle\"\n}, {\n  name: \"templateTabTitle\",\n  serializationProperty: \"locTemplateTabTitle\",\n  visibleIf: obj => {\n    return obj.displayMode === \"tab\";\n  }\n}, {\n  name: \"tabTitlePlaceholder\",\n  serializationProperty: \"locTabTitlePlaceholder\",\n  visibleIf: obj => {\n    return obj.displayMode === \"tab\";\n  }\n}, {\n  name: \"templateDescription:text\",\n  serializationProperty: \"locTemplateDescription\"\n}, {\n  name: \"minWidth\",\n  defaultFunc: () => \"auto\"\n}, {\n  name: \"noEntriesText:text\",\n  serializationProperty: \"locNoEntriesText\"\n}, {\n  name: \"allowAddPanel:boolean\",\n  default: true\n}, {\n  name: \"allowRemovePanel:boolean\",\n  default: true\n}, {\n  name: \"newPanelPosition\",\n  choices: [\"next\", \"last\"],\n  default: \"last\",\n  category: \"layout\"\n}, {\n  name: \"panelCount:number\",\n  isBindable: true,\n  default: 0,\n  choices: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n}, {\n  name: \"minPanelCount:number\",\n  default: 0,\n  minValue: 0\n}, {\n  name: \"maxPanelCount:number\",\n  defaultFunc: () => settings.panel.maxPanelCount\n}, \"defaultPanelValue:panelvalue\", {\n  name: \"copyDefaultValueFromLastEntry:boolean\",\n  alternativeName: \"defaultValueFromLastPanel\"\n}, {\n  name: \"panelsState\",\n  default: \"default\",\n  choices: [\"default\", \"collapsed\", \"expanded\", \"firstExpanded\"],\n  visibleIf: obj => {\n    return obj.displayMode === \"list\";\n  }\n}, {\n  name: \"keyName\"\n}, {\n  name: \"keyDuplicationError\",\n  serializationProperty: \"locKeyDuplicationError\"\n}, {\n  name: \"confirmDelete:boolean\"\n}, {\n  name: \"confirmDeleteText\",\n  serializationProperty: \"locConfirmDeleteText\",\n  visibleIf: obj => {\n    return obj.confirmDelete;\n  }\n}, {\n  name: \"addPanelText\",\n  alternativeName: \"panelAddText\",\n  serializationProperty: \"locAddPanelText\",\n  visibleIf: obj => {\n    return obj.allowAddPanel;\n  }\n}, {\n  name: \"removePanelText\",\n  alternativeName: \"panelRemoveText\",\n  serializationProperty: \"locRemovePanelText\",\n  visibleIf: obj => {\n    return obj.allowRemovePanel;\n  }\n}, {\n  name: \"prevPanelText\",\n  alternativeName: \"panelPrevText\",\n  serializationProperty: \"locPrevPanelText\",\n  visibleIf: obj => {\n    return obj.displayMode !== \"list\";\n  }\n}, {\n  name: \"nextPanelText\",\n  alternativeName: \"panelNextText\",\n  serializationProperty: \"locNextPanelText\",\n  visibleIf: obj => {\n    return obj.displayMode !== \"list\";\n  }\n}, {\n  name: \"showQuestionNumbers\",\n  default: \"off\",\n  choices: [\"off\", \"onPanel\", \"onSurvey\"]\n}, {\n  name: \"renderMode\",\n  visible: false,\n  isSerializable: false\n}, {\n  name: \"displayMode\",\n  default: \"list\",\n  choices: [\"list\", \"carousel\", \"tab\"]\n}, {\n  name: \"showProgressBar:boolean\",\n  alternativeName: \"showRangeInProgress\",\n  default: true,\n  visibleIf: obj => {\n    return obj.displayMode === \"carousel\";\n  }\n}, {\n  name: \"progressBarLocation\",\n  default: \"top\",\n  choices: [\"top\", \"bottom\", \"topBottom\"],\n  visibleIf: obj => {\n    return obj.showProgressBar && obj.displayMode === \"carousel\";\n  }\n}, {\n  name: \"tabAlign\",\n  default: \"center\",\n  choices: [\"left\", \"center\", \"right\"],\n  visibleIf: obj => {\n    return obj.displayMode === \"tab\";\n  }\n}, {\n  name: \"templateQuestionTitleLocation\",\n  alternativeName: \"questionTitleLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\", \"left\"]\n}, {\n  name: \"templateQuestionTitleWidth\",\n  visibleIf: function (obj) {\n    return !!obj && obj.template.availableQuestionTitleWidth();\n  }\n}, {\n  name: \"templateErrorLocation\",\n  default: \"default\",\n  choices: [\"default\", \"top\", \"bottom\"]\n}, {\n  name: \"templateVisibleIf:expression\",\n  category: \"logic\"\n}, {\n  name: \"removePanelButtonLocation\",\n  alternativeName: \"panelRemoveButtonLocation\",\n  default: \"bottom\",\n  choices: [\"bottom\", \"right\"],\n  visibleIf: obj => {\n    return obj.allowRemovePanel;\n  }\n}], function () {\n  return new QuestionPanelDynamicModel(\"\");\n}, \"question\");\nQuestionFactory.Instance.registerQuestion(\"paneldynamic\", name => {\n  return new QuestionPanelDynamicModel(name);\n});\nclass SurveyProgressModel {\n  static getProgressTextInBarCss(css) {\n    return new CssClassBuilder().append(css.progressText).append(css.progressTextInBar).toString();\n  }\n  static getProgressTextUnderBarCss(css) {\n    return new CssClassBuilder().append(css.progressText).append(css.progressTextUnderBar).toString();\n  }\n}\n\n/**\n * A base class for all triggers.\n * A trigger calls a method when the expression change the result: from false to true or from true to false.\n * Please note, it runs only one changing the expression result.\n */\nclass Trigger extends Base {\n  static get operators() {\n    if (Trigger.operatorsValue != null) return Trigger.operatorsValue;\n    Trigger.operatorsValue = {\n      empty: function (value, expectedValue) {\n        return !value;\n      },\n      notempty: function (value, expectedValue) {\n        return !!value;\n      },\n      equal: function (value, expectedValue) {\n        return value == expectedValue;\n      },\n      notequal: function (value, expectedValue) {\n        return value != expectedValue;\n      },\n      contains: function (value, expectedValue) {\n        return value && value[\"indexOf\"] && value.indexOf(expectedValue) > -1;\n      },\n      notcontains: function (value, expectedValue) {\n        return !value || !value[\"indexOf\"] || value.indexOf(expectedValue) == -1;\n      },\n      greater: function (value, expectedValue) {\n        return value > expectedValue;\n      },\n      less: function (value, expectedValue) {\n        return value < expectedValue;\n      },\n      greaterorequal: function (value, expectedValue) {\n        return value >= expectedValue;\n      },\n      lessorequal: function (value, expectedValue) {\n        return value <= expectedValue;\n      }\n    };\n    return Trigger.operatorsValue;\n  }\n  constructor() {\n    super();\n    this.idValue = Trigger.idCounter++;\n    this.registerPropertyChangedHandlers([\"operator\", \"value\", \"name\"], () => {\n      this.oldPropertiesChanged();\n    });\n    this.registerPropertyChangedHandlers([\"expression\"], () => {\n      this.onExpressionChanged();\n    });\n  }\n  get id() {\n    return this.idValue;\n  }\n  getType() {\n    return \"triggerbase\";\n  }\n  toString() {\n    var res = this.getType().replace(\"trigger\", \"\");\n    var exp = !!this.expression ? this.expression : this.buildExpression();\n    if (exp) {\n      res += \", \" + exp;\n    }\n    return res;\n  }\n  get isInternal() {\n    return this.isGhost === true;\n  }\n  get operator() {\n    return this.getPropertyValue(\"operator\", \"equal\");\n  }\n  set operator(value) {\n    if (!value) return;\n    value = value.toLowerCase();\n    if (!Trigger.operators[value]) return;\n    this.setPropertyValue(\"operator\", value);\n  }\n  get value() {\n    return this.getPropertyValue(\"value\", null);\n  }\n  set value(val) {\n    this.setPropertyValue(\"value\", val);\n  }\n  get name() {\n    return this.getPropertyValue(\"name\", \"\");\n  }\n  set name(val) {\n    this.setPropertyValue(\"name\", val);\n  }\n  get expression() {\n    return this.getPropertyValue(\"expression\", \"\");\n  }\n  set expression(val) {\n    this.setPropertyValue(\"expression\", val);\n  }\n  canBeExecuted(isOnNextPage) {\n    return true;\n  }\n  canBeExecutedOnComplete() {\n    return false;\n  }\n  checkExpression(options) {\n    this.isExecutingOnNextPage = options.isOnNextPage;\n    this.isExecutingOnNavigation = options.isOnNavigation || options.isOnNextPage;\n    if (!this.canBeExecuted(options.isOnNextPage)) return;\n    if (options.isOnComplete && !this.canBeExecutedOnComplete()) return;\n    if (!this.isCheckRequired(options.keys)) return;\n    if (!!this.conditionRunner) {\n      this.perform(options.values, options.properties || null);\n    } else {\n      if (this.canSuccessOnEmptyExpression()) {\n        this.triggerResult(true, options.values, options.properties || null);\n      }\n    }\n  }\n  canSuccessOnEmptyExpression() {\n    return false;\n  }\n  check(value) {\n    var triggerResult = Trigger.operators[this.operator](value, this.value);\n    if (triggerResult) {\n      this.onSuccess({}, null);\n    } else {\n      this.onFailure();\n    }\n  }\n  get requireValidQuestion() {\n    return false;\n  }\n  perform(values, properties) {\n    this.conditionRunner.onRunComplete = res => {\n      this.triggerResult(res, values, properties);\n    };\n    this.conditionRunner.run(values, properties);\n  }\n  triggerResult(res, values, properties) {\n    if (res) {\n      this.onSuccess(values, properties);\n      this.onSuccessExecuted();\n    } else {\n      this.onFailure();\n    }\n  }\n  onSuccess(values, properties) {}\n  onFailure() {}\n  onSuccessExecuted() {}\n  endLoadingFromJson() {\n    super.endLoadingFromJson();\n    this.oldPropertiesChanged();\n  }\n  oldPropertiesChanged() {\n    this.onExpressionChanged();\n  }\n  onExpressionChanged() {\n    this.conditionRunner = null;\n  }\n  buildExpression() {\n    if (!this.name) return \"\";\n    if (this.isValueEmpty(this.value) && this.isRequireValue) return \"\";\n    return \"{\" + this.name + \"} \" + this.operator + \" \" + OperandMaker.toOperandString(this.value);\n  }\n  isCheckRequired(keys) {\n    if (!keys) return false;\n    this.createConditionRunner();\n    if (this.conditionRunner && this.conditionRunner.hasFunction() === true) return true;\n    return new ProcessValue().isAnyKeyChanged(keys, this.getUsedVariables());\n  }\n  getUsedVariables() {\n    if (!this.conditionRunner) return [];\n    const res = this.conditionRunner.getVariables();\n    if (Array.isArray(res)) {\n      const unw = \"-unwrapped\";\n      for (let i = res.length - 1; i >= 0; i--) {\n        const s = res[i];\n        if (s.endsWith(unw)) {\n          res.push(s.substring(0, s.length - unw.length));\n        }\n      }\n    }\n    return res;\n  }\n  createConditionRunner() {\n    if (!!this.conditionRunner) return;\n    var expression = this.expression;\n    if (!expression) {\n      expression = this.buildExpression();\n    }\n    if (!expression) return;\n    this.conditionRunner = new ConditionRunner(expression);\n  }\n  get isRequireValue() {\n    return this.operator !== \"empty\" && this.operator != \"notempty\";\n  }\n}\nTrigger.idCounter = 1;\nTrigger.operatorsValue = null;\n/**\n * It extends the Trigger base class and add properties required for SurveyJS classes.\n */\nclass SurveyTrigger extends Trigger {\n  constructor() {\n    super();\n    this.ownerValue = null;\n  }\n  get owner() {\n    return this.ownerValue;\n  }\n  setOwner(owner) {\n    this.ownerValue = owner;\n  }\n  getSurvey(live = false) {\n    return !!this.owner && !!this.owner[\"getSurvey\"] ? this.owner.getSurvey() : null;\n  }\n  isRealExecution() {\n    return true;\n  }\n  onSuccessExecuted() {\n    if (!!this.owner && this.isRealExecution()) {\n      this.owner.triggerExecuted(this);\n    }\n  }\n}\n/**\n * If expression returns true, it makes questions/pages visible.\n * Ohterwise it makes them invisible.\n */\nclass SurveyTriggerVisible extends SurveyTrigger {\n  constructor() {\n    super();\n    this.pages = [];\n    this.questions = [];\n  }\n  getType() {\n    return \"visibletrigger\";\n  }\n  onSuccess(values, properties) {\n    this.onTrigger(this.onItemSuccess);\n  }\n  onFailure() {\n    this.onTrigger(this.onItemFailure);\n  }\n  onTrigger(func) {\n    if (!this.owner) return;\n    var objects = this.owner.getObjects(this.pages, this.questions);\n    for (var i = 0; i < objects.length; i++) {\n      func(objects[i]);\n    }\n  }\n  onItemSuccess(item) {\n    item.visible = true;\n  }\n  onItemFailure(item) {\n    item.visible = false;\n  }\n}\n/**\n * If expression returns true, it completes the survey.\n */\nclass SurveyTriggerComplete extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  getType() {\n    return \"completetrigger\";\n  }\n  get requireValidQuestion() {\n    return true;\n  }\n  isRealExecution() {\n    return !settings.triggers.executeCompleteOnValueChanged === this.isExecutingOnNavigation;\n  }\n  onSuccess(values, properties) {\n    if (!this.owner) return;\n    if (this.isRealExecution()) {\n      this.owner.setCompleted(this);\n    } else {\n      this.owner.canBeCompleted(this, true);\n    }\n  }\n  onFailure() {\n    this.owner.canBeCompleted(this, false);\n  }\n}\n/**\n * If expression returns true, the value from property **setValue** will be set to **setToName**\n */\nclass SurveyTriggerSetValue extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  getType() {\n    return \"setvaluetrigger\";\n  }\n  canBeExecuted(isOnNextPage) {\n    return !isOnNextPage && !!this.setToName;\n  }\n  onPropertyValueChanged(name, oldValue, newValue) {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (name !== \"setToName\") return;\n    var survey = this.getSurvey();\n    if (survey && !survey.isLoadingFromJson && survey.isDesignMode) {\n      this.setValue = undefined;\n    }\n  }\n  get setToName() {\n    return this.getPropertyValue(\"setToName\", \"\");\n  }\n  set setToName(val) {\n    this.setPropertyValue(\"setToName\", val);\n  }\n  get setValue() {\n    return this.getPropertyValue(\"setValue\");\n  }\n  set setValue(val) {\n    this.setPropertyValue(\"setValue\", val);\n  }\n  get isVariable() {\n    return this.getPropertyValue(\"isVariable\");\n  }\n  set isVariable(val) {\n    this.setPropertyValue(\"isVariable\", val);\n  }\n  onSuccess(values, properties) {\n    if (!this.setToName || !this.owner) return;\n    this.owner.setTriggerValue(this.setToName, Helpers.getUnbindValue(this.setValue), this.isVariable);\n  }\n}\n/**\n * If expression returns true, the survey go to question **gotoName** and focus it.\n */\nclass SurveyTriggerSkip extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  getType() {\n    return \"skiptrigger\";\n  }\n  get requireValidQuestion() {\n    return this.canBeExecuted(false);\n  }\n  get gotoName() {\n    return this.getPropertyValue(\"gotoName\", \"\");\n  }\n  set gotoName(val) {\n    this.setPropertyValue(\"gotoName\", val);\n  }\n  canBeExecuted(isOnNextPage) {\n    return isOnNextPage === !settings.triggers.executeSkipOnValueChanged;\n  }\n  onSuccess(values, properties) {\n    if (!this.gotoName || !this.owner) return;\n    this.owner.focusQuestion(this.gotoName);\n  }\n}\n/**\n * If expression returns true, the **runExpression** will be run. If **setToName** property is not empty then the result of **runExpression** will be set to it.\n */\nclass SurveyTriggerRunExpression extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  getType() {\n    return \"runexpressiontrigger\";\n  }\n  get setToName() {\n    return this.getPropertyValue(\"setToName\", \"\");\n  }\n  set setToName(val) {\n    this.setPropertyValue(\"setToName\", val);\n  }\n  get runExpression() {\n    return this.getPropertyValue(\"runExpression\", \"\");\n  }\n  set runExpression(val) {\n    this.setPropertyValue(\"runExpression\", val);\n  }\n  canBeExecuted(isOnNextPage) {\n    return !isOnNextPage;\n  }\n  onSuccess(values, properties) {\n    if (!this.owner || !this.runExpression) return;\n    var expression = new ExpressionRunner(this.runExpression);\n    if (expression.canRun) {\n      expression.onRunComplete = res => {\n        this.onCompleteRunExpression(res);\n      };\n      expression.run(values, properties);\n    }\n  }\n  onCompleteRunExpression(newValue) {\n    if (!!this.setToName && newValue !== undefined) {\n      this.owner.setTriggerValue(this.setToName, Helpers.convertValToQuestionVal(newValue), false);\n    }\n  }\n}\n/**\n * If expression returns true, the value from question **fromName** will be set into **setToName**.\n */\nclass SurveyTriggerCopyValue extends SurveyTrigger {\n  constructor() {\n    super();\n  }\n  canBeExecuted(isOnNextPage) {\n    return !isOnNextPage && !!this.setToName && !!this.fromName;\n  }\n  get setToName() {\n    return this.getPropertyValue(\"setToName\", \"\");\n  }\n  set setToName(val) {\n    this.setPropertyValue(\"setToName\", val);\n  }\n  get fromName() {\n    return this.getPropertyValue(\"fromName\", \"\");\n  }\n  set fromName(val) {\n    this.setPropertyValue(\"fromName\", val);\n  }\n  get copyDisplayValue() {\n    return this.getPropertyValue(\"copyDisplayValue\");\n  }\n  set copyDisplayValue(val) {\n    this.setPropertyValue(\"copyDisplayValue\", val);\n  }\n  getType() {\n    return \"copyvaluetrigger\";\n  }\n  onSuccess(values, properties) {\n    if (!this.setToName || !this.owner) return;\n    this.owner.copyTriggerValue(this.setToName, this.fromName, this.copyDisplayValue);\n  }\n  canSuccessOnEmptyExpression() {\n    return true;\n  }\n  getUsedVariables() {\n    const res = super.getUsedVariables();\n    if (res.length === 0 && !!this.fromName) {\n      res.push(this.fromName);\n    }\n    return res;\n  }\n}\nSerializer.addClass(\"trigger\", [{\n  name: \"operator\",\n  default: \"equal\",\n  visible: false\n}, {\n  name: \"value\",\n  visible: false\n}, \"expression:condition\"]);\nSerializer.addClass(\"surveytrigger\", [{\n  name: \"name\",\n  visible: false\n}], null, \"trigger\");\nSerializer.addClass(\"visibletrigger\", [\"pages:pages\", \"questions:questions\"], function () {\n  return new SurveyTriggerVisible();\n}, \"surveytrigger\");\nSerializer.addClass(\"completetrigger\", [], function () {\n  return new SurveyTriggerComplete();\n}, \"surveytrigger\");\nSerializer.addClass(\"setvaluetrigger\", [{\n  name: \"!setToName:questionvalue\"\n}, {\n  name: \"setValue:triggervalue\",\n  dependsOn: \"setToName\",\n  visibleIf: function (obj) {\n    return !!obj && !!obj[\"setToName\"];\n  }\n}, {\n  name: \"isVariable:boolean\",\n  visible: false\n}], function () {\n  return new SurveyTriggerSetValue();\n}, \"surveytrigger\");\nSerializer.addClass(\"copyvaluetrigger\", [{\n  name: \"!fromName:questionvalue\"\n}, {\n  name: \"!setToName:questionvalue\"\n}, {\n  name: \"copyDisplayValue:boolean\",\n  visible: false\n}], function () {\n  return new SurveyTriggerCopyValue();\n}, \"surveytrigger\");\nSerializer.addClass(\"skiptrigger\", [{\n  name: \"!gotoName:question\"\n}], function () {\n  return new SurveyTriggerSkip();\n}, \"surveytrigger\");\nSerializer.addClass(\"runexpressiontrigger\", [{\n  name: \"setToName:questionvalue\"\n}, \"runExpression:expression\"], function () {\n  return new SurveyTriggerRunExpression();\n}, \"surveytrigger\");\n\n/**\n * A class that renders a survey in a pop-up window.\n *\n * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n */\nclass PopupSurveyModel extends Base {\n  constructor(jsonObj, initialModel = null) {\n    super();\n    /**\n     * Specifies how many seconds the pop-up window should remain open after users complete the survey.\n     *\n     * Default value: 0 (the window is closed immediately)\n     *\n     * Set this property to a negative value (for instance, -1) to keep the pop-up window open without a time limit.\n     *\n     * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n     */\n    this.closeOnCompleteTimeout = 0;\n    if (initialModel) {\n      this.surveyValue = initialModel;\n    } else {\n      this.surveyValue = this.createSurvey(jsonObj);\n    }\n    this.surveyValue.fitToContainer = true;\n    this.windowElement = DomDocumentHelper.createElement(\"div\");\n    this.survey.onComplete.add((survey, options) => {\n      this.onSurveyComplete();\n    });\n    this.registerPropertyChangedHandlers([\"isShowing\"], () => {\n      if (!!this.showingChangedCallback) this.showingChangedCallback();\n    });\n    this.registerPropertyChangedHandlers([\"isExpanded\"], () => {\n      this.onExpandedChanged();\n    });\n    this.width = new ComputedUpdater(() => this.survey.width);\n    this.width = this.survey.width;\n    this.updateCss();\n    this.onCreating();\n  }\n  onCreating() {}\n  getType() {\n    return \"popupsurvey\";\n  }\n  /**\n   * A [`SurveyModel`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model) instance rendered in the pop-up window.\n   */\n  get survey() {\n    return this.surveyValue;\n  }\n  /**\n   * Indicates whether the pop-up survey appears on the page, regardless of its [expand state](#isExpanded).\n   *\n   * You can set this property to `true` or `false` to control visibility of the pop-up survey. Alternatively, you can use the [`show()`](#show) and [`hide()`](#hide) methods.\n   */\n  get isShowing() {\n    return this.getPropertyValue(\"isShowing\", false);\n  }\n  set isShowing(val) {\n    this.setPropertyValue(\"isShowing\", val);\n  }\n  get isFullScreen() {\n    return this.getPropertyValue(\"isFullScreen\", false);\n  }\n  set isFullScreen(val) {\n    if (!this.isExpanded && !!val) {\n      this.isExpanded = true;\n    }\n    this.setPropertyValue(\"isFullScreen\", val);\n    this.setCssRoot();\n  }\n  /**\n   * Shows the pop-up survey. The survey may appear [expanded or collapsed](#isExpanded).\n   *\n   * As an alternative to this method, you can set the [`isShowing`](#isShowing) property to `true`.\n   * @see hide\n   */\n  show() {\n    this.isShowing = true;\n  }\n  /**\n   * Hides the pop-up survey.\n   *\n   * As an alternative to this method, you can set the [`isShowing`](#isShowing) property to `false`.\n   * @see show\n   * @see expand\n   * @see collapse\n   */\n  hide() {\n    this.isShowing = false;\n  }\n  toggleFullScreen() {\n    this.isFullScreen = !this.isFullScreen;\n  }\n  /**\n   * Indicates whether the pop-up window is expanded or collapsed.\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n   *\n   * You can set this property to `true` or `false` to control the expand state of the pop-up survey. Alternatively, you can use the [`expand()`](#expand) and [`collapse()`](#collapse) methods.\n   */\n  get isExpanded() {\n    return this.getPropertyValue(\"isExpanded\", false);\n  }\n  set isExpanded(val) {\n    if (!!this.isFullScreen && !val) {\n      this.isFullScreen = false;\n    }\n    this.setPropertyValue(\"isExpanded\", val);\n  }\n  get isCollapsed() {\n    return !this.isExpanded;\n  }\n  onExpandedChanged() {\n    if (!!this.expandedChangedCallback) {\n      this.expandedChangedCallback();\n    }\n    this.updateCssButton();\n  }\n  /**\n   * A title for the pop-up window. If this property is undefined, the title is taken from [`SurveyModel`](#survey)'s [`title`](https://surveyjs.io/form-library/documentation/api-reference/survey-data-model#title) property.\n   */\n  get title() {\n    return this.survey.title;\n  }\n  set title(value) {\n    this.survey.title = value;\n  }\n  get locTitle() {\n    if (this.survey.locTitle.isEmpty) return null;\n    return this.survey.locTitle;\n  }\n  get locDescription() {\n    if (this.survey.locTitle.isEmpty) return null;\n    return this.survey.locDescription;\n  }\n  /**\n   * Expands the pop-up window.\n   *\n   * As an alternative to this method, you can set the [`isExpanded`](#isExpanded) property to `true`.\n   * @see collapse\n   */\n  expand() {\n    this.isExpanded = true;\n  }\n  /**\n   * Collapses the pop-up window, leaving only the survey title visible.\n   *\n   * As an alternative to this method, you can set the [`isExpanded`](#isExpanded) property to `false`.\n   * @see expand\n   */\n  collapse() {\n    this.isExpanded = false;\n  }\n  changeExpandCollapse() {\n    this.isExpanded = !this.isExpanded;\n  }\n  /**\n   * Specifies whether to display a button that closes the pop-up window.\n   *\n   * Default value: `false`\n   *\n   * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))\n   *\n   * If you allow users to close the pop-up window, make sure to implement a UI element that opens it. This element should call the [`show()`](#show) method or enable the [`isShowing`](#isShowing) property.\n   * @see expand\n   * @see collapse\n   * @see hide\n   */\n  get allowClose() {\n    return this.getPropertyValue(\"allowClose\", false);\n  }\n  set allowClose(val) {\n    this.setPropertyValue(\"allowClose\", val);\n  }\n  /**\n   * Specifies whether to display a button that allows respondents to show the pop-up survey in full screen mode.\n   *\n   * Default value: `false`\n   */\n  get allowFullScreen() {\n    return this.getPropertyValue(\"allowFullScreen\", false);\n  }\n  set allowFullScreen(val) {\n    this.setPropertyValue(\"allowFullScreen\", val);\n  }\n  get css() {\n    return this.survey.css;\n  }\n  get cssButton() {\n    return this.getPropertyValue(\"cssButton\", \"\");\n  }\n  get cssRoot() {\n    let result = this.getPropertyValue(\"cssRoot\", \"\");\n    if (this.isCollapsed) result += \" \" + this.getPropertyValue(\"cssRootCollapsedMod\", \"\");\n    return result;\n  }\n  get cssRootCollapsedMod() {\n    return this.getPropertyValue(\"cssRootCollapsedMod\");\n  }\n  get cssRootContent() {\n    return this.getPropertyValue(\"cssRootContent\");\n  }\n  get cssBody() {\n    return this.getPropertyValue(\"cssBody\", \"\");\n  }\n  get cssHeaderRoot() {\n    return this.getPropertyValue(\"cssHeaderRoot\", \"\");\n  }\n  get cssHeaderTitleCollapsed() {\n    return this.getPropertyValue(\"cssHeaderTitleCollapsed\", \"\");\n  }\n  get cssHeaderButtonsContainer() {\n    return this.getPropertyValue(\"cssHeaderButtonsContainer\", \"\");\n  }\n  get cssHeaderCollapseButton() {\n    return this.getPropertyValue(\"cssHeaderCollapseButton\", \"\");\n  }\n  get cssHeaderCloseButton() {\n    return this.getPropertyValue(\"cssHeaderCloseButton\", \"\");\n  }\n  get cssHeaderFullScreenButton() {\n    return this.getPropertyValue(\"cssHeaderFullScreenButton\", \"\");\n  }\n  get renderedWidth() {\n    let width = this.getPropertyValue(\"width\", \"60%\");\n    if (width && !isNaN(width)) width = width + \"px\";\n    return width;\n  }\n  updateCss() {\n    if (!this.css || !this.css.window) return;\n    const cssWindow = this.css.window;\n    this.setCssRoot();\n    this.setPropertyValue(\"cssRootCollapsedMod\", cssWindow.rootCollapsedMod);\n    this.setPropertyValue(\"cssRootContent\", cssWindow.rootContent);\n    this.setPropertyValue(\"cssBody\", cssWindow.body);\n    const cssHeader = cssWindow.header;\n    if (!cssHeader) return;\n    this.setPropertyValue(\"cssHeaderRoot\", cssHeader.root);\n    this.setPropertyValue(\"cssHeaderTitleCollapsed\", cssHeader.titleCollapsed);\n    this.setPropertyValue(\"cssHeaderButtonsContainer\", cssHeader.buttonsContainer);\n    this.setPropertyValue(\"cssHeaderCollapseButton\", cssHeader.collapseButton);\n    this.setPropertyValue(\"cssHeaderCloseButton\", cssHeader.closeButton);\n    this.setPropertyValue(\"cssHeaderFullScreenButton\", cssHeader.fullScreenButton);\n    this.updateCssButton();\n  }\n  setCssRoot() {\n    const cssWindow = this.css.window;\n    if (this.isFullScreen) {\n      this.setPropertyValue(\"cssRoot\", cssWindow.root + \" \" + cssWindow.rootFullScreenMode);\n    } else {\n      this.setPropertyValue(\"cssRoot\", cssWindow.root);\n    }\n  }\n  updateCssButton() {\n    const cssHeader = !!this.css.window ? this.css.window.header : null;\n    if (!cssHeader) return;\n    this.setCssButton(this.isExpanded ? cssHeader.buttonExpanded : cssHeader.buttonCollapsed);\n  }\n  setCssButton(val) {\n    if (!val) return;\n    this.setPropertyValue(\"cssButton\", val);\n  }\n  createSurvey(jsonObj) {\n    return new SurveyModel(jsonObj);\n  }\n  onSurveyComplete() {\n    if (this.closeOnCompleteTimeout < 0) return;\n    if (this.closeOnCompleteTimeout == 0) {\n      this.hide();\n    } else {\n      var self = this;\n      var timerId = null;\n      var func = function () {\n        self.hide();\n        clearInterval(timerId);\n      };\n      timerId = setInterval(func, this.closeOnCompleteTimeout * 1000);\n    }\n  }\n  onScroll() {\n    this.survey.onScroll();\n  }\n}\n__decorate([property()], PopupSurveyModel.prototype, \"width\", void 0);\n/**\n * @deprecated Use `PopupSurveyModel` instead.\n */\nclass SurveyWindowModel extends PopupSurveyModel {}\nclass ScrollViewModel {\n  constructor() {\n    this._lockScroll = false;\n  }\n  setRootElement(element) {\n    this._containerElementValue = element === null || element === void 0 ? void 0 : element.querySelector(\".sv-scroll__scroller\");\n    this._scrollbarElement = element === null || element === void 0 ? void 0 : element.querySelector(\".sv-scroll__scrollbar\");\n    this._scrollbarSizerElement = element === null || element === void 0 ? void 0 : element.querySelector(\".sv-scroll__scrollbar-sizer\");\n    this._containerBodyElement = element === null || element === void 0 ? void 0 : element.querySelector(\".sv-scroll__container\");\n    if (!element || !DomWindowHelper.isAvailable()) return;\n    this._containerBodyResizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const height = entry.contentBoxSize ? entry.contentBoxSize[0].blockSize : entry.contentRect.width;\n        this._scrollbarSizerElement.style.height = height + \"px\";\n      }\n      this.onInnerHeightChanged && this.onInnerHeightChanged(this._containerBodyElement.clientHeight > this._containerElementValue.clientHeight);\n    });\n    this._containerBodyResizeObserver.observe(this._containerBodyElement);\n  }\n  onScrollContainer() {\n    this._lockScroll = true;\n    this._scrollbarElement.scrollTop = this._containerElementValue.scrollTop;\n  }\n  onScrollScrollbar() {\n    if (this._lockScroll) {\n      this._lockScroll = false;\n      return;\n    }\n    this._containerElementValue.scrollTop = this._scrollbarElement.scrollTop;\n  }\n  unsubscribeRootElement() {\n    if (!!this._containerBodyResizeObserver) {\n      this._containerBodyResizeObserver.disconnect();\n      this._containerBodyResizeObserver = undefined;\n    }\n  }\n}\nconst FOCUS_INPUT_SELECTOR = \"input:not(:disabled):not([readonly]):not([type=hidden]),select:not(:disabled):not([readonly]),textarea:not(:disabled):not([readonly]), button:not(:disabled):not([readonly]), [tabindex]:not([tabindex^=\\\"-\\\"])\";\nclass PopupBaseViewModel extends Base {\n  updateIsVisible(val) {\n    this._isVisible = val;\n    this.onVisibilityChanged.fire(this, {\n      isVisible: val\n    });\n  }\n  updateBeforeShowing() {\n    this.model.onShow();\n  }\n  updateAfterHiding() {\n    this.model.onHiding();\n  }\n  getLeaveOptions() {\n    return {\n      cssClass: \"sv-popup--leave\",\n      onBeforeRunAnimation: el => {\n        el.setAttribute(\"inert\", \"\");\n      },\n      onAfterRunAnimation: el => el.removeAttribute(\"inert\")\n    };\n  }\n  getEnterOptions() {\n    return {\n      cssClass: \"sv-popup--enter\"\n    };\n  }\n  getAnimatedElement() {\n    return this.getAnimationContainer();\n  }\n  isAnimationEnabled() {\n    return this.model.displayMode !== \"overlay\" && settings.animationEnabled;\n  }\n  getRerenderEvent() {\n    return this.onElementRerendered;\n  }\n  getAnimationContainer() {\n    var _a;\n    return (_a = this.container) === null || _a === void 0 ? void 0 : _a.querySelector(this.fixedPopupContainer);\n  }\n  get isVisible() {\n    return this._isVisible;\n  }\n  set isVisible(val) {\n    this.visibilityAnimation.sync(val);\n  }\n  get container() {\n    return this.containerElement || this.createdContainer;\n  }\n  getLocale() {\n    if (!!this.locale) return this.locale;\n    return super.getLocale();\n  }\n  hidePopup() {\n    this.model.isVisible = false;\n  }\n  getStyleClass() {\n    return new CssClassBuilder().append(this.model.cssClass);\n    // .append(`sv-popup--${this.model.displayMode}`, this.isOverlay);\n  }\n  getShowFooter() {\n    return this.isOverlay;\n  }\n  getShowHeader() {\n    return false;\n  }\n  getPopupHeaderTemplate() {\n    return undefined;\n  }\n  createFooterActionBar() {\n    this.footerToolbarValue = new ActionContainer();\n  }\n  resetDimensionsAndPositionStyleProperties() {\n    const nullableValue = \"\";\n    this.top = nullableValue;\n    this.left = nullableValue;\n    this.height = nullableValue;\n    this.width = nullableValue;\n    this.minWidth = nullableValue;\n  }\n  onModelChanging(newModel) {}\n  setupModel(model) {\n    if (!!this.model) {\n      this.model.onVisibilityChanged.remove(this.onModelIsVisibleChangedCallback);\n    }\n    this.onModelChanging(model);\n    this._model = model;\n    model.onVisibilityChanged.add(this.onModelIsVisibleChangedCallback);\n    this.onModelIsVisibleChangedCallback();\n  }\n  get model() {\n    return this._model;\n  }\n  set model(model) {\n    this.setupModel(model);\n  }\n  constructor(model) {\n    super();\n    this.popupSelector = \".sv-popup\";\n    this.fixedPopupContainer = \".sv-popup\";\n    this.containerSelector = \".sv-popup__container\";\n    this.scrollingContentSelector = \".sv-popup__scrolling-content\";\n    this.visibilityAnimation = new AnimationBoolean(this, val => {\n      if (this._isVisible !== val) {\n        if (!val) {\n          this.updateOnHiding();\n          this.updateIsVisible(val);\n          this.updateAfterHiding();\n          this._isPositionSetValue = false;\n        } else {\n          this.updateBeforeShowing();\n          this.updateIsVisible(val);\n        }\n      }\n    }, () => this._isVisible);\n    this.onVisibilityChanged = new EventBase();\n    this.onModelIsVisibleChangedCallback = () => {\n      this.isVisible = this.model.isVisible;\n    };\n    this._isPositionSetValue = false;\n    this.model = model;\n    this.locale = this.model.locale;\n  }\n  get title() {\n    return this.model.title;\n  }\n  get contentComponentName() {\n    return this.model.contentComponentName;\n  }\n  get contentComponentData() {\n    return this.model.contentComponentData;\n  }\n  get isModal() {\n    return this.model.isModal;\n  }\n  get isFocusedContent() {\n    return this.model.isFocusedContent;\n  }\n  get isFocusedContainer() {\n    return this.model.isFocusedContainer;\n  }\n  get showFooter() {\n    return this.getShowFooter();\n  }\n  get showHeader() {\n    return this.getShowHeader();\n  }\n  get popupHeaderTemplate() {\n    return this.getPopupHeaderTemplate();\n  }\n  get isOverlay() {\n    return this.model.displayMode === \"overlay\";\n  }\n  get styleClass() {\n    return this.getStyleClass().toString();\n  }\n  get cancelButtonText() {\n    return this.getLocalizationString(\"modalCancelButtonText\");\n  }\n  get footerToolbar() {\n    if (!this.footerToolbarValue) {\n      this.createFooterActionBar();\n    }\n    return this.footerToolbarValue;\n  }\n  onKeyDown(event) {\n    if (event.key === \"Tab\" || event.keyCode === 9) {\n      this.trapFocus(event);\n    } else if (event.key === \"Escape\" || event.keyCode === 27) {\n      this.hidePopup();\n    }\n  }\n  trapFocus(event) {\n    const focusableElements = this.container.querySelectorAll(FOCUS_INPUT_SELECTOR);\n    const firstFocusableElement = focusableElements[0];\n    const lastFocusableElement = focusableElements[focusableElements.length - 1];\n    if (event.shiftKey) {\n      if (settings.environment.root.activeElement === firstFocusableElement) {\n        lastFocusableElement.focus();\n        event.preventDefault();\n      }\n    } else {\n      if (settings.environment.root.activeElement === lastFocusableElement) {\n        firstFocusableElement.focus();\n        event.preventDefault();\n      }\n    }\n  }\n  switchFocus() {\n    if (this.isFocusedContent) {\n      this.focusFirstInput();\n    } else if (this.isFocusedContainer) {\n      this.focusContainer();\n    }\n  }\n  get isPositionSet() {\n    return this._isPositionSetValue;\n  }\n  updateOnShowing() {\n    this.prevActiveElement = settings.environment.root.activeElement;\n    if (this.isOverlay) {\n      this.resetDimensionsAndPositionStyleProperties();\n    }\n    this.switchFocus();\n    this._isPositionSetValue = true;\n  }\n  updateOnHiding() {\n    if (this.isFocusedContent && this.prevActiveElement) {\n      this.prevActiveElement.focus({\n        preventScroll: true\n      });\n    }\n  }\n  focusContainer() {\n    if (!this.container) return;\n    const popup = this.container.querySelector(this.popupSelector);\n    popup === null || popup === void 0 ? void 0 : popup.focus();\n  }\n  focusFirstInput() {\n    setTimeout(() => {\n      if (!this.container) return;\n      var el = this.container.querySelector(this.model.focusFirstInputSelector || FOCUS_INPUT_SELECTOR);\n      if (!!el) el.focus();else this.focusContainer();\n    }, 100);\n  }\n  clickOutside(event) {\n    this.hidePopup();\n    event === null || event === void 0 ? void 0 : event.stopPropagation();\n  }\n  cancel() {\n    this.model.onCancel();\n    this.hidePopup();\n  }\n  dispose() {\n    super.dispose();\n    if (this.model) {\n      this.model.onVisibilityChanged.remove(this.onModelIsVisibleChangedCallback);\n    }\n    if (!!this.createdContainer) {\n      this.createdContainer.remove();\n      this.createdContainer = undefined;\n    }\n    if (!!this.footerToolbarValue) {\n      this.footerToolbarValue.dispose();\n    }\n    this.resetComponentElement();\n  }\n  initializePopupContainer() {\n    if (!this.container) {\n      const container = DomDocumentHelper.createElement(\"div\");\n      this.createdContainer = container;\n      getElement(settings.environment.popupMountContainer).appendChild(container);\n    }\n  }\n  setComponentElement(componentRoot) {\n    if (!!componentRoot) {\n      this.containerElement = componentRoot;\n    }\n  }\n  resetComponentElement() {\n    this.containerElement = undefined;\n    this.prevActiveElement = undefined;\n  }\n  preventScrollOuside(event, deltaY) {\n    let currentElement = event.target;\n    while (currentElement !== this.container) {\n      if (DomDocumentHelper.getComputedStyle(currentElement).overflowY === \"auto\" && currentElement.scrollHeight !== currentElement.offsetHeight) {\n        const {\n          scrollHeight,\n          scrollTop,\n          clientHeight\n        } = currentElement;\n        if (!(deltaY > 0 && Math.abs(scrollHeight - clientHeight - scrollTop) < 1) && !(deltaY < 0 && scrollTop <= 0)) {\n          return;\n        }\n      }\n      currentElement = currentElement.parentElement;\n    }\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n}\n__decorate([property({\n  defaultValue: \"0px\"\n})], PopupBaseViewModel.prototype, \"top\", void 0);\n__decorate([property({\n  defaultValue: \"0px\"\n})], PopupBaseViewModel.prototype, \"left\", void 0);\n__decorate([property({\n  defaultValue: \"auto\"\n})], PopupBaseViewModel.prototype, \"height\", void 0);\n__decorate([property({\n  defaultValue: \"auto\"\n})], PopupBaseViewModel.prototype, \"width\", void 0);\n__decorate([property({\n  defaultValue: \"auto\"\n})], PopupBaseViewModel.prototype, \"minWidth\", void 0);\n__decorate([property({\n  defaultValue: false\n})], PopupBaseViewModel.prototype, \"_isVisible\", void 0);\n__decorate([property()], PopupBaseViewModel.prototype, \"locale\", void 0);\nclass Rect {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n  get left() {\n    return this.x;\n  }\n  get top() {\n    return this.y;\n  }\n  get right() {\n    return this.x + this.width;\n  }\n  get bottom() {\n    return this.y + this.height;\n  }\n}\nclass PopupUtils {\n  static calculatePosition(targetRect, height, width, verticalPosition, horizontalPosition, positionMode = \"flex\") {\n    let currentLeft = targetRect.left;\n    let currentTop = targetRect.top;\n    if (positionMode === \"flex\") {\n      if (horizontalPosition == \"center\") currentLeft = (targetRect.left + targetRect.right - width) / 2;else if (horizontalPosition == \"left\") currentLeft = targetRect.left - width;else currentLeft = targetRect.right;\n    }\n    if (verticalPosition == \"middle\") currentTop = (targetRect.top + targetRect.bottom - height) / 2;else if (verticalPosition == \"top\") currentTop = targetRect.top - height;else currentTop = targetRect.bottom;\n    if (horizontalPosition != \"center\" && verticalPosition != \"middle\") {\n      if (verticalPosition == \"top\") {\n        currentTop = currentTop + targetRect.height;\n      } else {\n        currentTop = currentTop - targetRect.height;\n      }\n    }\n    return {\n      left: Math.round(currentLeft),\n      top: Math.round(currentTop)\n    };\n  }\n  static getCorrectedVerticalDimensions(top, height, windowHeight, verticalPosition, canShrink = true, margins = {\n    top: 0,\n    bottom: 0\n  }) {\n    let result;\n    const maxHeight = windowHeight - PopupUtils.bottomIndent;\n    if (verticalPosition === \"top\") {\n      result = {\n        height: height,\n        top: top\n      };\n    }\n    if (top < -margins.top) {\n      result = {\n        height: canShrink ? height + top : height,\n        top: -margins.top\n      };\n    } else if (height + top > windowHeight) {\n      let newHeight = Math.min(height, maxHeight - top);\n      result = {\n        height: canShrink ? newHeight : height,\n        top: canShrink ? top : top - (height - newHeight)\n      };\n    }\n    if (result) {\n      result.height = Math.min(result.height, maxHeight);\n      result.top = Math.max(result.top, -margins.top);\n    }\n    return result;\n  }\n  static updateHorizontalDimensions(left, width, windowWidth, horizontalPosition, positionMode = \"flex\", margins = {\n    left: 0,\n    right: 0\n  }) {\n    width += margins.left + margins.right;\n    let newWidth = undefined,\n      newLeft = left;\n    if (horizontalPosition === \"center\") {\n      if (positionMode === \"fixed\") {\n        if (left + width > windowWidth) {\n          newWidth = windowWidth - left;\n        }\n        newLeft -= margins.left;\n      } else {\n        if (left < 0) {\n          newLeft = margins.left;\n          newWidth = Math.min(width, windowWidth);\n        } else if (width + left > windowWidth) {\n          newLeft = windowWidth - width;\n          newLeft = Math.max(newLeft, margins.left);\n          newWidth = Math.min(width, windowWidth);\n        }\n      }\n    }\n    if (horizontalPosition === \"left\") {\n      if (left < 0) {\n        newLeft = margins.left;\n        newWidth = Math.min(width, windowWidth);\n      }\n    }\n    if (horizontalPosition === \"right\") {\n      if (width + left > windowWidth) {\n        newWidth = windowWidth - left;\n      }\n    }\n    return {\n      width: newWidth - margins.left - margins.right,\n      left: newLeft\n    };\n  }\n  static updateVerticalPosition(targetRect, height, horizontalPosition, verticalPosition, windowHeight) {\n    if (verticalPosition === \"middle\") return verticalPosition;\n    let deltaTop = height - (targetRect.top + (horizontalPosition !== \"center\" ? targetRect.height : 0));\n    let deltaBottom = height + targetRect.bottom - (horizontalPosition !== \"center\" ? targetRect.height : 0) - windowHeight;\n    if (deltaTop > 0 && deltaBottom <= 0 && verticalPosition == \"top\") {\n      verticalPosition = \"bottom\";\n    } else if (deltaBottom > 0 && deltaTop <= 0 && verticalPosition == \"bottom\") {\n      verticalPosition = \"top\";\n    } else if (deltaBottom > 0 && deltaTop > 0) {\n      verticalPosition = deltaTop < deltaBottom ? \"top\" : \"bottom\";\n    }\n    return verticalPosition;\n  }\n  static updateHorizontalPosition(targetRect, width, horizontalPosition, windowWidth) {\n    if (horizontalPosition === \"center\") return horizontalPosition;\n    let deltaLeft = width - targetRect.left;\n    let deltaRight = width + targetRect.right - windowWidth;\n    if (deltaLeft > 0 && deltaRight <= 0 && horizontalPosition == \"left\") {\n      horizontalPosition = \"right\";\n    } else if (deltaRight > 0 && deltaLeft <= 0 && horizontalPosition == \"right\") {\n      horizontalPosition = \"left\";\n    } else if (deltaRight > 0 && deltaLeft > 0) {\n      horizontalPosition = deltaLeft < deltaRight ? \"left\" : \"right\";\n    }\n    return horizontalPosition;\n  }\n  static calculatePopupDirection(verticalPosition, horizontalPosition) {\n    var popupDirection;\n    if (horizontalPosition == \"center\" && verticalPosition != \"middle\") {\n      popupDirection = verticalPosition;\n    } else if (horizontalPosition != \"center\") {\n      popupDirection = horizontalPosition;\n    }\n    return popupDirection;\n  }\n  //called when showPointer  is true\n  static calculatePointerTarget(targetRect, top, left, verticalPosition, horizontalPosition, marginLeft = 0, marginRight = 0) {\n    var targetPos = {};\n    if (horizontalPosition != \"center\") {\n      targetPos.top = targetRect.top + targetRect.height / 2;\n      targetPos.left = targetRect[horizontalPosition];\n    } else if (verticalPosition != \"middle\") {\n      targetPos.top = targetRect[verticalPosition];\n      targetPos.left = targetRect.left + targetRect.width / 2;\n    }\n    targetPos.left = Math.round(targetPos.left - left);\n    targetPos.top = Math.round(targetPos.top - top);\n    if (horizontalPosition == \"left\") {\n      targetPos.left -= marginLeft + marginRight;\n    }\n    if (horizontalPosition === \"center\") {\n      targetPos.left -= marginLeft;\n    }\n    return targetPos;\n  }\n}\nPopupUtils.bottomIndent = 16;\nclass PopupDropdownViewModel extends PopupBaseViewModel {\n  createFooterActionBar() {\n    super.createFooterActionBar();\n    this.footerToolbar.setCssClasses({\n      root: defaultActionBarCss.root,\n      defaultSizeMode: defaultActionBarCss.defaultSizeMode,\n      smallSizeMode: defaultActionBarCss.smallSizeMode,\n      item: \"sd-action sv-menu-popup__button\"\n    }, false);\n    this.footerToolbar.containerCss = \"sv-menu-footer-action-bar\";\n    let footerActions = [{\n      id: \"cancel\",\n      visibleIndex: 10,\n      title: this.cancelButtonText,\n      innerCss: \"sv-popup__button--cancel\",\n      action: () => {\n        this.cancel();\n      }\n    }];\n    footerActions = this.model.updateFooterActions(footerActions);\n    this.footerToolbarValue.setItems(footerActions);\n  }\n  getAvailableAreaRect() {\n    const areaElement = this.model.getAreaCallback ? this.model.getAreaCallback(this.container) : undefined;\n    if (areaElement) {\n      const areaRect = areaElement.getBoundingClientRect();\n      return new Rect(areaRect.x, areaRect.y, areaRect.width, areaRect.height);\n    }\n    return new Rect(0, 0, DomWindowHelper.getInnerWidth(), DomWindowHelper.getInnerHeight());\n  }\n  getTargetElementRect(areaRect) {\n    const componentRoot = this.container;\n    let targetElement = this.model.getTargetCallback ? this.model.getTargetCallback(componentRoot) : undefined;\n    if (!!componentRoot && !!componentRoot.parentElement && !this.isModal && !targetElement) {\n      targetElement = componentRoot.parentElement;\n    }\n    if (!targetElement) return null;\n    const rect = targetElement.getBoundingClientRect();\n    return new Rect(rect.left - areaRect.left, rect.top - areaRect.top, rect.width, rect.height);\n  }\n  _updatePosition() {\n    var _a, _b, _c;\n    const area = this.getAvailableAreaRect();\n    const targetElementRect = this.getTargetElementRect(area);\n    if (!targetElementRect) return;\n    const popupContainer = (_a = this.container) === null || _a === void 0 ? void 0 : _a.querySelector(this.containerSelector);\n    if (!popupContainer) return;\n    const fixedPopupContainer = (_b = this.container) === null || _b === void 0 ? void 0 : _b.querySelector(this.fixedPopupContainer);\n    const scrollContent = popupContainer.querySelector(this.scrollingContentSelector);\n    const popupComputedStyle = DomDocumentHelper.getComputedStyle(popupContainer);\n    const marginLeft = parseFloat(popupComputedStyle.marginLeft) || 0;\n    const marginRight = parseFloat(popupComputedStyle.marginRight) || 0;\n    const marginTop = parseFloat(popupComputedStyle.marginTop) || 0;\n    const marginBottom = parseFloat(popupComputedStyle.marginBottom) || 0;\n    let height = popupContainer.offsetHeight - scrollContent.offsetHeight + scrollContent.scrollHeight;\n    const width = popupContainer.getBoundingClientRect().width;\n    this.model.setWidthByTarget && (this.minWidth = targetElementRect.width + \"px\");\n    let verticalPosition = this.model.verticalPosition;\n    let actualHorizontalPosition = this.getActualHorizontalPosition();\n    if (DomWindowHelper.isAvailable()) {\n      const heightValues = [height, DomWindowHelper.getInnerHeight() * 0.9, (_c = DomWindowHelper.getVisualViewport()) === null || _c === void 0 ? void 0 : _c.height];\n      height = Math.ceil(Math.min(...heightValues.filter(each => typeof each === \"number\")));\n      verticalPosition = PopupUtils.updateVerticalPosition(targetElementRect, height, this.model.horizontalPosition, this.model.verticalPosition, area.height);\n      actualHorizontalPosition = PopupUtils.updateHorizontalPosition(targetElementRect, width, actualHorizontalPosition, area.width);\n    }\n    this.popupDirection = PopupUtils.calculatePopupDirection(verticalPosition, actualHorizontalPosition);\n    const pos = PopupUtils.calculatePosition(targetElementRect, height, width + marginLeft + marginRight, verticalPosition, actualHorizontalPosition, this.model.positionMode);\n    if (DomWindowHelper.isAvailable()) {\n      const newVerticalDimensions = PopupUtils.getCorrectedVerticalDimensions(pos.top, height, area.height, verticalPosition, this.model.canShrink, {\n        top: marginTop,\n        bottom: marginBottom\n      });\n      if (!!newVerticalDimensions) {\n        this.height = newVerticalDimensions.height + \"px\";\n        pos.top = newVerticalDimensions.top;\n      }\n      if (this.model.setWidthByTarget) {\n        this.width = targetElementRect.width + \"px\";\n        pos.left = targetElementRect.left;\n      } else {\n        const newHorizontalDimensions = PopupUtils.updateHorizontalDimensions(pos.left, width, DomWindowHelper.getInnerWidth(), actualHorizontalPosition, this.model.positionMode, {\n          left: marginLeft,\n          right: marginRight\n        });\n        if (!!newHorizontalDimensions) {\n          this.width = newHorizontalDimensions.width ? newHorizontalDimensions.width + \"px\" : undefined;\n          pos.left = newHorizontalDimensions.left;\n        }\n      }\n    }\n    if (!!fixedPopupContainer) {\n      const rect = fixedPopupContainer.getBoundingClientRect();\n      pos.top -= rect.top;\n      pos.left -= rect.left;\n    }\n    if (this.showHeader) {\n      this.pointerTarget = PopupUtils.calculatePointerTarget(targetElementRect, pos.top, pos.left, verticalPosition, actualHorizontalPosition, marginLeft, marginRight);\n      this.pointerTarget.top += \"px\";\n      this.pointerTarget.left += \"px\";\n    }\n    pos.left += area.left;\n    pos.top += area.top;\n    this.left = pos.left + \"px\";\n    this.top = pos.top + \"px\";\n  }\n  getActualHorizontalPosition() {\n    let actualHorizontalPosition = this.model.horizontalPosition;\n    if (DomDocumentHelper.isAvailable()) {\n      let isRtl = DomDocumentHelper.getComputedStyle(DomDocumentHelper.getBody()).direction == \"rtl\";\n      if (isRtl) {\n        if (this.model.horizontalPosition === \"left\") {\n          actualHorizontalPosition = \"right\";\n        } else if (this.model.horizontalPosition === \"right\") {\n          actualHorizontalPosition = \"left\";\n        }\n      }\n    }\n    return actualHorizontalPosition;\n  }\n  getStyleClass() {\n    const displayMode = this.model.getDisplayMode();\n    return super.getStyleClass().append(\"sv-popup--menu-phone\", displayMode === \"menu-overlay\").append(\"sv-popup--menu-tablet\", displayMode === \"menu-popup-overlay\").append(\"sv-popup--menu-popup\", displayMode === \"menu-popup\").append(\"sv-popup--show-pointer\", displayMode === \"menu-popup\" && this.showHeader).append(`sv-popup--${this.popupDirection}`, displayMode === \"menu-popup\" && (this.showHeader || this.popupDirection == \"top\" || this.popupDirection == \"bottom\"));\n  }\n  getShowHeader() {\n    return this.model.showPointer && !this.isOverlay;\n  }\n  getPopupHeaderTemplate() {\n    return \"popup-pointer\";\n  }\n  constructor(model) {\n    super(model);\n    this.scrollEventCallBack = event => {\n      if (this.isOverlay && IsTouch) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n      this.hidePopup();\n    };\n    this.resizeEventCallback = () => {\n      if (!DomWindowHelper.isAvailable()) return;\n      const visualViewport = DomWindowHelper.getVisualViewport();\n      const documentElement = DomDocumentHelper.getDocumentElement();\n      if (!!documentElement && !!visualViewport) {\n        documentElement.style.setProperty(\"--sv-popup-overlay-height\", `${visualViewport.height * visualViewport.scale}px`);\n      }\n    };\n    this.resizeWindowCallback = () => {\n      if (!this.isOverlay) {\n        this.updatePosition(true, SurveyModel.platform === \"vue\" || SurveyModel.platform === \"vue3\" || SurveyModel.platform == \"react\" || SurveyModel.platform == \"js-ui\");\n      }\n    };\n    this.clientY = 0;\n    this.touchStartEventCallback = event => {\n      this.clientY = event.touches[0].clientY;\n    };\n    this.touchMoveEventCallback = event => {\n      this.preventScrollOuside(event, this.clientY - event.changedTouches[0].clientY);\n    };\n    this.model.onRecalculatePosition.add(this.recalculatePositionHandler);\n  }\n  setComponentElement(componentRoot) {\n    super.setComponentElement(componentRoot);\n  }\n  resetComponentElement() {\n    super.resetComponentElement();\n  }\n  updateOnShowing() {\n    const {\n      root\n    } = settings.environment;\n    this.prevActiveElement = root.activeElement;\n    if (this.isOverlay) {\n      this.resetDimensionsAndPositionStyleProperties();\n    } else {\n      this.updatePosition(true, false);\n    }\n    this.switchFocus();\n    DomWindowHelper.addEventListener(\"resize\", this.resizeWindowCallback);\n    if (this.shouldCreateResizeCallback) {\n      DomWindowHelper.getVisualViewport().addEventListener(\"resize\", this.resizeEventCallback);\n      if (this.container) {\n        this.container.addEventListener(\"touchstart\", this.touchStartEventCallback);\n        this.container.addEventListener(\"touchmove\", this.touchMoveEventCallback);\n      }\n      this.resizeEventCallback();\n    }\n    DomWindowHelper.addEventListener(\"scroll\", this.scrollEventCallBack);\n    this._isPositionSetValue = true;\n  }\n  get shouldCreateResizeCallback() {\n    return !!DomWindowHelper.getVisualViewport() && this.isOverlay;\n  }\n  updatePosition(isResetHeight, isDelayUpdating = true) {\n    if (isResetHeight) {\n      this.height = \"auto\";\n    }\n    if (isDelayUpdating) {\n      setTimeout(() => {\n        this._updatePosition();\n      }, 1);\n    } else {\n      this._updatePosition();\n    }\n  }\n  updateOnHiding() {\n    super.updateOnHiding();\n    DomWindowHelper.removeEventListener(\"resize\", this.resizeWindowCallback);\n    if (this.shouldCreateResizeCallback) {\n      DomWindowHelper.getVisualViewport().removeEventListener(\"resize\", this.resizeEventCallback);\n      if (this.container) {\n        this.container.removeEventListener(\"touchstart\", this.touchStartEventCallback);\n        this.container.removeEventListener(\"touchmove\", this.touchMoveEventCallback);\n      }\n    }\n    DomWindowHelper.removeEventListener(\"scroll\", this.scrollEventCallBack);\n    if (!this.isDisposed) {\n      this.top = undefined;\n      this.left = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.minWidth = undefined;\n    }\n  }\n  onModelChanging(newModel) {\n    if (!!this.model) {\n      this.model.onRecalculatePosition.remove(this.recalculatePositionHandler);\n    }\n    if (!this.recalculatePositionHandler) {\n      this.recalculatePositionHandler = (_, options) => {\n        if (!this.isOverlay) {\n          this.updatePosition(options.isResetHeight);\n        }\n      };\n    }\n    super.onModelChanging(newModel);\n    newModel.onRecalculatePosition.add(this.recalculatePositionHandler);\n  }\n  dispose() {\n    super.dispose();\n    this.updateOnHiding();\n    if (!!this.model) {\n      this.model.onRecalculatePosition.remove(this.recalculatePositionHandler);\n      this.recalculatePositionHandler = undefined;\n    }\n    this.resetComponentElement();\n  }\n}\nPopupDropdownViewModel.tabletSizeBreakpoint = 600;\n__decorate([property({\n  defaultValue: \"left\"\n})], PopupDropdownViewModel.prototype, \"popupDirection\", void 0);\n__decorate([property({\n  defaultValue: {\n    left: \"0px\",\n    top: \"0px\"\n  }\n})], PopupDropdownViewModel.prototype, \"pointerTarget\", void 0);\nclass PopupModalViewModel extends PopupBaseViewModel {\n  getStyleClass() {\n    const displayMode = this.model.getDisplayMode();\n    return super.getStyleClass().append(\"sv-popup--modal-popup\", displayMode === \"modal-popup\").append(\"sv-popup--modal-overlay\", displayMode === \"modal-overlay\");\n  }\n  getShowFooter() {\n    return true;\n  }\n  createFooterActionBar() {\n    super.createFooterActionBar();\n    this.footerToolbar.setCssClasses({\n      root: defaultActionBarCss.root,\n      defaultSizeMode: defaultActionBarCss.defaultSizeMode,\n      smallSizeMode: defaultActionBarCss.smallSizeMode,\n      item: \"sv-popup__body-footer-item sv-popup__button sv-modal-popup__button sd-btn sd-btn--small\"\n    }, false);\n    this.footerToolbar.containerCss = \"sv-modal-footer-action-bar\";\n    let footerActions = [{\n      id: \"cancel\",\n      visibleIndex: 10,\n      title: this.cancelButtonText,\n      innerCss: \"sv-popup__button--cancel\",\n      action: () => {\n        this.cancel();\n      }\n    }, {\n      id: \"apply\",\n      visibleIndex: 20,\n      title: this.applyButtonText,\n      innerCss: \"sv-popup__button--apply sd-btn--action\",\n      action: () => {\n        this.apply();\n      }\n    }];\n    footerActions = this.model.updateFooterActions(footerActions);\n    this.footerToolbarValue.setItems(footerActions);\n  }\n  constructor(model) {\n    super(model);\n    this.onScrollOutsideCallback = event => {\n      this.preventScrollOuside(event, event.deltaY);\n    };\n  }\n  get applyButtonText() {\n    return this.getLocalizationString(\"modalApplyButtonText\");\n  }\n  apply() {\n    if (!!this.model.onApply && !this.model.onApply()) return;\n    this.hidePopup();\n  }\n  clickOutside() {\n    return;\n  }\n  onKeyDown(event) {\n    if (event.key === \"Escape\" || event.keyCode === 27) {\n      this.model.onCancel();\n    }\n    super.onKeyDown(event);\n  }\n  updateOnShowing() {\n    if (this.container) {\n      this.container.addEventListener(\"wheel\", this.onScrollOutsideCallback, {\n        passive: false\n      });\n    }\n    super.updateOnShowing();\n  }\n  updateOnHiding() {\n    if (this.container) {\n      this.container.removeEventListener(\"wheel\", this.onScrollOutsideCallback);\n    }\n    super.updateOnHiding();\n  }\n}\nfunction createPopupModalViewModel(options, rootElement) {\n  var _a;\n  const popupOptions = Object.assign({}, options);\n  popupOptions.verticalPosition = \"top\";\n  popupOptions.horizontalPosition = \"left\";\n  popupOptions.showPointer = false;\n  popupOptions.isModal = true;\n  popupOptions.displayMode = options.displayMode || \"popup\";\n  const popupModel = new PopupModel(options.componentName, options.data, popupOptions);\n  popupModel.isFocusedContent = (_a = options.isFocusedContent) !== null && _a !== void 0 ? _a : true;\n  const popupViewModel = new PopupModalViewModel(popupModel);\n  if (!!rootElement && !!rootElement.appendChild) {\n    var container = DomDocumentHelper.createElement(\"div\");\n    rootElement.appendChild(container);\n    popupViewModel.setComponentElement(container);\n  }\n  if (!popupViewModel.container) {\n    popupViewModel.initializePopupContainer();\n  }\n  const onVisibilityChangedCallback = (sender, options) => {\n    if (!options.isVisible) {\n      if (!!container) {\n        popupViewModel.resetComponentElement();\n      }\n    }\n    popupViewModel.onVisibilityChanged.remove(onVisibilityChangedCallback);\n  };\n  popupViewModel.onVisibilityChanged.add(onVisibilityChangedCallback);\n  return popupViewModel;\n}\nfunction createPopupViewModel(model) {\n  if (model.isModal) {\n    return new PopupModalViewModel(model);\n  } else {\n    return new PopupDropdownViewModel(model);\n  }\n}\nclass ButtonGroupItemValue extends ItemValue {\n  constructor(value, text = null, typeName = \"buttongroupitemvalue\") {\n    super(value, text, typeName);\n    this.typeName = typeName;\n  }\n  getType() {\n    return !!this.typeName ? this.typeName : \"buttongroupitemvalue\";\n  }\n}\n__decorate([property()], ButtonGroupItemValue.prototype, \"iconName\", void 0);\n__decorate([property()], ButtonGroupItemValue.prototype, \"iconSize\", void 0);\n__decorate([property()], ButtonGroupItemValue.prototype, \"showCaption\", void 0);\n/**\n * A Model for a button group question.\n */\nclass QuestionButtonGroupModel extends QuestionCheckboxBase {\n  constructor(name) {\n    super(name);\n    this._allowClear = true;\n    this.createLocalizableString(\"buttongroupOptionsCaption\", this, false, true);\n    this.createLocalizableString(\"readOnlyText\", this, true);\n    this.registerPropertyChangedHandlers([\"value\", \"renderAs\", \"placeholder\", \"choices\", \"visibleChoices\"], () => {\n      this.updateReadOnlyText();\n    });\n    this.updateReadOnlyText();\n  }\n  locStrsChanged() {\n    var _a;\n    super.locStrsChanged();\n    this.updateReadOnlyText();\n    (_a = this.dropdownListModelValue) === null || _a === void 0 ? void 0 : _a.locStrsChanged();\n  }\n  updateReadOnlyText() {\n    this.readOnlyText = this.displayValue || this.placeholder;\n  }\n  getType() {\n    return \"buttongroup\";\n  }\n  getItemValueType() {\n    return \"buttongroupitemvalue\";\n  }\n  supportOther() {\n    return false;\n  }\n  //methods for mobile view\n  getControlClass() {\n    this.isEmpty();\n    return new CssClassBuilder().append(this.cssClasses.control).append(this.cssClasses.controlEmpty, this.isEmpty()).append(this.cssClasses.onError, this.hasCssError()).append(this.cssClasses.controlDisabled, this.isDisabledStyle).append(this.cssClasses.controlReadOnly, this.isReadOnlyStyle).append(this.cssClasses.controlPreview, this.isPreviewStyle).toString();\n  }\n  getFirstInputElementId() {\n    return this.inputId + \"_0\";\n  }\n  getInputId(index) {\n    return this.inputId + \"_\" + index;\n  }\n  get placeholder() {\n    return this.getLocalizableStringText(\"buttongroupOptionsCaption\");\n  }\n  set placeholder(val) {\n    this.setLocalizableStringText(\"buttongroupOptionsCaption\", val);\n  }\n  get locPlaceholder() {\n    return this.getLocalizableString(\"buttongroupOptionsCaption\");\n  }\n  get allowClear() {\n    return this._allowClear;\n  }\n  set allowClear(newVal) {\n    this._allowClear = newVal;\n  }\n  get searchEnabled() {\n    return false;\n  }\n  isItemSelected(item) {\n    return item.value == this.value;\n  }\n  get readOnlyText() {\n    return this.getLocalizableStringText(\"readOnlyText\");\n  }\n  set readOnlyText(val) {\n    this.setLocalizableStringText(\"readOnlyText\", val);\n  }\n  get locReadOnlyText() {\n    return this.getLocalizableString(\"readOnlyText\");\n  }\n  get showSelectedItemLocText() {\n    return !this.readOnly && !this.inputHasValue && !!this.selectedItemLocText;\n  }\n  get selectedItemLocText() {\n    var _a;\n    return (_a = this.selectedItem) === null || _a === void 0 ? void 0 : _a.locText;\n  }\n  set dropdownListModel(val) {\n    this.dropdownListModelValue = val;\n    this.updateElementCss();\n  }\n  get dropdownListModel() {\n    if (this.renderAs === \"dropdown\") {\n      this.onBeforeSetCompactRenderer();\n    }\n    return this.dropdownListModelValue;\n  }\n  get selectedItem() {\n    return this.getSingleSelectedItem();\n  }\n  onBlurCore(event) {\n    var _a;\n    (_a = this.dropdownListModel) === null || _a === void 0 ? void 0 : _a.onBlur(event);\n    super.onBlurCore(event);\n  }\n  updateCssClasses(res, css) {\n    super.updateCssClasses(res, css);\n    updateListCssValues(res, css);\n  }\n  calcCssClasses(css) {\n    const classes = super.calcCssClasses(css);\n    if (this.dropdownListModelValue) {\n      this.dropdownListModelValue.updateCssClasses(classes.popup, classes.list);\n    }\n    return classes;\n  }\n  // responsiveness\n  needResponsiveWidth() {\n    return true;\n  }\n  supportResponsiveness() {\n    return true;\n  }\n  getCompactRenderAs() {\n    return \"dropdown\";\n  }\n  getObservedElementSelector() {\n    return \".sd-button-group-scrollable-container\";\n  }\n  onBeforeSetCompactRenderer() {\n    if (!this.dropdownListModelValue) {\n      this.dropdownListModelValue = new DropdownListModel(this);\n    }\n  }\n  dispose() {\n    super.dispose();\n    if (!!this.dropdownListModelValue) {\n      this.dropdownListModelValue.dispose();\n      this.dropdownListModelValue = undefined;\n    }\n  }\n}\n__decorate([property({\n  defaultValue: false\n})], QuestionButtonGroupModel.prototype, \"inputHasValue\", void 0);\nSerializer.addClass(\"buttongroup\", [{\n  name: \"choices:buttongroupitemvalue[]\"\n}], function () {\n  return new QuestionButtonGroupModel(\"\");\n}, \"checkboxbase\");\nSerializer.addClass(\"buttongroupitemvalue\", [{\n  name: \"showCaption:boolean\",\n  default: true\n}, {\n  name: \"iconName:text\"\n}, {\n  name: \"iconSize:number\"\n}], value => new ButtonGroupItemValue(value), \"itemvalue\");\n// QuestionFactory.Instance.registerQuestion(\"buttongroup\", name => {\n//   var q = new QuestionButtonGroupModel(name);\n//   q.choices = QuestionFactory.DefaultChoices;\n//   return q;\n// });\nclass ButtonGroupItemModel {\n  constructor(question, item, index) {\n    this.question = question;\n    this.item = item;\n    this.index = index;\n  }\n  get value() {\n    return this.item.value;\n  }\n  get iconName() {\n    return this.item.iconName;\n  }\n  get iconSize() {\n    return this.item.iconSize || 24;\n  }\n  get caption() {\n    return this.item.locText;\n  }\n  get showCaption() {\n    return this.item.showCaption || this.item.showCaption === undefined;\n  }\n  get isRequired() {\n    return this.question.isRequired;\n  }\n  get selected() {\n    return this.question.isItemSelected(this.item);\n  }\n  get readOnly() {\n    return this.question.isInputReadOnly || !this.item.isEnabled;\n  }\n  get name() {\n    return this.question.name + \"_\" + this.question.id;\n  }\n  get id() {\n    return this.question.inputId + \"_\" + this.index;\n  }\n  get hasErrors() {\n    return this.question.errors.length > 0;\n  }\n  get describedBy() {\n    return this.question.errors.length > 0 ? this.question.id + \"_errors\" : null;\n  }\n  get labelClass() {\n    return new CssClassBuilder().append(this.question.cssClasses.item).append(this.question.cssClasses.itemSelected, this.selected).append(this.question.cssClasses.itemHover, !this.readOnly && !this.selected).append(this.question.cssClasses.itemDisabled, this.question.isReadOnly || !this.item.isEnabled).toString();\n  }\n  get css() {\n    return {\n      label: this.labelClass,\n      icon: this.question.cssClasses.itemIcon,\n      control: this.question.cssClasses.itemControl,\n      caption: this.question.cssClasses.itemCaption,\n      decorator: this.question.cssClasses.itemDecorator\n    };\n  }\n  onChange() {\n    this.question.renderedValue = this.item.value;\n  }\n}\n\n/**\n * A base class for classes that implement input masks:\n *\n * - [`InputMaskNumeric`](https://surveyjs.io/form-library/documentation/inputmasknumeric)\n * - [`InputMaskCurrency`](https://surveyjs.io/form-library/documentation/inputmaskcurrency)\n * - [`InputMaskDateTime`](https://surveyjs.io/form-library/documentation/inputmaskdatetime)\n * - [`InputMaskPattern`](https://surveyjs.io/form-library/documentation/inputmaskpattern)\n */\nclass InputMaskBase extends Base {\n  getSurvey(live = false) {\n    var _a;\n    return (_a = this.owner) === null || _a === void 0 ? void 0 : _a.getSurvey();\n  }\n  getType() {\n    return \"masksettings\";\n  }\n  setData(json) {\n    const properties = Serializer.getProperties(this.getType());\n    properties.forEach(property => {\n      const currentValue = json[property.name];\n      this[property.name] = currentValue !== undefined ? currentValue : property.getDefaultValue(this);\n    });\n  }\n  getData() {\n    const res = {};\n    const properties = Serializer.getProperties(this.getType());\n    properties.forEach(property => {\n      const currentValue = this[property.name];\n      if (!property.isDefaultValue(currentValue)) {\n        res[property.name] = currentValue;\n      }\n    });\n    return res;\n  }\n  processInput(args) {\n    return {\n      value: args.prevValue,\n      caretPosition: args.selectionEnd,\n      cancelPreventDefault: false\n    };\n  }\n  getUnmaskedValue(src) {\n    return src;\n  }\n  getMaskedValue(src) {\n    return src;\n  }\n  getTextAlignment() {\n    return \"auto\";\n  }\n  getTypeForExpressions() {\n    return \"text\";\n  }\n}\n__decorate([property()], InputMaskBase.prototype, \"saveMaskedValue\", void 0);\nSerializer.addClass(\"masksettings\", [{\n  name: \"saveMaskedValue:boolean\",\n  visibleIf: function (obj) {\n    if (!obj) return false;\n    return obj.getType() !== \"masksettings\";\n  }\n}], function () {\n  return new InputMaskBase();\n});\nfunction getLiterals(pattern) {\n  const result = [];\n  let prevCharIsEscaped = false;\n  const definitionsKeys = Object.keys(settings.maskSettings.patternDefinitions);\n  for (let index = 0; index < pattern.length; index++) {\n    const currentChar = pattern[index];\n    if (currentChar === settings.maskSettings.patternEscapeChar) {\n      prevCharIsEscaped = true;\n    } else if (prevCharIsEscaped) {\n      prevCharIsEscaped = false;\n      result.push({\n        type: \"fixed\",\n        value: currentChar\n      });\n    } else {\n      result.push({\n        type: definitionsKeys.indexOf(currentChar) !== -1 ? \"regex\" : \"const\",\n        value: currentChar\n      });\n    }\n  }\n  return result;\n}\nfunction getFirstMatch(str, strIndex, literal) {\n  const currentDefinition = settings.maskSettings.patternDefinitions[literal.value];\n  while (strIndex < str.length) {\n    if (str[strIndex].match(currentDefinition)) {\n      return strIndex;\n    }\n    strIndex++;\n  }\n  return strIndex;\n}\nfunction getMaskedValueByPattern(src, pattern, matchWholeMask) {\n  const input = src === undefined || src === null ? \"\" : src;\n  let result = \"\";\n  let strIndex = 0;\n  const literals = typeof pattern === \"string\" ? getLiterals(pattern) : pattern;\n  for (let maskIndex = 0; maskIndex < literals.length; maskIndex++) {\n    switch (literals[maskIndex].type) {\n      case \"regex\":\n        if (strIndex < input.length) {\n          strIndex = getFirstMatch(input, strIndex, literals[maskIndex]);\n        }\n        if (strIndex < input.length) {\n          result += input[strIndex];\n        } else if (matchWholeMask) {\n          result += settings.maskSettings.patternPlaceholderChar;\n        } else {\n          return result;\n        }\n        strIndex++;\n        break;\n      case \"const\":\n      case \"fixed\":\n        result += literals[maskIndex].value;\n        if (literals[maskIndex].value === input[strIndex]) {\n          strIndex++;\n        }\n        break;\n    }\n  }\n  return result;\n}\nfunction getUnmaskedValueByPattern(str, pattern, matchWholeMask, skipFixedChar = false) {\n  let result = \"\";\n  if (!str) return result;\n  let literals = typeof pattern === \"string\" ? getLiterals(pattern) : pattern;\n  for (let index = 0; index < literals.length; index++) {\n    if (literals[index].type === \"fixed\" && !skipFixedChar) {\n      result += literals[index].value;\n    }\n    if (literals[index].type === \"regex\") {\n      const currentDefinition = settings.maskSettings.patternDefinitions[literals[index].value];\n      if (!!str[index] && str[index].match(currentDefinition)) {\n        result += str[index];\n      } else if (matchWholeMask) {\n        result = \"\";\n        break;\n      } else {\n        break;\n      }\n    }\n  }\n  return result;\n}\n/**\n * A class that describes an input mask of the `\"pattern\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"pattern\",\n *     \"maskSettings\": {\n *       // Specify the properties of a pattern input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nclass InputMaskPattern extends InputMaskBase {\n  constructor() {\n    super(...arguments);\n    this.literals = [];\n  }\n  updateLiterals() {\n    this.literals = getLiterals(this.pattern || \"\");\n  }\n  onPropertyValueChanged(name, oldValue, newValue) {\n    super.onPropertyValueChanged(name, oldValue, newValue);\n    if (name === \"pattern\") {\n      this.updateLiterals();\n    }\n  }\n  getType() {\n    return \"patternmask\";\n  }\n  fromJSON(json, options) {\n    super.fromJSON(json, options);\n    this.updateLiterals();\n  }\n  _getMaskedValue(src, matchWholeMask = false) {\n    const input = src === undefined || src === null ? \"\" : src;\n    return getMaskedValueByPattern(input, this.literals, matchWholeMask);\n  }\n  _getUnmaskedValue(src, matchWholeMask = false) {\n    const input = src === undefined || src === null ? \"\" : src;\n    return getUnmaskedValueByPattern(input, this.literals, matchWholeMask);\n  }\n  processInput(args) {\n    const result = {\n      value: args.prevValue,\n      caretPosition: args.selectionEnd,\n      cancelPreventDefault: false\n    };\n    if (!args.insertedChars && args.selectionStart === args.selectionEnd) {\n      return result;\n    }\n    const leftPart = args.prevValue.slice(0, args.selectionStart) + (args.insertedChars || \"\");\n    const leftPartUnmasked = getUnmaskedValueByPattern(args.prevValue.slice(0, args.selectionStart), this.literals.slice(0, args.selectionStart), false);\n    const rightPartUnmasked = getUnmaskedValueByPattern(args.prevValue.slice(args.selectionEnd), this.literals.slice(args.selectionEnd), false, true);\n    result.value = this._getMaskedValue(leftPartUnmasked + (args.insertedChars || \"\") + rightPartUnmasked, true);\n    if (!args.insertedChars && args.inputDirection === \"backward\") {\n      result.caretPosition = args.selectionStart;\n    } else {\n      result.caretPosition = this._getMaskedValue(leftPart).length;\n    }\n    return result;\n  }\n  getMaskedValue(src) {\n    return this._getMaskedValue(src, true);\n  }\n  getUnmaskedValue(src) {\n    return this._getUnmaskedValue(src, true);\n  }\n}\n__decorate([property()], InputMaskPattern.prototype, \"pattern\", void 0);\nSerializer.addClass(\"patternmask\", [{\n  name: \"pattern\"\n}], function () {\n  return new InputMaskPattern();\n}, \"masksettings\");\nfunction splitString(str, reverse = true, n = 3) {\n  let arr = [];\n  if (reverse) {\n    for (let i = str.length - n; i > -n; i -= n) {\n      arr.push(str.substring(i, i + n));\n    }\n    arr = arr.reverse();\n  } else {\n    for (let i = 0; i < str.length; i += n) {\n      arr.push(str.substring(i, i + n));\n    }\n  }\n  return arr;\n}\n/**\n * A class that describes an input mask of the `\"numeric\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"numeric\",\n *     \"maskSettings\": {\n *       // Specify the properties of a numeric input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nclass InputMaskNumeric extends InputMaskBase {\n  calccaretPosition(leftPart, args, maskedValue) {\n    const leftPartMaskedLength = !!leftPart ? this.displayNumber(this.parseNumber(leftPart), false).length : 0;\n    let validCharIndex = 0;\n    let result = args.selectionStart;\n    // let result = 0;\n    const isDeleteKeyOperation = !args.insertedChars && args.inputDirection === \"forward\";\n    for (let index = 0; index < maskedValue.length; index++) {\n      const currentChar = maskedValue[index];\n      if (currentChar !== this.thousandsSeparator) {\n        validCharIndex++;\n      }\n      if (validCharIndex === leftPartMaskedLength + (isDeleteKeyOperation ? 1 : 0)) {\n        if (isDeleteKeyOperation) {\n          result = index;\n        } else {\n          result = index + 1;\n        }\n        break;\n      }\n      // if (validCharIndex === leftPartMaskedLength) {\n      //   result = index + 1;\n      //   break;\n      // }\n    }\n    return result;\n  }\n  numericalCompositionIsEmpty(number) {\n    return !number.integralPart && !number.fractionalPart;\n  }\n  displayNumber(parsedNumber, insertThousandsSeparator = true, matchWholeMask = false) {\n    let displayIntegralPart = parsedNumber.integralPart;\n    if (insertThousandsSeparator && !!displayIntegralPart) {\n      displayIntegralPart = splitString(displayIntegralPart).join(this.thousandsSeparator);\n    }\n    let displayFractionalPart = parsedNumber.fractionalPart;\n    const minusSign = parsedNumber.isNegative ? \"-\" : \"\";\n    if (displayFractionalPart === \"\") {\n      if (matchWholeMask) {\n        return !displayIntegralPart || displayIntegralPart === \"0\" ? displayIntegralPart : minusSign + displayIntegralPart;\n      } else {\n        const displayDecimalSeparator = parsedNumber.hasDecimalSeparator && !matchWholeMask ? this.decimalSeparator : \"\";\n        const src = displayIntegralPart + displayDecimalSeparator;\n        return src === \"0\" ? src : minusSign + src;\n      }\n    } else {\n      displayIntegralPart = displayIntegralPart || \"0\";\n      displayFractionalPart = displayFractionalPart.substring(0, this.precision);\n      return [minusSign + displayIntegralPart, displayFractionalPart].join(this.decimalSeparator);\n    }\n  }\n  convertNumber(parsedNumber) {\n    let value;\n    const minusSign = parsedNumber.isNegative ? \"-\" : \"\";\n    if (!!parsedNumber.fractionalPart) {\n      value = parseFloat(minusSign + (parsedNumber.integralPart || \"0\") + \".\" + parsedNumber.fractionalPart.substring(0, this.precision));\n    } else {\n      value = parseInt(minusSign + parsedNumber.integralPart || \"0\");\n    }\n    return value;\n  }\n  validateNumber(number, matchWholeMask) {\n    const min = this.min || Number.MIN_SAFE_INTEGER;\n    const max = this.max || Number.MAX_SAFE_INTEGER;\n    if (this.numericalCompositionIsEmpty(number)) return true;\n    if (this.min !== undefined || this.max !== undefined) {\n      let value = this.convertNumber(number);\n      if (Number.isNaN(value)) {\n        return true;\n      }\n      if (value >= min && value <= max) return true;\n      if (!matchWholeMask) {\n        if (!number.hasDecimalSeparator && value != 0) {\n          let test_high = value;\n          let test_low = value;\n          if (value > 0) {\n            if (value + 1 > min && value <= max) return true;\n            while (true) {\n              test_high = test_high * 10 + 9;\n              test_low = test_low * 10;\n              if (test_low > max) {\n                break;\n              }\n              if (test_high > min) {\n                return true;\n              }\n            }\n            return false;\n          }\n          if (value < 0) {\n            if (value >= min && value - 1 < max) return true;\n            while (true) {\n              test_high = test_high * 10;\n              test_low = test_low * 10 - 9;\n              if (test_high < min) {\n                break;\n              }\n              if (test_low < max) {\n                return true;\n              }\n            }\n            return false;\n          }\n        } else {\n          const delta = Math.pow(0.1, (number.fractionalPart || \"\").length);\n          if (value >= 0) return value + delta > min && value <= max;\n          if (value < 0) return value >= min && value - delta < max;\n        }\n        return value >= 0 && value <= max || value < 0 && value >= min;\n      }\n      return false;\n    }\n    return true;\n  }\n  parseNumber(src) {\n    const result = {\n      integralPart: \"\",\n      fractionalPart: \"\",\n      hasDecimalSeparator: false,\n      isNegative: false\n    };\n    const input = src === undefined || src === null ? \"\" : src.toString();\n    let minusCharCount = 0;\n    for (let inputIndex = 0; inputIndex < input.length; inputIndex++) {\n      const currentChar = input[inputIndex];\n      switch (currentChar) {\n        case \"-\":\n          {\n            if (this.allowNegativeValues && (this.min === undefined || this.min < 0)) {\n              minusCharCount++;\n            }\n            break;\n          }\n        case this.decimalSeparator:\n          {\n            if (this.precision > 0) {\n              result.hasDecimalSeparator = true;\n            }\n            break;\n          }\n        case this.thousandsSeparator:\n          {\n            break;\n          }\n        default:\n          {\n            if (currentChar.match(numberDefinition)) {\n              if (result.hasDecimalSeparator) {\n                result.fractionalPart += currentChar;\n              } else {\n                result.integralPart += currentChar;\n              }\n            }\n          }\n      }\n    }\n    result.isNegative = minusCharCount % 2 !== 0;\n    if (result.integralPart.length > 1 && result.integralPart[0] === \"0\") {\n      result.integralPart = result.integralPart.slice(1);\n    }\n    return result;\n  }\n  getNumberMaskedValue(src, matchWholeMask = false) {\n    const parsedNumber = this.parseNumber(src);\n    if (!this.validateNumber(parsedNumber, matchWholeMask)) {\n      return null;\n    }\n    const displayText = this.displayNumber(parsedNumber, true, matchWholeMask);\n    return displayText;\n  }\n  getNumberUnmaskedValue(str) {\n    const parsedNumber = this.parseNumber(str);\n    if (this.numericalCompositionIsEmpty(parsedNumber)) return undefined;\n    return this.convertNumber(parsedNumber);\n  }\n  getTextAlignment() {\n    return \"right\";\n  }\n  getMaskedValue(src) {\n    let input = src === undefined || src === null ? \"\" : src.toString();\n    input = input.replace(\".\", this.decimalSeparator);\n    return this.getNumberMaskedValue(input, true);\n  }\n  getUnmaskedValue(src) {\n    return this.getNumberUnmaskedValue(src);\n  }\n  processInput(args) {\n    const result = {\n      value: args.prevValue,\n      caretPosition: args.selectionEnd,\n      cancelPreventDefault: false\n    };\n    const leftPart = args.prevValue.slice(0, args.selectionStart) + (args.insertedChars || \"\");\n    const rightPart = args.prevValue.slice(args.selectionEnd);\n    const src = leftPart + rightPart;\n    const parsedNumber = this.parseNumber(src);\n    if (!this.validateNumber(parsedNumber, false)) {\n      return result;\n    }\n    const maskedValue = this.getNumberMaskedValue(src);\n    const caretPosition = this.calccaretPosition(leftPart, args, maskedValue);\n    result.value = maskedValue;\n    result.caretPosition = caretPosition;\n    return result;\n  }\n  getType() {\n    return \"numericmask\";\n  }\n  isValueUndefined(value) {\n    return value === \"\" || super.isValueUndefined(value);\n  }\n}\n__decorate([property()], InputMaskNumeric.prototype, \"allowNegativeValues\", void 0);\n__decorate([property()], InputMaskNumeric.prototype, \"decimalSeparator\", void 0);\n__decorate([property()], InputMaskNumeric.prototype, \"precision\", void 0);\n__decorate([property()], InputMaskNumeric.prototype, \"thousandsSeparator\", void 0);\n__decorate([property()], InputMaskNumeric.prototype, \"min\", void 0);\n__decorate([property()], InputMaskNumeric.prototype, \"max\", void 0);\nSerializer.addClass(\"numericmask\", [{\n  name: \"allowNegativeValues:boolean\",\n  default: true\n}, {\n  name: \"decimalSeparator\",\n  default: \".\",\n  maxLength: 1\n}, {\n  name: \"thousandsSeparator\",\n  default: \",\",\n  maxLength: 1\n}, {\n  name: \"precision:number\",\n  default: 2,\n  minValue: 0\n}, {\n  name: \"min:number\"\n}, {\n  name: \"max:number\"\n}], function () {\n  return new InputMaskNumeric();\n}, \"masksettings\");\nfunction getMaxCountLexem(currentLexemType, count) {\n  switch (currentLexemType) {\n    case \"hour\":\n    case \"minute\":\n    case \"second\":\n    case \"day\":\n    case \"month\":\n      {\n        return 2;\n      }\n    case \"timeMarker\":\n    case \"year\":\n      {\n        return count;\n      }\n    default:\n      {\n        return 1;\n      }\n  }\n}\nfunction trimDatePart(lexem, data) {\n  let result = data;\n  if (lexem.count < lexem.maxCount && (lexem.type === \"day\" && parseInt(data[0]) === 0 || lexem.type === \"month\" && parseInt(data[0]) === 0)) {\n    result = data.slice(1, data.length);\n  }\n  return result;\n}\nfunction getDateTimeLexems(pattern) {\n  const result = [];\n  let prevLexemType;\n  const createOrUpdateLexem = (currentLexemType, currentChar, upperCase = false) => {\n    if (!!prevLexemType && prevLexemType === currentLexemType) {\n      result[result.length - 1].count++;\n      const maxCount = getMaxCountLexem(currentLexemType, result[result.length - 1].count);\n      result[result.length - 1].maxCount = maxCount;\n    } else {\n      const maxCount = getMaxCountLexem(currentLexemType, 1);\n      // result.push({ type: currentLexemType, value: currentChar, count: 1, data: { value: \"\", isCompleted: false, isCorrect: false }, maxCount: maxCount });\n      result.push({\n        type: currentLexemType,\n        value: currentChar,\n        count: 1,\n        maxCount: maxCount,\n        upperCase: upperCase\n      });\n    }\n  };\n  for (let index = 0; index < pattern.length; index++) {\n    const currentChar = pattern[index];\n    switch (currentChar) {\n      case \"m\":\n        createOrUpdateLexem(\"month\", currentChar);\n        break;\n      case \"d\":\n        createOrUpdateLexem(\"day\", currentChar);\n        break;\n      case \"y\":\n        createOrUpdateLexem(\"year\", currentChar);\n        break;\n      case \"h\":\n        createOrUpdateLexem(\"hour\", currentChar, false);\n        break;\n      case \"H\":\n        createOrUpdateLexem(\"hour\", currentChar, true);\n        break;\n      case \"M\":\n        createOrUpdateLexem(\"minute\", currentChar);\n        break;\n      case \"s\":\n        createOrUpdateLexem(\"second\", currentChar);\n        break;\n      case \"t\":\n        createOrUpdateLexem(\"timeMarker\", currentChar);\n        break;\n      case \"T\":\n        createOrUpdateLexem(\"timeMarker\", currentChar, true);\n        break;\n      default:\n        result.push({\n          type: \"separator\",\n          value: currentChar,\n          count: 1,\n          maxCount: 1,\n          upperCase: false\n        });\n        break;\n    }\n    prevLexemType = result[result.length - 1].type;\n  }\n  return result;\n}\n/**\n * A class that describes an input mask of the `\"datetime\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"datetime\",\n *     \"maskSettings\": {\n *       // Specify the properties of a date-time input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nclass InputMaskDateTime extends InputMaskPattern {\n  constructor() {\n    super(...arguments);\n    this.defaultDate = \"1970-01-01T\";\n    this.turnOfTheCentury = 68;\n    this.twelve = 12;\n    this.lexems = [];\n    this.inputDateTimeData = [];\n    this.validBeginningOfNumbers = {\n      hour: 1,\n      hourU: 2,\n      minute: 5,\n      second: 5,\n      day: 3,\n      month: 1\n    };\n  }\n  get hasDatePart() {\n    return this.lexems.some(l => l.type === \"day\" || l.type === \"month\" || l.type === \"year\");\n  }\n  get hasTimePart() {\n    return this.lexems.some(l => l.type === \"hour\" || l.type === \"minute\" || l.type === \"second\");\n  }\n  get is12Hours() {\n    return this.lexems.filter(l => l.type === \"hour\" && !l.upperCase).length > 0;\n  }\n  getType() {\n    return \"datetimemask\";\n  }\n  getTypeForExpressions() {\n    return this.hasTimePart ? \"datetime-local\" : \"datetime\";\n  }\n  updateLiterals() {\n    this.lexems = getDateTimeLexems(this.pattern || \"\");\n  }\n  leaveOnlyNumbers(input) {\n    let result = \"\";\n    for (let index = 0; index < input.length; index++) {\n      if (input[index].match(numberDefinition)) {\n        result += input[index];\n      }\n    }\n    return result;\n  }\n  getMaskedStrFromISO(str) {\n    let date = new Date(str);\n    this.initInputDateTimeData();\n    if (!this.hasTimePart) {\n      date = new Date(str + \"T00:00:00\");\n    }\n    if (!this.hasDatePart) {\n      date = new Date(this.defaultDate + str);\n    }\n    if (!isNaN(date)) {\n      this.lexems.forEach((lexem, index) => {\n        let inputData = this.inputDateTimeData[index];\n        inputData.isCompleted = true;\n        switch (lexem.type) {\n          case \"hour\":\n            {\n              if (!this.is12Hours) {\n                inputData.value = date.getHours().toString();\n              } else {\n                inputData.value = ((date.getHours() - 1) % this.twelve + 1).toString();\n              }\n              break;\n            }\n          case \"minute\":\n            {\n              inputData.value = date.getMinutes().toString();\n              break;\n            }\n          case \"second\":\n            {\n              inputData.value = date.getSeconds().toString();\n              break;\n            }\n          case \"timeMarker\":\n            {\n              const marker = date.getHours() >= this.twelve ? \"pm\" : \"am\";\n              inputData.value = lexem.upperCase ? marker.toUpperCase() : marker;\n              break;\n            }\n          case \"day\":\n            {\n              inputData.value = date.getDate().toString();\n              break;\n            }\n          case \"month\":\n            {\n              inputData.value = (date.getMonth() + 1).toString();\n              break;\n            }\n          case \"year\":\n            {\n              let year = date.getFullYear();\n              if (lexem.count == 2) year = year % 100;\n              inputData.value = year.toString();\n              break;\n            }\n        }\n      });\n    }\n    return this.getFormatedString(true);\n  }\n  initInputDateTimeData() {\n    this.inputDateTimeData = [];\n    this.lexems.forEach(lexem => {\n      this.inputDateTimeData.push({\n        lexem: lexem,\n        isCompleted: false,\n        value: undefined\n      });\n    });\n  }\n  getISO_8601Format(dateTime) {\n    const date = [];\n    const time = [];\n    if (dateTime.year !== undefined) {\n      const year = this.getPlaceholder(4, dateTime.year.toString(), \"0\") + dateTime.year;\n      date.push(year);\n    }\n    if (dateTime.month !== undefined && dateTime.year !== undefined) {\n      const month = this.getPlaceholder(2, dateTime.month.toString(), \"0\") + dateTime.month;\n      date.push(month);\n    }\n    if (dateTime.day !== undefined && dateTime.month !== undefined && dateTime.year !== undefined) {\n      const day = this.getPlaceholder(2, dateTime.day.toString(), \"0\") + dateTime.day;\n      date.push(day);\n    }\n    if (dateTime.hour !== undefined) {\n      const hour = this.getPlaceholder(2, dateTime.hour.toString(), \"0\") + dateTime.hour;\n      time.push(hour);\n    }\n    if (dateTime.minute !== undefined && dateTime.hour !== undefined) {\n      const minute = this.getPlaceholder(2, dateTime.minute.toString(), \"0\") + dateTime.minute;\n      time.push(minute);\n    }\n    if (dateTime.second !== undefined && dateTime.minute !== undefined && dateTime.hour !== undefined) {\n      const second = this.getPlaceholder(2, dateTime.second.toString(), \"0\") + dateTime.second;\n      time.push(second);\n    }\n    const result = [];\n    if (date.length > 0) {\n      result.push(date.join(\"-\"));\n    }\n    if (time.length > 1) {\n      result.push(time.join(\":\"));\n    }\n    return result.join(\"T\");\n  }\n  isYearValid(dateTime) {\n    if (dateTime.min === undefined && dateTime.max === undefined) return false;\n    const data = dateTime.year.toString();\n    const minYearPart = dateTime.min.toISOString().slice(0, data.length);\n    const maxYearPart = dateTime.max.toISOString().slice(0, data.length);\n    return dateTime.year >= parseInt(minYearPart) && dateTime.year <= parseInt(maxYearPart);\n  }\n  createIDateTimeCompositionWithDefaults(dateTime, isUpperLimit) {\n    const checkOnlyLeapYears = dateTime.day == 29 && dateTime.month == 2;\n    let minYear = dateTime.min.getFullYear();\n    let maxYear = dateTime.max.getFullYear();\n    if (checkOnlyLeapYears) {\n      minYear = Math.ceil(minYear / 4) * 4;\n      maxYear = Math.floor(maxYear / 4) * 4;\n      if (minYear > maxYear) {\n        minYear = undefined;\n        maxYear = undefined;\n      }\n    }\n    const year = dateTime.year !== undefined ? dateTime.year : isUpperLimit ? maxYear : minYear;\n    const month = dateTime.month !== undefined ? dateTime.month : isUpperLimit && this.hasDatePart ? 12 : 1;\n    const day = dateTime.day !== undefined ? dateTime.day : isUpperLimit && this.hasDatePart ? this.getMaxDateForMonth(year, month) : 1;\n    const hour = dateTime.hour !== undefined ? dateTime.hour : isUpperLimit ? 23 : 0;\n    const minute = dateTime.minute !== undefined ? dateTime.minute : isUpperLimit ? 59 : 0;\n    const second = dateTime.second !== undefined ? dateTime.second : isUpperLimit ? 59 : 0;\n    return {\n      year: year,\n      month: month,\n      day: day,\n      hour: hour,\n      minute: minute,\n      second: second\n    };\n  }\n  getMaxDateForMonth(year, month) {\n    if (month == 2) return year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ? 29 : 28;\n    return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month - 1];\n  }\n  isDateValid(dateTime) {\n    const date = new Date(this.getISO_8601Format(this.createIDateTimeCompositionWithDefaults(dateTime, false)));\n    const dateH = new Date(this.getISO_8601Format(this.createIDateTimeCompositionWithDefaults(dateTime, true)));\n    return !isNaN(date) && (date.getDate() === dateTime.day || dateTime.day === undefined) && (date.getMonth() === dateTime.month - 1 || dateTime.month === undefined) && (date.getFullYear() === dateTime.year || dateTime.year === undefined) && dateH >= dateTime.min && date <= dateTime.max;\n  }\n  getPlaceholder(lexemLength, str, char) {\n    const paddingsLength = lexemLength - (str || \"\").length;\n    const paddings = paddingsLength > 0 ? char.repeat(paddingsLength) : \"\";\n    return paddings;\n  }\n  isDateValid12(dateTime12) {\n    if (!this.is12Hours) return this.isDateValid(dateTime12);\n    if (this.is12Hours && dateTime12.hour > this.twelve) {\n      return false;\n    }\n    if (!dateTime12.timeMarker) {\n      if (this.isDateValid(dateTime12)) return true;\n      dateTime12.hour += this.twelve;\n      return this.isDateValid(dateTime12);\n    } else if (dateTime12.timeMarker[0].toLowerCase() === \"p\") {\n      if (dateTime12.hour !== this.twelve) {\n        dateTime12.hour += this.twelve;\n      }\n      return this.isDateValid(dateTime12);\n    } else {\n      if (dateTime12.hour === this.twelve) {\n        dateTime12.hour = 0;\n      }\n      return this.isDateValid(dateTime12);\n    }\n  }\n  updateTimeMarkerInputDateTimeData(newItem, dateTime) {\n    let data = newItem.value;\n    if (!data) return;\n    const propertyName = \"timeMarker\";\n    const tempDateTime = Object.assign({}, dateTime);\n    tempDateTime[propertyName] = data;\n    if (this.isDateValid12(tempDateTime)) {\n      newItem.isCompleted = true;\n    } else {\n      data = data.slice(0, data.length - 1);\n    }\n    newItem.value = data || undefined;\n    dateTime[propertyName] = data || undefined;\n    return;\n  }\n  updateInputDateTimeData(newItem, dateTime) {\n    let data = newItem.value;\n    if (!data) return;\n    const propertyName = newItem.lexem.type;\n    const tempDateTime = Object.assign({}, dateTime);\n    tempDateTime[propertyName] = parseInt(this.parseTwoDigitYear(newItem));\n    if (data.length === newItem.lexem.maxCount) {\n      if (this.isDateValid12(tempDateTime)) {\n        newItem.isCompleted = true;\n        newItem.value = data || undefined;\n        dateTime[propertyName] = parseInt(data) > 0 ? parseInt(data) : undefined;\n        return;\n      } else {\n        data = data.slice(0, data.length - 1);\n      }\n    }\n    tempDateTime[propertyName] = parseInt(data);\n    const firstDigit = parseInt(data[0]);\n    const validBeginningOfNumber = this.validBeginningOfNumbers[propertyName + (newItem.lexem.upperCase ? \"U\" : \"\")];\n    if (propertyName === \"year\" && !this.isYearValid(tempDateTime)) {\n      data = data.slice(0, data.length - 1);\n      newItem.isCompleted = false;\n    } else if (validBeginningOfNumber !== undefined && firstDigit > validBeginningOfNumber) {\n      if (this.isDateValid12(tempDateTime)) {\n        newItem.isCompleted = true;\n      } else {\n        data = data.slice(0, data.length - 1);\n      }\n    } else if (validBeginningOfNumber !== undefined && firstDigit !== 0 && firstDigit <= validBeginningOfNumber) {\n      this.checkValidationDateTimePart(tempDateTime, propertyName, newItem);\n      if (newItem.isCompleted && !this.isDateValid12(tempDateTime)) {\n        data = data.slice(0, data.length - 1);\n      }\n    }\n    newItem.value = data || undefined;\n    dateTime[propertyName] = parseInt(data) > 0 ? parseInt(data) : undefined;\n  }\n  checkValidationDateTimePart(dateTime, propertyName, newItem) {\n    const prevValue = dateTime[propertyName];\n    let tempValue = prevValue * 10;\n    let maxValue = 10;\n    if (propertyName === \"month\") maxValue = 3;\n    if (propertyName === \"hour\") maxValue = this.is12Hours ? 3 : 5;\n    newItem.isCompleted = true;\n    for (let index = 0; index < maxValue; index++) {\n      dateTime[propertyName] = tempValue + index;\n      if (this.isDateValid12(dateTime)) {\n        newItem.isCompleted = false;\n        break;\n      }\n    }\n    dateTime[propertyName] = prevValue;\n  }\n  getCorrectDatePartFormat(inputData, matchWholeMask) {\n    const lexem = inputData.lexem;\n    let dataStr = inputData.value || \"\";\n    if (!!dataStr && lexem.type === \"timeMarker\") {\n      if (matchWholeMask) {\n        dataStr = dataStr + this.getPlaceholder(lexem.count, dataStr, lexem.value);\n      }\n      return dataStr;\n    }\n    if (!!dataStr && inputData.isCompleted) {\n      dataStr = parseInt(dataStr).toString();\n    }\n    if (!!dataStr && inputData.isCompleted) {\n      const zeroPaddings = this.getPlaceholder(lexem.count, dataStr, \"0\");\n      dataStr = zeroPaddings + dataStr;\n    } else {\n      // !!!\n      dataStr = trimDatePart(lexem, dataStr);\n      if (matchWholeMask) {\n        dataStr += this.getPlaceholder(lexem.count, dataStr, lexem.value);\n      }\n    }\n    return dataStr;\n  }\n  createIDateTimeComposition() {\n    let isoMin, isoMax;\n    if (this.hasDatePart) {\n      isoMin = this.min || \"0001-01-01\";\n      isoMax = this.max || \"9996-12-31\";\n    } else {\n      isoMin = this.defaultDate + (this.min || \"00:00:00\");\n      isoMax = this.defaultDate + (this.max || \"23:59:59\");\n    }\n    const tempDateTime = {\n      hour: undefined,\n      minute: undefined,\n      second: undefined,\n      day: undefined,\n      month: undefined,\n      year: undefined,\n      min: new Date(isoMin),\n      max: new Date(isoMax)\n    };\n    return tempDateTime;\n  }\n  parseTwoDigitYear(data) {\n    const inputData = data.value;\n    if (data.lexem.type !== \"year\" || data.lexem.count > 2) return inputData;\n    if (!!this.max && this.max.length >= 4) {\n      this.turnOfTheCentury = parseInt(this.max.slice(2, 4));\n    }\n    const year = parseInt(inputData);\n    const result = (year > this.turnOfTheCentury ? \"19\" : \"20\") + inputData;\n    return result;\n  }\n  getFormatedString(matchWholeMask) {\n    let result = \"\";\n    let prevSeparator = \"\";\n    let prevIsCompleted = false;\n    let lastItemWithDataIndex = this.inputDateTimeData.length - 1;\n    if (!matchWholeMask) {\n      const arr = this.inputDateTimeData.filter(item => !!item.value);\n      lastItemWithDataIndex = this.inputDateTimeData.indexOf(arr[arr.length - 1]);\n    }\n    for (let index = 0; index < this.inputDateTimeData.length; index++) {\n      const inputData = this.inputDateTimeData[index];\n      switch (inputData.lexem.type) {\n        case \"timeMarker\":\n        case \"hour\":\n        case \"minute\":\n        case \"second\":\n        case \"day\":\n        case \"month\":\n        case \"year\":\n          if (inputData.value === undefined && !matchWholeMask) {\n            result += prevIsCompleted ? prevSeparator : \"\";\n            return result;\n          } else {\n            const _matchWholeMask = matchWholeMask || lastItemWithDataIndex > index;\n            const data = this.getCorrectDatePartFormat(inputData, _matchWholeMask);\n            result += prevSeparator + data;\n            prevIsCompleted = inputData.isCompleted;\n          }\n          break;\n        case \"separator\":\n          prevSeparator = inputData.lexem.value;\n          break;\n      }\n    }\n    return result;\n  }\n  cleanTimeMarker(str, upperCase) {\n    let result = \"\";\n    str = str.toUpperCase();\n    for (let i = 0; i < str.length; i++) {\n      if (!result && (str[i] == \"P\" || str[i] == \"A\") || result && str[i] == \"M\") result += str[i];\n    }\n    if (upperCase) {\n      result = result.toUpperCase();\n    } else {\n      result = result.toLowerCase();\n    }\n    return result;\n  }\n  setInputDateTimeData(numberParts) {\n    let numberPartsArrayIndex = 0;\n    this.initInputDateTimeData();\n    this.lexems.forEach((lexem, index) => {\n      if (numberParts.length > 0 && numberPartsArrayIndex < numberParts.length) {\n        if (lexem.type === \"separator\") return;\n        const inputData = this.inputDateTimeData[index];\n        const currentPart = numberParts[numberPartsArrayIndex];\n        let _data;\n        if (lexem.type === \"timeMarker\") {\n          _data = this.cleanTimeMarker(currentPart, lexem.upperCase);\n        } else {\n          _data = this.leaveOnlyNumbers(currentPart);\n        }\n        inputData.value = _data.slice(0, lexem.maxCount);\n        numberPartsArrayIndex++;\n      }\n    });\n  }\n  _getMaskedValue(src, matchWholeMask = true) {\n    let input = src === undefined || src === null ? \"\" : src.toString();\n    const inputParts = this.getParts(input);\n    this.setInputDateTimeData(inputParts);\n    const tempDateTime = this.createIDateTimeComposition();\n    this.inputDateTimeData.forEach(itemData => {\n      if (itemData.lexem.type === \"timeMarker\") {\n        this.updateTimeMarkerInputDateTimeData(itemData, tempDateTime);\n      } else {\n        this.updateInputDateTimeData(itemData, tempDateTime);\n      }\n    });\n    const result = this.getFormatedString(matchWholeMask);\n    return result;\n  }\n  getParts(input) {\n    const inputParts = [];\n    const lexemsWithValue = this.lexems.filter(l => l.type !== \"separator\");\n    const separators = this.lexems.filter(l => l.type === \"separator\").map(s => s.value);\n    let curPart = \"\";\n    let foundSeparator = false;\n    let foundPseudoSeparator = false;\n    for (let i = 0; i < input.length; i++) {\n      const inputChar = input[i];\n      if (inputChar.match(numberDefinition) || inputChar === lexemsWithValue[inputParts.length].value) {\n        foundSeparator = false;\n        foundPseudoSeparator = false;\n        curPart += inputChar;\n      } else if (lexemsWithValue[inputParts.length].type === \"timeMarker\") {\n        foundSeparator = false;\n        foundPseudoSeparator = false;\n        curPart += inputChar;\n      } else {\n        if (separators.indexOf(inputChar) !== -1) {\n          if (!foundPseudoSeparator) {\n            foundSeparator = true;\n            inputParts.push(curPart);\n            curPart = \"\";\n          }\n        } else {\n          if (!foundSeparator) {\n            foundPseudoSeparator = true;\n            inputParts.push(curPart);\n            curPart = \"\";\n          }\n        }\n      }\n      if (inputParts.length >= lexemsWithValue.length) {\n        foundSeparator = false;\n        break;\n      }\n    }\n    if (curPart != \"\" || foundSeparator) {\n      inputParts.push(curPart);\n    }\n    return inputParts;\n  }\n  getUnmaskedValue(src) {\n    var _a;\n    let input = src === undefined || src === null ? \"\" : src.toString();\n    const inputParts = this.getParts(input);\n    this.setInputDateTimeData(inputParts);\n    const timeMarker = (_a = this.inputDateTimeData.filter(idtd => idtd.lexem.type === \"timeMarker\")[0]) === null || _a === void 0 ? void 0 : _a.value.toLowerCase()[0];\n    const tempDateTime = this.createIDateTimeComposition();\n    let uncompleted = false;\n    this.inputDateTimeData.forEach(inputData => {\n      let str = inputData.value;\n      if (inputData.lexem.type == \"timeMarker\" || inputData.lexem.type == \"separator\") return;\n      if (!str || str.length < inputData.lexem.count) {\n        uncompleted = true;\n        return;\n      }\n      let value = parseInt(this.parseTwoDigitYear(inputData));\n      if (inputData.lexem.type == \"hour\" && timeMarker === \"p\" && value != this.twelve) value += this.twelve;\n      tempDateTime[inputData.lexem.type] = value;\n    });\n    return uncompleted ? \"\" : this.getISO_8601Format(tempDateTime);\n  }\n  getMaskedValue(src) {\n    return this.getMaskedStrFromISO(src);\n  }\n  processInput(args) {\n    const result = {\n      value: args.prevValue,\n      caretPosition: args.selectionEnd,\n      cancelPreventDefault: false\n    };\n    const leftPart = args.prevValue.slice(0, args.selectionStart);\n    const rightPart = args.prevValue.slice(args.selectionEnd);\n    result.value = this._getMaskedValue(leftPart + (args.insertedChars || \"\") + rightPart);\n    if (!args.insertedChars && args.inputDirection === \"backward\") {\n      result.caretPosition = args.selectionStart;\n    } else {\n      result.caretPosition = this._getMaskedValue(leftPart + (args.insertedChars || \"\"), false).length;\n    }\n    return result;\n  }\n}\n__decorate([property()], InputMaskDateTime.prototype, \"min\", void 0);\n__decorate([property()], InputMaskDateTime.prototype, \"max\", void 0);\nSerializer.addClass(\"datetimemask\", [{\n  name: \"min\",\n  type: \"datetime\",\n  enableIf: obj => {\n    return !!obj.pattern;\n  }\n}, {\n  name: \"max\",\n  type: \"datetime\",\n  enableIf: obj => {\n    return !!obj.pattern;\n  }\n}], function () {\n  return new InputMaskDateTime();\n}, \"patternmask\");\n\n/**\n * A class that describes an input mask of the `\"currency\"` [`maskType`](https://surveyjs.io/form-library/documentation/api-reference/text-entry-question-model#maskType).\n *\n * The following code shows how to specify the properties of this class within a survey JSON schema:\n *\n * ```js\n * const surveyJson = {\n *   \"elements\": [{\n *     \"name\": \"textquestion1\"\n *     \"type\": \"text\",\n *     \"maskType\": \"currency\",\n *     \"maskSettings\": {\n *       // Specify the properties of a currency input mask here\n *     }\n *   }]\n * }\n * ```\n *\n * [View Demo](https://surveyjs.io/form-library/examples/masked-input-fields/ (linkStyle))\n */\nclass InputMaskCurrency extends InputMaskNumeric {\n  getType() {\n    return \"currencymask\";\n  }\n  wrapText(str) {\n    const prefixValue = this.prefix || \"\";\n    const suffixValue = this.suffix || \"\";\n    let result = str;\n    if (!result) return result;\n    if (result.indexOf(prefixValue) === -1) {\n      result = prefixValue + result;\n    }\n    if (result.indexOf(suffixValue) === -1) {\n      result += suffixValue;\n    }\n    return result;\n  }\n  unwrapInputArgs(args) {\n    let result = args.prevValue;\n    if (!result) return;\n    if (this.prefix && result.indexOf(this.prefix) !== -1) {\n      result = result.slice(result.indexOf(this.prefix) + this.prefix.length);\n      const preffixPadding = (this.prefix || \"\").length;\n      args.selectionStart = Math.max(args.selectionStart - preffixPadding, 0);\n      args.selectionEnd -= preffixPadding;\n    }\n    if (this.suffix && result.indexOf(this.suffix) !== -1) {\n      result = result.slice(0, result.indexOf(this.suffix));\n    }\n    args.prevValue = result;\n  }\n  processInput(args) {\n    this.unwrapInputArgs(args);\n    const result = super.processInput(args);\n    const preffixPadding = (this.prefix || \"\").length;\n    if (!!result.value) {\n      result.caretPosition += preffixPadding;\n    }\n    result.value = this.wrapText(result.value);\n    return result;\n  }\n  getMaskedValue(src) {\n    const result = super.getMaskedValue(src);\n    return this.wrapText(result);\n  }\n}\n__decorate([property()], InputMaskCurrency.prototype, \"prefix\", void 0);\n__decorate([property()], InputMaskCurrency.prototype, \"suffix\", void 0);\nSerializer.addClass(\"currencymask\", [{\n  name: \"prefix\"\n}, {\n  name: \"suffix\"\n}], () => {\n  return new InputMaskCurrency();\n}, \"numericmask\");\n\n// styles\n// import \"../../src/main.scss\";\n//import \"../../src/modern.scss\";\nvar Version;\nvar ReleaseDate;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nVersion = `${\"2.2.4\"}`;\nsettings.version = Version;\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//@ts-ignore\nReleaseDate = `${\"2025-07-08\"}`;\nfunction checkLibraryVersion(ver, libraryName) {\n  if (Version != ver) {\n    const str = \"survey-core has version '\" + Version + \"' and \" + libraryName + \" has version '\" + ver + \"'. SurveyJS libraries should have the same versions to work correctly.\";\n    /* eslint no-console: [\"error\", { allow: [\"error\"] }] */\n    console.error(str);\n  }\n}\nfunction setLicenseKey(key) {\n  slk(key);\n}\nfunction slk(key) {\n  _slk(key, lic, ReleaseDate);\n}\nfunction hasLicense(index) {\n  return lic[index.toString()] === true;\n}\nconst lic = {};\nfunction _slk(k, lh, rd) {\n  if (!k) return;\n  const en = s => {\n    var e = {},\n      i,\n      b = 0,\n      x,\n      l = 0,\n      a,\n      r = \"\",\n      w = String.fromCharCode,\n      L = s.length;\n    var A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    for (i = 0; i < 64; i++) {\n      e[A.charAt(i)] = i;\n    }\n    for (x = 0; x < L; x++) {\n      let c = e[s.charAt(x)];\n      b = (b << 6) + c;\n      l += 6;\n      while (l >= 8) {\n        ((a = b >>> (l -= 8) & 0xff) || x < L - 2) && (r += w(a));\n      }\n    }\n    return r;\n  };\n  let v = en(k);\n  if (!v) return;\n  let index = v.indexOf(\";\");\n  if (index < 0) return;\n  if (!checkPrefix(v.substring(0, index))) return;\n  v = v.substring(index + 1);\n  v.split(\",\").forEach(s => {\n    let i = s.indexOf(\"=\");\n    if (i > 0) {\n      lh[s.substring(0, i)] = new Date(rd) <= new Date(s.substring(i + 1));\n    }\n  });\n}\nfunction checkPrefix(prefix) {\n  if (!prefix) return true;\n  const s = \"domains:\";\n  const index = prefix.indexOf(s);\n  if (index < 0) return true;\n  const ds = prefix.substring(index + s.length).toLowerCase().split(\",\");\n  if (!Array.isArray(ds) || ds.length === 0) return true;\n  const location = DomWindowHelper.getLocation();\n  if (!!location && !!location.hostname) {\n    const hn = location.hostname.toLowerCase();\n    ds.push(\"localhost\");\n    for (let i = 0; i < ds.length; i++) {\n      if (hn.indexOf(ds[i]) > -1) return true;\n    }\n    return false;\n  }\n  return true;\n}\nclass SvgIconRegistry {\n  constructor() {\n    this.icons = {};\n    this.iconPrefix = \"icon-\";\n    this.onIconsChanged = new EventBase();\n  }\n  processId(iconId, iconPrefix) {\n    if (iconId.indexOf(iconPrefix) == 0) {\n      iconId = iconId.substring(iconPrefix.length);\n    }\n    iconId = renamedIcons[iconId] || iconId;\n    return iconId;\n  }\n  registerIconFromSymbol(iconId, iconSymbolSvg) {\n    this.icons[iconId] = iconSymbolSvg;\n  }\n  registerIconFromSvgViaElement(iconId, iconSvg, iconPrefix = this.iconPrefix) {\n    if (!DomDocumentHelper.isAvailable()) return;\n    iconId = this.processId(iconId, iconPrefix);\n    let divSvg = DomDocumentHelper.createElement(\"div\");\n    divSvg.innerHTML = iconSvg;\n    let symbol = DomDocumentHelper.createElement(\"symbol\");\n    let svg = divSvg.querySelector(\"svg\");\n    symbol.innerHTML = svg.innerHTML;\n    for (var i = 0; i < svg.attributes.length; i++) {\n      symbol.setAttributeNS(\"http://www.w3.org/2000/svg\", svg.attributes[i].name, svg.attributes[i].value);\n    }\n    symbol.id = iconPrefix + iconId;\n    this.registerIconFromSymbol(iconId, symbol.outerHTML);\n  }\n  registerIconFromSvg(iconId, iconSvg, iconPrefix = this.iconPrefix) {\n    iconId = this.processId(iconId, iconPrefix);\n    const startStr = \"<svg \";\n    const endStr = \"</svg>\";\n    iconSvg = iconSvg.trim();\n    const str = iconSvg.toLowerCase();\n    if (str.substring(0, startStr.length) === startStr && str.substring(str.length - endStr.length, str.length) === endStr) {\n      this.registerIconFromSymbol(iconId, \"<symbol \" + \"id=\\\"\" + iconPrefix + iconId + \"\\\" \" + iconSvg.substring(startStr.length, str.length - endStr.length) + \"</symbol>\");\n      return true;\n    } else {\n      return false;\n    }\n  }\n  // TODO: remove in V2\n  registerIconsFromFolder(r) {\n    r.keys().forEach(key => {\n      this.registerIconFromSvg(key.substring(2, key.length - 4).toLowerCase(), r(key));\n    });\n  }\n  registerIcons(icons) {\n    for (const iconId in icons) {\n      this.registerIconFromSvg(iconId, icons[iconId]);\n    }\n    this.updateMarkup();\n  }\n  registerIcon(id, svg, iconSetVersion = \"v2\") {\n    this.registerIconFromSvg(id, svg);\n    addIconsToThemeSet(iconSetVersion, {\n      [id]: svg\n    });\n  }\n  iconsRenderedHtml() {\n    return Object.keys(this.icons).map(icon => this.icons[icon]).join(\"\");\n  }\n  updateMarkup() {\n    this.onIconsChanged.fire(this, {});\n  }\n}\nconst SvgRegistry = new SvgIconRegistry();\nconst SvgThemeSets = {};\nfunction addIconsToThemeSet(name, iconsData) {\n  if (!SvgThemeSets[name]) {\n    SvgThemeSets[name] = {};\n  }\n  const set = SvgThemeSets[name];\n  for (const iconId in iconsData) {\n    set[iconId] = iconsData[iconId];\n  }\n}\nexport { Action, ActionContainer, ActionDropdownViewModel, AdaptiveActionContainer, AnimationBoolean, AnimationGroup, AnimationGroupUtils, AnimationProperty, AnimationPropertyUtils, AnimationTab, AnimationUtils, AnswerCountValidator, AnswerRequiredError, ArrayChanges, ArrayOperand, Base, BaseAction, BinaryOperand, ButtonGroupItemModel, ButtonGroupItemValue, CalculatedValue, CharacterCounter, ChoicesRestful, ChoicesRestfull, ComponentCollection, ComponentQuestionJSON, ComputedUpdater, ConditionRunner, ConditionsParser, Const, Cover, CoverCell, CssClassBuilder, CustomError, CustomWidgetCollection, DefaultTitleModel, DragDropChoices, DragDropCore, DragDropRankingSelectToRank, DragOrClickHelper, DropdownListModel, DropdownMultiSelectListModel, ElementFactory, EmailValidator, Event, EventBase, ExceedSizeError, ExpressionExecutor, ExpressionRunner, ExpressionValidator, FlowPanelModel, FunctionFactory, FunctionOperand, Helpers, HtmlConditionItem, ImageItemValue, InputMaskBase, InputMaskCurrency, InputMaskDateTime, InputMaskNumeric, InputMaskPattern, IsMobile, IsTouch, ItemValue, JsonError, JsonIncorrectTypeError, JsonMetadata, JsonMetadataClass, JsonMissingTypeError, JsonMissingTypeErrorBase, JsonObject, JsonObjectProperty, JsonRequiredPropertyError, JsonUnknownPropertyError, ListModel, LocalizableString, LocalizableStrings, MatrixCells, MatrixDropdownCell, MatrixDropdownColumn, MatrixDropdownRowModel, MatrixDropdownRowModelBase, MatrixDynamicRowModel, MatrixRowModel, SurveyModel as Model, MultiSelectListModel, MultipleTextCell, MultipleTextEditorModel, MultipleTextErrorCell, MultipleTextItemModel, MutlipleTextErrorRow, MutlipleTextRow, Notifier, NumericValidator, OneAnswerRequiredError, Operand, PageModel, PanelModel, PanelModelBase, PopupBaseViewModel, PopupDropdownViewModel, PopupModalViewModel, PopupModel, PopupSurveyModel, ProcessValue, ProgressButtons, ProgressButtonsResponsivityManager, Question, QuestionBooleanModel, QuestionButtonGroupModel, QuestionCheckboxBase, QuestionCheckboxModel, QuestionCommentModel, QuestionCompositeModel, QuestionCustomModel, QuestionCustomWidget, QuestionDropdownModel, QuestionEmptyModel, QuestionExpressionModel, QuestionFactory, QuestionFileModel, QuestionFilePage, QuestionHtmlModel, QuestionImageModel, QuestionImagePickerModel, QuestionMatrixBaseModel, QuestionMatrixDropdownModel, QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedCell, QuestionMatrixDropdownRenderedErrorRow, QuestionMatrixDropdownRenderedRow, QuestionMatrixDropdownRenderedTable, QuestionMatrixDynamicModel, QuestionMatrixModel, QuestionMultipleTextModel, QuestionNonValue, QuestionPanelDynamicItem, QuestionPanelDynamicModel, QuestionRadiogroupModel, QuestionRankingModel, QuestionRatingModel, QuestionRowModel, QuestionSelectBase, QuestionSignaturePadModel, QuestionSingleInputSummary, QuestionSingleInputSummaryItem, QuestionSliderModel, QuestionTagboxModel, QuestionTextBase, QuestionTextModel, RegexValidator, ReleaseDate, RenderedRatingItem, RendererFactory, RequreNumericError, ResponsivityManager, ScrollViewModel, Serializer, SurveyElement, SurveyElementCore, SurveyError, SurveyModel, SurveyProgressModel, SurveyTimer, SurveyTimerModel, SurveyTrigger, SurveyTriggerComplete, SurveyTriggerCopyValue, SurveyTriggerRunExpression, SurveyTriggerSetValue, SurveyTriggerSkip, SurveyTriggerVisible, SurveyValidator, SurveyWindowModel, SvgIconRegistry, SvgRegistry, SvgThemeSets, TOCModel, TextAreaModel, TextPreProcessor, TextValidator, Trigger, UnaryOperand, UpdateResponsivenessMode, UrlConditionItem, ValidatorResult, ValidatorRunner, Variable, Version, VerticalResponsivityManager, _setIsTablet, _setIsTouch, activateLazyRenderingChecks, addIconsToThemeSet, checkLibraryVersion, chooseFiles, classesToSelector, cleanHtmlElementAfterAnimation, confirmAction, confirmActionAsync, createDropdownActionModel, createDropdownActionModelAdvanced, createPopupModalViewModel, createPopupModelWithListModel, createPopupViewModel, createSvg, createTOCListModel, defaultActionBarCss, defaultCss, defaultThemeName, detectIEOrEdge, doKey2ClickBlur, doKey2ClickDown, doKey2ClickUp, englishStrings, getActionDropdownButtonTarget, getElement, getIconNameFromProxy, getLocaleString, getLocaleStrings, getOriginalEvent, getTocRootCss, hasLicense, increaseHeightByContent, loadFileFromBase64, matrixDropdownColumnTypes, prepareElementForVerticalAnimation, property, propertyArray, registerFunction, renamedIcons, sanitizeEditableContent, setLicenseKey, settings, setupLocale, slk, surveyCss, surveyLocalization, surveyStrings, tryFocusPage, unwrap };\n"],
  "mappings": "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",
  "names": ["str", "property", "prop", "i", "res", "count", "age", "key", "keys", "mode", "htmlElement", "UpdateResponsivenessMode", "mergeValues", "sum", "oldValue", "getComputedStyle", "item", "err", "val", "json", "min", "max", "el", "cell", "row", "name", "index", "model", "page", "displayValue", "col", "question", "month", "year", "availableWidth", "element", "options", "day"]
}
