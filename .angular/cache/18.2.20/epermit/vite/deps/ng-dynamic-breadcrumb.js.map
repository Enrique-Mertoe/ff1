{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-dynamic-breadcrumb/fesm2015/ng-dynamic-breadcrumb.js"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, NgModule } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd, PRIMARY_OUTLET, RouterModule } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nconst _c0 = a0 => ({\n  \"background-color\": a0\n});\nconst _c1 = a0 => ({\n  \"font-size\": a0\n});\nconst _c2 = a0 => ({\n  \"color\": a0\n});\nfunction NgDynamicBreadcrumbComponent_span_1_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", item_r1 == null ? null : item_r1.url)(\"queryParams\", item_r1 == null ? null : item_r1.queryParams)(\"ngStyle\", i0.ɵɵpureFunction1(4, _c2, ctx_r1.fontColor));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r1.label);\n  }\n}\nfunction NgDynamicBreadcrumbComponent_span_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c2, ctx_r1.lastLinkColor));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r1.label);\n  }\n}\nfunction NgDynamicBreadcrumbComponent_span_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.symbol);\n  }\n}\nfunction NgDynamicBreadcrumbComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"li\", 2);\n    i0.ɵɵtemplate(2, NgDynamicBreadcrumbComponent_span_1_a_2_Template, 2, 6, \"a\", 3)(3, NgDynamicBreadcrumbComponent_span_1_span_3_Template, 2, 4, \"span\", 4)(4, NgDynamicBreadcrumbComponent_span_1_span_4_Template, 2, 1, \"span\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c1, ctx_r1.fontSize));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r1 == null ? null : item_r1.url);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !(item_r1 == null ? null : item_r1.url));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.breadcrumb.length !== i_r3 + 1);\n  }\n}\nclass NgDynamicBreadcrumbService {\n  constructor() {\n    this.breadcrumbLabels = new BehaviorSubject([]);\n    this.newBreadcrumb = new BehaviorSubject([]);\n  }\n  updateBreadcrumbLabels(labels) {\n    this.breadcrumbLabels.next(labels);\n  }\n  updateBreadcrumb(newBreadcrumb) {\n    this.newBreadcrumb.next(newBreadcrumb);\n  }\n}\nNgDynamicBreadcrumbService.ɵfac = function NgDynamicBreadcrumbService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgDynamicBreadcrumbService)();\n};\nNgDynamicBreadcrumbService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgDynamicBreadcrumbService,\n  factory: NgDynamicBreadcrumbService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgDynamicBreadcrumbService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass NgDynamicBreadcrumbComponent {\n  constructor(activatedRoute, router, ngDynamicBreadcrumbService) {\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.ngDynamicBreadcrumbService = ngDynamicBreadcrumbService;\n    this.breadcrumb = [];\n    this.bgColor = '#eee';\n    this.fontSize = '18px';\n    this.fontColor = '#0275d8';\n    this.lastLinkColor = '#000';\n    this.symbol = ' / ';\n    this.breadCrumbData();\n  }\n  ngOnInit() {\n    this.ngDynamicBreadcrumbService.breadcrumbLabels.subscribe(labelData => {\n      for (const label in labelData) {\n        if (labelData.hasOwnProperty(label)) {\n          this.breadcrumb.map(crumb => {\n            const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n            if (labelParams) {\n              for (const labelParam of labelParams) {\n                const dynamicData = labelData[label];\n                if (labelParam === label) {\n                  crumb.label = crumb.label.replace('{{' + labelParam + '}}', dynamicData);\n                }\n              }\n            }\n          });\n        }\n      }\n    });\n    this.ngDynamicBreadcrumbService.newBreadcrumb.subscribe(breadcrumb => {\n      if (breadcrumb.length > 0) {\n        this.updateData(this.activatedRoute, breadcrumb);\n      }\n    });\n  }\n  breadCrumbData() {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).pipe(map(() => this.activatedRoute)).pipe(map(route => {\n      while (route.firstChild) {\n        route = route.firstChild;\n      }\n      return route;\n    })).pipe(filter(route => route.outlet === PRIMARY_OUTLET)).subscribe(route => {\n      this.params = route.snapshot.params;\n      this.updateData(route, null);\n    });\n  }\n  updateData(route, newBreadcrumb) {\n    if (route.snapshot.data.breadcrumb || newBreadcrumb) {\n      const data = route.snapshot.data.breadcrumb ? route.snapshot.data.breadcrumb : newBreadcrumb;\n      const breadcrumb = JSON.parse(JSON.stringify(data));\n      breadcrumb.map(crumb => {\n        const urlChunks = crumb.url.split('/');\n        for (const chunk of urlChunks) {\n          if (chunk.includes(':')) {\n            const paramID = chunk.replace(':', '');\n            // const routerParamID = route.snapshot.params[paramID];\n            const routerParamID = this.params[paramID];\n            crumb.url = crumb.url.replace(`:${paramID}`, routerParamID);\n          }\n        }\n        const labelParams = crumb.label.match(/[^{{]+(?=\\}})/g);\n        if (labelParams) {\n          for (const labelParam of labelParams) {\n            // const routerParamID = route.snapshot.params[labelParam.trim()];\n            const routerParamID = this.params[labelParam.trim()];\n            if (routerParamID) {\n              crumb.label = crumb.label.replace('{{' + labelParam + '}}', routerParamID);\n            } else {\n              // crumb.label = crumb.label.replace('{{' + labelParam + '}}', '');\n            }\n          }\n        }\n      });\n      this.breadcrumb = breadcrumb;\n    } else {\n      this.breadcrumb = [];\n    }\n  }\n}\nNgDynamicBreadcrumbComponent.ɵfac = function NgDynamicBreadcrumbComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgDynamicBreadcrumbComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(NgDynamicBreadcrumbService));\n};\nNgDynamicBreadcrumbComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgDynamicBreadcrumbComponent,\n  selectors: [[\"app-ng-dynamic-breadcrumb\"]],\n  inputs: {\n    bgColor: \"bgColor\",\n    fontSize: \"fontSize\",\n    fontColor: \"fontColor\",\n    lastLinkColor: \"lastLinkColor\",\n    symbol: \"symbol\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"custom-bread-crumb\", 3, \"ngStyle\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\"], [3, \"routerLink\", \"queryParams\", \"ngStyle\", 4, \"ngIf\"], [3, \"ngStyle\", 4, \"ngIf\"], [\"class\", \"line\", 4, \"ngIf\"], [3, \"routerLink\", \"queryParams\", \"ngStyle\"], [1, \"line\"]],\n  template: function NgDynamicBreadcrumbComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\", 0);\n      i0.ɵɵtemplate(1, NgDynamicBreadcrumbComponent_span_1_Template, 5, 6, \"span\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, ctx.bgColor));\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.breadcrumb);\n    }\n  },\n  dependencies: [i3.NgStyle, i3.NgForOf, i3.NgIf, i1.RouterLinkWithHref],\n  styles: [\".custom-bread-crumb[_ngcontent-%COMP%]{padding:10px 16px;list-style:none}.custom-bread-crumb[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline}.custom-bread-crumb[_ngcontent-%COMP%]   .line[_ngcontent-%COMP%]{padding-right:3px}.custom-bread-crumb[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.custom-bread-crumb[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#01447e;text-decoration:underline}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgDynamicBreadcrumbComponent, [{\n    type: Component,\n    args: [{\n      // tslint:disable-next-line: component-selector\n      selector: 'app-ng-dynamic-breadcrumb',\n      templateUrl: './ng-dynamic-breadcrumb.component.html',\n      styleUrls: ['./ng-dynamic-breadcrumb.component.css']\n    }]\n  }], function () {\n    return [{\n      type: i1.ActivatedRoute\n    }, {\n      type: i1.Router\n    }, {\n      type: NgDynamicBreadcrumbService\n    }];\n  }, {\n    bgColor: [{\n      type: Input\n    }],\n    fontSize: [{\n      type: Input\n    }],\n    fontColor: [{\n      type: Input\n    }],\n    lastLinkColor: [{\n      type: Input\n    }],\n    symbol: [{\n      type: Input\n    }]\n  });\n})();\nclass NgDynamicBreadcrumbModule {}\nNgDynamicBreadcrumbModule.ɵfac = function NgDynamicBreadcrumbModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || NgDynamicBreadcrumbModule)();\n};\nNgDynamicBreadcrumbModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgDynamicBreadcrumbModule,\n  declarations: [NgDynamicBreadcrumbComponent],\n  imports: [RouterModule, CommonModule],\n  exports: [NgDynamicBreadcrumbComponent]\n});\nNgDynamicBreadcrumbModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[RouterModule, CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgDynamicBreadcrumbModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgDynamicBreadcrumbComponent],\n      imports: [RouterModule, CommonModule],\n      exports: [NgDynamicBreadcrumbComponent]\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Public API Surface of ng-dynamic-breadcrumb\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgDynamicBreadcrumbComponent, NgDynamicBreadcrumbModule, NgDynamicBreadcrumbService };\n"],
  "mappings": "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",
  "names": []
}
